; ModuleID = 'vendor/imgui@v1.89.5/include/imgui_draw.cpp'
source_filename = "vendor/imgui@v1.89.5/include/imgui_draw.cpp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc19.35.32217"

%struct.ImVec2 = type { float, float }
%struct.ImFontBuilderIO = type { ptr }
%struct.ImGuiStyle = type { float, float, %struct.ImVec2, float, float, %struct.ImVec2, %struct.ImVec2, i32, float, float, float, float, %struct.ImVec2, float, float, %struct.ImVec2, %struct.ImVec2, %struct.ImVec2, %struct.ImVec2, float, float, float, float, float, float, float, float, float, float, i32, %struct.ImVec2, %struct.ImVec2, float, %struct.ImVec2, %struct.ImVec2, %struct.ImVec2, %struct.ImVec2, float, i8, i8, i8, float, float, [53 x %struct.ImVec4] }
%struct.ImVec4 = type { float, float, float, float }
%struct.ImDrawListSharedData = type { %struct.ImVec2, ptr, float, float, float, %struct.ImVec4, i32, %struct.ImVector.5, [48 x %struct.ImVec2], float, [64 x i8], ptr }
%struct.ImVector.5 = type { i32, i32, ptr }
%struct.ImDrawList = type { %struct.ImVector.6, %struct.ImVector.0, %struct.ImVector.7, i32, i32, ptr, ptr, ptr, ptr, %struct.ImVector.8, %struct.ImVector.9, %struct.ImVector.5, %struct.ImDrawCmdHeader, %struct.ImDrawListSplitter, float }
%struct.ImVector.6 = type { i32, i32, ptr }
%struct.ImVector.0 = type { i32, i32, ptr }
%struct.ImVector.7 = type { i32, i32, ptr }
%struct.ImVector.8 = type { i32, i32, ptr }
%struct.ImVector.9 = type { i32, i32, ptr }
%struct.ImDrawCmdHeader = type { %struct.ImVec4, ptr, i32 }
%struct.ImDrawListSplitter = type { i32, i32, %struct.ImVector.10 }
%struct.ImVector.10 = type { i32, i32, ptr }
%struct.ImDrawCmd = type { %struct.ImVec4, ptr, i32, i32, i32, ptr, ptr }
%struct.ImDrawChannel = type { %struct.ImVector.6, %struct.ImVector.0 }
%struct.ImDrawVert = type { %struct.ImVec2, %struct.ImVec2, i32 }
%struct.ImFont = type { %struct.ImVector, float, float, %struct.ImVector.0, %struct.ImVector.1, ptr, ptr, ptr, i16, i16, i16, i16, float, float, i8, float, float, float, i32, [2 x i8] }
%struct.ImVector = type { i32, i32, ptr }
%struct.ImVector.1 = type { i32, i32, ptr }
%struct.ImFontAtlas = type { i32, ptr, i32, i32, i8, ptr, i8, i8, ptr, ptr, i32, i32, %struct.ImVec2, %struct.ImVec2, %struct.ImVector.2, %struct.ImVector.3, %struct.ImVector.4, [64 x %struct.ImVec4], ptr, i32, i32, i32 }
%struct.ImVector.2 = type { i32, i32, ptr }
%struct.ImVector.3 = type { i32, i32, ptr }
%struct.ImVector.4 = type { i32, i32, ptr }
%struct.ImFontGlyph = type { i32, float, float, float, float, float, float, float, float, float }
%struct.ImDrawData = type { i8, i32, i32, i32, ptr, %struct.ImVec2, %struct.ImVec2, %struct.ImVec2 }
%struct.ImFontConfig = type { ptr, i32, i8, i32, float, i32, i32, i8, %struct.ImVec2, %struct.ImVec2, ptr, float, float, i8, i32, float, i16, [40 x i8], ptr }
%struct.ImFontAtlasCustomRect = type { i16, i16, i16, i16, i32, float, %struct.ImVec2, ptr }
%struct.stbtt__csctx = type { i32, i32, float, float, float, float, i32, i32, i32, i32, ptr, i32 }
%struct.stbtt__buf = type { ptr, i32, i32 }
%struct.ImVector.11 = type { i32, i32, ptr }
%struct.ImVector.16 = type { i32, i32, ptr }
%struct.ImFontBuildSrcData = type { %struct.stbtt_fontinfo, %struct.stbtt_pack_range, ptr, ptr, ptr, i32, i32, i32, %struct.ImBitVector, %struct.ImVector.14 }
%struct.stbtt_fontinfo = type { ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.stbtt__buf, %struct.stbtt__buf, %struct.stbtt__buf, %struct.stbtt__buf, %struct.stbtt__buf, %struct.stbtt__buf }
%struct.stbtt_pack_range = type { float, i32, ptr, i32, ptr, i8, i8 }
%struct.ImBitVector = type { %struct.ImVector.12 }
%struct.ImVector.12 = type { i32, i32, ptr }
%struct.ImVector.14 = type { i32, i32, ptr }
%struct.ImFontBuildDstData = type { i32, i32, i32, %struct.ImBitVector }
%struct.stbrp_rect = type { i32, i32, i32, i32, i32, i32 }
%struct.stbtt_packedchar = type { i16, i16, i16, i16, float, float, float, float, float }
%struct.stbrp_node = type { i32, i32, ptr }
%struct.stbrp_context = type { i32, i32, i32, i32, i32, i32, ptr, ptr, [2 x %struct.stbrp_node] }
%struct.stbtt_vertex = type { i16, i16, i16, i16, i16, i16, i8, i8 }
%struct.stbtt__point = type { float, float }
%struct.stbtt__edge = type { float, float, float, float, i32 }
%struct.stbtt__active_edge = type { ptr, float, float, float, float, float, float }
%struct.ImRect = type { %struct.ImVec2, %struct.ImVec2 }

$"??1?$ImVector@UImDrawVert@@@@QEAA@XZ" = comdat any

$"??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ" = comdat any

$"??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ" = comdat any

$"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@" = comdat any

$"??_C@_1CC@JCMOPDC@?$AAm?$AAa?$AAx?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf?$AA?$AA@" = comdat any

$"??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AA?4?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4@" = comdat any

$"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1EG@DFNGCDMN@?$AA_?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe?$AAs?$AAs?$AAe?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4@" = comdat any

$"??_C@_1GI@CIGOLMNM@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_@" = comdat any

$"??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5@" = comdat any

$"??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@" = comdat any

$"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@" = comdat any

$"??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA_@" = comdat any

$"??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf?$AA?$AA@" = comdat any

$"??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAM?$AAe@" = comdat any

$"??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx?$AA@" = comdat any

$"??_C@_02JDPG@rb?$AA@" = comdat any

$"??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?5?$AAf?$AAi?$AAl?$AAe@" = comdat any

$"??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx?$AA@" = comdat any

$"??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@" = comdat any

$"??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@" = comdat any

$"??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@" = comdat any

$"??_C@_1DC@JHOLDEIK@?$AAP?$AAa?$AAc?$AAk?$AAI?$AAd?$AAM?$AAo?$AAu?$AAs?$AAe?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@" = comdat any

$"??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@" = comdat any

$"??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN@" = comdat any

$"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@" = comdat any

$"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@" = comdat any

$"??_C@_1HG@JLCPLJIF@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl?$AAs?$AAA?$AAl?$AAp?$AAh?$AAa?$AA8?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAa@" = comdat any

$"??_C@_1EC@BJJINGAO@?$AAr?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs@" = comdat any

$"??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@" = comdat any

$"??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu@" = comdat any

$"??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BM@KGJCABG@?$AAt?$AAe?$AAx?$AAt?$AA_?$AAe?$AAn?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_13COJANIEC@?$AA0?$AA?$AA@" = comdat any

$"??_C@_1JM@GAJOFMMN@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AA0?$AAF?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAM?$AAi?$AAs?$AAu?$AAs?$AAe?$AA?5?$AAo@" = comdat any

$"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@" = comdat any

$"??_C@_1BG@HMJJDGFN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa?$AAt?$AAa?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CI?$AA?$CB?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs@" = comdat any

$"??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@" = comdat any

$"??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAi?$AAs@" = comdat any

$"??_C@_1DK@BFJIBNBB@?$AAs?$AAr?$AAc?$AA_?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAr?$AAc?$AA_?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$FL?$AA1?$AA?$FN?$AA?$AA@" = comdat any

$"??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL?$AAi?$AAs?$AAt?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAr?$AAc?$AA_?$AAt@" = comdat any

$"??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@" = comdat any

$"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@" = comdat any

$"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@" = comdat any

$"??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@" = comdat any

$"??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@" = comdat any

$"??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@" = comdat any

$"??_C@_1FM@IDACNBHO@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@" = comdat any

$"??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DM?$AA?5?$AA5?$AA?$CJ?$AA?$AA@" = comdat any

$"??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$AA@" = comdat any

$"??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_?$AAv?$AAe?$AAr?$AAt?$AAi?$AAc?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt@" = comdat any

$"??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$AA@" = comdat any

$"??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy?$AA_?$AAt?$AAo?$AAp?$AA?$AA@" = comdat any

$"??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp?$AA?$AA@" = comdat any

$"??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_@" = comdat any

$"??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AA?$AA@" = comdat any

$"??_C@_1BA@DNEJOLOH@?$AAd?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BA@KAEGAKJB@?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA?4?$AA0?$AA1?$AAf?$AA?$AA@" = comdat any

$"??_C@_1CI@LBLBFJLN@?$AAs?$AAy?$AA1?$AA?5?$AA?$DO?$AA?5?$AAy?$AA_?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?9?$AA0?$AA?4?$AA0?$AA1?$AAf?$AA?$AA@" = comdat any

$"??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1?$AA?$AA@" = comdat any

$"??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?$AA@" = comdat any

$"??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@" = comdat any

$"??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$AA@" = comdat any

$"??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$AA@" = comdat any

$"??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@" = comdat any

$"??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@" = comdat any

$"??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5@" = comdat any

$"??_C@_1BO@IKHHJKG@?$AAt?$AAo?$AAp?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CE@HFDPCECH@?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe?$AA_?$AAi?$AAn?$AA_?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@" = comdat any

$"??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO?$AA?5?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5@" = comdat any

$"??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO?$AA?5?$AAx?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0?$AA?$AA@" = comdat any

$"??_C@_1BM@DDBMCGAE@?$AAr?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@" = comdat any

$"??_C@_1MA@PDHEAINP@?$AAr?$AA?9?$AA?$DO?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT?$AA_?$AAA?$AAT?$AAL?$AAA?$AAS?$AA_?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT?$AA_?$AAT@" = comdat any

$"??_C@_1EA@DBHHBIED@?$AAr?$AA?9?$AA?$DO?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AA?9?$AA?$DO?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?$AA@" = comdat any

$"??_C@_1HO@DLMJCKJA@?$AAp?$AAa?$AAd?$AA_?$AAl?$AAe?$AAf?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CL?$AA?5?$AAp?$AAa?$AAd?$AA_?$AAr?$AAi?$AAg?$AAh@" = comdat any

$"??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAo?$AAl?$AAe?$AAn?$AA?$AA@" = comdat any

$"??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAo?$AAl?$AAe?$AAn?$AA?$AA@" = comdat any

$"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@" = comdat any

$"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = comdat any

$"??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@" = comdat any

@"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@" = linkonce_odr dso_local unnamed_addr constant [44 x i16] [i16 118, i16 101, i16 110, i16 100, i16 111, i16 114, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 64, i16 118, i16 49, i16 46, i16 56, i16 57, i16 46, i16 53, i16 47, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 95, i16 100, i16 114, i16 97, i16 119, i16 46, i16 99, i16 112, i16 112, i16 0], comdat, align 2
@"??_C@_1CC@JCMOPDC@?$AAm?$AAa?$AAx?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [17 x i16] [i16 109, i16 97, i16 120, i16 95, i16 101, i16 114, i16 114, i16 111, i16 114, i16 32, i16 62, i16 32, i16 48, i16 46, i16 48, i16 102, i16 0], comdat, align 2
@"??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AA?4?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4@" = linkonce_odr dso_local unnamed_addr constant [89 x i16] [i16 100, i16 114, i16 97, i16 119, i16 95, i16 99, i16 109, i16 100, i16 46, i16 67, i16 108, i16 105, i16 112, i16 82, i16 101, i16 99, i16 116, i16 46, i16 120, i16 32, i16 60, i16 61, i16 32, i16 100, i16 114, i16 97, i16 119, i16 95, i16 99, i16 109, i16 100, i16 46, i16 67, i16 108, i16 105, i16 112, i16 82, i16 101, i16 99, i16 116, i16 46, i16 122, i16 32, i16 38, i16 38, i16 32, i16 100, i16 114, i16 97, i16 119, i16 95, i16 99, i16 109, i16 100, i16 46, i16 67, i16 108, i16 105, i16 112, i16 82, i16 101, i16 99, i16 116, i16 46, i16 121, i16 32, i16 60, i16 61, i16 32, i16 100, i16 114, i16 97, i16 119, i16 95, i16 99, i16 109, i16 100, i16 46, i16 67, i16 108, i16 105, i16 112, i16 82, i16 101, i16 99, i16 116, i16 46, i16 119, i16 0], comdat, align 2
@"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [28 x i16] [i16 99, i16 117, i16 114, i16 114, i16 95, i16 99, i16 109, i16 100, i16 45, i16 62, i16 85, i16 115, i16 101, i16 114, i16 67, i16 97, i16 108, i16 108, i16 98, i16 97, i16 99, i16 107, i16 32, i16 61, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1EG@DFNGCDMN@?$AA_?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe?$AAs?$AAs?$AAe?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4@" = linkonce_odr dso_local unnamed_addr constant [35 x i16] [i16 95, i16 68, i16 97, i16 116, i16 97, i16 45, i16 62, i16 67, i16 117, i16 114, i16 118, i16 101, i16 84, i16 101, i16 115, i16 115, i16 101, i16 108, i16 108, i16 97, i16 116, i16 105, i16 111, i16 110, i16 84, i16 111, i16 108, i16 32, i16 62, i16 32, i16 48, i16 46, i16 48, i16 102, i16 0], comdat, align 2
@"??_C@_1GI@CIGOLMNM@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_@" = linkonce_odr dso_local unnamed_addr constant [52 x i16] [i16 102, i16 111, i16 110, i16 116, i16 45, i16 62, i16 67, i16 111, i16 110, i16 116, i16 97, i16 105, i16 110, i16 101, i16 114, i16 65, i16 116, i16 108, i16 97, i16 115, i16 45, i16 62, i16 84, i16 101, i16 120, i16 73, i16 68, i16 32, i16 61, i16 61, i16 32, i16 95, i16 67, i16 109, i16 100, i16 72, i16 101, i16 97, i16 100, i16 101, i16 114, i16 46, i16 84, i16 101, i16 120, i16 116, i16 117, i16 114, i16 101, i16 73, i16 100, i16 0], comdat, align 2
@"??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5@" = linkonce_odr dso_local unnamed_addr constant [130 x i16] [i16 95, i16 67, i16 117, i16 114, i16 114, i16 101, i16 110, i16 116, i16 32, i16 61, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 95, i16 67, i16 111, i16 117, i16 110, i16 116, i16 32, i16 60, i16 61, i16 32, i16 49, i16 32, i16 38, i16 38, i16 32, i16 34, i16 78, i16 101, i16 115, i16 116, i16 101, i16 100, i16 32, i16 99, i16 104, i16 97, i16 110, i16 110, i16 101, i16 108, i16 32, i16 115, i16 112, i16 108, i16 105, i16 116, i16 116, i16 105, i16 110, i16 103, i16 32, i16 105, i16 115, i16 32, i16 110, i16 111, i16 116, i16 32, i16 115, i16 117, i16 112, i16 112, i16 111, i16 114, i16 116, i16 101, i16 100, i16 46, i16 32, i16 80, i16 108, i16 101, i16 97, i16 115, i16 101, i16 32, i16 117, i16 115, i16 101, i16 32, i16 115, i16 101, i16 112, i16 97, i16 114, i16 97, i16 116, i16 101, i16 32, i16 105, i16 110, i16 115, i16 116, i16 97, i16 110, i16 99, i16 101, i16 115, i16 32, i16 111, i16 102, i16 32, i16 73, i16 109, i16 68, i16 114, i16 97, i16 119, i16 76, i16 105, i16 115, i16 116, i16 83, i16 112, i16 108, i16 105, i16 116, i16 116, i16 101, i16 114, i16 46, i16 34, i16 0], comdat, align 2
@"??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [25 x i16] [i16 105, i16 100, i16 120, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 105, i16 100, i16 120, i16 32, i16 60, i16 32, i16 95, i16 67, i16 111, i16 117, i16 110, i16 116, i16 0], comdat, align 2
@"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@" = linkonce_odr dso_local unnamed_addr constant [90 x i16] [i16 33, i16 76, i16 111, i16 99, i16 107, i16 101, i16 100, i16 32, i16 38, i16 38, i16 32, i16 34, i16 67, i16 97, i16 110, i16 110, i16 111, i16 116, i16 32, i16 109, i16 111, i16 100, i16 105, i16 102, i16 121, i16 32, i16 97, i16 32, i16 108, i16 111, i16 99, i16 107, i16 101, i16 100, i16 32, i16 73, i16 109, i16 70, i16 111, i16 110, i16 116, i16 65, i16 116, i16 108, i16 97, i16 115, i16 32, i16 98, i16 101, i16 116, i16 119, i16 101, i16 101, i16 110, i16 32, i16 78, i16 101, i16 119, i16 70, i16 114, i16 97, i16 109, i16 101, i16 40, i16 41, i16 32, i16 97, i16 110, i16 100, i16 32, i16 69, i16 110, i16 100, i16 70, i16 114, i16 97, i16 109, i16 101, i16 47, i16 82, i16 101, i16 110, i16 100, i16 101, i16 114, i16 40, i16 41, i16 33, i16 34, i16 0], comdat, align 2
@"??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA_@" = linkonce_odr dso_local unnamed_addr constant [54 x i16] [i16 102, i16 111, i16 110, i16 116, i16 95, i16 99, i16 102, i16 103, i16 45, i16 62, i16 70, i16 111, i16 110, i16 116, i16 68, i16 97, i16 116, i16 97, i16 32, i16 33, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 102, i16 111, i16 110, i16 116, i16 95, i16 99, i16 102, i16 103, i16 45, i16 62, i16 70, i16 111, i16 110, i16 116, i16 68, i16 97, i16 116, i16 97, i16 83, i16 105, i16 122, i16 101, i16 32, i16 62, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [28 x i16] [i16 102, i16 111, i16 110, i16 116, i16 95, i16 99, i16 102, i16 103, i16 45, i16 62, i16 83, i16 105, i16 122, i16 101, i16 80, i16 105, i16 120, i16 101, i16 108, i16 115, i16 32, i16 62, i16 32, i16 48, i16 46, i16 48, i16 102, i16 0], comdat, align 2
@"??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAM?$AAe@" = linkonce_odr dso_local unnamed_addr constant [60 x i16] [i16 33, i16 70, i16 111, i16 110, i16 116, i16 115, i16 46, i16 101, i16 109, i16 112, i16 116, i16 121, i16 40, i16 41, i16 32, i16 38, i16 38, i16 32, i16 34, i16 67, i16 97, i16 110, i16 110, i16 111, i16 116, i16 32, i16 117, i16 115, i16 101, i16 32, i16 77, i16 101, i16 114, i16 103, i16 101, i16 77, i16 111, i16 100, i16 101, i16 32, i16 102, i16 111, i16 114, i16 32, i16 116, i16 104, i16 101, i16 32, i16 102, i16 105, i16 114, i16 115, i16 116, i16 32, i16 102, i16 111, i16 110, i16 116, i16 34, i16 0], comdat, align 2
@"??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx?$AA@" = linkonce_odr dso_local unnamed_addr constant [22 x i8] c"ProggyClean.ttf, %dpx\00", comdat, align 1
@"??_C@_02JDPG@rb?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"rb\00", comdat, align 1
@"??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?5?$AAf?$AAi?$AAl?$AAe@" = linkonce_odr dso_local unnamed_addr constant [35 x i16] [i16 40, i16 48, i16 41, i16 32, i16 38, i16 38, i16 32, i16 34, i16 67, i16 111, i16 117, i16 108, i16 100, i16 32, i16 110, i16 111, i16 116, i16 32, i16 108, i16 111, i16 97, i16 100, i16 32, i16 102, i16 111, i16 110, i16 116, i16 32, i16 102, i16 105, i16 108, i16 101, i16 33, i16 34, i16 0], comdat, align 2
@"??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"%s, %.0fpx\00", comdat, align 1
@"??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [23 x i16] [i16 102, i16 111, i16 110, i16 116, i16 95, i16 99, i16 102, i16 103, i16 46, i16 70, i16 111, i16 110, i16 116, i16 68, i16 97, i16 116, i16 97, i16 32, i16 61, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [29 x i16] [i16 119, i16 105, i16 100, i16 116, i16 104, i16 32, i16 62, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 119, i16 105, i16 100, i16 116, i16 104, i16 32, i16 60, i16 61, i16 32, i16 48, i16 120, i16 70, i16 70, i16 70, i16 70, i16 0], comdat, align 2
@"??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i16] [i16 104, i16 101, i16 105, i16 103, i16 104, i16 116, i16 32, i16 62, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 104, i16 101, i16 105, i16 103, i16 104, i16 116, i16 32, i16 60, i16 61, i16 32, i16 48, i16 120, i16 70, i16 70, i16 70, i16 70, i16 0], comdat, align 2
@"??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i16] [i16 102, i16 111, i16 110, i16 116, i16 32, i16 33, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [30 x i16] [i16 84, i16 101, i16 120, i16 87, i16 105, i16 100, i16 116, i16 104, i16 32, i16 62, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 84, i16 101, i16 120, i16 72, i16 101, i16 105, i16 103, i16 104, i16 116, i16 32, i16 62, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [17 x i16] [i16 114, i16 101, i16 99, i16 116, i16 45, i16 62, i16 73, i16 115, i16 80, i16 97, i16 99, i16 107, i16 101, i16 100, i16 40, i16 41, i16 0], comdat, align 2
@"??_C@_1DC@JHOLDEIK@?$AAP?$AAa?$AAc?$AAk?$AAI?$AAd?$AAM?$AAo?$AAu?$AAs?$AAe?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [25 x i16] [i16 80, i16 97, i16 99, i16 107, i16 73, i16 100, i16 77, i16 111, i16 117, i16 115, i16 101, i16 67, i16 117, i16 114, i16 115, i16 111, i16 114, i16 115, i16 32, i16 33, i16 61, i16 32, i16 45, i16 49, i16 0], comdat, align 2
@FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA = internal unnamed_addr constant [9 x [3 x %struct.ImVec2]] [[3 x %struct.ImVec2] [%struct.ImVec2 { float 0.000000e+00, float 3.000000e+00 }, %struct.ImVec2 { float 1.200000e+01, float 1.900000e+01 }, %struct.ImVec2 zeroinitializer], [3 x %struct.ImVec2] [%struct.ImVec2 { float 1.300000e+01, float 0.000000e+00 }, %struct.ImVec2 { float 7.000000e+00, float 1.600000e+01 }, %struct.ImVec2 { float 1.000000e+00, float 8.000000e+00 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 3.100000e+01, float 0.000000e+00 }, %struct.ImVec2 { float 2.300000e+01, float 2.300000e+01 }, %struct.ImVec2 { float 1.100000e+01, float 1.100000e+01 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 2.100000e+01, float 0.000000e+00 }, %struct.ImVec2 { float 9.000000e+00, float 2.300000e+01 }, %struct.ImVec2 { float 4.000000e+00, float 1.100000e+01 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 5.500000e+01, float 1.800000e+01 }, %struct.ImVec2 { float 2.300000e+01, float 9.000000e+00 }, %struct.ImVec2 { float 1.100000e+01, float 4.000000e+00 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 7.300000e+01, float 0.000000e+00 }, %struct.ImVec2 { float 1.700000e+01, float 1.700000e+01 }, %struct.ImVec2 { float 8.000000e+00, float 8.000000e+00 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 5.500000e+01, float 0.000000e+00 }, %struct.ImVec2 { float 1.700000e+01, float 1.700000e+01 }, %struct.ImVec2 { float 8.000000e+00, float 8.000000e+00 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 9.100000e+01, float 0.000000e+00 }, %struct.ImVec2 { float 1.700000e+01, float 2.200000e+01 }, %struct.ImVec2 { float 5.000000e+00, float 0.000000e+00 }], [3 x %struct.ImVec2] [%struct.ImVec2 { float 1.090000e+02, float 0.000000e+00 }, %struct.ImVec2 { float 1.300000e+01, float 1.500000e+01 }, %struct.ImVec2 { float 6.000000e+00, float 7.000000e+00 }]], align 16
@"?io@?1??ImFontAtlasGetBuilderForStbTruetype@@YAPEBUImFontBuilderIO@@XZ@4U2@A" = internal global %struct.ImFontBuilderIO zeroinitializer, align 8
@"??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i16] [i16 112, i16 97, i16 99, i16 107, i16 95, i16 99, i16 111, i16 110, i16 116, i16 101, i16 120, i16 116, i16 32, i16 33, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i16] [i16 117, i16 115, i16 101, i16 114, i16 95, i16 114, i16 101, i16 99, i16 116, i16 115, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 62, i16 61, i16 32, i16 49, i16 0], comdat, align 2
@"??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN@" = linkonce_odr dso_local unnamed_addr constant [82 x i16] [i16 112, i16 97, i16 99, i16 107, i16 95, i16 114, i16 101, i16 99, i16 116, i16 115, i16 91, i16 105, i16 93, i16 46, i16 119, i16 32, i16 61, i16 61, i16 32, i16 117, i16 115, i16 101, i16 114, i16 95, i16 114, i16 101, i16 99, i16 116, i16 115, i16 91, i16 105, i16 93, i16 46, i16 87, i16 105, i16 100, i16 116, i16 104, i16 32, i16 38, i16 38, i16 32, i16 112, i16 97, i16 99, i16 107, i16 95, i16 114, i16 101, i16 99, i16 116, i16 115, i16 91, i16 105, i16 93, i16 46, i16 104, i16 32, i16 61, i16 61, i16 32, i16 117, i16 115, i16 101, i16 114, i16 95, i16 114, i16 101, i16 99, i16 116, i16 115, i16 91, i16 105, i16 93, i16 46, i16 72, i16 101, i16 105, i16 103, i16 104, i16 116, i16 0], comdat, align 2
@"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@" = linkonce_odr dso_local unnamed_addr constant [35 x i16] [i16 120, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 120, i16 32, i16 43, i16 32, i16 119, i16 32, i16 60, i16 61, i16 32, i16 97, i16 116, i16 108, i16 97, i16 115, i16 45, i16 62, i16 84, i16 101, i16 120, i16 87, i16 105, i16 100, i16 116, i16 104, i16 0], comdat, align 2
@"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@" = linkonce_odr dso_local unnamed_addr constant [36 x i16] [i16 121, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 121, i16 32, i16 43, i16 32, i16 104, i16 32, i16 60, i16 61, i16 32, i16 97, i16 116, i16 108, i16 97, i16 115, i16 45, i16 62, i16 84, i16 101, i16 120, i16 72, i16 101, i16 105, i16 103, i16 104, i16 116, i16 0], comdat, align 2
@"??_C@_1HG@JLCPLJIF@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl?$AAs?$AAA?$AAl?$AAp?$AAh?$AAa?$AA8?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAa@" = linkonce_odr dso_local unnamed_addr constant [59 x i16] [i16 97, i16 116, i16 108, i16 97, i16 115, i16 45, i16 62, i16 84, i16 101, i16 120, i16 80, i16 105, i16 120, i16 101, i16 108, i16 115, i16 65, i16 108, i16 112, i16 104, i16 97, i16 56, i16 32, i16 33, i16 61, i16 32, i16 48, i16 32, i16 124, i16 124, i16 32, i16 97, i16 116, i16 108, i16 97, i16 115, i16 45, i16 62, i16 84, i16 101, i16 120, i16 80, i16 105, i16 120, i16 101, i16 108, i16 115, i16 82, i16 71, i16 66, i16 65, i16 51, i16 50, i16 32, i16 33, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1EC@BJJINGAO@?$AAr?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs@" = linkonce_odr dso_local unnamed_addr constant [33 x i16] [i16 114, i16 45, i16 62, i16 70, i16 111, i16 110, i16 116, i16 45, i16 62, i16 67, i16 111, i16 110, i16 116, i16 97, i16 105, i16 110, i16 101, i16 114, i16 65, i16 116, i16 108, i16 97, i16 115, i16 32, i16 61, i16 61, i16 32, i16 97, i16 116, i16 108, i16 97, i16 115, i16 0], comdat, align 2
@"?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [3 x i16] [i16 32, i16 255, i16 0], align 2
@"?ranges@?1??GetGlyphRangesGreek@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [5 x i16] [i16 32, i16 255, i16 880, i16 1023, i16 0], align 2
@"?ranges@?1??GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [9 x i16] [i16 32, i16 255, i16 12593, i16 12643, i16 -21504, i16 -10333, i16 -3, i16 -3, i16 0], align 16
@"?ranges@?1??GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [15 x i16] [i16 32, i16 255, i16 8192, i16 8303, i16 12288, i16 12543, i16 12784, i16 12799, i16 -256, i16 -17, i16 -3, i16 -3, i16 19968, i16 -24657, i16 0], align 16
@"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB" = internal unnamed_addr constant [2500 x i16] [i16 0, i16 1, i16 2, i16 4, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 3, i16 2, i16 1, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 5, i16 2, i16 1, i16 2, i16 3, i16 3, i16 3, i16 2, i16 2, i16 4, i16 1, i16 1, i16 1, i16 2, i16 1, i16 5, i16 2, i16 3, i16 1, i16 2, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 1, i16 2, i16 2, i16 1, i16 4, i16 1, i16 1, i16 1, i16 1, i16 5, i16 10, i16 1, i16 2, i16 19, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 5, i16 1, i16 6, i16 3, i16 2, i16 1, i16 2, i16 2, i16 1, i16 1, i16 1, i16 4, i16 8, i16 5, i16 1, i16 1, i16 4, i16 1, i16 1, i16 3, i16 1, i16 2, i16 1, i16 5, i16 1, i16 2, i16 1, i16 1, i16 1, i16 10, i16 1, i16 1, i16 5, i16 2, i16 4, i16 6, i16 1, i16 4, i16 2, i16 2, i16 2, i16 12, i16 2, i16 1, i16 1, i16 6, i16 1, i16 1, i16 1, i16 4, i16 1, i16 1, i16 4, i16 6, i16 5, i16 1, i16 4, i16 2, i16 2, i16 4, i16 10, i16 7, i16 1, i16 1, i16 4, i16 2, i16 4, i16 2, i16 1, i16 4, i16 3, i16 6, i16 10, i16 12, i16 5, i16 7, i16 2, i16 14, i16 2, i16 9, i16 1, i16 1, i16 6, i16 7, i16 10, i16 4, i16 7, i16 13, i16 1, i16 5, i16 4, i16 8, i16 4, i16 1, i16 1, i16 2, i16 28, i16 5, i16 6, i16 1, i16 1, i16 5, i16 2, i16 5, i16 20, i16 2, i16 2, i16 9, i16 8, i16 11, i16 2, i16 9, i16 17, i16 1, i16 8, i16 6, i16 8, i16 27, i16 4, i16 6, i16 9, i16 20, i16 11, i16 27, i16 6, i16 68, i16 2, i16 2, i16 1, i16 1, i16 1, i16 2, i16 1, i16 2, i16 2, i16 7, i16 6, i16 11, i16 3, i16 3, i16 1, i16 1, i16 3, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3, i16 1, i16 1, i16 8, i16 3, i16 4, i16 1, i16 5, i16 7, i16 2, i16 1, i16 4, i16 4, i16 8, i16 4, i16 2, i16 1, i16 2, i16 1, i16 1, i16 4, i16 5, i16 6, i16 3, i16 6, i16 2, i16 12, i16 3, i16 1, i16 3, i16 9, i16 2, i16 4, i16 3, i16 4, i16 1, i16 5, i16 3, i16 3, i16 1, i16 3, i16 7, i16 1, i16 5, i16 1, i16 1, i16 1, i16 1, i16 2, i16 3, i16 4, i16 5, i16 2, i16 3, i16 2, i16 6, i16 1, i16 1, i16 2, i16 1, i16 7, i16 1, i16 7, i16 3, i16 4, i16 5, i16 15, i16 2, i16 2, i16 1, i16 5, i16 3, i16 22, i16 19, i16 2, i16 1, i16 1, i16 1, i16 1, i16 2, i16 5, i16 1, i16 1, i16 1, i16 6, i16 1, i16 1, i16 12, i16 8, i16 2, i16 9, i16 18, i16 22, i16 4, i16 1, i16 1, i16 5, i16 1, i16 16, i16 1, i16 2, i16 7, i16 10, i16 15, i16 1, i16 1, i16 6, i16 2, i16 4, i16 1, i16 2, i16 4, i16 1, i16 6, i16 1, i16 1, i16 3, i16 2, i16 4, i16 1, i16 6, i16 4, i16 5, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 10, i16 3, i16 1, i16 3, i16 2, i16 1, i16 9, i16 3, i16 2, i16 5, i16 7, i16 2, i16 19, i16 4, i16 3, i16 6, i16 1, i16 1, i16 1, i16 1, i16 1, i16 4, i16 3, i16 2, i16 1, i16 1, i16 1, i16 2, i16 5, i16 3, i16 1, i16 1, i16 1, i16 2, i16 2, i16 1, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 3, i16 1, i16 1, i16 1, i16 3, i16 7, i16 1, i16 4, i16 1, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 2, i16 4, i16 4, i16 3, i16 8, i16 1, i16 1, i16 1, i16 2, i16 1, i16 3, i16 5, i16 1, i16 3, i16 1, i16 3, i16 4, i16 6, i16 2, i16 2, i16 14, i16 4, i16 6, i16 6, i16 11, i16 9, i16 1, i16 15, i16 3, i16 1, i16 28, i16 5, i16 2, i16 5, i16 5, i16 3, i16 1, i16 3, i16 4, i16 5, i16 4, i16 6, i16 14, i16 3, i16 2, i16 3, i16 5, i16 21, i16 2, i16 7, i16 20, i16 10, i16 1, i16 2, i16 19, i16 2, i16 4, i16 28, i16 28, i16 2, i16 3, i16 2, i16 1, i16 14, i16 4, i16 1, i16 26, i16 28, i16 42, i16 12, i16 40, i16 3, i16 52, i16 79, i16 5, i16 14, i16 17, i16 3, i16 2, i16 2, i16 11, i16 3, i16 4, i16 6, i16 3, i16 1, i16 8, i16 2, i16 23, i16 4, i16 5, i16 8, i16 10, i16 4, i16 2, i16 7, i16 3, i16 5, i16 1, i16 1, i16 6, i16 3, i16 1, i16 2, i16 2, i16 2, i16 5, i16 28, i16 1, i16 1, i16 7, i16 7, i16 20, i16 5, i16 3, i16 29, i16 3, i16 17, i16 26, i16 1, i16 8, i16 4, i16 27, i16 3, i16 6, i16 11, i16 23, i16 5, i16 3, i16 4, i16 6, i16 13, i16 24, i16 16, i16 6, i16 5, i16 10, i16 25, i16 35, i16 7, i16 3, i16 2, i16 3, i16 3, i16 14, i16 3, i16 6, i16 2, i16 6, i16 1, i16 4, i16 2, i16 3, i16 8, i16 2, i16 1, i16 1, i16 3, i16 3, i16 3, i16 4, i16 1, i16 1, i16 13, i16 2, i16 2, i16 4, i16 5, i16 2, i16 1, i16 14, i16 14, i16 1, i16 2, i16 2, i16 1, i16 4, i16 5, i16 2, i16 3, i16 1, i16 14, i16 3, i16 12, i16 3, i16 17, i16 2, i16 16, i16 5, i16 1, i16 2, i16 1, i16 8, i16 9, i16 3, i16 19, i16 4, i16 2, i16 2, i16 4, i16 17, i16 25, i16 21, i16 20, i16 28, i16 75, i16 1, i16 10, i16 29, i16 103, i16 4, i16 1, i16 2, i16 1, i16 1, i16 4, i16 2, i16 4, i16 1, i16 2, i16 3, i16 24, i16 2, i16 2, i16 2, i16 1, i16 1, i16 2, i16 1, i16 3, i16 8, i16 1, i16 1, i16 1, i16 2, i16 1, i16 1, i16 3, i16 1, i16 1, i16 1, i16 6, i16 1, i16 5, i16 3, i16 1, i16 1, i16 1, i16 3, i16 4, i16 1, i16 1, i16 5, i16 2, i16 1, i16 5, i16 6, i16 13, i16 9, i16 16, i16 1, i16 1, i16 1, i16 1, i16 3, i16 2, i16 3, i16 2, i16 4, i16 5, i16 2, i16 5, i16 2, i16 2, i16 3, i16 7, i16 13, i16 7, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 2, i16 3, i16 3, i16 2, i16 1, i16 6, i16 4, i16 9, i16 2, i16 1, i16 14, i16 2, i16 14, i16 2, i16 1, i16 18, i16 3, i16 4, i16 14, i16 4, i16 11, i16 41, i16 15, i16 23, i16 15, i16 23, i16 176, i16 1, i16 3, i16 4, i16 1, i16 1, i16 1, i16 1, i16 5, i16 3, i16 1, i16 2, i16 3, i16 7, i16 3, i16 1, i16 1, i16 2, i16 1, i16 2, i16 4, i16 4, i16 6, i16 2, i16 4, i16 1, i16 9, i16 7, i16 1, i16 10, i16 5, i16 8, i16 16, i16 29, i16 1, i16 1, i16 2, i16 2, i16 3, i16 1, i16 3, i16 5, i16 2, i16 4, i16 5, i16 4, i16 1, i16 1, i16 2, i16 2, i16 3, i16 3, i16 7, i16 1, i16 6, i16 10, i16 1, i16 17, i16 1, i16 44, i16 4, i16 6, i16 2, i16 1, i16 1, i16 6, i16 5, i16 4, i16 2, i16 10, i16 1, i16 6, i16 9, i16 2, i16 8, i16 1, i16 24, i16 1, i16 2, i16 13, i16 7, i16 8, i16 8, i16 2, i16 1, i16 4, i16 1, i16 3, i16 1, i16 3, i16 3, i16 5, i16 2, i16 5, i16 10, i16 9, i16 4, i16 9, i16 12, i16 2, i16 1, i16 6, i16 1, i16 10, i16 1, i16 1, i16 7, i16 7, i16 4, i16 10, i16 8, i16 3, i16 1, i16 13, i16 4, i16 3, i16 1, i16 6, i16 1, i16 3, i16 5, i16 2, i16 1, i16 2, i16 17, i16 16, i16 5, i16 2, i16 16, i16 6, i16 1, i16 4, i16 2, i16 1, i16 3, i16 3, i16 6, i16 8, i16 5, i16 11, i16 11, i16 1, i16 3, i16 3, i16 2, i16 4, i16 6, i16 10, i16 9, i16 5, i16 7, i16 4, i16 7, i16 4, i16 7, i16 1, i16 1, i16 4, i16 2, i16 1, i16 3, i16 6, i16 8, i16 7, i16 1, i16 6, i16 11, i16 5, i16 5, i16 3, i16 24, i16 9, i16 4, i16 2, i16 7, i16 13, i16 5, i16 1, i16 8, i16 82, i16 16, i16 61, i16 1, i16 1, i16 1, i16 4, i16 2, i16 2, i16 16, i16 10, i16 3, i16 8, i16 1, i16 1, i16 6, i16 4, i16 2, i16 1, i16 3, i16 1, i16 1, i16 1, i16 4, i16 3, i16 8, i16 4, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6, i16 3, i16 5, i16 1, i16 1, i16 4, i16 6, i16 9, i16 2, i16 1, i16 1, i16 1, i16 2, i16 1, i16 7, i16 2, i16 1, i16 6, i16 1, i16 5, i16 4, i16 4, i16 3, i16 1, i16 8, i16 1, i16 3, i16 3, i16 1, i16 3, i16 2, i16 2, i16 2, i16 2, i16 3, i16 1, i16 6, i16 1, i16 2, i16 1, i16 2, i16 1, i16 3, i16 7, i16 1, i16 8, i16 2, i16 1, i16 2, i16 1, i16 5, i16 2, i16 5, i16 3, i16 5, i16 10, i16 1, i16 2, i16 1, i16 1, i16 3, i16 2, i16 5, i16 11, i16 3, i16 9, i16 3, i16 5, i16 1, i16 1, i16 5, i16 9, i16 1, i16 2, i16 1, i16 5, i16 7, i16 9, i16 9, i16 8, i16 1, i16 3, i16 3, i16 3, i16 6, i16 8, i16 2, i16 3, i16 2, i16 1, i16 1, i16 32, i16 6, i16 1, i16 2, i16 15, i16 9, i16 3, i16 7, i16 13, i16 1, i16 3, i16 10, i16 13, i16 2, i16 14, i16 1, i16 13, i16 10, i16 2, i16 1, i16 3, i16 10, i16 4, i16 15, i16 2, i16 15, i16 15, i16 10, i16 1, i16 3, i16 9, i16 6, i16 9, i16 32, i16 25, i16 26, i16 47, i16 7, i16 3, i16 2, i16 3, i16 1, i16 6, i16 3, i16 4, i16 3, i16 2, i16 8, i16 5, i16 4, i16 1, i16 9, i16 4, i16 2, i16 2, i16 19, i16 10, i16 6, i16 2, i16 3, i16 8, i16 1, i16 2, i16 2, i16 4, i16 2, i16 1, i16 9, i16 4, i16 4, i16 4, i16 6, i16 4, i16 8, i16 9, i16 2, i16 3, i16 1, i16 1, i16 1, i16 1, i16 3, i16 5, i16 5, i16 1, i16 3, i16 8, i16 4, i16 6, i16 2, i16 1, i16 4, i16 12, i16 1, i16 5, i16 3, i16 7, i16 13, i16 2, i16 5, i16 8, i16 1, i16 6, i16 1, i16 2, i16 5, i16 14, i16 6, i16 1, i16 5, i16 2, i16 4, i16 8, i16 15, i16 5, i16 1, i16 23, i16 6, i16 62, i16 2, i16 10, i16 1, i16 1, i16 8, i16 1, i16 2, i16 2, i16 10, i16 4, i16 2, i16 2, i16 9, i16 2, i16 1, i16 1, i16 3, i16 2, i16 3, i16 1, i16 5, i16 3, i16 3, i16 2, i16 1, i16 3, i16 8, i16 1, i16 1, i16 1, i16 11, i16 3, i16 1, i16 1, i16 4, i16 3, i16 7, i16 1, i16 14, i16 1, i16 2, i16 3, i16 12, i16 5, i16 2, i16 5, i16 1, i16 6, i16 7, i16 5, i16 7, i16 14, i16 11, i16 1, i16 3, i16 1, i16 8, i16 9, i16 12, i16 2, i16 1, i16 11, i16 8, i16 4, i16 4, i16 2, i16 6, i16 10, i16 9, i16 13, i16 1, i16 1, i16 3, i16 1, i16 5, i16 1, i16 3, i16 2, i16 4, i16 4, i16 1, i16 18, i16 2, i16 3, i16 14, i16 11, i16 4, i16 29, i16 4, i16 2, i16 7, i16 1, i16 3, i16 13, i16 9, i16 2, i16 2, i16 5, i16 3, i16 5, i16 20, i16 7, i16 16, i16 8, i16 5, i16 72, i16 34, i16 6, i16 4, i16 22, i16 12, i16 12, i16 28, i16 45, i16 36, i16 9, i16 7, i16 39, i16 9, i16 191, i16 1, i16 1, i16 1, i16 4, i16 11, i16 8, i16 4, i16 9, i16 2, i16 3, i16 22, i16 1, i16 1, i16 1, i16 1, i16 4, i16 17, i16 1, i16 7, i16 7, i16 1, i16 11, i16 31, i16 10, i16 2, i16 4, i16 8, i16 2, i16 3, i16 2, i16 1, i16 4, i16 2, i16 16, i16 4, i16 32, i16 2, i16 3, i16 19, i16 13, i16 4, i16 9, i16 1, i16 5, i16 2, i16 14, i16 8, i16 1, i16 1, i16 3, i16 6, i16 19, i16 6, i16 5, i16 1, i16 16, i16 6, i16 2, i16 10, i16 8, i16 5, i16 1, i16 2, i16 3, i16 1, i16 5, i16 5, i16 1, i16 11, i16 6, i16 6, i16 1, i16 3, i16 3, i16 2, i16 6, i16 3, i16 8, i16 1, i16 1, i16 4, i16 10, i16 7, i16 5, i16 7, i16 7, i16 5, i16 8, i16 9, i16 2, i16 1, i16 3, i16 4, i16 1, i16 1, i16 3, i16 1, i16 3, i16 3, i16 2, i16 6, i16 16, i16 1, i16 4, i16 6, i16 3, i16 1, i16 10, i16 6, i16 1, i16 3, i16 15, i16 2, i16 9, i16 2, i16 10, i16 25, i16 13, i16 9, i16 16, i16 6, i16 2, i16 2, i16 10, i16 11, i16 4, i16 3, i16 9, i16 1, i16 2, i16 6, i16 6, i16 5, i16 4, i16 30, i16 40, i16 1, i16 10, i16 7, i16 12, i16 14, i16 33, i16 6, i16 3, i16 6, i16 7, i16 3, i16 1, i16 3, i16 1, i16 11, i16 14, i16 4, i16 9, i16 5, i16 12, i16 11, i16 49, i16 18, i16 51, i16 31, i16 140, i16 31, i16 2, i16 2, i16 1, i16 5, i16 1, i16 8, i16 1, i16 10, i16 1, i16 4, i16 4, i16 3, i16 24, i16 1, i16 10, i16 1, i16 3, i16 6, i16 6, i16 16, i16 3, i16 4, i16 5, i16 2, i16 1, i16 4, i16 2, i16 57, i16 10, i16 6, i16 22, i16 2, i16 22, i16 3, i16 7, i16 22, i16 6, i16 10, i16 11, i16 36, i16 18, i16 16, i16 33, i16 36, i16 2, i16 5, i16 5, i16 1, i16 1, i16 1, i16 4, i16 10, i16 1, i16 4, i16 13, i16 2, i16 7, i16 5, i16 2, i16 9, i16 3, i16 4, i16 1, i16 7, i16 43, i16 3, i16 7, i16 3, i16 9, i16 14, i16 7, i16 9, i16 1, i16 11, i16 1, i16 1, i16 3, i16 7, i16 4, i16 18, i16 13, i16 1, i16 14, i16 1, i16 3, i16 6, i16 10, i16 73, i16 2, i16 2, i16 30, i16 6, i16 1, i16 11, i16 18, i16 19, i16 13, i16 22, i16 3, i16 46, i16 42, i16 37, i16 89, i16 7, i16 3, i16 16, i16 34, i16 2, i16 2, i16 3, i16 9, i16 1, i16 7, i16 1, i16 1, i16 1, i16 2, i16 2, i16 4, i16 10, i16 7, i16 3, i16 10, i16 3, i16 9, i16 5, i16 28, i16 9, i16 2, i16 6, i16 13, i16 7, i16 3, i16 1, i16 3, i16 10, i16 2, i16 7, i16 2, i16 11, i16 3, i16 6, i16 21, i16 54, i16 85, i16 2, i16 1, i16 4, i16 2, i16 2, i16 1, i16 39, i16 3, i16 21, i16 2, i16 2, i16 5, i16 1, i16 1, i16 1, i16 4, i16 1, i16 1, i16 3, i16 4, i16 15, i16 1, i16 3, i16 2, i16 4, i16 4, i16 2, i16 3, i16 8, i16 2, i16 20, i16 1, i16 8, i16 7, i16 13, i16 4, i16 1, i16 26, i16 6, i16 2, i16 9, i16 34, i16 4, i16 21, i16 52, i16 10, i16 4, i16 4, i16 1, i16 5, i16 12, i16 2, i16 11, i16 1, i16 7, i16 2, i16 30, i16 12, i16 44, i16 2, i16 30, i16 1, i16 1, i16 3, i16 6, i16 16, i16 9, i16 17, i16 39, i16 82, i16 2, i16 2, i16 24, i16 7, i16 1, i16 7, i16 3, i16 16, i16 9, i16 14, i16 44, i16 2, i16 1, i16 2, i16 1, i16 2, i16 3, i16 5, i16 2, i16 4, i16 1, i16 6, i16 7, i16 5, i16 3, i16 2, i16 6, i16 1, i16 11, i16 5, i16 11, i16 2, i16 1, i16 18, i16 19, i16 8, i16 1, i16 3, i16 24, i16 29, i16 2, i16 1, i16 3, i16 5, i16 2, i16 2, i16 1, i16 13, i16 6, i16 5, i16 1, i16 46, i16 11, i16 3, i16 5, i16 1, i16 1, i16 5, i16 8, i16 2, i16 10, i16 6, i16 12, i16 6, i16 3, i16 7, i16 11, i16 2, i16 4, i16 16, i16 13, i16 2, i16 5, i16 1, i16 1, i16 2, i16 2, i16 5, i16 2, i16 28, i16 5, i16 2, i16 23, i16 10, i16 8, i16 4, i16 4, i16 22, i16 39, i16 95, i16 38, i16 8, i16 14, i16 9, i16 5, i16 1, i16 13, i16 5, i16 4, i16 3, i16 13, i16 12, i16 11, i16 1, i16 9, i16 1, i16 27, i16 37, i16 2, i16 5, i16 4, i16 4, i16 63, i16 211, i16 95, i16 2, i16 2, i16 2, i16 1, i16 3, i16 5, i16 2, i16 1, i16 1, i16 2, i16 2, i16 1, i16 1, i16 1, i16 3, i16 2, i16 4, i16 1, i16 2, i16 1, i16 1, i16 5, i16 2, i16 2, i16 1, i16 1, i16 2, i16 3, i16 1, i16 3, i16 1, i16 1, i16 1, i16 3, i16 1, i16 4, i16 2, i16 1, i16 3, i16 6, i16 1, i16 1, i16 3, i16 7, i16 15, i16 5, i16 3, i16 2, i16 5, i16 3, i16 9, i16 11, i16 4, i16 2, i16 22, i16 1, i16 6, i16 3, i16 8, i16 7, i16 1, i16 4, i16 28, i16 4, i16 16, i16 3, i16 3, i16 25, i16 4, i16 4, i16 27, i16 27, i16 1, i16 4, i16 1, i16 2, i16 2, i16 7, i16 1, i16 3, i16 5, i16 2, i16 28, i16 8, i16 2, i16 14, i16 1, i16 8, i16 6, i16 16, i16 25, i16 3, i16 3, i16 3, i16 14, i16 3, i16 3, i16 1, i16 1, i16 2, i16 1, i16 4, i16 6, i16 3, i16 8, i16 4, i16 1, i16 1, i16 1, i16 2, i16 3, i16 6, i16 10, i16 6, i16 2, i16 3, i16 18, i16 3, i16 2, i16 5, i16 5, i16 4, i16 3, i16 1, i16 5, i16 2, i16 5, i16 4, i16 23, i16 7, i16 6, i16 12, i16 6, i16 4, i16 17, i16 11, i16 9, i16 5, i16 1, i16 1, i16 10, i16 5, i16 12, i16 1, i16 1, i16 11, i16 26, i16 33, i16 7, i16 3, i16 6, i16 1, i16 17, i16 7, i16 1, i16 5, i16 12, i16 1, i16 11, i16 2, i16 4, i16 1, i16 8, i16 14, i16 17, i16 23, i16 1, i16 2, i16 1, i16 7, i16 8, i16 16, i16 11, i16 9, i16 6, i16 5, i16 2, i16 6, i16 4, i16 16, i16 2, i16 8, i16 14, i16 1, i16 11, i16 8, i16 9, i16 1, i16 1, i16 1, i16 9, i16 25, i16 4, i16 11, i16 19, i16 7, i16 2, i16 15, i16 2, i16 12, i16 8, i16 52, i16 7, i16 5, i16 19, i16 2, i16 16, i16 4, i16 36, i16 8, i16 1, i16 16, i16 8, i16 24, i16 26, i16 4, i16 6, i16 2, i16 9, i16 5, i16 4, i16 36, i16 3, i16 28, i16 12, i16 25, i16 15, i16 37, i16 27, i16 17, i16 12, i16 59, i16 38, i16 5, i16 32, i16 127, i16 1, i16 2, i16 9, i16 17, i16 14, i16 4, i16 1, i16 2, i16 1, i16 1, i16 8, i16 11, i16 50, i16 4, i16 14, i16 2, i16 19, i16 16, i16 4, i16 17, i16 5, i16 4, i16 5, i16 26, i16 12, i16 45, i16 2, i16 23, i16 45, i16 104, i16 30, i16 12, i16 8, i16 3, i16 10, i16 2, i16 2, i16 3, i16 3, i16 1, i16 4, i16 20, i16 7, i16 2, i16 9, i16 6, i16 15, i16 2, i16 20, i16 1, i16 3, i16 16, i16 4, i16 11, i16 15, i16 6, i16 134, i16 2, i16 5, i16 59, i16 1, i16 2, i16 2, i16 2, i16 1, i16 9, i16 17, i16 3, i16 26, i16 137, i16 10, i16 211, i16 59, i16 1, i16 2, i16 4, i16 1, i16 4, i16 1, i16 1, i16 1, i16 2, i16 6, i16 2, i16 3, i16 1, i16 1, i16 2, i16 3, i16 2, i16 3, i16 1, i16 3, i16 4, i16 4, i16 2, i16 3, i16 3, i16 1, i16 4, i16 3, i16 1, i16 7, i16 2, i16 2, i16 3, i16 1, i16 2, i16 1, i16 3, i16 3, i16 3, i16 2, i16 2, i16 3, i16 2, i16 1, i16 3, i16 14, i16 6, i16 1, i16 3, i16 2, i16 9, i16 6, i16 15, i16 27, i16 9, i16 34, i16 145, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 3, i16 1, i16 2, i16 1, i16 1, i16 1, i16 2, i16 3, i16 5, i16 8, i16 3, i16 5, i16 2, i16 4, i16 1, i16 3, i16 2, i16 2, i16 2, i16 12, i16 4, i16 1, i16 1, i16 1, i16 10, i16 4, i16 5, i16 1, i16 20, i16 4, i16 16, i16 1, i16 15, i16 9, i16 5, i16 12, i16 2, i16 9, i16 2, i16 5, i16 4, i16 2, i16 26, i16 19, i16 7, i16 1, i16 26, i16 4, i16 30, i16 12, i16 15, i16 42, i16 1, i16 6, i16 8, i16 172, i16 1, i16 1, i16 4, i16 2, i16 1, i16 1, i16 11, i16 2, i16 2, i16 4, i16 2, i16 1, i16 2, i16 1, i16 10, i16 8, i16 1, i16 2, i16 1, i16 4, i16 5, i16 1, i16 2, i16 5, i16 1, i16 8, i16 4, i16 1, i16 3, i16 4, i16 2, i16 1, i16 6, i16 2, i16 1, i16 3, i16 4, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 12, i16 5, i16 7, i16 2, i16 4, i16 3, i16 1, i16 1, i16 1, i16 3, i16 3, i16 6, i16 1, i16 2, i16 2, i16 3, i16 3, i16 3, i16 2, i16 1, i16 2, i16 12, i16 14, i16 11, i16 6, i16 6, i16 4, i16 12, i16 2, i16 8, i16 1, i16 7, i16 10, i16 1, i16 35, i16 7, i16 4, i16 13, i16 15, i16 4, i16 3, i16 23, i16 21, i16 28, i16 52, i16 5, i16 26, i16 5, i16 6, i16 1, i16 7, i16 10, i16 2, i16 7, i16 53, i16 3, i16 2, i16 1, i16 1, i16 1, i16 2, i16 163, i16 532, i16 1, i16 10, i16 11, i16 1, i16 3, i16 3, i16 4, i16 8, i16 2, i16 8, i16 6, i16 2, i16 2, i16 23, i16 22, i16 4, i16 2, i16 2, i16 4, i16 2, i16 1, i16 3, i16 1, i16 3, i16 3, i16 5, i16 9, i16 8, i16 2, i16 1, i16 2, i16 8, i16 1, i16 10, i16 2, i16 12, i16 21, i16 20, i16 15, i16 105, i16 2, i16 3, i16 1, i16 1, i16 3, i16 2, i16 3, i16 1, i16 1, i16 2, i16 5, i16 1, i16 4, i16 15, i16 11, i16 19, i16 1, i16 1, i16 1, i16 1, i16 5, i16 4, i16 5, i16 1, i16 1, i16 2, i16 5, i16 3, i16 5, i16 12, i16 1, i16 2, i16 5, i16 1, i16 11, i16 1, i16 1, i16 15, i16 9, i16 1, i16 4, i16 5, i16 3, i16 26, i16 8, i16 2, i16 1, i16 3, i16 1, i16 1, i16 15, i16 19, i16 2, i16 12, i16 1, i16 2, i16 5, i16 2, i16 7, i16 2, i16 19, i16 2, i16 20, i16 6, i16 26, i16 7, i16 5, i16 2, i16 2, i16 7, i16 34, i16 21, i16 13, i16 70, i16 2, i16 128, i16 1, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 1, i16 3, i16 2, i16 2, i16 2, i16 15, i16 1, i16 4, i16 1, i16 3, i16 4, i16 42, i16 10, i16 6, i16 1, i16 49, i16 85, i16 8, i16 1, i16 2, i16 1, i16 1, i16 4, i16 4, i16 2, i16 3, i16 6, i16 1, i16 5, i16 7, i16 4, i16 3, i16 211, i16 4, i16 1, i16 2, i16 1, i16 2, i16 5, i16 1, i16 2, i16 4, i16 2, i16 2, i16 6, i16 5, i16 6, i16 10, i16 3, i16 4, i16 48, i16 100, i16 6, i16 2, i16 16, i16 296, i16 5, i16 27, i16 387, i16 2, i16 2, i16 3, i16 7, i16 16, i16 8, i16 5, i16 38, i16 15, i16 39, i16 21, i16 9, i16 10, i16 3, i16 7, i16 59, i16 13, i16 27, i16 21, i16 47, i16 5, i16 21, i16 6], align 16
@"?base_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA" = internal unnamed_addr constant [12 x i16] [i16 32, i16 255, i16 8192, i16 8303, i16 12288, i16 12543, i16 12784, i16 12799, i16 -256, i16 -17, i16 -3, i16 -3], align 16
@"?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA" = internal global [5013 x i16] zeroinitializer, align 16
@"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB" = internal unnamed_addr constant [2999 x i16] [i16 0, i16 1, i16 2, i16 4, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 3, i16 3, i16 2, i16 2, i16 1, i16 5, i16 3, i16 5, i16 7, i16 5, i16 6, i16 1, i16 2, i16 1, i16 7, i16 2, i16 6, i16 3, i16 1, i16 8, i16 1, i16 1, i16 4, i16 1, i16 1, i16 18, i16 2, i16 11, i16 2, i16 6, i16 2, i16 1, i16 2, i16 1, i16 5, i16 1, i16 2, i16 1, i16 3, i16 1, i16 2, i16 1, i16 2, i16 3, i16 3, i16 1, i16 1, i16 2, i16 3, i16 1, i16 1, i16 1, i16 12, i16 7, i16 9, i16 1, i16 4, i16 5, i16 1, i16 1, i16 2, i16 1, i16 10, i16 1, i16 1, i16 9, i16 2, i16 2, i16 4, i16 5, i16 6, i16 9, i16 3, i16 1, i16 1, i16 1, i16 1, i16 9, i16 3, i16 18, i16 5, i16 2, i16 2, i16 2, i16 2, i16 1, i16 6, i16 3, i16 7, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 4, i16 2, i16 1, i16 23, i16 2, i16 10, i16 4, i16 3, i16 5, i16 2, i16 4, i16 10, i16 2, i16 4, i16 13, i16 1, i16 6, i16 1, i16 9, i16 3, i16 1, i16 1, i16 6, i16 6, i16 7, i16 6, i16 3, i16 1, i16 2, i16 11, i16 3, i16 2, i16 2, i16 3, i16 2, i16 15, i16 2, i16 2, i16 5, i16 4, i16 3, i16 6, i16 4, i16 1, i16 2, i16 5, i16 2, i16 12, i16 16, i16 6, i16 13, i16 9, i16 13, i16 2, i16 1, i16 1, i16 7, i16 16, i16 4, i16 7, i16 1, i16 19, i16 1, i16 5, i16 1, i16 2, i16 2, i16 7, i16 7, i16 8, i16 2, i16 6, i16 5, i16 4, i16 9, i16 18, i16 7, i16 4, i16 5, i16 9, i16 13, i16 11, i16 8, i16 15, i16 2, i16 1, i16 1, i16 1, i16 2, i16 1, i16 2, i16 2, i16 1, i16 2, i16 2, i16 8, i16 2, i16 9, i16 3, i16 3, i16 1, i16 1, i16 4, i16 4, i16 1, i16 1, i16 1, i16 4, i16 9, i16 1, i16 4, i16 3, i16 5, i16 5, i16 2, i16 7, i16 5, i16 3, i16 4, i16 8, i16 2, i16 1, i16 13, i16 2, i16 3, i16 3, i16 1, i16 14, i16 1, i16 1, i16 4, i16 5, i16 1, i16 3, i16 6, i16 1, i16 5, i16 2, i16 1, i16 1, i16 3, i16 3, i16 3, i16 3, i16 1, i16 1, i16 2, i16 7, i16 6, i16 6, i16 7, i16 1, i16 4, i16 7, i16 6, i16 1, i16 1, i16 1, i16 1, i16 1, i16 12, i16 3, i16 3, i16 9, i16 5, i16 2, i16 6, i16 1, i16 5, i16 6, i16 1, i16 2, i16 3, i16 18, i16 2, i16 4, i16 14, i16 4, i16 1, i16 3, i16 6, i16 1, i16 1, i16 6, i16 3, i16 5, i16 5, i16 3, i16 2, i16 2, i16 2, i16 2, i16 12, i16 3, i16 1, i16 4, i16 2, i16 3, i16 2, i16 3, i16 11, i16 1, i16 7, i16 4, i16 1, i16 2, i16 1, i16 3, i16 17, i16 1, i16 9, i16 1, i16 24, i16 1, i16 1, i16 4, i16 2, i16 2, i16 4, i16 1, i16 2, i16 7, i16 1, i16 1, i16 1, i16 3, i16 1, i16 2, i16 2, i16 4, i16 15, i16 1, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 5, i16 2, i16 5, i16 20, i16 2, i16 5, i16 9, i16 1, i16 10, i16 8, i16 7, i16 6, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6, i16 2, i16 1, i16 2, i16 8, i16 1, i16 1, i16 1, i16 1, i16 5, i16 1, i16 1, i16 3, i16 1, i16 1, i16 1, i16 1, i16 3, i16 1, i16 1, i16 12, i16 4, i16 1, i16 3, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10, i16 3, i16 1, i16 7, i16 5, i16 13, i16 1, i16 2, i16 3, i16 4, i16 6, i16 1, i16 1, i16 30, i16 2, i16 9, i16 9, i16 1, i16 15, i16 38, i16 11, i16 3, i16 1, i16 8, i16 24, i16 7, i16 1, i16 9, i16 8, i16 10, i16 2, i16 1, i16 9, i16 31, i16 2, i16 13, i16 6, i16 2, i16 9, i16 4, i16 49, i16 5, i16 2, i16 15, i16 2, i16 1, i16 10, i16 2, i16 1, i16 1, i16 1, i16 2, i16 2, i16 6, i16 15, i16 30, i16 35, i16 3, i16 14, i16 18, i16 8, i16 1, i16 16, i16 10, i16 28, i16 12, i16 19, i16 45, i16 38, i16 1, i16 3, i16 2, i16 3, i16 13, i16 2, i16 1, i16 7, i16 3, i16 6, i16 5, i16 3, i16 4, i16 3, i16 1, i16 5, i16 7, i16 8, i16 1, i16 5, i16 3, i16 18, i16 5, i16 3, i16 6, i16 1, i16 21, i16 4, i16 24, i16 9, i16 24, i16 40, i16 3, i16 14, i16 3, i16 21, i16 3, i16 2, i16 1, i16 2, i16 4, i16 2, i16 3, i16 1, i16 15, i16 15, i16 6, i16 5, i16 1, i16 1, i16 3, i16 1, i16 5, i16 6, i16 1, i16 9, i16 7, i16 3, i16 3, i16 2, i16 1, i16 4, i16 3, i16 8, i16 21, i16 5, i16 16, i16 4, i16 5, i16 2, i16 10, i16 11, i16 11, i16 3, i16 6, i16 3, i16 2, i16 9, i16 3, i16 6, i16 13, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 11, i16 12, i16 6, i16 6, i16 1, i16 4, i16 2, i16 6, i16 5, i16 2, i16 1, i16 1, i16 3, i16 3, i16 6, i16 13, i16 3, i16 1, i16 1, i16 5, i16 1, i16 2, i16 3, i16 3, i16 14, i16 2, i16 1, i16 2, i16 2, i16 2, i16 5, i16 1, i16 9, i16 5, i16 1, i16 1, i16 6, i16 12, i16 3, i16 12, i16 3, i16 4, i16 13, i16 2, i16 14, i16 2, i16 8, i16 1, i16 17, i16 5, i16 1, i16 16, i16 4, i16 2, i16 2, i16 21, i16 8, i16 9, i16 6, i16 23, i16 20, i16 12, i16 25, i16 19, i16 9, i16 38, i16 8, i16 3, i16 21, i16 40, i16 25, i16 33, i16 13, i16 4, i16 3, i16 1, i16 4, i16 1, i16 2, i16 4, i16 1, i16 2, i16 5, i16 26, i16 2, i16 1, i16 1, i16 2, i16 1, i16 3, i16 6, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 3, i16 1, i16 1, i16 1, i16 9, i16 2, i16 3, i16 1, i16 1, i16 1, i16 3, i16 6, i16 3, i16 2, i16 1, i16 1, i16 6, i16 6, i16 1, i16 8, i16 2, i16 2, i16 2, i16 1, i16 4, i16 1, i16 2, i16 3, i16 2, i16 7, i16 3, i16 2, i16 4, i16 1, i16 2, i16 1, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3, i16 1, i16 2, i16 5, i16 4, i16 10, i16 9, i16 4, i16 9, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 5, i16 3, i16 2, i16 1, i16 6, i16 4, i16 9, i16 6, i16 1, i16 10, i16 2, i16 31, i16 17, i16 8, i16 3, i16 7, i16 5, i16 40, i16 1, i16 7, i16 7, i16 1, i16 6, i16 5, i16 2, i16 10, i16 7, i16 8, i16 4, i16 15, i16 39, i16 25, i16 6, i16 28, i16 47, i16 18, i16 10, i16 7, i16 1, i16 3, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 3, i16 3, i16 3, i16 1, i16 1, i16 1, i16 3, i16 4, i16 2, i16 1, i16 4, i16 1, i16 3, i16 6, i16 10, i16 7, i16 8, i16 6, i16 2, i16 2, i16 1, i16 3, i16 3, i16 2, i16 5, i16 8, i16 7, i16 9, i16 12, i16 2, i16 15, i16 1, i16 1, i16 4, i16 1, i16 2, i16 1, i16 1, i16 1, i16 3, i16 2, i16 1, i16 3, i16 3, i16 5, i16 6, i16 2, i16 3, i16 2, i16 10, i16 1, i16 4, i16 2, i16 8, i16 1, i16 1, i16 1, i16 11, i16 6, i16 1, i16 21, i16 4, i16 16, i16 3, i16 1, i16 3, i16 1, i16 4, i16 2, i16 3, i16 6, i16 5, i16 1, i16 3, i16 1, i16 1, i16 3, i16 3, i16 4, i16 6, i16 1, i16 1, i16 10, i16 4, i16 2, i16 7, i16 10, i16 4, i16 7, i16 4, i16 2, i16 9, i16 4, i16 3, i16 1, i16 1, i16 1, i16 4, i16 1, i16 8, i16 3, i16 4, i16 1, i16 3, i16 1, i16 6, i16 1, i16 4, i16 2, i16 1, i16 4, i16 7, i16 2, i16 1, i16 8, i16 1, i16 4, i16 5, i16 1, i16 1, i16 2, i16 2, i16 4, i16 6, i16 2, i16 7, i16 1, i16 10, i16 1, i16 1, i16 3, i16 4, i16 11, i16 10, i16 8, i16 21, i16 4, i16 6, i16 1, i16 3, i16 5, i16 2, i16 1, i16 2, i16 28, i16 5, i16 5, i16 2, i16 3, i16 13, i16 1, i16 2, i16 3, i16 1, i16 4, i16 2, i16 1, i16 5, i16 20, i16 3, i16 8, i16 11, i16 1, i16 3, i16 3, i16 3, i16 1, i16 8, i16 10, i16 9, i16 2, i16 10, i16 9, i16 2, i16 3, i16 1, i16 1, i16 2, i16 4, i16 1, i16 8, i16 3, i16 6, i16 1, i16 7, i16 8, i16 6, i16 11, i16 1, i16 4, i16 29, i16 8, i16 4, i16 3, i16 1, i16 2, i16 7, i16 13, i16 1, i16 4, i16 1, i16 6, i16 2, i16 6, i16 12, i16 12, i16 2, i16 20, i16 3, i16 2, i16 3, i16 6, i16 4, i16 8, i16 9, i16 2, i16 7, i16 34, i16 5, i16 1, i16 18, i16 6, i16 1, i16 1, i16 4, i16 4, i16 5, i16 7, i16 9, i16 1, i16 2, i16 2, i16 4, i16 3, i16 4, i16 1, i16 7, i16 2, i16 2, i16 2, i16 6, i16 2, i16 3, i16 25, i16 5, i16 3, i16 6, i16 1, i16 4, i16 6, i16 7, i16 4, i16 2, i16 1, i16 4, i16 2, i16 13, i16 6, i16 4, i16 4, i16 3, i16 1, i16 5, i16 3, i16 4, i16 4, i16 3, i16 2, i16 1, i16 1, i16 4, i16 1, i16 2, i16 1, i16 1, i16 3, i16 1, i16 11, i16 1, i16 6, i16 3, i16 1, i16 7, i16 3, i16 6, i16 2, i16 8, i16 8, i16 6, i16 9, i16 3, i16 4, i16 11, i16 3, i16 2, i16 10, i16 12, i16 2, i16 5, i16 11, i16 1, i16 6, i16 4, i16 5, i16 3, i16 1, i16 8, i16 5, i16 4, i16 6, i16 6, i16 3, i16 5, i16 1, i16 1, i16 3, i16 2, i16 1, i16 2, i16 2, i16 6, i16 17, i16 12, i16 1, i16 10, i16 1, i16 6, i16 12, i16 1, i16 6, i16 6, i16 19, i16 9, i16 6, i16 16, i16 1, i16 13, i16 4, i16 4, i16 15, i16 7, i16 17, i16 6, i16 11, i16 9, i16 15, i16 12, i16 6, i16 7, i16 2, i16 1, i16 2, i16 2, i16 15, i16 9, i16 3, i16 21, i16 4, i16 6, i16 49, i16 18, i16 7, i16 3, i16 2, i16 3, i16 1, i16 6, i16 8, i16 2, i16 2, i16 6, i16 2, i16 9, i16 1, i16 3, i16 6, i16 4, i16 4, i16 1, i16 2, i16 16, i16 2, i16 5, i16 2, i16 1, i16 6, i16 2, i16 3, i16 5, i16 3, i16 1, i16 2, i16 5, i16 1, i16 2, i16 1, i16 9, i16 3, i16 1, i16 8, i16 6, i16 4, i16 8, i16 11, i16 3, i16 1, i16 1, i16 1, i16 1, i16 3, i16 1, i16 13, i16 8, i16 4, i16 1, i16 3, i16 2, i16 2, i16 1, i16 4, i16 1, i16 11, i16 1, i16 5, i16 2, i16 1, i16 5, i16 2, i16 5, i16 8, i16 6, i16 1, i16 1, i16 7, i16 4, i16 3, i16 8, i16 3, i16 2, i16 7, i16 2, i16 1, i16 5, i16 1, i16 5, i16 2, i16 4, i16 7, i16 6, i16 2, i16 8, i16 5, i16 1, i16 11, i16 4, i16 5, i16 3, i16 6, i16 18, i16 1, i16 2, i16 13, i16 3, i16 3, i16 1, i16 21, i16 1, i16 1, i16 4, i16 1, i16 4, i16 1, i16 1, i16 1, i16 8, i16 1, i16 2, i16 2, i16 7, i16 1, i16 2, i16 4, i16 2, i16 2, i16 9, i16 2, i16 1, i16 1, i16 1, i16 4, i16 3, i16 6, i16 3, i16 12, i16 5, i16 1, i16 1, i16 1, i16 5, i16 6, i16 3, i16 2, i16 4, i16 8, i16 2, i16 2, i16 4, i16 2, i16 7, i16 1, i16 8, i16 9, i16 5, i16 2, i16 3, i16 2, i16 1, i16 3, i16 2, i16 13, i16 7, i16 14, i16 6, i16 5, i16 1, i16 1, i16 2, i16 1, i16 4, i16 2, i16 23, i16 2, i16 1, i16 1, i16 6, i16 3, i16 1, i16 4, i16 1, i16 15, i16 3, i16 1, i16 7, i16 3, i16 9, i16 14, i16 1, i16 3, i16 1, i16 4, i16 1, i16 1, i16 5, i16 8, i16 1, i16 3, i16 8, i16 3, i16 8, i16 15, i16 11, i16 4, i16 14, i16 4, i16 4, i16 2, i16 5, i16 5, i16 1, i16 7, i16 1, i16 6, i16 14, i16 7, i16 7, i16 8, i16 5, i16 15, i16 4, i16 8, i16 6, i16 5, i16 6, i16 2, i16 1, i16 13, i16 1, i16 20, i16 15, i16 11, i16 9, i16 2, i16 5, i16 6, i16 2, i16 11, i16 2, i16 6, i16 2, i16 5, i16 1, i16 5, i16 8, i16 4, i16 13, i16 19, i16 25, i16 4, i16 1, i16 1, i16 11, i16 1, i16 34, i16 2, i16 5, i16 9, i16 14, i16 6, i16 2, i16 2, i16 6, i16 1, i16 1, i16 14, i16 1, i16 3, i16 14, i16 13, i16 1, i16 6, i16 12, i16 21, i16 14, i16 14, i16 6, i16 32, i16 17, i16 8, i16 32, i16 9, i16 28, i16 1, i16 2, i16 4, i16 11, i16 8, i16 3, i16 1, i16 14, i16 2, i16 5, i16 15, i16 1, i16 1, i16 1, i16 1, i16 3, i16 6, i16 4, i16 1, i16 3, i16 4, i16 11, i16 3, i16 1, i16 1, i16 11, i16 30, i16 1, i16 5, i16 1, i16 4, i16 1, i16 5, i16 8, i16 1, i16 1, i16 3, i16 2, i16 4, i16 3, i16 17, i16 35, i16 2, i16 6, i16 12, i16 17, i16 3, i16 1, i16 6, i16 2, i16 1, i16 1, i16 12, i16 2, i16 7, i16 3, i16 3, i16 2, i16 1, i16 16, i16 2, i16 8, i16 3, i16 6, i16 5, i16 4, i16 7, i16 3, i16 3, i16 8, i16 1, i16 9, i16 8, i16 5, i16 1, i16 2, i16 1, i16 3, i16 2, i16 8, i16 1, i16 2, i16 9, i16 12, i16 1, i16 1, i16 2, i16 3, i16 8, i16 3, i16 24, i16 12, i16 4, i16 3, i16 7, i16 5, i16 8, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 1, i16 23, i16 10, i16 3, i16 1, i16 2, i16 2, i16 6, i16 3, i16 1, i16 16, i16 1, i16 16, i16 22, i16 3, i16 10, i16 4, i16 11, i16 6, i16 9, i16 7, i16 7, i16 3, i16 6, i16 2, i16 2, i16 2, i16 4, i16 10, i16 2, i16 1, i16 1, i16 2, i16 8, i16 7, i16 1, i16 6, i16 4, i16 1, i16 3, i16 3, i16 3, i16 5, i16 10, i16 12, i16 12, i16 2, i16 3, i16 12, i16 8, i16 15, i16 1, i16 1, i16 16, i16 6, i16 6, i16 1, i16 5, i16 9, i16 11, i16 4, i16 11, i16 4, i16 2, i16 6, i16 12, i16 1, i16 17, i16 5, i16 13, i16 1, i16 4, i16 9, i16 5, i16 1, i16 11, i16 2, i16 1, i16 8, i16 1, i16 5, i16 7, i16 28, i16 8, i16 3, i16 5, i16 10, i16 2, i16 17, i16 3, i16 38, i16 22, i16 1, i16 2, i16 18, i16 12, i16 10, i16 4, i16 38, i16 18, i16 1, i16 4, i16 44, i16 19, i16 4, i16 1, i16 8, i16 4, i16 1, i16 12, i16 1, i16 4, i16 31, i16 12, i16 1, i16 14, i16 7, i16 75, i16 7, i16 5, i16 10, i16 6, i16 6, i16 13, i16 3, i16 2, i16 11, i16 11, i16 3, i16 2, i16 5, i16 28, i16 15, i16 6, i16 18, i16 18, i16 5, i16 6, i16 4, i16 3, i16 16, i16 1, i16 7, i16 18, i16 7, i16 36, i16 3, i16 5, i16 3, i16 1, i16 7, i16 1, i16 9, i16 1, i16 10, i16 7, i16 2, i16 4, i16 2, i16 6, i16 2, i16 9, i16 7, i16 4, i16 3, i16 32, i16 12, i16 3, i16 7, i16 10, i16 2, i16 23, i16 16, i16 3, i16 1, i16 12, i16 3, i16 31, i16 4, i16 11, i16 1, i16 3, i16 8, i16 9, i16 5, i16 1, i16 30, i16 15, i16 6, i16 12, i16 3, i16 2, i16 2, i16 11, i16 19, i16 9, i16 14, i16 2, i16 6, i16 2, i16 3, i16 19, i16 13, i16 17, i16 5, i16 3, i16 3, i16 25, i16 3, i16 14, i16 1, i16 1, i16 1, i16 36, i16 1, i16 3, i16 2, i16 19, i16 3, i16 13, i16 36, i16 9, i16 13, i16 31, i16 6, i16 4, i16 16, i16 34, i16 2, i16 5, i16 4, i16 2, i16 3, i16 3, i16 5, i16 1, i16 1, i16 1, i16 4, i16 3, i16 1, i16 17, i16 3, i16 2, i16 3, i16 5, i16 3, i16 1, i16 3, i16 2, i16 3, i16 5, i16 6, i16 3, i16 12, i16 11, i16 1, i16 3, i16 1, i16 2, i16 26, i16 7, i16 12, i16 7, i16 2, i16 14, i16 3, i16 3, i16 7, i16 7, i16 11, i16 25, i16 25, i16 28, i16 16, i16 4, i16 36, i16 1, i16 2, i16 1, i16 6, i16 2, i16 1, i16 9, i16 3, i16 27, i16 17, i16 4, i16 3, i16 4, i16 13, i16 4, i16 1, i16 3, i16 2, i16 2, i16 1, i16 10, i16 4, i16 2, i16 4, i16 6, i16 3, i16 8, i16 2, i16 1, i16 18, i16 1, i16 1, i16 24, i16 2, i16 2, i16 4, i16 33, i16 2, i16 3, i16 63, i16 7, i16 1, i16 6, i16 40, i16 7, i16 3, i16 4, i16 4, i16 2, i16 4, i16 15, i16 18, i16 1, i16 16, i16 1, i16 1, i16 11, i16 2, i16 41, i16 14, i16 1, i16 3, i16 18, i16 13, i16 3, i16 2, i16 4, i16 16, i16 2, i16 17, i16 7, i16 15, i16 24, i16 7, i16 18, i16 13, i16 44, i16 2, i16 2, i16 3, i16 6, i16 1, i16 1, i16 7, i16 5, i16 1, i16 7, i16 1, i16 4, i16 3, i16 3, i16 5, i16 10, i16 8, i16 2, i16 3, i16 1, i16 8, i16 1, i16 1, i16 27, i16 4, i16 2, i16 1, i16 12, i16 1, i16 2, i16 1, i16 10, i16 6, i16 1, i16 6, i16 7, i16 5, i16 2, i16 3, i16 7, i16 11, i16 5, i16 11, i16 3, i16 6, i16 6, i16 2, i16 3, i16 15, i16 4, i16 9, i16 1, i16 1, i16 2, i16 1, i16 2, i16 11, i16 2, i16 8, i16 12, i16 8, i16 5, i16 4, i16 2, i16 3, i16 1, i16 5, i16 2, i16 2, i16 1, i16 14, i16 1, i16 12, i16 11, i16 4, i16 1, i16 11, i16 17, i16 17, i16 4, i16 3, i16 2, i16 5, i16 5, i16 7, i16 3, i16 1, i16 5, i16 9, i16 9, i16 8, i16 2, i16 5, i16 6, i16 6, i16 13, i16 13, i16 2, i16 1, i16 2, i16 6, i16 1, i16 2, i16 2, i16 49, i16 4, i16 9, i16 1, i16 2, i16 10, i16 16, i16 7, i16 8, i16 4, i16 3, i16 2, i16 23, i16 4, i16 58, i16 3, i16 29, i16 1, i16 14, i16 19, i16 19, i16 11, i16 11, i16 2, i16 7, i16 5, i16 1, i16 3, i16 4, i16 6, i16 2, i16 18, i16 5, i16 12, i16 12, i16 17, i16 17, i16 3, i16 3, i16 2, i16 4, i16 1, i16 6, i16 2, i16 3, i16 4, i16 3, i16 1, i16 1, i16 1, i16 1, i16 5, i16 1, i16 1, i16 9, i16 1, i16 3, i16 1, i16 3, i16 6, i16 1, i16 8, i16 1, i16 1, i16 2, i16 6, i16 4, i16 14, i16 3, i16 1, i16 4, i16 11, i16 4, i16 1, i16 3, i16 32, i16 1, i16 2, i16 4, i16 13, i16 4, i16 1, i16 2, i16 4, i16 2, i16 1, i16 3, i16 1, i16 11, i16 1, i16 4, i16 2, i16 1, i16 4, i16 4, i16 6, i16 3, i16 5, i16 1, i16 6, i16 5, i16 7, i16 6, i16 3, i16 23, i16 3, i16 5, i16 3, i16 5, i16 3, i16 3, i16 13, i16 3, i16 9, i16 10, i16 1, i16 12, i16 10, i16 2, i16 3, i16 18, i16 13, i16 7, i16 160, i16 52, i16 4, i16 2, i16 2, i16 3, i16 2, i16 14, i16 5, i16 4, i16 12, i16 4, i16 6, i16 4, i16 1, i16 20, i16 4, i16 11, i16 6, i16 2, i16 12, i16 27, i16 1, i16 4, i16 1, i16 2, i16 2, i16 7, i16 4, i16 5, i16 2, i16 28, i16 3, i16 7, i16 25, i16 8, i16 3, i16 19, i16 3, i16 6, i16 10, i16 2, i16 2, i16 1, i16 10, i16 2, i16 5, i16 4, i16 1, i16 3, i16 4, i16 1, i16 5, i16 3, i16 2, i16 6, i16 9, i16 3, i16 6, i16 2, i16 16, i16 3, i16 3, i16 16, i16 4, i16 5, i16 5, i16 3, i16 2, i16 1, i16 2, i16 16, i16 15, i16 8, i16 2, i16 6, i16 21, i16 2, i16 4, i16 1, i16 22, i16 5, i16 8, i16 1, i16 1, i16 21, i16 11, i16 2, i16 1, i16 11, i16 11, i16 19, i16 13, i16 12, i16 4, i16 2, i16 3, i16 2, i16 3, i16 6, i16 1, i16 8, i16 11, i16 1, i16 4, i16 2, i16 9, i16 5, i16 2, i16 1, i16 11, i16 2, i16 9, i16 1, i16 1, i16 2, i16 14, i16 31, i16 9, i16 3, i16 4, i16 21, i16 14, i16 4, i16 8, i16 1, i16 7, i16 2, i16 2, i16 2, i16 5, i16 1, i16 4, i16 20, i16 3, i16 3, i16 4, i16 10, i16 1, i16 11, i16 9, i16 8, i16 2, i16 1, i16 4, i16 5, i16 14, i16 12, i16 14, i16 2, i16 17, i16 9, i16 6, i16 31, i16 4, i16 14, i16 1, i16 20, i16 13, i16 26, i16 5, i16 2, i16 7, i16 3, i16 6, i16 13, i16 2, i16 4, i16 2, i16 19, i16 6, i16 2, i16 2, i16 18, i16 9, i16 3, i16 5, i16 12, i16 12, i16 14, i16 4, i16 6, i16 2, i16 3, i16 6, i16 9, i16 5, i16 22, i16 4, i16 5, i16 25, i16 6, i16 4, i16 8, i16 5, i16 2, i16 6, i16 27, i16 2, i16 35, i16 2, i16 16, i16 3, i16 7, i16 8, i16 8, i16 6, i16 6, i16 5, i16 9, i16 17, i16 2, i16 20, i16 6, i16 19, i16 2, i16 13, i16 3, i16 1, i16 1, i16 1, i16 4, i16 17, i16 12, i16 2, i16 14, i16 7, i16 1, i16 4, i16 18, i16 12, i16 38, i16 33, i16 2, i16 10, i16 1, i16 1, i16 2, i16 13, i16 14, i16 17, i16 11, i16 50, i16 6, i16 33, i16 20, i16 26, i16 74, i16 16, i16 23, i16 45, i16 50, i16 13, i16 38, i16 33, i16 6, i16 6, i16 7, i16 4, i16 4, i16 2, i16 1, i16 3, i16 2, i16 5, i16 8, i16 7, i16 8, i16 9, i16 3, i16 11, i16 21, i16 9, i16 13, i16 1, i16 3, i16 10, i16 6, i16 7, i16 1, i16 2, i16 2, i16 18, i16 5, i16 5, i16 1, i16 9, i16 9, i16 2, i16 68, i16 9, i16 19, i16 13, i16 2, i16 5, i16 1, i16 4, i16 4, i16 7, i16 4, i16 13, i16 3, i16 9, i16 10, i16 21, i16 17, i16 3, i16 26, i16 2, i16 1, i16 5, i16 2, i16 4, i16 5, i16 4, i16 1, i16 7, i16 4, i16 7, i16 3, i16 4, i16 2, i16 1, i16 6, i16 1, i16 1, i16 20, i16 4, i16 1, i16 9, i16 2, i16 2, i16 1, i16 3, i16 3, i16 2, i16 3, i16 2, i16 1, i16 1, i16 1, i16 20, i16 2, i16 3, i16 1, i16 6, i16 2, i16 3, i16 6, i16 2, i16 4, i16 8, i16 1, i16 3, i16 2, i16 10, i16 3, i16 5, i16 3, i16 4, i16 4, i16 3, i16 4, i16 16, i16 1, i16 6, i16 1, i16 10, i16 2, i16 4, i16 2, i16 1, i16 1, i16 2, i16 10, i16 11, i16 2, i16 2, i16 3, i16 1, i16 24, i16 31, i16 4, i16 10, i16 10, i16 2, i16 5, i16 12, i16 16, i16 164, i16 15, i16 4, i16 16, i16 7, i16 9, i16 15, i16 19, i16 17, i16 1, i16 2, i16 1, i16 1, i16 5, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3, i16 1, i16 4, i16 3, i16 1, i16 3, i16 1, i16 3, i16 1, i16 2, i16 1, i16 1, i16 3, i16 3, i16 7, i16 2, i16 8, i16 1, i16 2, i16 2, i16 2, i16 1, i16 3, i16 4, i16 3, i16 7, i16 8, i16 12, i16 92, i16 2, i16 10, i16 3, i16 1, i16 3, i16 14, i16 5, i16 25, i16 16, i16 42, i16 4, i16 7, i16 7, i16 4, i16 2, i16 21, i16 5, i16 27, i16 26, i16 27, i16 21, i16 25, i16 30, i16 31, i16 2, i16 1, i16 5, i16 13, i16 3, i16 22, i16 5, i16 6, i16 6, i16 11, i16 9, i16 12, i16 1, i16 5, i16 9, i16 7, i16 5, i16 5, i16 22, i16 60, i16 3, i16 5, i16 13, i16 1, i16 1, i16 8, i16 1, i16 1, i16 3, i16 3, i16 2, i16 1, i16 9, i16 3, i16 3, i16 18, i16 4, i16 1, i16 2, i16 3, i16 7, i16 6, i16 3, i16 1, i16 2, i16 3, i16 9, i16 1, i16 3, i16 1, i16 3, i16 2, i16 1, i16 3, i16 1, i16 1, i16 1, i16 2, i16 1, i16 11, i16 3, i16 1, i16 6, i16 9, i16 1, i16 3, i16 2, i16 3, i16 1, i16 2, i16 1, i16 5, i16 1, i16 1, i16 4, i16 3, i16 4, i16 1, i16 2, i16 2, i16 4, i16 4, i16 1, i16 7, i16 2, i16 1, i16 2, i16 2, i16 3, i16 5, i16 13, i16 18, i16 3, i16 4, i16 14, i16 9, i16 9, i16 4, i16 16, i16 3, i16 7, i16 5, i16 8, i16 2, i16 6, i16 48, i16 28, i16 3, i16 1, i16 1, i16 4, i16 2, i16 14, i16 8, i16 2, i16 9, i16 2, i16 1, i16 15, i16 2, i16 4, i16 3, i16 2, i16 10, i16 16, i16 12, i16 8, i16 7, i16 1, i16 1, i16 3, i16 1, i16 1, i16 1, i16 2, i16 7, i16 4, i16 1, i16 6, i16 4, i16 38, i16 39, i16 16, i16 23, i16 7, i16 15, i16 15, i16 3, i16 2, i16 12, i16 7, i16 21, i16 37, i16 27, i16 6, i16 5, i16 4, i16 8, i16 2, i16 10, i16 8, i16 8, i16 6, i16 5, i16 1, i16 2, i16 1, i16 3, i16 24, i16 1, i16 16, i16 17, i16 9, i16 23, i16 10, i16 17, i16 6, i16 1, i16 51, i16 55, i16 44, i16 13, i16 294, i16 9, i16 3, i16 6, i16 2, i16 4, i16 2, i16 2, i16 15, i16 1, i16 1, i16 1, i16 13, i16 21, i16 17, i16 68, i16 14, i16 8, i16 9, i16 4, i16 1, i16 4, i16 9, i16 3, i16 11, i16 7, i16 1, i16 1, i16 1, i16 5, i16 6, i16 3, i16 2, i16 1, i16 1, i16 1, i16 2, i16 3, i16 8, i16 1, i16 2, i16 2, i16 4, i16 1, i16 5, i16 5, i16 2, i16 1, i16 4, i16 3, i16 7, i16 13, i16 4, i16 1, i16 4, i16 1, i16 3, i16 1, i16 1, i16 1, i16 5, i16 5, i16 10, i16 1, i16 6, i16 1, i16 5, i16 2, i16 1, i16 5, i16 2, i16 4, i16 1, i16 4, i16 5, i16 7, i16 3, i16 18, i16 2, i16 9, i16 11, i16 32, i16 4, i16 3, i16 3, i16 2, i16 4, i16 7, i16 11, i16 16, i16 9, i16 11, i16 8, i16 13, i16 38, i16 32, i16 8, i16 4, i16 2, i16 1, i16 1, i16 2, i16 1, i16 2, i16 4, i16 4, i16 1, i16 1, i16 1, i16 4, i16 1, i16 21, i16 3, i16 11, i16 1, i16 16, i16 1, i16 1, i16 6, i16 1, i16 3, i16 2, i16 4, i16 9, i16 8, i16 57, i16 7, i16 44, i16 1, i16 3, i16 3, i16 13, i16 3, i16 10, i16 1, i16 1, i16 7, i16 5, i16 2, i16 7, i16 21, i16 47, i16 63, i16 3, i16 15, i16 4, i16 7, i16 1, i16 16, i16 1, i16 1, i16 2, i16 8, i16 2, i16 3, i16 42, i16 15, i16 4, i16 1, i16 29, i16 7, i16 22, i16 10, i16 3, i16 78, i16 16, i16 12, i16 20, i16 18, i16 4, i16 67, i16 11, i16 5, i16 1, i16 3, i16 15, i16 6, i16 21, i16 31, i16 32, i16 27, i16 18, i16 13, i16 71, i16 35, i16 5, i16 142, i16 4, i16 10, i16 1, i16 2, i16 50, i16 19, i16 33, i16 16, i16 35, i16 37, i16 16, i16 19, i16 27, i16 7, i16 1, i16 133, i16 19, i16 1, i16 4, i16 8, i16 7, i16 20, i16 1, i16 4, i16 4, i16 1, i16 10, i16 3, i16 1, i16 6, i16 1, i16 2, i16 51, i16 5, i16 40, i16 15, i16 24, i16 43, i16 22928, i16 11, i16 1, i16 13, i16 154, i16 70, i16 3, i16 1, i16 1, i16 7, i16 4, i16 10, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 2, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 3, i16 2, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 1], align 16
@"?base_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA" = internal unnamed_addr constant [10 x i16] [i16 32, i16 255, i16 12288, i16 12543, i16 12784, i16 12799, i16 -256, i16 -17, i16 -3, i16 -3], align 16
@"?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA" = internal global [6009 x i16] zeroinitializer, align 16
@"?ranges@?1??GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [9 x i16] [i16 32, i16 255, i16 1024, i16 1327, i16 11744, i16 11775, i16 -22976, i16 -22881, i16 0], align 16
@"?ranges@?1??GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [7 x i16] [i16 32, i16 255, i16 8208, i16 8286, i16 3584, i16 3711, i16 0], align 2
@"?ranges@?1??GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ@4QBGB" = internal constant [17 x i16] [i16 32, i16 255, i16 258, i16 259, i16 272, i16 273, i16 296, i16 297, i16 360, i16 361, i16 416, i16 417, i16 431, i16 432, i16 7840, i16 7929, i16 0], align 16
@"??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i16] [i16 71, i16 108, i16 121, i16 112, i16 104, i16 115, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 60, i16 32, i16 48, i16 120, i16 70, i16 70, i16 70, i16 70, i16 0], comdat, align 2
@"??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu@" = linkonce_odr dso_local unnamed_addr constant [39 x i16] [i16 73, i16 110, i16 100, i16 101, i16 120, i16 65, i16 100, i16 118, i16 97, i16 110, i16 99, i16 101, i16 88, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 61, i16 61, i16 32, i16 73, i16 110, i16 100, i16 101, i16 120, i16 76, i16 111, i16 111, i16 107, i16 117, i16 112, i16 46, i16 83, i16 105, i16 122, i16 101, i16 0], comdat, align 2
@"??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i16] [i16 73, i16 110, i16 100, i16 101, i16 120, i16 76, i16 111, i16 111, i16 107, i16 117, i16 112, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 62, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1BM@KGJCABG@?$AAt?$AAe?$AAx?$AAt?$AA_?$AAe?$AAn?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [14 x i16] [i16 116, i16 101, i16 120, i16 116, i16 95, i16 101, i16 110, i16 100, i16 32, i16 33, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_13COJANIEC@?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [2 x i16] [i16 48, i16 0], comdat, align 2
@"??_C@_1JM@GAJOFMMN@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AA0?$AAF?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAM?$AAi?$AAs?$AAu?$AAs?$AAe?$AA?5?$AAo@" = linkonce_odr dso_local unnamed_addr constant [78 x i16] [i16 40, i16 102, i16 108, i16 97, i16 103, i16 115, i16 32, i16 38, i16 32, i16 48, i16 120, i16 48, i16 70, i16 41, i16 32, i16 61, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 34, i16 77, i16 105, i16 115, i16 117, i16 115, i16 101, i16 32, i16 111, i16 102, i16 32, i16 108, i16 101, i16 103, i16 97, i16 99, i16 121, i16 32, i16 104, i16 97, i16 114, i16 100, i16 99, i16 111, i16 100, i16 101, i16 100, i16 32, i16 73, i16 109, i16 68, i16 114, i16 97, i16 119, i16 67, i16 111, i16 114, i16 110, i16 101, i16 114, i16 70, i16 108, i16 97, i16 103, i16 115, i16 32, i16 118, i16 97, i16 108, i16 117, i16 101, i16 115, i16 33, i16 34, i16 0], comdat, align 2
@"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@" = linkonce_odr dso_local unnamed_addr constant [37 x i16] [i16 118, i16 101, i16 110, i16 100, i16 111, i16 114, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 64, i16 118, i16 49, i16 46, i16 56, i16 57, i16 46, i16 53, i16 47, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 46, i16 104, i16 0], comdat, align 2
@"??_C@_1BG@HMJJDGFN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i16] [i16 105, i16 110, i16 100, i16 101, i16 120, i16 32, i16 62, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa?$AAt?$AAa?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [27 x i16] [i16 97, i16 116, i16 108, i16 97, i16 115, i16 45, i16 62, i16 67, i16 111, i16 110, i16 102, i16 105, i16 103, i16 68, i16 97, i16 116, i16 97, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 62, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CI?$AA?$CB?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs@" = linkonce_odr dso_local unnamed_addr constant [82 x i16] [i16 99, i16 102, i16 103, i16 46, i16 68, i16 115, i16 116, i16 70, i16 111, i16 110, i16 116, i16 32, i16 38, i16 38, i16 32, i16 40, i16 33, i16 99, i16 102, i16 103, i16 46, i16 68, i16 115, i16 116, i16 70, i16 111, i16 110, i16 116, i16 45, i16 62, i16 73, i16 115, i16 76, i16 111, i16 97, i16 100, i16 101, i16 100, i16 40, i16 41, i16 32, i16 124, i16 124, i16 32, i16 99, i16 102, i16 103, i16 46, i16 68, i16 115, i16 116, i16 70, i16 111, i16 110, i16 116, i16 45, i16 62, i16 67, i16 111, i16 110, i16 116, i16 97, i16 105, i16 110, i16 101, i16 114, i16 65, i16 116, i16 108, i16 97, i16 115, i16 32, i16 61, i16 61, i16 32, i16 97, i16 116, i16 108, i16 97, i16 115, i16 41, i16 0], comdat, align 2
@"??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [23 x i16] [i16 115, i16 114, i16 99, i16 95, i16 116, i16 109, i16 112, i16 46, i16 68, i16 115, i16 116, i16 73, i16 110, i16 100, i16 101, i16 120, i16 32, i16 33, i16 61, i16 32, i16 45, i16 49, i16 0], comdat, align 2
@"??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAi?$AAs@" = linkonce_odr dso_local unnamed_addr constant [72 x i16] [i16 102, i16 111, i16 110, i16 116, i16 95, i16 111, i16 102, i16 102, i16 115, i16 101, i16 116, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 34, i16 70, i16 111, i16 110, i16 116, i16 68, i16 97, i16 116, i16 97, i16 32, i16 105, i16 115, i16 32, i16 105, i16 110, i16 99, i16 111, i16 114, i16 114, i16 101, i16 99, i16 116, i16 44, i16 32, i16 111, i16 114, i16 32, i16 70, i16 111, i16 110, i16 116, i16 78, i16 111, i16 32, i16 99, i16 97, i16 110, i16 110, i16 111, i16 116, i16 32, i16 98, i16 101, i16 32, i16 102, i16 111, i16 117, i16 110, i16 100, i16 46, i16 34, i16 0], comdat, align 2
@"??_C@_1DK@BFJIBNBB@?$AAs?$AAr?$AAc?$AA_?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAr?$AAc?$AA_?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$FL?$AA1?$AA?$FN?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [29 x i16] [i16 115, i16 114, i16 99, i16 95, i16 114, i16 97, i16 110, i16 103, i16 101, i16 91, i16 48, i16 93, i16 32, i16 60, i16 61, i16 32, i16 115, i16 114, i16 99, i16 95, i16 114, i16 97, i16 110, i16 103, i16 101, i16 91, i16 49, i16 93, i16 0], comdat, align 2
@"??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL?$AAi?$AAs?$AAt?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAr?$AAc?$AA_?$AAt@" = linkonce_odr dso_local unnamed_addr constant [47 x i16] [i16 115, i16 114, i16 99, i16 95, i16 116, i16 109, i16 112, i16 46, i16 71, i16 108, i16 121, i16 112, i16 104, i16 115, i16 76, i16 105, i16 115, i16 116, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 61, i16 61, i16 32, i16 115, i16 114, i16 99, i16 95, i16 116, i16 109, i16 112, i16 46, i16 71, i16 108, i16 121, i16 112, i16 104, i16 115, i16 67, i16 111, i16 117, i16 110, i16 116, i16 0], comdat, align 2
@"??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [25 x i16] [i16 103, i16 108, i16 121, i16 112, i16 104, i16 95, i16 105, i16 110, i16 100, i16 101, i16 120, i16 95, i16 105, i16 110, i16 95, i16 102, i16 111, i16 110, i16 116, i16 32, i16 33, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i16] [i16 105, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 105, i16 32, i16 60, i16 32, i16 83, i16 105, i16 122, i16 101, i16 0], comdat, align 2
@"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@" = linkonce_odr dso_local unnamed_addr constant [46 x i16] [i16 118, i16 101, i16 110, i16 100, i16 111, i16 114, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 64, i16 118, i16 49, i16 46, i16 56, i16 57, i16 46, i16 53, i16 47, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 47, i16 105, i16 109, i16 115, i16 116, i16 98, i16 95, i16 116, i16 114, i16 117, i16 101, i16 116, i16 121, i16 112, i16 101, i16 46, i16 104, i16 0], comdat, align 2
@"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [24 x i16] [i16 33, i16 40, i16 111, i16 32, i16 62, i16 32, i16 98, i16 45, i16 62, i16 115, i16 105, i16 122, i16 101, i16 32, i16 124, i16 124, i16 32, i16 111, i16 32, i16 60, i16 32, i16 48, i16 41, i16 0], comdat, align 2
@"??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [29 x i16] [i16 111, i16 102, i16 102, i16 115, i16 105, i16 122, i16 101, i16 32, i16 62, i16 61, i16 32, i16 49, i16 32, i16 38, i16 38, i16 32, i16 111, i16 102, i16 102, i16 115, i16 105, i16 122, i16 101, i16 32, i16 60, i16 61, i16 32, i16 52, i16 0], comdat, align 2
@"??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [17 x i16] [i16 110, i16 32, i16 62, i16 61, i16 32, i16 49, i16 32, i16 38, i16 38, i16 32, i16 110, i16 32, i16 60, i16 61, i16 32, i16 52, i16 0], comdat, align 2
@"??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [20 x i16] [i16 105, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 105, i16 32, i16 60, i16 32, i16 99, i16 111, i16 117, i16 110, i16 116, i16 0], comdat, align 2
@"??_C@_1FM@IDACNBHO@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@" = linkonce_odr dso_local unnamed_addr constant [46 x i16] [i16 118, i16 101, i16 110, i16 100, i16 111, i16 114, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 64, i16 118, i16 49, i16 46, i16 56, i16 57, i16 46, i16 53, i16 47, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 95, i16 105, i16 110, i16 116, i16 101, i16 114, i16 110, i16 97, i16 108, i16 46, i16 104, i16 0], comdat, align 2
@"??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DM?$AA?5?$AA5?$AA?$CJ?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [24 x i16] [i16 110, i16 32, i16 60, i16 32, i16 40, i16 83, i16 116, i16 111, i16 114, i16 97, i16 103, i16 101, i16 46, i16 83, i16 105, i16 122, i16 101, i16 32, i16 60, i16 60, i16 32, i16 53, i16 41, i16 0], comdat, align 2
@"??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [16 x i16] [i16 33, i16 105, i16 110, i16 102, i16 111, i16 45, i16 62, i16 99, i16 102, i16 102, i16 46, i16 115, i16 105, i16 122, i16 101, i16 0], comdat, align 2
@"??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_?$AAv?$AAe?$AAr?$AAt?$AAi?$AAc?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt@" = linkonce_odr dso_local unnamed_addr constant [50 x i16] [i16 111, i16 117, i16 116, i16 112, i16 117, i16 116, i16 95, i16 99, i16 116, i16 120, i16 46, i16 110, i16 117, i16 109, i16 95, i16 118, i16 101, i16 114, i16 116, i16 105, i16 99, i16 101, i16 115, i16 32, i16 61, i16 61, i16 32, i16 99, i16 111, i16 117, i16 110, i16 116, i16 95, i16 99, i16 116, i16 120, i16 46, i16 110, i16 117, i16 109, i16 95, i16 118, i16 101, i16 114, i16 116, i16 105, i16 99, i16 101, i16 115, i16 0], comdat, align 2
@"??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [13 x i16] [i16 122, i16 45, i16 62, i16 100, i16 105, i16 114, i16 101, i16 99, i16 116, i16 105, i16 111, i16 110, i16 0], comdat, align 2
@"??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy?$AA_?$AAt?$AAo?$AAp?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [20 x i16] [i16 122, i16 45, i16 62, i16 101, i16 121, i16 32, i16 62, i16 61, i16 32, i16 115, i16 99, i16 97, i16 110, i16 95, i16 121, i16 95, i16 116, i16 111, i16 112, i16 0], comdat, align 2
@"??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i16] [i16 122, i16 32, i16 33, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i16] [i16 101, i16 45, i16 62, i16 101, i16 121, i16 32, i16 62, i16 61, i16 32, i16 121, i16 95, i16 116, i16 111, i16 112, i16 0], comdat, align 2
@"??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_@" = linkonce_odr dso_local unnamed_addr constant [36 x i16] [i16 101, i16 45, i16 62, i16 115, i16 121, i16 32, i16 60, i16 61, i16 32, i16 121, i16 95, i16 98, i16 111, i16 116, i16 116, i16 111, i16 109, i16 32, i16 38, i16 38, i16 32, i16 101, i16 45, i16 62, i16 101, i16 121, i16 32, i16 62, i16 61, i16 32, i16 121, i16 95, i16 116, i16 111, i16 112, i16 0], comdat, align 2
@"??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i16] [i16 120, i16 32, i16 62, i16 61, i16 32, i16 48, i16 32, i16 38, i16 38, i16 32, i16 120, i16 32, i16 60, i16 32, i16 108, i16 101, i16 110, i16 0], comdat, align 2
@"??_C@_1BA@DNEJOLOH@?$AAd?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i16] [i16 100, i16 121, i16 32, i16 62, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1BA@KAEGAKJB@?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i16] [i16 100, i16 120, i16 32, i16 62, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA?4?$AA0?$AA1?$AAf?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i16] [i16 102, i16 97, i16 98, i16 115, i16 102, i16 40, i16 97, i16 114, i16 101, i16 97, i16 41, i16 32, i16 60, i16 61, i16 32, i16 49, i16 46, i16 48, i16 49, i16 102, i16 0], comdat, align 2
@"??_C@_1CI@LBLBFJLN@?$AAs?$AAy?$AA1?$AA?5?$AA?$DO?$AA?5?$AAy?$AA_?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?9?$AA0?$AA?4?$AA0?$AA1?$AAf?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [20 x i16] [i16 115, i16 121, i16 49, i16 32, i16 62, i16 32, i16 121, i16 95, i16 102, i16 105, i16 110, i16 97, i16 108, i16 45, i16 48, i16 46, i16 48, i16 49, i16 102, i16 0], comdat, align 2
@"??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i16] [i16 121, i16 48, i16 32, i16 60, i16 32, i16 121, i16 49, i16 0], comdat, align 2
@"??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i16] [i16 101, i16 45, i16 62, i16 115, i16 121, i16 32, i16 60, i16 61, i16 32, i16 101, i16 45, i16 62, i16 101, i16 121, i16 0], comdat, align 2
@"??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i16] [i16 120, i16 49, i16 32, i16 60, i16 61, i16 32, i16 120, i16 43, i16 49, i16 0], comdat, align 2
@"??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i16] [i16 120, i16 49, i16 32, i16 62, i16 61, i16 32, i16 120, i16 0], comdat, align 2
@"??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i16] [i16 120, i16 49, i16 32, i16 60, i16 61, i16 32, i16 120, i16 0], comdat, align 2
@"??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i16] [i16 120, i16 49, i16 32, i16 62, i16 61, i16 32, i16 120, i16 43, i16 49, i16 0], comdat, align 2
@"??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i16] [i16 120, i16 49, i16 32, i16 62, i16 61, i16 32, i16 120, i16 32, i16 38, i16 38, i16 32, i16 120, i16 49, i16 32, i16 60, i16 61, i16 32, i16 120, i16 43, i16 49, i16 0], comdat, align 2
@"??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5@" = linkonce_odr dso_local unnamed_addr constant [45 x i16] [i16 120, i16 48, i16 32, i16 62, i16 61, i16 32, i16 120, i16 32, i16 38, i16 38, i16 32, i16 120, i16 48, i16 32, i16 60, i16 61, i16 32, i16 120, i16 43, i16 49, i16 32, i16 38, i16 38, i16 32, i16 120, i16 49, i16 32, i16 62, i16 61, i16 32, i16 120, i16 32, i16 38, i16 38, i16 32, i16 120, i16 49, i16 32, i16 60, i16 61, i16 32, i16 120, i16 43, i16 49, i16 0], comdat, align 2
@"??_C@_1BO@IKHHJKG@?$AAt?$AAo?$AAp?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i16] [i16 116, i16 111, i16 112, i16 95, i16 119, i16 105, i16 100, i16 116, i16 104, i16 32, i16 62, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1CE@HFDPCECH@?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i16] [i16 98, i16 111, i16 116, i16 116, i16 111, i16 109, i16 95, i16 119, i16 105, i16 100, i16 116, i16 104, i16 32, i16 62, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i16] [i16 112, i16 105, i16 120, i16 101, i16 108, i16 115, i16 91, i16 105, i16 93, i16 32, i16 61, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe?$AA_?$AAi?$AAn?$AA_?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i16] [i16 112, i16 105, i16 120, i16 101, i16 108, i16 115, i16 91, i16 105, i16 42, i16 115, i16 116, i16 114, i16 105, i16 100, i16 101, i16 95, i16 105, i16 110, i16 95, i16 98, i16 121, i16 116, i16 101, i16 115, i16 93, i16 32, i16 61, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@" = linkonce_odr dso_local unnamed_addr constant [46 x i16] [i16 118, i16 101, i16 110, i16 100, i16 111, i16 114, i16 47, i16 105, i16 109, i16 103, i16 117, i16 105, i16 64, i16 118, i16 49, i16 46, i16 56, i16 57, i16 46, i16 53, i16 47, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 47, i16 105, i16 109, i16 115, i16 116, i16 98, i16 95, i16 114, i16 101, i16 99, i16 116, i16 112, i16 97, i16 99, i16 107, i16 46, i16 104, i16 0], comdat, align 2
@"??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [22 x i16] [i16 119, i16 105, i16 100, i16 116, i16 104, i16 32, i16 37, i16 32, i16 99, i16 45, i16 62, i16 97, i16 108, i16 105, i16 103, i16 110, i16 32, i16 61, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i16] [i16 120, i16 112, i16 111, i16 115, i16 32, i16 62, i16 61, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO?$AA?5?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5@" = linkonce_odr dso_local unnamed_addr constant [40 x i16] [i16 110, i16 111, i16 100, i16 101, i16 45, i16 62, i16 110, i16 101, i16 120, i16 116, i16 45, i16 62, i16 120, i16 32, i16 62, i16 32, i16 120, i16 112, i16 111, i16 115, i16 32, i16 38, i16 38, i16 32, i16 110, i16 111, i16 100, i16 101, i16 45, i16 62, i16 120, i16 32, i16 60, i16 61, i16 32, i16 120, i16 112, i16 111, i16 115, i16 0], comdat, align 2
@"??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i16] [i16 102, i16 105, i16 114, i16 115, i16 116, i16 45, i16 62, i16 120, i16 32, i16 60, i16 61, i16 32, i16 120, i16 48, i16 0], comdat, align 2
@"??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO?$AA?5?$AAx?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i16] [i16 110, i16 111, i16 100, i16 101, i16 45, i16 62, i16 110, i16 101, i16 120, i16 116, i16 45, i16 62, i16 120, i16 32, i16 62, i16 32, i16 120, i16 48, i16 0], comdat, align 2
@"??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [14 x i16] [i16 110, i16 111, i16 100, i16 101, i16 45, i16 62, i16 120, i16 32, i16 60, i16 61, i16 32, i16 120, i16 48, i16 0], comdat, align 2
@"??_C@_1BM@DDBMCGAE@?$AAr?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [14 x i16] [i16 114, i16 45, i16 62, i16 73, i16 115, i16 80, i16 97, i16 99, i16 107, i16 101, i16 100, i16 40, i16 41, i16 0], comdat, align 2
@"??_C@_1MA@PDHEAINP@?$AAr?$AA?9?$AA?$DO?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT?$AA_?$AAA?$AAT?$AAL?$AAA?$AAS?$AA_?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT?$AA_?$AAT@" = linkonce_odr dso_local unnamed_addr constant [96 x i16] [i16 114, i16 45, i16 62, i16 87, i16 105, i16 100, i16 116, i16 104, i16 32, i16 61, i16 61, i16 32, i16 70, i16 79, i16 78, i16 84, i16 95, i16 65, i16 84, i16 76, i16 65, i16 83, i16 95, i16 68, i16 69, i16 70, i16 65, i16 85, i16 76, i16 84, i16 95, i16 84, i16 69, i16 88, i16 95, i16 68, i16 65, i16 84, i16 65, i16 95, i16 87, i16 32, i16 42, i16 32, i16 50, i16 32, i16 43, i16 32, i16 49, i16 32, i16 38, i16 38, i16 32, i16 114, i16 45, i16 62, i16 72, i16 101, i16 105, i16 103, i16 104, i16 116, i16 32, i16 61, i16 61, i16 32, i16 70, i16 79, i16 78, i16 84, i16 95, i16 65, i16 84, i16 76, i16 65, i16 83, i16 95, i16 68, i16 69, i16 70, i16 65, i16 85, i16 76, i16 84, i16 95, i16 84, i16 69, i16 88, i16 95, i16 68, i16 65, i16 84, i16 65, i16 95, i16 72, i16 0], comdat, align 2
@FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS = internal unnamed_addr constant [3295 x i8] c"..-         -XXXXXXX-    X    -           X           -XXXXXXX          -          XXXXXXX-     XX          - XX       XX ..-         -X.....X-   X.X   -          X.X          -X.....X          -          X.....X-    X..X         -X..X     X..X---         -XXX.XXX-  X...X  -         X...X         -X....X           -           X....X-    X..X         -X...X   X...XX           -  X.X  - X.....X -        X.....X        -X...X            -            X...X-    X..X         - X...X X...X XX          -  X.X  -X.......X-       X.......X       -X..X.X           -           X.X..X-    X..X         -  X...X...X  X.X         -  X.X  -XXXX.XXXX-       XXXX.XXXX       -X.X X.X          -          X.X X.X-    X..XXX       -   X.....X   X..X        -  X.X  -   X.X   -          X.X          -XX   X.X         -         X.X   XX-    X..X..XXX    -    X...X    X...X       -  X.X  -   X.X   -    XX    X.X    XX    -      X.X        -        X.X      -    X..X..X..XX  -     X.X     X....X      -  X.X  -   X.X   -   X.X    X.X    X.X   -       X.X       -       X.X       -    X..X..X..X.X -    X...X    X.....X     -  X.X  -   X.X   -  X..X    X.X    X..X  -        X.X      -      X.X        -XXX X..X..X..X..X-   X.....X   X......X    -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -         X.X   XX-XX   X.X         -X..XX........X..X-  X...X...X  X.......X   -  X.X  -   X.X   -X.....................X-          X.X X.X-X.X X.X          -X...X...........X- X...X X...X X........X  -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -           X.X..X-X..X.X           - X..............X-X...X   X...XX.........X -XXX.XXX-   X.X   -  X..X    X.X    X..X  -            X...X-X...X            -  X.............X-X..X     X..XX..........X-X.....X-   X.X   -   X.X    X.X    X.X   -           X....X-X....X           -  X.............X- XX       XX X......XXXXX-XXXXXXX-   X.X   -    XX    X.X    XX    -          X.....X-X.....X          -   X............X--------------X...X..X    ---------   X.X   -          X.X          -          XXXXXXX-XXXXXXX          -   X...........X -             X..X X..X   -       -XXXX.XXXX-       XXXX.XXXX       -------------------------------------    X..........X -             X.X  X..X   -       -X.......X-       X.......X       -    XX           XX    -           -    X..........X -             XX    X..X  -       - X.....X -        X.....X        -   X.X           X.X   -           -     X........X  -                   X..X  -       -  X...X  -         X...X         -  X..X           X..X  -           -     X........X  -                    XX   -       -   X.X   -          X.X          - X...XXXXXXXXXXXXX...X -           -     XXXXXXXXXX  -             -------------       -    X    -           X           -X.....................X-           -------------------                                 ----------------------------------- X...XXXXXXXXXXXXX...X -                                                                                                 -  X..X           X..X  -                                                                                                 -   X.X           X.X   -                                                                                                 -    XX           XX    -                                           \00", align 16
@"??_C@_1EA@DBHHBIED@?$AAr?$AA?9?$AA?$DO?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AA?9?$AA?$DO?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [32 x i16] [i16 114, i16 45, i16 62, i16 87, i16 105, i16 100, i16 116, i16 104, i16 32, i16 61, i16 61, i16 32, i16 50, i16 32, i16 38, i16 38, i16 32, i16 114, i16 45, i16 62, i16 72, i16 101, i16 105, i16 103, i16 104, i16 116, i16 32, i16 61, i16 61, i16 32, i16 50, i16 0], comdat, align 2
@"??_C@_1HO@DLMJCKJA@?$AAp?$AAa?$AAd?$AA_?$AAl?$AAe?$AAf?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CL?$AA?5?$AAp?$AAa?$AAd?$AA_?$AAr?$AAi?$AAg?$AAh@" = linkonce_odr dso_local unnamed_addr constant [63 x i16] [i16 112, i16 97, i16 100, i16 95, i16 108, i16 101, i16 102, i16 116, i16 32, i16 43, i16 32, i16 108, i16 105, i16 110, i16 101, i16 95, i16 119, i16 105, i16 100, i16 116, i16 104, i16 32, i16 43, i16 32, i16 112, i16 97, i16 100, i16 95, i16 114, i16 105, i16 103, i16 104, i16 116, i16 32, i16 61, i16 61, i16 32, i16 114, i16 45, i16 62, i16 87, i16 105, i16 100, i16 116, i16 104, i16 32, i16 38, i16 38, i16 32, i16 121, i16 32, i16 60, i16 32, i16 114, i16 45, i16 62, i16 72, i16 101, i16 105, i16 103, i16 104, i16 116, i16 0], comdat, align 2
@stb__barrier_in_b = internal unnamed_addr global ptr null, align 8
@stb__barrier_out_e = internal unnamed_addr global ptr null, align 8
@stb__barrier_out_b = internal unnamed_addr global ptr null, align 8
@stb__dout = internal unnamed_addr global ptr null, align 8
@"??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAo?$AAl?$AAe?$AAn?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [27 x i16] [i16 115, i16 116, i16 98, i16 95, i16 95, i16 100, i16 111, i16 117, i16 116, i16 32, i16 61, i16 61, i16 32, i16 111, i16 117, i16 116, i16 112, i16 117, i16 116, i16 32, i16 43, i16 32, i16 111, i16 108, i16 101, i16 110, i16 0], comdat, align 2
@"??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAo?$AAl?$AAe?$AAn?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [27 x i16] [i16 115, i16 116, i16 98, i16 95, i16 95, i16 100, i16 111, i16 117, i16 116, i16 32, i16 60, i16 61, i16 32, i16 111, i16 117, i16 116, i16 112, i16 117, i16 116, i16 32, i16 43, i16 32, i16 111, i16 108, i16 101, i16 110, i16 0], comdat, align 2
@"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@" = linkonce_odr dso_local unnamed_addr constant [41 x i16] [i16 115, i16 116, i16 98, i16 95, i16 95, i16 100, i16 111, i16 117, i16 116, i16 32, i16 43, i16 32, i16 108, i16 101, i16 110, i16 103, i16 116, i16 104, i16 32, i16 60, i16 61, i16 32, i16 115, i16 116, i16 98, i16 95, i16 95, i16 98, i16 97, i16 114, i16 114, i16 105, i16 101, i16 114, i16 95, i16 111, i16 117, i16 116, i16 95, i16 101, i16 0], comdat, align 2
@proggy_clean_ttf_compressed_data_base85 = internal constant [11981 x i8] c"7])#######hV0qs'/###[),##/l:$#Q6>##5[n42>c-TH`->>#/e>11NNV=Bv(*:.F?uu#(gRU.o0XGH`$vhLG1hxt9?W`#,5LsCp#-i>.r$<$6pD>Lb';9Crc6tgXmKVeU2cD4Eo3R/2*>]b(MC;$jPfY.;h^`IWM9<Lh2TlS+f-s$o6Q<BWH`YiU.xfLq$N;$0iR/GX:U(jcW2p/W*q?-qmnUCI;jHSAiFWM.R*kU@C=GH?a9wp8f$e.-4^Qg1)Q-GL(lf(r/7GrRgwV%MS=C#`8ND>Qo#t'X#(v#Y9w0#1D$CIf;W'#pWUPXOuxXuU(H9M(1<q-UE31#^-V'8IRUo7Qf./L>=Ke$$'5F%)]0^#0X@U.a<r:QLtFsLcL6##lOj)#.Y5<-R&KgLwqJfLgN&;Q?gI^#DY2uLi@^rMl9t=cWq6##weg>$FBjVQTSDgEKnIS7EM9>ZY9w0#L;>>#Mx&4Mvt//L[MkA#W@lK.N'[0#7RL_&#w+F%HtG9M#XL`N&.,GM4Pg;-<nLENhvx>-VsM.M0rJfLH2eTM`*oJMHRC`NkfimM2J,W-jXS:)r0wK#@Fge$U>`w'N7G#$#fB#$E^$#:9:hk+eOe--6x)F7*E%?76%^GMHePW-Z5l'&GiF#$956:rS?dA#fiK:)Yr+`&#0j@'DbG&#^$PG.Ll+DNa<XCMKEV*N)LN/N*b=%Q6pia-Xg8I$<MR&,VdJe$<(7G;Ckl'&hF;;$<_=X(b.RS%%)###MPBuuE1V:v&cX&#2m#(&cV]`k9OhLMbn%s$G2,B$BfD3X*sp5#l,$R#]x_X1xKX%b5U*[r5iMfUo9U`N99hG)tm+/Us9pG)XPu`<0s-)WTt(gCRxIg(%6sfh=ktMKn3j)<6<b5Sk_/0(^]AaN#(p/L>&VZ>1i%h1S9u5o@YaaW$e+b<TWFn/Z:Oh(Cx2$lNEoN^e)#CFY@@I;BOQ*sRwZtZxRcU7uW6CXow0i(?$Q[cjOd[P4d)]>ROPOpxTO7Stwi1::iB1q)C_=dV26J;2,]7op$]uQr@_V7$q^%lQwtuHY]=DX,n3L#0PHDO4f9>dC@O>HBuKPpP*E,N+b3L#lpR/MrTEH.IAQk.a>D[.e;mc.x]Ip.PH^'/aqUO/$1WxLoW0[iLA<QT;5HKD+@qQ'NQ(3_PLhE48R.qAPSwQ0/WK?Z,[x?-J;jQTWA0X@KJ(_Y8N-:/M74:/-ZpKrUss?d#dZq]DAbkU*JqkL+nwX@@47`5>w=4h(9.`GCRUxHPeR`5Mjol(dUWxZa(>STrPkrJiWx`5U7F#.g*jrohGg`cg:lSTvEY/EV_7H4Q9[Z%cnv;JQYZ5q.l7Zeas:HOIZOB?G<Nald$qs]@]L<J7bR*>gv:[7MI2k).'2($5FNP&EQ(,)U]W]+fh18.vsai00);D3@4ku5P?DP8aJt+;qUM]=+b'8@;mViBKx0DE[-auGl8:PJ&Dj+M6OC]O^((##]`0i)drT;-7X`=-H3[igUnPG-NZlo.#k@h#=Ork$m>a>$-?Tm$UV(?#P6YY#'/###xe7q.73rI3*pP/$1>s9)W,JrM7SN]'/4C#v$U`0#V.[0>xQsH$fEmPMgY2u7Kh(G%siIfLSoS+MK2eTM$=5,M8p`A.;_R%#u[K#$x4AG8.kK/HSB==-'Ie/QTtG?-.*^N-4B/ZM_3YlQC7(p7q)&](`6_c)$/*JL(L-^(]$wIM`dPtOdGA,U3:w2M-0<q-]L_?^)1vw'.,MRsqVr.L;aN&#/EgJ)PBc[-f>+WomX2u7lqM2iEumMTcsF?-aT=Z-97UEnXglEn1K-bnEO`guFt(c%=;Am_Qs@jLooI&NX;]0#j4#F14;gl8-GQpgwhrq8'=l_f-b49'UOqkLu7-##oDY2L(te+Mch&gLYtJ,MEtJfLh'x'M=$CS-ZZ%P]8bZ>#S?YY#%Q&q'3^Fw&?D)UDNrocM3A76//oL?#h7gl85[qW/NDOk%16ij;+:1a'iNIdb-ou8.P*w,v5#EI$TWS>Pot-R*H'-SEpA:g)f+O$%%`kA#G=8RMmG1&O`>to8bC]T&$,n.LoO>29sp3dt-52U%VM#q7'DHpg+#Z9%H[K<L%a2E-grWVM3@2=-k22tL]4$##6We'8UJCKE[d_=%wI;'6X-GsLX4j^SgJ$##R*w,vP3wK#iiW&#*h^D&R?jp7+/u&#(AP##XU8c$fSYW-J95_-Dp[g9wcO&#M-h1OcJlc-*vpw0xUX&#OQFKNX@QI'IoPp7nb,QU//MQ&ZDkKP)X<WSVL(68uVl&#c'[0#(s1X&xm$Y%B7*K:eDA323j998GXbA#pwMs-jgD$9QISB-A_(aN4xoFM^@C58D0+Q+q3n0#3U1InDjF682-SjMXJK)(h$hxua_K]ul92%'BOU&#BRRh-slg8KDlr:%L71Ka:.A;%YULjDPmL<LYs8i#XwJOYaKPKc1h:'9Ke,g)b),78=I39B;xiY$bgGw-&.Zi9InXDuYa%G*f2Bq7mn9^#p1vv%#(Wi-;/Z5ho;#2:;%d&#x9v68C5g?ntX0X)pT`;%pB3q7mgGN)3%(P8nTd5L7GeA-GL@+%J3u2:(Yf>et`e;)f#Km8&+DC$I46>#Kr]]u-[=99tts1.qb#q72g1WJO81q+eN'03'eM>&1XxY-caEnOj%2n8)),?ILR5^.Ibn<-X-Mq7[a82Lq:F&#ce+S9wsCK*x`569E8ew'He]h:sI[2LM$[guka3ZRd6:t%IG:;$%YiJ:Nq=?eAw;/:nnDq0(CYcMpG)qLN4$##&J<j$UpK<Q4a1]MupW^-sj_$%[HK%'F####QRZJ::Y3EGl4'@%FkiAOg#p[##O`gukTfBHagL<LHw%q&OV0##F=6/:chIm0@eCP8X]:kFI%hl8hgO@RcBhS-@Qb$%+m=hPDLg*%K8ln(wcf3/'DW-$.lR?n[nCH-eXOONTJlh:.RYF%3'p6sq:UIMA945&^HFS87@$EP2iG<-lCO$%c`uKGD3rC$x0BL8aFn--`ke%#HMP'vh1/R&O_J9'um,.<tx[@%wsJk&bUT2`0uMv7gg#qp/ij.L56'hl;.s5CUrxjOM7-##.l+Au'A&O:-T72L]P`&=;ctp'XScX*rU.>-XTt,%OVU4)S1+R-#dg0/Nn?Ku1^0f$B*P:Rowwm-`0PKjYDDM'3]d39VZHEl4,.j']Pk-M.h^&:0FACm$maq-&sgw0t7/6(^xtk%LuH88Fj-ekm>GA#_>568x6(OFRl-IZp`&b,_P'$M<Jnq79VsJW/mWS*PUiq76;]/NM_>hLbxfc$mj`,O;&%W2m`Zh:/)Uetw:aJ%]K9h:TcF]u_-Sj9,VK3M.*'&0D[Ca]J9gp8,kAW]%(?A%R$f<->Zts'^kn=-^@c4%-pY6qI%J%1IGxfLU9CP8cbPlXv);C=b),<2mOvP8up,UVf3839acAWAW-W?#ao/^#%KYo8fRULNd2.>%m]UK:n%r$'sw]J;5pAoO_#2mO3n,'=H5(etHg*`+RLgv>=4U8guD$I%D:W>-r5V*%j*W:Kvej.Lp$<M-SGZ':+Q_k+uvOSLiEo(<aD/K<CCc`'Lx>'?;++O'>()jLR-^u68PHm8ZFWe+ej8h:9r6L*0//c&iH&R8pRbA#Kjm%upV1g:a_#Ur7FuA#(tRh#.Y5K+@?3<-8m0$PEn;J:rh6?I6uG<-`wMU'ircp0LaE_OtlMb&1#6T.#FDKu#1Lw%u%+GM+X'e?YLfjM[VO0MbuFp7;>Q&#WIo)0@F%q7c#4XAXN-U&VB<HFF*qL($/V,;(kXZejWO`<[5??ewY(*9=%wDc;,u<'9t3W-(H1th3+G]ucQ]kLs7df($/*JL]@*t7Bu_G3_7mp7<iaQjO@.kLg;x3B0lqp7Hf,^Ze7-##@/c58Mo(3;knp0%)A7?-W+eI'o8)b<nKnw'Ho8C=Y>pqB>0ie&jhZ[?iLR@@_AvA-iQC(=ksRZRVp7`.=+NpBC%rh&3]R:8XDmE5^V8O(x<<aG/1N$#FX$0V5Y6x'aErI3I$7x%E`v<-BY,)%-?Psf*l?%C3.mM(=/M0:JxG'?7WhH%o'a<-80g0NBxoO(GH<dM]n.+%q@jH?f.UsJ2Ggs&4<-e47&Kl+f//9@`b+?.TeN_&B8Ss?v;^Trk;f#YvJkl&w$]>-+k?'(<S:68tq*WoDfZu';mM?8X[ma8W%*`-=;D.(nc7/;)g:T1=^J$&BRV(-lTmNB6xqB[@0*o.erM*<SWF]u2=st-*(6v>^](H.aREZSi,#1:[IXaZFOm<-ui#qUq2$##Ri;u75OK#(RtaW-K-F`S+cF]uN`-KMQ%rP/Xri.LRcB##=YL3BgM/3MD?@f&1'BW-)Ju<L25gl8uhVm1hL$##*8###'A3/LkKW+(^rWX?5W_8g)a(m&K8P>#bmmWCMkk&#TR`C,5d>g)F;t,4:@_l8G/5h4vUd%&%950:VXD'QdWoY-F$BtUwmfe$YqL'8(PWX(P?^@Po3$##`MSs?DWBZ/S>+4%>fX,VWv/w'KD`LP5IbH;rTV>n3cEK8U#bX]l-/V+^lj3;vlMb&[5YQ8#pekX9JP3XUC72L,,?+Ni&co7ApnO*5NK,((W-i:$,kp'UDAO(G0Sq7MVjJsbIu)'Z,*[>br5fX^:FPAWr-m2KgL<LUN098kTF&#lvo58=/vjDo;.;)Ka*hLR#/k=rKbxuV`>Q_nN6'8uTG&#1T5g)uLv:873UpTLgH+#FgpH'_o1780Ph8KmxQJ8#H72L4@768@Tm&Qh4CB/5OvmA&,Q&QbUoi$a_%3M01H)4x7I^&KQVgtFnV+;[Pc>[m4k//,]1?#`VY[Jr*3&&slRfLiVZJ:]?=K3Sw=[$=uRB?3xk48@aeg<Z'<$#4H)6,>e0jT6'N#(q%.O=?2S]u*(m<-V8J'(1)G][68hW$5'q[GC&5j`TE?m'esFGNRM)j,ffZ?-qx8;->g4t*:CIP/[Qap7/9'#(1sao7w-.qNUdkJ)tCF&#B^;xGvn2r9FEPFFFcL@.iFNkTve$m%#QvQS8U@)2Z+3K:AKM5isZ88+dKQ)W6>J%CL<KE>`.d*(B`-n8D9oK<Up]c$X$(,)M8Zt7/[rdkqTgl-0cuGMv'?>-XV1q['-5k'cAZ69e;D_?$ZPP&s^+7])$*$#@QYi9,5P&#9r+$%CE=68>K8r0=dSC%%(@p7.m7jilQ02'0-VWAg<a/''3u.=4L$Y)6k/K:_[3=&jvL<L0C/2'v:^;-DIBW,B4E68:kZ;%?8(Q8BH=kO65BW?xSG&#@uU,DS*,?.+(o(#1vCS8#CHF>TlGW'b)Tq7VT9q^*^$$.:&N@@$&)WHtPm*5_rO0&e%K&#-30j(E4#'Zb.o/(Tpm$>K'f@[PvFl,hfINTNU6u'0pao7%XUp9]5.>%h`8_=VYbxuel.NTSsJfLacFu3B'lQSu/m6-Oqem8T+oE--$0a/k]uj9EwsG>%veR*hv^BFpQj:K'#SJ,sB-'#](j.Lg92rTw-*n%@/;39rrJF,l#qV%OrtBeC6/,;qB3ebNW[?,Hqj2L.1NP&GjUR=1D8QaS3Up&@*9wP?+lo7b?@%'k4`p0Z$22%K3+iCZj?XJN4Nm&+YF]u@-W$U%VEQ/,,>>#)D<h#`)h0:<Q6909ua+&VU%n2:cG3FJ-%@Bj-DgLr`Hw&HAKjKjseK</xKT*)B,N9X3]krc12t'pgTV(Lv-tL[xg_%=M_q7a^x?7Ubd>#%8cY#YZ?=,`Wdxu/ae&#w6)R89tI#6@s'(6Bf7a&?S=^ZI_kS&ai`&=tE72L_D,;^R)7[$s<Eh#c&)q.MXI%#v9ROa5FZO%sF7q7Nwb&#ptUJ:aqJe$Sl68%.D###EC><?-aF&#RNQv>o8lKN%5/$(vdfq7+ebA#u1p]ovUKW&Y%q]'>$1@-[xfn$7ZTp7mM,G,Ko7a&Gu%G[RMxJs[0MM%wci.LFDK)(<c`Q8N)jEIF*+?P2a8g%)$q]o2aH8C&<SibC/q,(e:v;-b#6[$NtDZ84Je2KNvB#$P5?tQ3nt(0d=j.LQf./Ll33+(;q3L-w=8dX$#WF&uIJ@-bfI>%:_i2B5CsR8&9Z&#=mPEnm0f`<&c)QL5uJ#%u%lJj+D-r;BoF&#4DoS97h5g)E#o:&S4weDF,9^Hoe`h*L+_a*NrLW-1pG_&2UdB86e%B/:=>)N4xeW.*wft-;$'58-ESqr<b?UI(_%@[P46>#U`'6AQ]m&6/`Z>#S?YY#Vc;r7U2&326d=w&H####?TZ`*4?&.MK?LP8Vxg>$[QXc%QJv92.(Db*B)gb*BM9dM*hJMAo*c&#b0v=Pjer]$gG&JXDf->'StvU7505l9$AFvgYRI^&<^b68?j#q9QX4SM'RO#&sL1IM.rJfLUAj221]d##DW=m83u5;'bYx,*Sl0hL(W;;$doB&O/TQ:(Z^xBdLjL<Lni;''X.`$#8+1GD:k$YUWsbn8ogh6rxZ2Z9]%nd+>V#*8U_72Lh+2Q8Cj0i:6hp&$C/:p(HK>T8Y[gHQ4`4)'$Ab(Nof%V'8hL&#<NEdtg(n'=S1A(Q1/I&4([%dM`,Iu'1:_hL>SfD07&6D<fp8dHM7/g+tlPN9J*rKaPct&?'uBCem^jn%9_K)<,C5K3s=5g&GmJb*[SYq7K;TRLGCsM-$$;S%:Y@r7AK0pprpL<Lrh,q7e/%KWK:50I^+m'vi`3?%Zp+<-d+$L-Sv:@.o19n$s0&39;kn;S%BSq*$3WoJSCLweV[aZ'MQIjO<7;X-X;&+dMLvu#^UsGEC9WEc[X(wI7#2.(F0jV*eZf<-Qv3J-c+J5AlrB#$p(H68LvEA'q3n0#m,[`*8Ft)FcYgEud]CWfm68,(aLA$@EFTgLXoBq/UPlp7:d[/;r_ix=:TF`S5H-b<LI&HY(K=h#)]Lk$K14lVfm:x$H<3^Ql<M`$OhapBnkup'D#L$Pb_`N*g]2e;X/Dtg,bsj&K#2[-:iYr'_wgH)NUIR8a1n#S?Yej'h8^58UbZd+^FKD*T@;6A7aQC[K8d-(v6GI$x:T<&'Gp5Uf>@M.*J:;$-rv29'M]8qMv-tLp,'886iaC=Hb*YJoKJ,(j%K=H`K.v9HggqBIiZu'QvBT.#=)0ukruV&.)3=(^1`o*Pj4<-<aN((^7('#Z0wK#5GX@7u][`*S^43933A4rl][`*O4CgLEl]v$1Q3AeF37dbXk,.)vj#x'd`;qgbQR%FW,2(?LO=s%Sc68%NP'##Aotl8x=BE#j1UD([3$M(]UI2LX3RpKN@;/#f'f/&_mt&F)XdF<9t4)Qa.*kTLwQ'(TTB9.xH'>#MJ+gLq9-##@HuZPN0]u:h7.T..G:;$/Usj(T7`Q8tT72LnYl<-qx8;-HV7Q-&Xdx%1a,hC=0u+HlsV>nuIQL-5<N?)NBS)QN*_I,?&)2'IM%L3I)X((e/dl2&8'<M:^#M*Q+[T.Xri.LYS3v%fF`68h;b-X[/En'CR.q7E)p'/kle2HM,u;^%OKC-N+Ll%F9CF<Nf'^#t2L,;27W:0O@6##U6W7:$rJfLWHj$#)woqBefIZ.PK<b*t7ed;p*_m;4ExK#h@&]>_>@kXQtMacfD.m-VAb8;IReM3$wf0''hra*so568'Ip&vRs849'MRYSp%:t:h5qSgwpEr$B>Q,;s(C#$)`svQuF$##-D,##,g68@2[T;.XSdN9Qe)rpt._K-#5wF)sP'##p#C0c%-Gb%hd+<-j'Ai*x&&HMkT]C'OSl##5RG[JXaHN;d'uA#x._U;.`PU@(Z3dt4r152@:v,'R.Sj'w#0<-;kPI)FfJ&#AYJ&#//)>-k=m=*XnK$>=)72L]0I%>.G690a:$##<,);?;72#?x9+d;^V'9;jY@;)br#q^YQpx:X#Te$Z^'=-=bGhLf:D6&bNwZ9-ZD#n^9HhLMr5G;']d&6'wYmTFmL<LD)F^%[tC'8;+9E#C$g%#5Y>q9wI>P(9mI[>kC-ekLC/R&CH+s'B;K-M6$EB%is00:+A4[7xks.LrNk0&E)wILYF@2L'0Nb$+pv<(2.768/FrY&h$^3i&@+G%JT'<-,v`3;_)I9M^AE]CN?Cl2AZg+%4iTpT3<n-&%H%b<FDj2M<hH=&Eh<2Len$b*aTX=-8QxN)k11IM1c^j%9s<L<NFSo)B?+<-(GxsF,^-Eh@$4dXhN$+#rxK8'je'D7k`e;)2pYwPA'_p9&@^18ml1^[@g4t*[JOa*[=Qp7(qJ_oOL^('7fB&Hq-:sf,sNj8xq^>$U4O]GKx'm9)b@p7YsvK3w^YR-CdQ*:Ir<($u&)#(&?L9Rg3H)4fiEp^iI9O8KnTj,]H?D*r7'M;PwZ9K0E^k&-cpI;.p/6_vwoFMV<->#%Xi.LxVnrU(4&8/P+:hLSKj$#U%]49t'I:rgMi'FL@a:0Y-uA[39',(vbma*hU%<-SRF`Tt:542R_VV$p@[p8DV[A,?1839FWdF<TddF<9Ah-6&9tWoDlh]&1SpGMq>Ti1O*H&#(AL8[_P%.M>v^-))qOT*F5Cq0`Ye%+$B6i:7@0IX<N+T+0MlMBPQ*Vj>SsD<U4JHY8kD2)2fU/M#$e.)T4,_=8hLim[&);?UkK'-x?'(:siIfL<$pFM`i<?%W(mGDHM%>iWP,##P`%/L<eXi:@Z9C.7o=@(pXdAO/NLQ8lPl+HPOQa8wD8=^GlPa8TKI1CjhsCTSLJM'/Wl>-S(qw%sf/@%#B6;/U7K]uZbi^Oc^2n<bhPmUkMw>%t<)'mEVE''n`WnJra$^TKvX5B>;_aSEK',(hwa0:i4G?.Bci.(X[?b*($,=-n<.Q%`(X=?+@Am*Js0&=3bh8K]mL<LoNs'6,'85`0?t/'_U59@]ddF<#LdF<eWdF<OuN/45rY<-L@&#+fm>69=Lb,OcZV/);TTm8VI;?%OtJ<(b4mq7M6:u?KRdF<gR@2L=FNU-<b[(9c/ML3m;Z[$oF3g)GAWqpARc=<ROu7cL5l;-[A]%/+fsd;l#SafT/f*W]0=O'$(Tb<[)*@e775R-:Yob%g*>l*:xP?Yb.5)%w_I?7uk5JC+FS(m#i'k.'a0i)9<7b'fs'59hq$*5Uhv##pi^8+hIEBF`nvo`;'l0.^S1<-wUK2/Coh58KKhLjM=SO*rfO`+qC`W-On.=AJ56>>i2@2LH6A:&5q`?9I3@@'04&p2/LVa*T-4<-i3;M9UvZd+N7>b*eIwg:CC)c<>nO&#<IGe;__.thjZl<%w(Wk2xmp4Q@I#I9,DF]u7-P=.-_:YJ]aS@V?6*C()dOp7:WL,b&3Rg/.cmM9&r^>$(>.Z-I&J(Q0Hd5Q%7Co-b`-c<N(6r@ip+AurK<m86QIth*#v;-OBqi+L7wDE-Ir8K['m+DDSLwK&/.?-V%U_%3:qKNu$_b*B-kp7NaD'QdWQPKYq[@>P)hI;*_F]u`Rb[.j8_Q/<&>uu+VsH$sM9TA%?)(vmJ80),P7E>)tjD%2L=-t#fK[%`v=Q8<FfNkgg^oIbah*#8/Qt$F&:K*-(N/'+1vMB,u()-a.VUU*#[e%gAAO(S>WlA2);Sa>gXm8YB`1d@K#n]76-a$U,mF<fX]idqd)<3,]J7JmW4`6]uks=4-72L(jEk+:bJ0M^q-8Dm_Z?0olP1C9Sa&H[d&c$ooQUj]Exd*3ZM@-WGW2%s',B-_M%>%Ul:#/'xoFM9QX-$.QN'>[%$Z$uF6pA6Ki2O5:8w*vP1<-1`[G,)-m#>0`P&#eb#.3i)rtB61(o'$?X3B</R90;eZ]%Ncq;-Tl]#F>2Qft^ae_5tKL9MUe9b*sLEQ95C&`=G?@Mj=wh*'3E>=-<)Gt*Iw)'QG:`@IwOf7&]1i'S01B+Ev/Nac#9S;=;YQpg_6U`*kVY39xK,[/6Aj7:'1Bm-_1EYfa1+o&o4hp7KN_Q(OlIo@S%;jVdn0'1<Vc52=u`3^o-n1'g4v58Hj&6_t7$##?M)c<$bgQ_'SY((-xkA#Y(,p'H9rIVY-b,'%bCPF7.J<Up^,(dU1VY*5#WkTU>h19w,WQhLI)3S#f$2(eb,jr*b;3Vw]*7NH%$c4Vs,eD9>XW8?N]o+(*pgC%/72LV-u<Hp,3@e^9UB1J+ak9-TN/mhKPg+AJYd$MlvAF_jCK*.O-^(63adMT->W%iewS8W6m2rtCpo'RS1R84=@paTKt)>=%&1[)*vp'u+x,VrwN;&]kuO9JDbg=pO$J*.jVe;u'm0dr9l,<*wMK*Oe=g8lV_KEBFkO'oU]^=[-792#ok,)i]lR8qQ2oA8wcRCZ^7w/Njh;?.stX?Q1>S1q4Bn$)K1<-rGdO'$Wr.Lc.CG)$/*JL4tNR/,SVO3,aUw'DJN:)Ss;wGn9A32ijw%FL+Z0Fn.U9;reSq)bmI32U==5ALuG&#Vf1398/pVo1*c-(aY168o<`JsSbk-,1N;$>0:OUas(3:8Z972LSfF8eb=c-;>SPw7.6hn3m`9^Xkn(r.qS[0;T%&Qc=+STRxX'q1BNk3&*eu2;&8q$&x>Q#Q7^Tf+6<(d%ZVmj2bDi%.3L2n+4W'$PiDDG)g,r%+?,$@?uou5tSe2aN_AQU*<h`e-GI7)?OK2A.d7_c)?wQ5AS@DL3r#7fSkgl6-++D:'A,uq7SvlB$pcpH'q3n0#_%dY#xCpr-l<F0NR@-##FEV6NTF6##$l84N1w?AO>'IAOURQ##V^Fv-XFbGM7Fl(N<3DhLGF%q.1rC$#:T__&Pi68%0xi_&[qFJ(77j_&JWoF.V735&T,[R*:xFR*K5>>#`bW-?4Ne_&6Ne_&6Ne_&n`kr-#GJcM6X;uM6X;uM(.a..^2TkL%oR(#;u.T%fAr%4tJ8&><1=GHZ_+m9/#H1F^R#SC#*N=BA9(D?v[UiFY>>^8p,KKF.W]L29uLkLlu/+4T<XoIB&hx=T1PcDaB&;HH+-AFr?(m9HZV)FKS8JCw;SD=6[^/DZUL`EUDf]GGlG&>w$)F./^n3+rlo+DB;5sIYGNk+i1t-69Jg--0pao7Sm#K)pdHW&;LuDNH@H>#/X-TI(;P>#,Gc>#0Su>#4`1?#8lC?#<xU?#@.i?#D:%@#HF7@#LRI@#P_[@#Tkn@#Xw*A#]-=A#a9OA#d<F&#*;G##.GY##2Sl##6`($#:l:$#>xL$#B.`$#F:r$#JF.%#NR@%#R_R%#Vke%#Zww%#_-4&#3^Rh%Sflr-k'MS.o?.5/sWel/wpEM0%3'/1)K^f1-d>G21&v(35>V`39V7A4=onx4A1OY5EI0;6Ibgr6M$HS7Q<)58C5w,;WoA*#[%T*#`1g*#d=#+#hI5+#lUG+#pbY+#tnl+#x$),#&1;,#*=M,#.I`,#2Ur,#6b.-#;w[H#iQtA#m^0B#qjBB#uvTB##-hB#'9$C#+E6C#/QHC#3^ZC#7jmC#;v)D#?,<D#C8ND#GDaD#KPsD#O]/E#g1A5#KA*1#gC17#MGd;#8(02#L-d3#rWM4#Hga1#,<w0#T.j<#O#'2#CYN1#qa^:#_4m3#o@/=#eG8=#t8J5#`+78#4uI-#m3B2#SB[8#Q0@8#i[*9#iOn8#1Nm;#^sN9#qh<9#:=x-#P;K2#$%X9#bC+.#Rg;<#mN=.#MTF.#RZO.#2?)4#Y#(/#[)1/#b;L/#dAU/#0Sv;#lY$0#n`-0#sf60#(F24#wrH0#%/e0#TmD<#%JSMFove:CTBEXI:<eh2g)B,3h2^G3i;#d3jD>)4kMYD4lVu`4m`:&5niUA5@(A5BA1]PBB:xlBCC=2CDLXMCEUtiCf&0g2'tN?PGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CP-qekC`.9kEg^+F$kwViFJTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5o,^<-28ZI'O?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xp;7q-#lLYI:xvD=#\00", align 16
@"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [9 x i16] [i16 83, i16 105, i16 122, i16 101, i16 32, i16 62, i16 32, i16 48, i16 0], comdat, align 2
@"??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@" = linkonce_odr dso_local unnamed_addr constant [17 x i16] [i16 110, i16 101, i16 119, i16 95, i16 115, i16 105, i16 122, i16 101, i16 32, i16 60, i16 61, i16 32, i16 83, i16 105, i16 122, i16 101, i16 0], comdat, align 2

; Function Attrs: uwtable
define dso_local void @"?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z"(ptr noundef %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call noundef nonnull align 4 dereferenceable(1068) ptr @"?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ"()
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi ptr [ %4, %3 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %7, align 4
  %8 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 1
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 1.000000e+00>, ptr %8, align 4
  %9 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 2
  store <4 x float> <float 0x3FAEB851E0000000, float 0x3FAEB851E0000000, float 0x3FAEB851E0000000, float 0x3FEE147AE0000000>, ptr %9, align 4
  %10 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 3
  %11 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %10, i8 0, i64 16, i1 false)
  store <4 x float> <float 0x3FB47AE140000000, float 0x3FB47AE140000000, float 0x3FB47AE140000000, float 0x3FEE147AE0000000>, ptr %11, align 4
  %12 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 5
  store <4 x float> <float 0x3FDB851EC0000000, float 0x3FDB851EC0000000, float 5.000000e-01, float 5.000000e-01>, ptr %12, align 4
  %13 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 6
  %14 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  store <4 x float> <float 0x3FC47AE140000000, float 0x3FD28F5C20000000, float 0x3FDEB851E0000000, float 0x3FE147AE20000000>, ptr %14, align 4
  %15 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 8
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD99999A0000000>, ptr %15, align 4
  %16 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 9
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE570A3E0000000>, ptr %16, align 4
  %17 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10
  %18 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10, i32 1
  %19 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10, i32 3
  store <4 x float> <float 0x3FA47AE140000000, float 0x3FA47AE140000000, float 0x3FA47AE140000000, float 1.000000e+00>, ptr %17, align 4
  %20 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11
  %21 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11, i32 1
  %22 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11, i32 3
  store <4 x float> <float 0x3FC47AE140000000, float 0x3FD28F5C20000000, float 0x3FDEB851E0000000, float 1.000000e+00>, ptr %20, align 4
  %23 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 12
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FE051EB80000000>, ptr %23, align 4
  %24 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 13
  store <4 x float> <float 0x3FC1EB8520000000, float 0x3FC1EB8520000000, float 0x3FC1EB8520000000, float 1.000000e+00>, ptr %24, align 4
  %25 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 14
  store <4 x float> <float 0x3F947AE140000000, float 0x3F947AE140000000, float 0x3F947AE140000000, float 0x3FE0F5C280000000>, ptr %25, align 4
  %26 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 15
  store <4 x float> <float 0x3FD3D70A40000000, float 0x3FD3D70A40000000, float 0x3FD3D70A40000000, float 1.000000e+00>, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 16
  store <4 x float> <float 0x3FDA3D70A0000000, float 0x3FDA3D70A0000000, float 0x3FDA3D70A0000000, float 1.000000e+00>, ptr %27, align 4
  %28 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 17
  store <4 x float> <float 0x3FE051EB80000000, float 0x3FE051EB80000000, float 0x3FE051EB80000000, float 1.000000e+00>, ptr %28, align 4
  %29 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 18
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %29, align 4
  %30 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 19
  store <4 x float> <float 0x3FCEB851E0000000, float 0x3FE0A3D700000000, float 0x3FEC28F5C0000000, float 1.000000e+00>, ptr %30, align 4
  %31 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 20
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %31, align 4
  %32 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 21
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD99999A0000000>, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 22
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %33, align 4
  %34 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 23
  store <4 x float> <float 0x3FAEB851E0000000, float 0x3FE0F5C280000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %34, align 4
  %35 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 24
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD3D70A40000000>, ptr %35, align 4
  %36 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 25
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE99999A0000000>, ptr %36, align 4
  %37 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 26
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %37, align 4
  %38 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 27
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %38, ptr noundef nonnull align 4 dereferenceable(16) %12, i64 16, i1 false), !tbaa.struct !5
  %39 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 28
  store <4 x float> <float 0x3FB99999A0000000, float 0x3FD99999A0000000, float 7.500000e-01, float 0x3FE8F5C280000000>, ptr %39, align 4
  %40 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 29
  store <4 x float> <float 0x3FB99999A0000000, float 0x3FD99999A0000000, float 7.500000e-01, float 1.000000e+00>, ptr %40, align 4
  %41 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 30
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FC99999A0000000>, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 31
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE570A3E0000000>, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 32
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FEE666660000000>, ptr %43, align 4
  %44 = load float, ptr %22, align 4, !tbaa !10, !noalias !12
  %45 = fmul fast float %44, 0x3FE99999A0000000
  %46 = fadd fast float %45, 0x3FAFBE7680000000
  %47 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33
  store float 0x3FC70A3D60000000, ptr %47, align 4, !tbaa.struct !5
  %48 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33, i32 1
  %49 = load <2 x float>, ptr %21, align 4, !tbaa !6, !noalias !12
  %50 = fadd fast <2 x float> %49, <float 0xBFE2E147A0000000, float 0xBFEF5C2900000000>
  %51 = fmul fast <2 x float> %50, <float 0x3FE99999A0000000, float 0x3FE99999A0000000>
  %52 = fadd fast <2 x float> %51, <float 0x3FE2E147A0000000, float 0x3FEF5C2900000000>
  store <2 x float> %52, ptr %48, align 4
  %53 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33, i32 3
  store float %46, ptr %53, align 4, !tbaa.struct !15
  %54 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 34
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %54, ptr noundef nonnull align 4 dereferenceable(16) %36, i64 16, i1 false), !tbaa.struct !5
  %55 = fmul fast float %44, 0x3FE3333340000000
  %56 = fadd fast float %55, 0x3FD9999980000000
  %57 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35
  store float 0x3FC9999980000000, ptr %57, align 4, !tbaa.struct !5
  %58 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35, i32 1
  %59 = fmul fast <2 x float> %50, <float 0x3FE3333340000000, float 0x3FE3333340000000>
  %60 = fadd fast <2 x float> %59, <float 0x3FE2E147A0000000, float 0x3FEF5C2900000000>
  store <2 x float> %60, ptr %58, align 4
  %61 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35, i32 3
  store float %56, ptr %61, align 4, !tbaa.struct !15
  %62 = load float, ptr %19, align 4, !tbaa !10, !noalias !16
  %63 = extractelement <2 x float> %52, i64 1
  %64 = extractelement <2 x float> %52, i64 0
  %65 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 36
  store float 0x3FB16872C0000000, ptr %65, align 4, !tbaa.struct !5
  %66 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 36, i32 1
  %67 = fsub fast float %62, %56
  %68 = fmul fast float %67, 0x3FD99999A0000000
  %69 = fadd fast float %68, %56
  %70 = load float, ptr %17, align 4, !tbaa !19, !noalias !20
  %71 = insertelement <4 x float> <float poison, float poison, float poison, float 0x3FBEB851C0000000>, float %64, i64 0
  %72 = insertelement <4 x float> %71, float %63, i64 1
  %73 = insertelement <4 x float> %72, float %46, i64 2
  %74 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 37, i32 1
  %75 = load <2 x float>, ptr %18, align 4, !tbaa !6, !noalias !16
  %76 = extractelement <2 x float> %75, i64 1
  %77 = insertelement <2 x float> poison, float %76, i64 0
  %78 = insertelement <2 x float> %77, float %62, i64 1
  %79 = insertelement <2 x float> poison, float %63, i64 0
  %80 = insertelement <2 x float> %79, float %46, i64 1
  %81 = fsub fast <2 x float> %78, %80
  %82 = fsub fast <2 x float> %75, %52
  %83 = fsub fast <2 x float> %75, %60
  %84 = fmul fast <2 x float> %83, <float 0x3FD99999A0000000, float 0x3FD99999A0000000>
  %85 = fadd fast <2 x float> %84, %60
  %86 = shufflevector <2 x float> %82, <2 x float> %81, <4 x i32> <i32 0, i32 2, i32 3, i32 undef>
  %87 = insertelement <4 x float> %86, float %70, i64 3
  %88 = fmul fast <4 x float> %87, <float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FD99999A0000000>
  %89 = fadd fast <4 x float> %88, %73
  store <4 x float> %89, ptr %66, align 4
  store <2 x float> %85, ptr %74, align 4
  %90 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 37, i32 3
  store float %69, ptr %90, align 4, !tbaa.struct !15
  %91 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 38
  store <4 x float> <float 0x3FE3851EC0000000, float 0x3FE3851EC0000000, float 0x3FE3851EC0000000, float 1.000000e+00>, ptr %91, align 4
  %92 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 39
  store <4 x float> <float 1.000000e+00, float 0x3FDB851EC0000000, float 0x3FD6666660000000, float 1.000000e+00>, ptr %92, align 4
  %93 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 40
  store <4 x float> <float 0x3FECCCCCC0000000, float 0x3FE6666660000000, float 0.000000e+00, float 1.000000e+00>, ptr %93, align 4
  %94 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 41
  store <4 x float> <float 1.000000e+00, float 0x3FE3333340000000, float 0.000000e+00, float 1.000000e+00>, ptr %94, align 4
  %95 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 42
  store <4 x float> <float 0x3FC851EB80000000, float 0x3FC851EB80000000, float 0x3FC99999A0000000, float 1.000000e+00>, ptr %95, align 4
  %96 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 43
  store <4 x float> <float 0x3FD3D70A40000000, float 0x3FD3D70A40000000, float 0x3FD6666660000000, float 1.000000e+00>, ptr %96, align 4
  %97 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 44
  store <4 x float> <float 0x3FCD70A3E0000000, float 0x3FCD70A3E0000000, float 2.500000e-01, float 1.000000e+00>, ptr %97, align 4
  %98 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 45
  %99 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 46
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %98, i8 0, i64 16, i1 false)
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FAEB851E0000000>, ptr %99, align 4
  %100 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 47
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD6666660000000>, ptr %100, align 4
  %101 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 48
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0x3FECCCCCC0000000>, ptr %101, align 4
  %102 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 49
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %102, align 4
  %103 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 50
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FE6666660000000>, ptr %103, align 4
  %104 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 51
  store <4 x float> <float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FC99999A0000000>, ptr %104, align 4
  %105 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 52
  store <4 x float> <float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FD6666660000000>, ptr %105, align 4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare dso_local noundef nonnull align 4 dereferenceable(1068) ptr @"?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ"() local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: uwtable
define dso_local void @"?StyleColorsClassic@ImGui@@YAXPEAUImGuiStyle@@@Z"(ptr noundef %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call noundef nonnull align 4 dereferenceable(1068) ptr @"?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ"()
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi ptr [ %4, %3 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43
  store <4 x float> <float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 1.000000e+00>, ptr %7, align 4
  %8 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 1
  store <4 x float> <float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE3333340000000, float 1.000000e+00>, ptr %8, align 4
  %9 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 2
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FEB333340000000>, ptr %9, align 4
  %10 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 3
  %11 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %10, i8 0, i64 16, i1 false)
  store <4 x float> <float 0x3FBC28F5C0000000, float 0x3FBC28F5C0000000, float 0x3FC1EB8520000000, float 0x3FED70A3E0000000>, ptr %11, align 4
  %12 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 5
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, ptr %12, align 4
  %13 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 6
  %14 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  store <4 x float> <float 0x3FDB851EC0000000, float 0x3FDB851EC0000000, float 0x3FDB851EC0000000, float 0x3FD8F5C280000000>, ptr %14, align 4
  %15 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 8
  store <4 x float> <float 0x3FDE147AE0000000, float 0x3FDE147AE0000000, float 0x3FE6147AE0000000, float 0x3FD99999A0000000>, ptr %15, align 4
  %16 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 9
  store <4 x float> <float 0x3FDAE147A0000000, float 0x3FDA3D70A0000000, float 0x3FE47AE140000000, float 0x3FE6147AE0000000>, ptr %16, align 4
  %17 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10
  %18 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10, i32 1
  %19 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10, i32 3
  store <4 x float> <float 0x3FD147AE20000000, float 0x3FD147AE20000000, float 0x3FE147AE20000000, float 0x3FEA8F5C20000000>, ptr %17, align 4
  %20 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11
  %21 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11, i32 1
  %22 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11, i32 3
  store <4 x float> <float 0x3FD47AE140000000, float 0x3FD47AE140000000, float 0x3FE428F5C0000000, float 0x3FEBD70A40000000>, ptr %20, align 4
  %23 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 12
  store <4 x float> <float 0x3FD99999A0000000, float 0x3FD99999A0000000, float 0x3FE99999A0000000, float 0x3FC99999A0000000>, ptr %23, align 4
  %24 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 13
  store <4 x float> <float 0x3FD99999A0000000, float 0x3FD99999A0000000, float 0x3FE19999A0000000, float 0x3FE99999A0000000>, ptr %24, align 4
  %25 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 14
  store <4 x float> <float 0x3FC99999A0000000, float 2.500000e-01, float 0x3FD3333340000000, float 0x3FE3333340000000>, ptr %25, align 4
  %26 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 15
  store <4 x float> <float 0x3FD99999A0000000, float 0x3FD99999A0000000, float 0x3FE99999A0000000, float 0x3FD3333340000000>, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 16
  store <4 x float> <float 0x3FD99999A0000000, float 0x3FD99999A0000000, float 0x3FE99999A0000000, float 0x3FD99999A0000000>, ptr %27, align 4
  %28 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 17
  store <4 x float> <float 0x3FDA3D70A0000000, float 0x3FD8F5C280000000, float 0x3FE99999A0000000, float 0x3FE3333340000000>, ptr %28, align 4
  %29 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 18
  store <4 x float> <float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 5.000000e-01>, ptr %29, align 4
  %30 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 19
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FD3333340000000>, ptr %30, align 4
  %31 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 20
  store <4 x float> <float 0x3FDA3D70A0000000, float 0x3FD8F5C280000000, float 0x3FE99999A0000000, float 0x3FE3333340000000>, ptr %31, align 4
  %32 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 21
  store <4 x float> <float 0x3FD6666660000000, float 0x3FD99999A0000000, float 0x3FE3851EC0000000, float 0x3FE3D70A40000000>, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 22
  store <4 x float> <float 0x3FD99999A0000000, float 0x3FDEB851E0000000, float 0x3FE6B851E0000000, float 0x3FE947AE20000000>, ptr %33, align 4
  %34 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 23
  store <4 x float> <float 0x3FDD70A3E0000000, float 0x3FE147AE20000000, float 0x3FE99999A0000000, float 1.000000e+00>, ptr %34, align 4
  %35 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 24
  store <4 x float> <float 0x3FD99999A0000000, float 0x3FD99999A0000000, float 0x3FECCCCCC0000000, float 0x3FDCCCCCC0000000>, ptr %35, align 4
  %36 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 25
  store <4 x float> <float 0x3FDCCCCCC0000000, float 0x3FDCCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FE99999A0000000>, ptr %36, align 4
  %37 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 26
  store <4 x float> <float 0x3FE0F5C280000000, float 0x3FE0F5C280000000, float 0x3FEBD70A40000000, float 0x3FE99999A0000000>, ptr %37, align 4
  %38 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 27
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 0x3FE3333340000000>, ptr %38, align 4
  %39 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 28
  store <4 x float> <float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE6666660000000, float 1.000000e+00>, ptr %39, align 4
  %40 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 29
  store <4 x float> <float 0x3FE6666660000000, float 0x3FE6666660000000, float 0x3FECCCCCC0000000, float 1.000000e+00>, ptr %40, align 4
  %41 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 30
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FB99999A0000000>, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 31
  store <4 x float> <float 0x3FE8F5C280000000, float 0x3FEA3D70A0000000, float 1.000000e+00, float 0x3FE3333340000000>, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 32
  store <4 x float> <float 0x3FE8F5C280000000, float 0x3FEA3D70A0000000, float 1.000000e+00, float 0x3FECCCCCC0000000>, ptr %43, align 4
  %44 = load float, ptr %22, align 4, !tbaa !10, !noalias !23
  %45 = fmul fast float %44, 0x3FE99999A0000000
  %46 = fadd fast float %45, 0x3FB70A3D80000000
  %47 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33
  store float 0x3FD5810620000000, ptr %47, align 4, !tbaa.struct !5
  %48 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33, i32 1
  %49 = load <2 x float>, ptr %21, align 4, !tbaa !6, !noalias !23
  %50 = fmul fast <2 x float> %49, <float 0x3FE99999A0000000, float 0x3FE99999A0000000>
  %51 = fadd fast <2 x float> %50, <float 0x3FB47AE100000000, float 0x3FC70A3D80000000>
  store <2 x float> %51, ptr %48, align 4
  %52 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33, i32 3
  store float %46, ptr %52, align 4, !tbaa.struct !15
  %53 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 34
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %53, ptr noundef nonnull align 4 dereferenceable(16) %36, i64 16, i1 false), !tbaa.struct !5
  %54 = extractelement <2 x float> %49, i64 1
  %55 = extractelement <2 x float> %49, i64 0
  %56 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35
  store float 0x3FD9DB22C0000000, ptr %56, align 4, !tbaa.struct !5
  %57 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35, i32 1
  %58 = load float, ptr %19, align 4, !tbaa !10, !noalias !26
  %59 = extractelement <2 x float> %51, i64 1
  %60 = extractelement <2 x float> %51, i64 0
  %61 = load float, ptr %17, align 4, !tbaa !19, !noalias !26
  %62 = insertelement <4 x float> poison, float %55, i64 0
  %63 = insertelement <4 x float> %62, float %54, i64 1
  %64 = insertelement <4 x float> %63, float %44, i64 2
  %65 = insertelement <4 x float> %64, float %61, i64 3
  %66 = fmul fast <4 x float> %65, <float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE99999A0000000>
  %67 = fadd fast <4 x float> %66, <float 0x3FCB22D0C0000000, float 0x3FD645A1C0000000, float 0x3FD47AE140000000, float 0x3FB1340500000000>
  store <4 x float> %67, ptr %57, align 4
  %68 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 36, i32 1
  %69 = extractelement <4 x float> %67, i64 2
  %70 = fsub fast float %58, %69
  %71 = fmul fast float %70, 0x3FD99999A0000000
  %72 = fadd fast float %71, %69
  %73 = insertelement <4 x float> <float poison, float poison, float poison, float 0x3FCF06F680000000>, float %60, i64 0
  %74 = insertelement <4 x float> %73, float %59, i64 1
  %75 = insertelement <4 x float> %74, float %46, i64 2
  %76 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 37, i32 1
  %77 = load <2 x float>, ptr %18, align 4, !tbaa !6, !noalias !26
  %78 = extractelement <2 x float> %77, i64 1
  %79 = insertelement <2 x float> poison, float %78, i64 0
  %80 = insertelement <2 x float> %79, float %58, i64 1
  %81 = insertelement <2 x float> poison, float %59, i64 0
  %82 = insertelement <2 x float> %81, float %46, i64 1
  %83 = fsub fast <2 x float> %80, %82
  %84 = fsub fast <2 x float> %77, %51
  %85 = shufflevector <4 x float> %67, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %86 = fsub fast <2 x float> %77, %85
  %87 = fmul fast <2 x float> %86, <float 0x3FD99999A0000000, float 0x3FD99999A0000000>
  %88 = fadd fast <2 x float> %87, %85
  %89 = shufflevector <2 x float> %84, <2 x float> %83, <4 x i32> <i32 0, i32 2, i32 3, i32 undef>
  %90 = insertelement <4 x float> %89, float %61, i64 3
  %91 = fmul fast <4 x float> %90, <float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FD99999A0000000>
  %92 = fadd fast <4 x float> %91, %75
  store <4 x float> %92, ptr %68, align 4
  store <2 x float> %88, ptr %76, align 4
  %93 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 37, i32 3
  store float %72, ptr %93, align 4, !tbaa.struct !15
  %94 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 38
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %94, align 4
  %95 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 39
  store <4 x float> <float 0x3FECCCCCC0000000, float 0x3FE6666660000000, float 0.000000e+00, float 1.000000e+00>, ptr %95, align 4
  %96 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 40
  store <4 x float> <float 0x3FECCCCCC0000000, float 0x3FE6666660000000, float 0.000000e+00, float 1.000000e+00>, ptr %96, align 4
  %97 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 41
  store <4 x float> <float 1.000000e+00, float 0x3FE3333340000000, float 0.000000e+00, float 1.000000e+00>, ptr %97, align 4
  %98 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 42
  store <4 x float> <float 0x3FD147AE20000000, float 0x3FD147AE20000000, float 0x3FD851EB80000000, float 1.000000e+00>, ptr %98, align 4
  %99 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 43
  store <4 x float> <float 0x3FD3D70A40000000, float 0x3FD3D70A40000000, float 0x3FDCCCCCC0000000, float 1.000000e+00>, ptr %99, align 4
  %100 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 44
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FD0A3D700000000, float 0x3FD1EB8520000000, float 1.000000e+00>, ptr %100, align 4
  %101 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 45
  %102 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 46
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %101, i8 0, i64 16, i1 false)
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FB1EB8520000000>, ptr %102, align 4
  %103 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 47
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0x3FD6666660000000>, ptr %103, align 4
  %104 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 48
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0x3FECCCCCC0000000>, ptr %104, align 4
  %105 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 49
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %105, ptr noundef nonnull align 4 dereferenceable(16) %36, i64 16, i1 false), !tbaa.struct !5
  %106 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 50
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FE6666660000000>, ptr %106, align 4
  %107 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 51
  store <4 x float> <float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FC99999A0000000>, ptr %107, align 4
  %108 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 52
  store <4 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FD6666660000000>, ptr %108, align 4
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?StyleColorsLight@ImGui@@YAXPEAUImGuiStyle@@@Z"(ptr noundef %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call noundef nonnull align 4 dereferenceable(1068) ptr @"?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ"()
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi ptr [ %4, %3 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, ptr %7, align 4
  %8 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 1
  store <4 x float> <float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE3333340000000, float 1.000000e+00>, ptr %8, align 4
  %9 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 2
  store <4 x float> <float 0x3FEE147AE0000000, float 0x3FEE147AE0000000, float 0x3FEE147AE0000000, float 1.000000e+00>, ptr %9, align 4
  %10 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 3
  %11 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %10, i8 0, i64 16, i1 false)
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEF5C2900000000>, ptr %11, align 4
  %12 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 5
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FD3333340000000>, ptr %12, align 4
  %13 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 6
  %14 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %14, align 4
  %15 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 8
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD99999A0000000>, ptr %15, align 4
  %16 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 9
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE570A3E0000000>, ptr %16, align 4
  %17 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10
  %18 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10, i32 1
  %19 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 10, i32 3
  store <4 x float> <float 0x3FEEB851E0000000, float 0x3FEEB851E0000000, float 0x3FEEB851E0000000, float 1.000000e+00>, ptr %17, align 4
  %20 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11
  %21 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11, i32 1
  %22 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 11, i32 3
  store <4 x float> <float 0x3FEA3D70A0000000, float 0x3FEA3D70A0000000, float 0x3FEA3D70A0000000, float 1.000000e+00>, ptr %20, align 4
  %23 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 12
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FE051EB80000000>, ptr %23, align 4
  %24 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 13
  store <4 x float> <float 0x3FEB851EC0000000, float 0x3FEB851EC0000000, float 0x3FEB851EC0000000, float 1.000000e+00>, ptr %24, align 4
  %25 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 14
  store <4 x float> <float 0x3FEF5C2900000000, float 0x3FEF5C2900000000, float 0x3FEF5C2900000000, float 0x3FE0F5C280000000>, ptr %25, align 4
  %26 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 15
  store <4 x float> <float 0x3FE6147AE0000000, float 0x3FE6147AE0000000, float 0x3FE6147AE0000000, float 0x3FE99999A0000000>, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 16
  store <4 x float> <float 0x3FDF5C2900000000, float 0x3FDF5C2900000000, float 0x3FDF5C2900000000, float 0x3FE99999A0000000>, ptr %27, align 4
  %28 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 17
  store <4 x float> <float 0x3FDF5C2900000000, float 0x3FDF5C2900000000, float 0x3FDF5C2900000000, float 1.000000e+00>, ptr %28, align 4
  %29 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 18
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %29, align 4
  %30 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 19
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE8F5C280000000>, ptr %30, align 4
  %31 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 20
  store <4 x float> <float 0x3FDD70A3E0000000, float 0x3FE147AE20000000, float 0x3FE99999A0000000, float 0x3FE3333340000000>, ptr %31, align 4
  %32 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 21
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD99999A0000000>, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 22
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %33, align 4
  %34 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 23
  store <4 x float> <float 0x3FAEB851E0000000, float 0x3FE0F5C280000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %34, align 4
  %35 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 24
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD3D70A40000000>, ptr %35, align 4
  %36 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 25
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE99999A0000000>, ptr %36, align 4
  %37 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 26
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %37, align 4
  %38 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 27
  store <4 x float> <float 0x3FD8F5C280000000, float 0x3FD8F5C280000000, float 0x3FD8F5C280000000, float 0x3FE3D70A40000000>, ptr %38, align 4
  %39 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 28
  store <4 x float> <float 0x3FC1EB8520000000, float 0x3FDC28F5C0000000, float 0x3FE99999A0000000, float 0x3FE8F5C280000000>, ptr %39, align 4
  %40 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 29
  store <4 x float> <float 0x3FC1EB8520000000, float 0x3FDC28F5C0000000, float 0x3FE99999A0000000, float 1.000000e+00>, ptr %40, align 4
  %41 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 30
  store <4 x float> <float 0x3FD6666660000000, float 0x3FD6666660000000, float 0x3FD6666660000000, float 0x3FC5C28F60000000>, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 31
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FE570A3E0000000>, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 32
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FEE666660000000>, ptr %43, align 4
  %44 = load float, ptr %22, align 4, !tbaa !10, !noalias !29
  %45 = fmul fast float %44, 0x3FECCCCCC0000000
  %46 = fadd fast float %45, 0x3F9FBE7800000000
  %47 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33
  store float 0x3FE872B020000000, ptr %47, align 4, !tbaa.struct !5
  %48 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33, i32 1
  %49 = load <2 x float>, ptr %21, align 4, !tbaa !6, !noalias !29
  %50 = fadd fast <2 x float> %49, <float 0xBFE2E147A0000000, float 0xBFEF5C2900000000>
  %51 = fmul fast <2 x float> %50, <float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000>
  %52 = fadd fast <2 x float> %51, <float 0x3FE2E147A0000000, float 0x3FEF5C2900000000>
  store <2 x float> %52, ptr %48, align 4
  %53 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 33, i32 3
  store float %46, ptr %53, align 4, !tbaa.struct !15
  %54 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 34
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %54, ptr noundef nonnull align 4 dereferenceable(16) %36, i64 16, i1 false), !tbaa.struct !5
  %55 = extractelement <2 x float> %50, i64 1
  %56 = extractelement <2 x float> %50, i64 0
  %57 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35
  store float 0x3FE3126EA0000000, ptr %57, align 4, !tbaa.struct !5
  %58 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 35, i32 1
  %59 = load float, ptr %19, align 4, !tbaa !10, !noalias !32
  %60 = extractelement <2 x float> %52, i64 1
  %61 = extractelement <2 x float> %52, i64 0
  %62 = load float, ptr %17, align 4, !tbaa !19, !noalias !32
  %63 = insertelement <4 x float> poison, float %56, i64 0
  %64 = insertelement <4 x float> %63, float %55, i64 1
  %65 = insertelement <4 x float> %64, float %44, i64 2
  %66 = insertelement <4 x float> %65, float %62, i64 3
  %67 = fmul fast <4 x float> %66, <float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE99999A0000000>
  %68 = fadd fast <4 x float> %67, <float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD9999980000000, float 0x3FC38EF300000000>
  store <4 x float> %68, ptr %58, align 4
  %69 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 36, i32 1
  %70 = extractelement <4 x float> %68, i64 2
  %71 = fsub fast float %59, %70
  %72 = fmul fast float %71, 0x3FD99999A0000000
  %73 = fadd fast float %72, %70
  %74 = insertelement <4 x float> <float poison, float poison, float poison, float 0x3FD6E2EB20000000>, float %61, i64 0
  %75 = insertelement <4 x float> %74, float %60, i64 1
  %76 = insertelement <4 x float> %75, float %46, i64 2
  %77 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 37, i32 1
  %78 = load <2 x float>, ptr %18, align 4, !tbaa !6, !noalias !32
  %79 = extractelement <2 x float> %78, i64 1
  %80 = insertelement <2 x float> poison, float %79, i64 0
  %81 = insertelement <2 x float> %80, float %59, i64 1
  %82 = insertelement <2 x float> poison, float %60, i64 0
  %83 = insertelement <2 x float> %82, float %46, i64 1
  %84 = fsub fast <2 x float> %81, %83
  %85 = fsub fast <2 x float> %78, %52
  %86 = shufflevector <4 x float> %68, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %87 = fsub fast <2 x float> %78, %86
  %88 = fmul fast <2 x float> %87, <float 0x3FD99999A0000000, float 0x3FD99999A0000000>
  %89 = fadd fast <2 x float> %88, %86
  %90 = shufflevector <2 x float> %85, <2 x float> %84, <4 x i32> <i32 0, i32 2, i32 3, i32 undef>
  %91 = insertelement <4 x float> %90, float %62, i64 3
  %92 = fmul fast <4 x float> %91, <float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 0x3FD99999A0000000>
  %93 = fadd fast <4 x float> %92, %76
  store <4 x float> %93, ptr %69, align 4
  store <2 x float> %89, ptr %77, align 4
  %94 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 37, i32 3
  store float %73, ptr %94, align 4, !tbaa.struct !15
  %95 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 38
  store <4 x float> <float 0x3FD8F5C280000000, float 0x3FD8F5C280000000, float 0x3FD8F5C280000000, float 1.000000e+00>, ptr %95, align 4
  %96 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 39
  store <4 x float> <float 1.000000e+00, float 0x3FDB851EC0000000, float 0x3FD6666660000000, float 1.000000e+00>, ptr %96, align 4
  %97 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 40
  store <4 x float> <float 0x3FECCCCCC0000000, float 0x3FE6666660000000, float 0.000000e+00, float 1.000000e+00>, ptr %97, align 4
  %98 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 41
  store <4 x float> <float 1.000000e+00, float 0x3FDCCCCCC0000000, float 0.000000e+00, float 1.000000e+00>, ptr %98, align 4
  %99 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 42
  store <4 x float> <float 0x3FE8F5C280000000, float 0x3FEBD70A40000000, float 0x3FEF5C2900000000, float 1.000000e+00>, ptr %99, align 4
  %100 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 43
  store <4 x float> <float 0x3FE23D70A0000000, float 0x3FE23D70A0000000, float 0x3FE47AE140000000, float 1.000000e+00>, ptr %100, align 4
  %101 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 44
  store <4 x float> <float 0x3FE5C28F60000000, float 0x3FE5C28F60000000, float 0x3FE7AE1480000000, float 1.000000e+00>, ptr %101, align 4
  %102 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 45
  %103 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 46
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %102, i8 0, i64 16, i1 false)
  store <4 x float> <float 0x3FD3333340000000, float 0x3FD3333340000000, float 0x3FD3333340000000, float 0x3FB70A3D80000000>, ptr %103, align 4
  %104 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 47
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FD6666660000000>, ptr %104, align 4
  %105 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 48
  store <4 x float> <float 0x3FD0A3D700000000, float 0x3FE2E147A0000000, float 0x3FEF5C2900000000, float 0x3FEE666660000000>, ptr %105, align 4
  %106 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 49
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %106, ptr noundef nonnull align 4 dereferenceable(16) %36, i64 16, i1 false), !tbaa.struct !5
  %107 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 50
  store <4 x float> <float 0x3FE6666660000000, float 0x3FE6666660000000, float 0x3FE6666660000000, float 0x3FE6666660000000>, ptr %107, align 4
  %108 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 51
  store <4 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>, ptr %108, align 4
  %109 = getelementptr inbounds %struct.ImGuiStyle, ptr %6, i64 0, i32 43, i64 52
  store <4 x float> <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FD6666660000000>, ptr %109, align 4
  ret void
}

; Function Attrs: nofree nosync nounwind memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local noundef nonnull ptr @"??0ImDrawListSharedData@@QEAA@XZ"(ptr noundef nonnull returned align 8 dereferenceable(528) %0) unnamed_addr #4 align 2 personality ptr @__CxxFrameHandler3 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(528) %0, i8 0, i64 528, i1 false)
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i64 [ 0, %1 ], [ %11, %2 ]
  %4 = phi <2 x i32> [ <i32 0, i32 1>, %1 ], [ %12, %2 ]
  %5 = sitofp <2 x i32> %4 to <2 x float>
  %6 = fmul fast <2 x float> %5, <float 0x3FC0C15240000000, float 0x3FC0C15240000000>
  %7 = tail call fast <2 x float> @llvm.sin.v2f32(<2 x float> %6)
  %8 = tail call fast <2 x float> @llvm.cos.v2f32(<2 x float> %6)
  %9 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %0, i64 0, i32 8, i64 %3
  %10 = shufflevector <2 x float> %8, <2 x float> %7, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %10, ptr %9, align 8
  %11 = add nuw i64 %3, 2
  %12 = add <2 x i32> %4, <i32 2, i32 2>
  %13 = icmp eq i64 %11, 48
  br i1 %13, label %14, label %2, !llvm.loop !35

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %0, i64 0, i32 9
  store float 0.000000e+00, ptr %15, align 8, !tbaa !39
  ret ptr %0
}

declare dso_local i32 @__CxxFrameHandler3(...)

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sin.f32(float) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.cos.f32(float) #6

; Function Attrs: mustprogress uwtable
define dso_local void @"?SetCircleTessellationMaxError@ImDrawListSharedData@@QEAAXM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(528) %0, float noundef %1) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %0, i64 0, i32 4
  %4 = load float, ptr %3, align 8, !tbaa !45
  %5 = fcmp fast oeq float %4, %1
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = fcmp fast ogt float %1, 0.000000e+00
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@JCMOPDC@?$AAm?$AAa?$AAx?$AA_?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 374)
  br label %9

9:                                                ; preds = %8, %6
  store float %1, ptr %3, align 8, !tbaa !45
  %10 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %0, i64 0, i32 10, i64 0
  store i8 48, ptr %10, align 4, !tbaa !46
  br label %14

11:                                               ; preds = %14
  %12 = fmul fast float %1, 0x407D30F080000000
  %13 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %0, i64 0, i32 9
  store float %12, ptr %13, align 8, !tbaa !39
  br label %34

14:                                               ; preds = %9, %14
  %15 = phi i64 [ 1, %9 ], [ %32, %14 ]
  %16 = trunc i64 %15 to i32
  %17 = sitofp i32 %16 to float
  %18 = tail call fast float @llvm.minnum.f32(float %1, float %17)
  %19 = fdiv fast float %18, %17
  %20 = fsub fast float 1.000000e+00, %19
  %21 = tail call fast float @acosf(float noundef %20) #38
  %22 = fdiv fast float 0x400921FB60000000, %21
  %23 = tail call fast float @llvm.ceil.f32(float %22)
  %24 = fptosi float %23 to i32
  %25 = add nsw i32 %24, 1
  %26 = sdiv i32 %25, 2
  %27 = shl nsw i32 %26, 1
  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 512)
  %29 = tail call i32 @llvm.smax.i32(i32 %28, i32 4)
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %0, i64 0, i32 10, i64 %15
  store i8 %30, ptr %31, align 1, !tbaa !46
  %32 = add nuw nsw i64 %15, 1
  %33 = icmp eq i64 %32, 64
  br i1 %33, label %11, label %14, !llvm.loop !47

34:                                               ; preds = %2, %11
  ret void
}

declare dso_local void @_wassert(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare dso_local float @acosf(float noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.ceil.f32(float) #6

; Function Attrs: uwtable
define dso_local void @"?_ResetForNewFrame@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 13
  %3 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 13, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !49
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @"?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z"(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull %0)
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !59
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %7
  %12 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %13 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !60
  %15 = icmp eq ptr %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = load i32, ptr %0, align 8, !tbaa !61
  %18 = sext i32 %17 to i64
  %19 = mul nsw i64 %18, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr nonnull align 8 %14, i64 %19, i1 false)
  %20 = load ptr, ptr %13, align 8, !tbaa !60
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %20)
  br label %21

21:                                               ; preds = %16, %11
  store ptr %12, ptr %13, align 8, !tbaa !60
  store i32 0, ptr %8, align 4, !tbaa !59
  br label %22

22:                                               ; preds = %7, %21
  store i32 0, ptr %0, align 8, !tbaa !61
  %23 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1
  %24 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 1
  %25 = load i32, ptr %24, align 4, !tbaa !62
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %38

27:                                               ; preds = %22
  %28 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !63
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = load i32, ptr %23, align 8, !tbaa !64
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %28, ptr nonnull align 2 %30, i64 %35, i1 false)
  %36 = load ptr, ptr %29, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %36)
  br label %37

37:                                               ; preds = %32, %27
  store ptr %28, ptr %29, align 8, !tbaa !63
  store i32 0, ptr %24, align 4, !tbaa !62
  br label %38

38:                                               ; preds = %22, %37
  store i32 0, ptr %23, align 8, !tbaa !64
  %39 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %40 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 1
  %41 = load i32, ptr %40, align 4, !tbaa !65
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %45 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !66
  %47 = icmp eq ptr %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = load i32, ptr %39, align 8, !tbaa !67
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %50, 20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %44, ptr nonnull align 4 %46, i64 %51, i1 false)
  %52 = load ptr, ptr %45, align 8, !tbaa !66
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %52)
  br label %53

53:                                               ; preds = %48, %43
  store ptr %44, ptr %45, align 8, !tbaa !66
  store i32 0, ptr %40, align 4, !tbaa !65
  br label %54

54:                                               ; preds = %38, %53
  store i32 0, ptr %39, align 8, !tbaa !67
  %55 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %56 = load ptr, ptr %55, align 8, !tbaa !68
  %57 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %56, i64 0, i32 6
  %58 = load i32, ptr %57, align 4, !tbaa !69
  %59 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  store i32 %58, ptr %59, align 8, !tbaa !70
  %60 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %60, i8 0, i64 32, i1 false)
  %61 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  store i32 0, ptr %61, align 4, !tbaa !71
  %62 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %63 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9
  %64 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %62, i8 0, i64 16, i1 false)
  %65 = load i32, ptr %64, align 4, !tbaa !72
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %67, label %78

67:                                               ; preds = %54
  %68 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %69 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !73
  %71 = icmp eq ptr %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  %73 = load i32, ptr %63, align 8, !tbaa !74
  %74 = sext i32 %73 to i64
  %75 = shl nsw i64 %74, 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %68, ptr nonnull align 4 %70, i64 %75, i1 false)
  %76 = load ptr, ptr %69, align 8, !tbaa !73
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %76)
  br label %77

77:                                               ; preds = %72, %67
  store ptr %68, ptr %69, align 8, !tbaa !73
  store i32 0, ptr %64, align 4, !tbaa !72
  br label %78

78:                                               ; preds = %54, %77
  store i32 0, ptr %63, align 8, !tbaa !74
  %79 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %80 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 1
  %81 = load i32, ptr %80, align 4, !tbaa !75
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %78
  %84 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %85 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !76
  %87 = icmp eq ptr %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = load i32, ptr %79, align 8, !tbaa !77
  %90 = sext i32 %89 to i64
  %91 = shl nsw i64 %90, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %84, ptr nonnull align 8 %86, i64 %91, i1 false)
  %92 = load ptr, ptr %85, align 8, !tbaa !76
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %92)
  br label %93

93:                                               ; preds = %88, %83
  store ptr %84, ptr %85, align 8, !tbaa !76
  store i32 0, ptr %80, align 4, !tbaa !75
  br label %94

94:                                               ; preds = %78, %93
  store i32 0, ptr %79, align 8, !tbaa !77
  %95 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %96 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %97 = load i32, ptr %96, align 4, !tbaa !78
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %94
  %100 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %101 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %102 = load ptr, ptr %101, align 8, !tbaa !79
  %103 = icmp eq ptr %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %99
  %105 = load i32, ptr %95, align 8, !tbaa !80
  %106 = sext i32 %105 to i64
  %107 = shl nsw i64 %106, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %100, ptr nonnull align 4 %102, i64 %107, i1 false)
  %108 = load ptr, ptr %101, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %108)
  br label %109

109:                                              ; preds = %104, %99
  store ptr %100, ptr %101, align 8, !tbaa !79
  store i32 0, ptr %96, align 4, !tbaa !78
  br label %110

110:                                              ; preds = %94, %109
  store i32 0, ptr %95, align 8, !tbaa !80
  store i32 0, ptr %2, align 8, !tbaa !81
  store i32 1, ptr %3, align 4, !tbaa !82
  %111 = load i32, ptr %0, align 8, !tbaa !61
  %112 = load i32, ptr %8, align 4, !tbaa !59
  %113 = icmp eq i32 %111, %112
  br i1 %113, label %114, label %138

114:                                              ; preds = %110
  %115 = add nsw i32 %111, 1
  %116 = icmp eq i32 %111, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = sdiv i32 %111, 2
  %119 = add nsw i32 %118, %111
  br label %120

120:                                              ; preds = %117, %114
  %121 = phi i32 [ %119, %117 ], [ 8, %114 ]
  %122 = tail call i32 @llvm.smax.i32(i32 %121, i32 %115)
  %123 = icmp slt i32 %111, %122
  br i1 %123, label %124, label %138

124:                                              ; preds = %120
  %125 = sext i32 %122 to i64
  %126 = mul nsw i64 %125, 56
  %127 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %126)
  %128 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %129 = load ptr, ptr %128, align 8, !tbaa !60
  %130 = icmp eq ptr %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %124
  %132 = load i32, ptr %0, align 8, !tbaa !61
  %133 = sext i32 %132 to i64
  %134 = mul nsw i64 %133, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %127, ptr nonnull align 8 %129, i64 %134, i1 false)
  %135 = load ptr, ptr %128, align 8, !tbaa !60
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %135)
  br label %136

136:                                              ; preds = %131, %124
  store ptr %127, ptr %128, align 8, !tbaa !60
  store i32 %122, ptr %8, align 4, !tbaa !59
  %137 = load i32, ptr %0, align 8, !tbaa !61
  br label %138

138:                                              ; preds = %110, %120, %136
  %139 = phi i32 [ %137, %136 ], [ %111, %120 ], [ %111, %110 ]
  %140 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %141 = load ptr, ptr %140, align 8, !tbaa !60
  %142 = sext i32 %139 to i64
  %143 = getelementptr inbounds %struct.ImDrawCmd, ptr %141, i64 %142
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %143, i8 0, i64 56, i1 false)
  %144 = load i32, ptr %0, align 8, !tbaa !61
  %145 = add nsw i32 %144, 1
  store i32 %145, ptr %0, align 8, !tbaa !61
  %146 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 14
  store float 1.000000e+00, ptr %146, align 8, !tbaa !83
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?Merge@ImDrawListSplitter@@QEAAXPEAUImDrawList@@@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(24) %0, ptr nocapture noundef %1) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !82
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %343, label %6

6:                                                ; preds = %2
  tail call void @"?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z"(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1, i32 noundef 0)
  %7 = load i32, ptr %1, align 8, !tbaa !84
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %39

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !85
  %12 = zext i32 %7 to i64
  %13 = add nuw nsw i64 %12, 4294967295
  %14 = and i64 %13, 4294967295
  %15 = getelementptr inbounds %struct.ImDrawCmd, ptr %11, i64 %14, i32 4
  %16 = load i32, ptr %15, align 8, !tbaa !86
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %39

18:                                               ; preds = %31
  %19 = add nsw i64 %26, 4294967294
  %20 = and i64 %19, 4294967295
  %21 = getelementptr inbounds %struct.ImDrawCmd, ptr %11, i64 %20, i32 4
  %22 = load i32, ptr %21, align 8, !tbaa !86
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %37

24:                                               ; preds = %9, %18
  %25 = phi i64 [ %20, %18 ], [ %14, %9 ]
  %26 = phi i64 [ %32, %18 ], [ %12, %9 ]
  %27 = phi i32 [ %33, %18 ], [ %7, %9 ]
  %28 = getelementptr inbounds %struct.ImDrawCmd, ptr %11, i64 %25, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !88
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %39

31:                                               ; preds = %24
  %32 = add nsw i64 %26, -1
  %33 = trunc i64 %32 to i32
  store i32 %33, ptr %1, align 8, !tbaa !61
  %34 = icmp sgt i64 %26, 1
  br i1 %34, label %18, label %35

35:                                               ; preds = %31
  %36 = trunc i64 %32 to i32
  br label %39

37:                                               ; preds = %18
  %38 = trunc i64 %32 to i32
  br label %39

39:                                               ; preds = %37, %24, %9, %35, %6
  %40 = phi i32 [ %7, %6 ], [ %36, %35 ], [ %7, %9 ], [ %38, %37 ], [ %27, %24 ]
  %41 = load i32, ptr %3, align 4, !tbaa !82
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %67

43:                                               ; preds = %39
  %44 = icmp sgt i32 %40, 0
  br i1 %44, label %45, label %58

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !60
  %48 = icmp eq ptr %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = add nsw i32 %40, -1
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.ImDrawCmd, ptr %47, i64 %51
  %53 = getelementptr inbounds %struct.ImDrawCmd, ptr %47, i64 %51, i32 3
  %54 = load i32, ptr %53, align 4, !tbaa !89
  %55 = getelementptr inbounds %struct.ImDrawCmd, ptr %47, i64 %51, i32 4
  %56 = load i32, ptr %55, align 8, !tbaa !86
  %57 = add i32 %56, %54
  br label %58

58:                                               ; preds = %43, %45, %49
  %59 = phi ptr [ %52, %49 ], [ null, %45 ], [ null, %43 ]
  %60 = phi i32 [ %57, %49 ], [ 0, %45 ], [ 0, %43 ]
  %61 = icmp ugt i32 %41, 1
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2
  %64 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  br label %147

65:                                               ; preds = %244
  %66 = load i32, ptr %1, align 8, !tbaa !84
  br label %67

67:                                               ; preds = %39, %65, %58
  %68 = phi i32 [ %40, %58 ], [ %66, %65 ], [ %40, %39 ]
  %69 = phi i32 [ 0, %58 ], [ %250, %65 ], [ 0, %39 ]
  %70 = phi i32 [ 0, %58 ], [ %249, %65 ], [ 0, %39 ]
  %71 = add nsw i32 %68, %70
  %72 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 1
  %73 = load i32, ptr %72, align 4, !tbaa !59
  %74 = icmp slt i32 %73, %71
  br i1 %74, label %75, label %97

75:                                               ; preds = %67
  %76 = icmp eq i32 %73, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %75
  %78 = sdiv i32 %73, 2
  %79 = add nsw i32 %78, %73
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi i32 [ %79, %77 ], [ 8, %75 ]
  %82 = tail call i32 @llvm.smax.i32(i32 %81, i32 %71)
  %83 = icmp slt i32 %73, %82
  br i1 %83, label %84, label %97

84:                                               ; preds = %80
  %85 = sext i32 %82 to i64
  %86 = mul nsw i64 %85, 56
  %87 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %86)
  %88 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !60
  %90 = icmp eq ptr %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %84
  %92 = load i32, ptr %1, align 8, !tbaa !61
  %93 = sext i32 %92 to i64
  %94 = mul nsw i64 %93, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %87, ptr nonnull align 8 %89, i64 %94, i1 false)
  %95 = load ptr, ptr %88, align 8, !tbaa !60
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %95)
  br label %96

96:                                               ; preds = %91, %84
  store ptr %87, ptr %88, align 8, !tbaa !60
  store i32 %82, ptr %72, align 4, !tbaa !59
  br label %97

97:                                               ; preds = %67, %80, %96
  store i32 %71, ptr %1, align 8, !tbaa !61
  %98 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1
  %99 = load i32, ptr %98, align 8, !tbaa !90
  %100 = add nsw i32 %99, %69
  %101 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1, i32 1
  %102 = load i32, ptr %101, align 4, !tbaa !62
  %103 = icmp slt i32 %102, %100
  br i1 %103, label %104, label %126

104:                                              ; preds = %97
  %105 = icmp eq i32 %102, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %104
  %107 = sdiv i32 %102, 2
  %108 = add nsw i32 %107, %102
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i32 [ %108, %106 ], [ 8, %104 ]
  %111 = tail call i32 @llvm.smax.i32(i32 %110, i32 %100)
  %112 = icmp slt i32 %102, %111
  br i1 %112, label %113, label %126

113:                                              ; preds = %109
  %114 = sext i32 %111 to i64
  %115 = shl nsw i64 %114, 1
  %116 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %115)
  %117 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !63
  %119 = icmp eq ptr %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %113
  %121 = load i32, ptr %98, align 8, !tbaa !64
  %122 = sext i32 %121 to i64
  %123 = shl nsw i64 %122, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %116, ptr nonnull align 2 %118, i64 %123, i1 false)
  %124 = load ptr, ptr %117, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %124)
  br label %125

125:                                              ; preds = %120, %113
  store ptr %116, ptr %117, align 8, !tbaa !63
  store i32 %111, ptr %101, align 4, !tbaa !62
  br label %126

126:                                              ; preds = %97, %109, %125
  store i32 %100, ptr %98, align 8, !tbaa !64
  %127 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 2
  %128 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1, i32 2
  %129 = load ptr, ptr %128, align 8, !tbaa !91
  %130 = sext i32 %100 to i64
  %131 = getelementptr inbounds i16, ptr %129, i64 %130
  %132 = sext i32 %69 to i64
  %133 = sub nsw i64 0, %132
  %134 = getelementptr inbounds i16, ptr %131, i64 %133
  %135 = load i32, ptr %3, align 4, !tbaa !82
  %136 = icmp sgt i32 %135, 1
  br i1 %136, label %137, label %271

137:                                              ; preds = %126
  %138 = load ptr, ptr %127, align 8, !tbaa !85
  %139 = load i32, ptr %1, align 8, !tbaa !84
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.ImDrawCmd, ptr %138, i64 %140
  %142 = sext i32 %70 to i64
  %143 = sub nsw i64 0, %142
  %144 = getelementptr inbounds %struct.ImDrawCmd, ptr %141, i64 %143
  %145 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2
  %146 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  br label %276

147:                                              ; preds = %62, %244
  %148 = phi i64 [ 1, %62 ], [ %251, %244 ]
  %149 = phi i32 [ 0, %62 ], [ %249, %244 ]
  %150 = phi i32 [ 0, %62 ], [ %250, %244 ]
  %151 = phi ptr [ %59, %62 ], [ %247, %244 ]
  %152 = phi i32 [ %60, %62 ], [ %248, %244 ]
  %153 = load i32, ptr %63, align 8
  %154 = sext i32 %153 to i64
  %155 = icmp slt i64 %148, %154
  br i1 %155, label %157, label %156

156:                                              ; preds = %147
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %157

157:                                              ; preds = %147, %156
  %158 = load ptr, ptr %64, align 8, !tbaa !92
  %159 = getelementptr inbounds %struct.ImDrawChannel, ptr %158, i64 %148
  %160 = load i32, ptr %159, align 8, !tbaa !93
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %162, label %229

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.ImVector.6, ptr %159, i64 0, i32 2
  %164 = load ptr, ptr %163, align 8, !tbaa !60
  %165 = add nsw i32 %160, -1
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %struct.ImDrawCmd, ptr %164, i64 %166, i32 4
  %168 = load i32, ptr %167, align 8, !tbaa !86
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %176

170:                                              ; preds = %162
  %171 = zext i32 %165 to i64
  %172 = getelementptr inbounds %struct.ImDrawCmd, ptr %164, i64 %171, i32 5
  %173 = load ptr, ptr %172, align 8, !tbaa !88
  %174 = icmp eq ptr %173, null
  br i1 %174, label %175, label %176

175:                                              ; preds = %170
  store i32 %165, ptr %159, align 8, !tbaa !61
  br label %176

176:                                              ; preds = %175, %170, %162
  %177 = phi i32 [ %165, %175 ], [ %160, %170 ], [ %160, %162 ]
  %178 = icmp ne i32 %177, 0
  %179 = icmp ne ptr %151, null
  %180 = select i1 %178, i1 %179, i1 false
  br i1 %180, label %181, label %208

181:                                              ; preds = %176
  %182 = getelementptr inbounds %struct.ImVector.6, ptr %159, i64 0, i32 2
  %183 = load ptr, ptr %182, align 8, !tbaa !60
  %184 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(28) %151, ptr noundef nonnull dereferenceable(28) %183, i64 noundef 28)
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %212

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.ImDrawCmd, ptr %151, i64 0, i32 5
  %188 = load ptr, ptr %187, align 8, !tbaa !88
  %189 = icmp eq ptr %188, null
  %190 = getelementptr inbounds %struct.ImDrawCmd, ptr %183, i64 0, i32 5
  %191 = load ptr, ptr %190, align 8
  %192 = icmp eq ptr %191, null
  %193 = select i1 %189, i1 %192, i1 false
  br i1 %193, label %194, label %212

194:                                              ; preds = %186
  %195 = getelementptr inbounds %struct.ImDrawCmd, ptr %183, i64 0, i32 4
  %196 = load i32, ptr %195, align 8, !tbaa !86
  %197 = getelementptr inbounds %struct.ImDrawCmd, ptr %151, i64 0, i32 4
  %198 = load i32, ptr %197, align 8, !tbaa !86
  %199 = add i32 %198, %196
  store i32 %199, ptr %197, align 8, !tbaa !86
  %200 = load i32, ptr %195, align 8, !tbaa !86
  %201 = add i32 %200, %152
  %202 = zext i32 %177 to i64
  %203 = getelementptr inbounds %struct.ImDrawCmd, ptr %183, i64 1
  %204 = mul nuw nsw i64 %202, 56
  %205 = add nsw i64 %204, -56
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %183, ptr nonnull align 8 %203, i64 %205, i1 false)
  %206 = load i32, ptr %159, align 8, !tbaa !61
  %207 = add nsw i32 %206, -1
  store i32 %207, ptr %159, align 8, !tbaa !61
  br label %208

208:                                              ; preds = %194, %176
  %209 = phi i32 [ %207, %194 ], [ %177, %176 ]
  %210 = phi i32 [ %201, %194 ], [ %152, %176 ]
  %211 = icmp sgt i32 %209, 0
  br i1 %211, label %212, label %229

212:                                              ; preds = %181, %186, %208
  %213 = phi i32 [ %210, %208 ], [ %152, %186 ], [ %152, %181 ]
  %214 = phi i32 [ %209, %208 ], [ %177, %186 ], [ %177, %181 ]
  %215 = getelementptr inbounds %struct.ImVector.6, ptr %159, i64 0, i32 2
  %216 = load ptr, ptr %215, align 8, !tbaa !60
  %217 = add nsw i32 %214, -1
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %struct.ImDrawCmd, ptr %216, i64 %218
  %220 = getelementptr inbounds %struct.ImDrawChannel, ptr %158, i64 %148, i32 1
  %221 = load i32, ptr %220, align 8, !tbaa !95
  %222 = getelementptr inbounds %struct.ImVector.6, ptr %159, i64 0, i32 2
  %223 = load ptr, ptr %222, align 8, !tbaa !96
  %224 = zext i32 %214 to i64
  %225 = and i64 %224, 1
  %226 = icmp eq i32 %214, 1
  br i1 %226, label %234, label %227

227:                                              ; preds = %212
  %228 = and i64 %224, 4294967294
  br label %255

229:                                              ; preds = %157, %208
  %230 = phi i32 [ %209, %208 ], [ %160, %157 ]
  %231 = phi i32 [ %210, %208 ], [ %152, %157 ]
  %232 = getelementptr inbounds %struct.ImDrawChannel, ptr %158, i64 %148, i32 1
  %233 = load i32, ptr %232, align 8, !tbaa !95
  br label %244

234:                                              ; preds = %255, %212
  %235 = phi i32 [ undef, %212 ], [ %267, %255 ]
  %236 = phi i64 [ 0, %212 ], [ %268, %255 ]
  %237 = phi i32 [ %213, %212 ], [ %267, %255 ]
  %238 = icmp eq i64 %225, 0
  br i1 %238, label %244, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %struct.ImDrawCmd, ptr %223, i64 %236, i32 3
  store i32 %237, ptr %240, align 4, !tbaa !89
  %241 = getelementptr inbounds %struct.ImDrawCmd, ptr %223, i64 %236, i32 4
  %242 = load i32, ptr %241, align 8, !tbaa !86
  %243 = add i32 %242, %237
  br label %244

244:                                              ; preds = %239, %234, %229
  %245 = phi i32 [ %233, %229 ], [ %221, %234 ], [ %221, %239 ]
  %246 = phi i32 [ %230, %229 ], [ %214, %234 ], [ %214, %239 ]
  %247 = phi ptr [ %151, %229 ], [ %219, %234 ], [ %219, %239 ]
  %248 = phi i32 [ %231, %229 ], [ %235, %234 ], [ %243, %239 ]
  %249 = add nsw i32 %246, %149
  %250 = add nsw i32 %245, %150
  %251 = add nuw nsw i64 %148, 1
  %252 = load i32, ptr %3, align 4, !tbaa !82
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %147, label %65, !llvm.loop !97

255:                                              ; preds = %255, %227
  %256 = phi i64 [ 0, %227 ], [ %268, %255 ]
  %257 = phi i32 [ %213, %227 ], [ %267, %255 ]
  %258 = phi i64 [ 0, %227 ], [ %269, %255 ]
  %259 = getelementptr inbounds %struct.ImDrawCmd, ptr %223, i64 %256, i32 3
  store i32 %257, ptr %259, align 4, !tbaa !89
  %260 = getelementptr inbounds %struct.ImDrawCmd, ptr %223, i64 %256, i32 4
  %261 = load i32, ptr %260, align 8, !tbaa !86
  %262 = add i32 %261, %257
  %263 = or i64 %256, 1
  %264 = getelementptr inbounds %struct.ImDrawCmd, ptr %223, i64 %263, i32 3
  store i32 %262, ptr %264, align 4, !tbaa !89
  %265 = getelementptr inbounds %struct.ImDrawCmd, ptr %223, i64 %263, i32 4
  %266 = load i32, ptr %265, align 8, !tbaa !86
  %267 = add i32 %266, %262
  %268 = add nuw nsw i64 %256, 2
  %269 = add i64 %258, 2
  %270 = icmp eq i64 %269, %228
  br i1 %270, label %234, label %255, !llvm.loop !98

271:                                              ; preds = %306, %126
  %272 = phi ptr [ %134, %126 ], [ %307, %306 ]
  %273 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 8
  store ptr %272, ptr %273, align 8, !tbaa !99
  %274 = load i32, ptr %1, align 8, !tbaa !84
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %324, label %312

276:                                              ; preds = %137, %306
  %277 = phi i64 [ 1, %137 ], [ %308, %306 ]
  %278 = phi ptr [ %134, %137 ], [ %307, %306 ]
  %279 = phi ptr [ %144, %137 ], [ %296, %306 ]
  %280 = load i32, ptr %145, align 8
  %281 = sext i32 %280 to i64
  %282 = icmp slt i64 %277, %281
  br i1 %282, label %284, label %283

283:                                              ; preds = %276
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %284

284:                                              ; preds = %276, %283
  %285 = load ptr, ptr %146, align 8, !tbaa !92
  %286 = getelementptr inbounds %struct.ImDrawChannel, ptr %285, i64 %277
  %287 = load i32, ptr %286, align 8, !tbaa !93
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %295, label %289

289:                                              ; preds = %284
  %290 = getelementptr inbounds %struct.ImVector.6, ptr %286, i64 0, i32 2
  %291 = load ptr, ptr %290, align 8, !tbaa !96
  %292 = sext i32 %287 to i64
  %293 = mul nsw i64 %292, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %279, ptr align 8 %291, i64 %293, i1 false)
  %294 = getelementptr inbounds %struct.ImDrawCmd, ptr %279, i64 %292
  br label %295

295:                                              ; preds = %289, %284
  %296 = phi ptr [ %294, %289 ], [ %279, %284 ]
  %297 = getelementptr inbounds %struct.ImDrawChannel, ptr %285, i64 %277, i32 1
  %298 = load i32, ptr %297, align 8, !tbaa !95
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %306, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %struct.ImDrawChannel, ptr %285, i64 %277, i32 1, i32 2
  %302 = load ptr, ptr %301, align 8, !tbaa !100
  %303 = sext i32 %298 to i64
  %304 = shl nsw i64 %303, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %278, ptr align 2 %302, i64 %304, i1 false)
  %305 = getelementptr inbounds i16, ptr %278, i64 %303
  br label %306

306:                                              ; preds = %300, %295
  %307 = phi ptr [ %305, %300 ], [ %278, %295 ]
  %308 = add nuw nsw i64 %277, 1
  %309 = load i32, ptr %3, align 4, !tbaa !82
  %310 = sext i32 %309 to i64
  %311 = icmp slt i64 %308, %310
  br i1 %311, label %276, label %271, !llvm.loop !101

312:                                              ; preds = %271
  %313 = icmp sgt i32 %274, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %312
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %315 = load i32, ptr %1, align 8, !tbaa !61
  br label %316

316:                                              ; preds = %312, %314
  %317 = phi i32 [ %315, %314 ], [ %274, %312 ]
  %318 = load ptr, ptr %127, align 8, !tbaa !60
  %319 = add nsw i32 %317, -1
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds %struct.ImDrawCmd, ptr %318, i64 %320, i32 5
  %322 = load ptr, ptr %321, align 8, !tbaa !88
  %323 = icmp eq ptr %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %316, %271
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %1)
  %325 = load ptr, ptr %127, align 8, !tbaa !85
  %326 = load i32, ptr %1, align 8, !tbaa !84
  %327 = add nsw i32 %326, -1
  %328 = sext i32 %327 to i64
  br label %329

329:                                              ; preds = %324, %316
  %330 = phi i64 [ %328, %324 ], [ %320, %316 ]
  %331 = phi ptr [ %325, %324 ], [ %318, %316 ]
  %332 = getelementptr inbounds %struct.ImDrawCmd, ptr %331, i64 %330
  %333 = getelementptr inbounds %struct.ImDrawCmd, ptr %331, i64 %330, i32 4
  %334 = load i32, ptr %333, align 8, !tbaa !86
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 12
  br i1 %335, label %337, label %338

337:                                              ; preds = %329
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %332, ptr noundef nonnull align 8 dereferenceable(28) %336, i64 28, i1 false)
  br label %342

338:                                              ; preds = %329
  %339 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(28) %332, ptr noundef nonnull dereferenceable(28) %336, i64 noundef 28)
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %342, label %341

341:                                              ; preds = %338
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %1)
  br label %342

342:                                              ; preds = %338, %341, %337
  store i32 1, ptr %3, align 4, !tbaa !82
  br label %343

343:                                              ; preds = %2, %342
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?_ClearFreeMemory@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !60
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 1
  store i32 0, ptr %6, align 4, !tbaa !59
  store i32 0, ptr %0, align 8, !tbaa !61
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3)
  store ptr null, ptr %2, align 8, !tbaa !60
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !63
  %10 = icmp eq ptr %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 1
  store i32 0, ptr %13, align 4, !tbaa !62
  store i32 0, ptr %12, align 8, !tbaa !64
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %9)
  store ptr null, ptr %8, align 8, !tbaa !63
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !66
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %20 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 1
  store i32 0, ptr %20, align 4, !tbaa !65
  store i32 0, ptr %19, align 8, !tbaa !67
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %16)
  store ptr null, ptr %15, align 8, !tbaa !66
  br label %21

21:                                               ; preds = %14, %18
  %22 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  store i32 0, ptr %22, align 8, !tbaa !70
  %23 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  store i32 0, ptr %23, align 4, !tbaa !71
  %24 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %25 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %24, i8 0, i64 16, i1 false)
  %26 = load ptr, ptr %25, align 8, !tbaa !73
  %27 = icmp eq ptr %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9
  %30 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 1
  store i32 0, ptr %30, align 4, !tbaa !72
  store i32 0, ptr %29, align 8, !tbaa !74
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %26)
  store ptr null, ptr %25, align 8, !tbaa !73
  br label %31

31:                                               ; preds = %21, %28
  %32 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !76
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %37 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 1
  store i32 0, ptr %37, align 4, !tbaa !75
  store i32 0, ptr %36, align 8, !tbaa !77
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %33)
  store ptr null, ptr %32, align 8, !tbaa !76
  br label %38

38:                                               ; preds = %31, %35
  %39 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !79
  %41 = icmp eq ptr %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %44 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  store i32 0, ptr %44, align 4, !tbaa !78
  store i32 0, ptr %43, align 8, !tbaa !80
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %40)
  store ptr null, ptr %39, align 8, !tbaa !79
  br label %45

45:                                               ; preds = %38, %42
  %46 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 13
  tail call void @"?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(24) %46)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(24) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !102
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  br label %15

7:                                                ; preds = %50, %1
  store i32 0, ptr %0, align 8, !tbaa !81
  %8 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 1
  store i32 1, ptr %8, align 4, !tbaa !82
  %9 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !92
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 1
  store i32 0, ptr %13, align 4, !tbaa !103
  store i32 0, ptr %2, align 8, !tbaa !104
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %10)
  store ptr null, ptr %9, align 8, !tbaa !92
  br label %14

14:                                               ; preds = %7, %12
  ret void

15:                                               ; preds = %5, %50
  %16 = phi i32 [ %3, %5 ], [ %52, %50 ]
  %17 = phi i64 [ 0, %5 ], [ %51, %50 ]
  %18 = load i32, ptr %0, align 8, !tbaa !81
  %19 = zext i32 %18 to i64
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = load ptr, ptr %6, align 8, !tbaa !92
  %23 = getelementptr inbounds %struct.ImDrawChannel, ptr %22, i64 %17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %23, i8 0, i64 32, i1 false)
  %24 = load i32, ptr %2, align 8
  br label %25

25:                                               ; preds = %21, %15
  %26 = phi i32 [ %24, %21 ], [ %16, %15 ]
  %27 = sext i32 %26 to i64
  %28 = icmp slt i64 %17, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %30

30:                                               ; preds = %25, %29
  %31 = load ptr, ptr %6, align 8, !tbaa !92
  %32 = getelementptr inbounds %struct.ImDrawChannel, ptr %31, i64 %17
  %33 = getelementptr inbounds %struct.ImVector.6, ptr %32, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !60
  %35 = icmp eq ptr %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.ImVector.6, ptr %32, i64 0, i32 1
  store i32 0, ptr %37, align 4, !tbaa !59
  store i32 0, ptr %32, align 8, !tbaa !61
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %34)
  store ptr null, ptr %33, align 8, !tbaa !60
  br label %38

38:                                               ; preds = %30, %36
  %39 = load i32, ptr %2, align 8
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %17, %40
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %43

43:                                               ; preds = %38, %42
  %44 = load ptr, ptr %6, align 8, !tbaa !92
  %45 = getelementptr inbounds %struct.ImDrawChannel, ptr %44, i64 %17, i32 1, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !63
  %47 = icmp eq ptr %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.ImDrawChannel, ptr %44, i64 %17, i32 1
  store <2 x i32> zeroinitializer, ptr %49, align 8, !tbaa !105
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %46)
  store ptr null, ptr %45, align 8, !tbaa !63
  br label %50

50:                                               ; preds = %43, %48
  %51 = add nuw nsw i64 %17, 1
  %52 = load i32, ptr %2, align 8, !tbaa !102
  %53 = sext i32 %52 to i64
  %54 = icmp slt i64 %51, %53
  br i1 %54, label %15, label %7, !llvm.loop !106
}

; Function Attrs: uwtable
define dso_local noundef ptr @"?CloneOutput@ImDrawList@@QEBAPEAU1@XZ"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(200) %0) local_unnamed_addr #0 align 2 personality ptr @__CxxFrameHandler3 {
  %2 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 200)
  %3 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !68
  %5 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(200) %2, i8 0, i64 200, i1 false)
  store ptr %4, ptr %5, align 8, !tbaa !68
  %6 = getelementptr inbounds %struct.ImVector.6, ptr %2, i64 0, i32 2
  %7 = load i32, ptr %0, align 8, !tbaa !61
  %8 = getelementptr inbounds %struct.ImVector.6, ptr %2, i64 0, i32 1
  %9 = icmp sgt i32 %7, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %1
  %11 = tail call i32 @llvm.smax.i32(i32 %7, i32 8)
  %12 = zext i32 %11 to i64
  %13 = mul nuw nsw i64 %12, 56
  %14 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %13)
  %15 = load ptr, ptr %6, align 8, !tbaa !60
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = load i32, ptr %2, align 8, !tbaa !61
  %19 = sext i32 %18 to i64
  %20 = mul nsw i64 %19, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr nonnull align 8 %15, i64 %20, i1 false)
  %21 = load ptr, ptr %6, align 8, !tbaa !60
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %21)
  br label %22

22:                                               ; preds = %17, %10
  store ptr %14, ptr %6, align 8, !tbaa !60
  store i32 %11, ptr %8, align 4, !tbaa !59
  br label %23

23:                                               ; preds = %22, %1
  %24 = phi ptr [ null, %1 ], [ %14, %22 ]
  store i32 %7, ptr %2, align 8, !tbaa !61
  %25 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !60
  %27 = icmp eq ptr %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = sext i32 %7 to i64
  %30 = mul nsw i64 %29, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr nonnull align 8 %26, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %23, %28
  %32 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1
  %33 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 1
  %34 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 1, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !63
  %36 = icmp eq ptr %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 1, i32 1
  store i32 0, ptr %38, align 4, !tbaa !62
  store i32 0, ptr %33, align 8, !tbaa !64
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %35)
  store ptr null, ptr %34, align 8, !tbaa !63
  br label %39

39:                                               ; preds = %37, %31
  %40 = load i32, ptr %32, align 8, !tbaa !64
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 1, i32 1
  %42 = load i32, ptr %41, align 4, !tbaa !62
  %43 = icmp slt i32 %42, %40
  br i1 %43, label %44, label %65

44:                                               ; preds = %39
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %44
  %47 = sdiv i32 %42, 2
  %48 = add nsw i32 %47, %42
  br label %49

49:                                               ; preds = %46, %44
  %50 = phi i32 [ %48, %46 ], [ 8, %44 ]
  %51 = tail call i32 @llvm.smax.i32(i32 %50, i32 %40)
  %52 = icmp slt i32 %42, %51
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = shl nsw i64 %54, 1
  %56 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %55)
  %57 = load ptr, ptr %34, align 8, !tbaa !63
  %58 = icmp eq ptr %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %53
  %60 = load i32, ptr %33, align 8, !tbaa !64
  %61 = sext i32 %60 to i64
  %62 = shl nsw i64 %61, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %56, ptr nonnull align 2 %57, i64 %62, i1 false)
  %63 = load ptr, ptr %34, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %63)
  br label %64

64:                                               ; preds = %59, %53
  store ptr %56, ptr %34, align 8, !tbaa !63
  store i32 %51, ptr %41, align 4, !tbaa !62
  br label %65

65:                                               ; preds = %64, %49, %39
  %66 = phi ptr [ null, %39 ], [ null, %49 ], [ %56, %64 ]
  store i32 %40, ptr %33, align 8, !tbaa !64
  %67 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !63
  %69 = icmp eq ptr %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = sext i32 %40 to i64
  %72 = shl nsw i64 %71, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %66, ptr nonnull align 2 %68, i64 %72, i1 false)
  br label %73

73:                                               ; preds = %65, %70
  %74 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %75 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 2
  %76 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 2, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !66
  %78 = icmp eq ptr %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 2, i32 1
  store i32 0, ptr %80, align 4, !tbaa !65
  store i32 0, ptr %75, align 8, !tbaa !67
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %77)
  store ptr null, ptr %76, align 8, !tbaa !66
  br label %81

81:                                               ; preds = %79, %73
  %82 = load i32, ptr %74, align 8, !tbaa !67
  %83 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 2, i32 1
  %84 = load i32, ptr %83, align 4, !tbaa !65
  %85 = icmp slt i32 %84, %82
  br i1 %85, label %86, label %107

86:                                               ; preds = %81
  %87 = icmp eq i32 %84, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = sdiv i32 %84, 2
  %90 = add nsw i32 %89, %84
  br label %91

91:                                               ; preds = %88, %86
  %92 = phi i32 [ %90, %88 ], [ 8, %86 ]
  %93 = tail call i32 @llvm.smax.i32(i32 %92, i32 %82)
  %94 = icmp slt i32 %84, %93
  br i1 %94, label %95, label %107

95:                                               ; preds = %91
  %96 = sext i32 %93 to i64
  %97 = mul nsw i64 %96, 20
  %98 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %97)
  %99 = load ptr, ptr %76, align 8, !tbaa !66
  %100 = icmp eq ptr %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = load i32, ptr %75, align 8, !tbaa !67
  %103 = sext i32 %102 to i64
  %104 = mul nsw i64 %103, 20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %98, ptr nonnull align 4 %99, i64 %104, i1 false)
  %105 = load ptr, ptr %76, align 8, !tbaa !66
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %105)
  br label %106

106:                                              ; preds = %101, %95
  store ptr %98, ptr %76, align 8, !tbaa !66
  store i32 %93, ptr %83, align 4, !tbaa !65
  br label %107

107:                                              ; preds = %106, %91, %81
  %108 = phi ptr [ null, %81 ], [ null, %91 ], [ %98, %106 ]
  store i32 %82, ptr %75, align 8, !tbaa !67
  %109 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !66
  %111 = icmp eq ptr %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = sext i32 %82 to i64
  %114 = mul nsw i64 %113, 20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %108, ptr nonnull align 4 %110, i64 %114, i1 false)
  br label %115

115:                                              ; preds = %107, %112
  %116 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  %117 = load i32, ptr %116, align 8, !tbaa !70
  %118 = getelementptr inbounds %struct.ImDrawList, ptr %2, i64 0, i32 3
  store i32 %117, ptr %118, align 8, !tbaa !70
  ret ptr %2
}

declare dso_local noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef) local_unnamed_addr #2

; Function Attrs: uwtable
define dso_local void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %3 = load <4 x float>, ptr %2, align 8
  %4 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !107
  %6 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 2
  %7 = load i32, ptr %6, align 8, !tbaa !108
  %8 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !90
  %10 = extractelement <4 x float> %3, i64 0
  %11 = extractelement <4 x float> %3, i64 2
  %12 = fcmp fast ugt float %10, %11
  %13 = extractelement <4 x float> %3, i64 1
  %14 = extractelement <4 x float> %3, i64 3
  %15 = fcmp fast ugt float %13, %14
  %16 = select i1 %12, i1 true, i1 %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LC@MAEAJCLC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4?$AAC?$AAl?$AAi?$AAp?$AAR?$AAe?$AAc?$AAt?$AA?4?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAd?$AAr?$AAa?$AAw?$AA_?$AAc?$AAm?$AAd?$AA?4@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 443)
  br label %18

18:                                               ; preds = %1, %17
  %19 = load i32, ptr %0, align 8, !tbaa !61
  %20 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !59
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %47

23:                                               ; preds = %18
  %24 = add nsw i32 %19, 1
  %25 = icmp eq i32 %19, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = sdiv i32 %19, 2
  %28 = add nsw i32 %27, %19
  br label %29

29:                                               ; preds = %26, %23
  %30 = phi i32 [ %28, %26 ], [ 8, %23 ]
  %31 = tail call i32 @llvm.smax.i32(i32 %30, i32 %24)
  %32 = icmp slt i32 %19, %31
  br i1 %32, label %33, label %47

33:                                               ; preds = %29
  %34 = sext i32 %31 to i64
  %35 = mul nsw i64 %34, 56
  %36 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %35)
  %37 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !60
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = load i32, ptr %0, align 8, !tbaa !61
  %42 = sext i32 %41 to i64
  %43 = mul nsw i64 %42, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr nonnull align 8 %38, i64 %43, i1 false)
  %44 = load ptr, ptr %37, align 8, !tbaa !60
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %44)
  br label %45

45:                                               ; preds = %40, %33
  store ptr %36, ptr %37, align 8, !tbaa !60
  store i32 %31, ptr %20, align 4, !tbaa !59
  %46 = load i32, ptr %0, align 8, !tbaa !61
  br label %47

47:                                               ; preds = %18, %29, %45
  %48 = phi i32 [ %46, %45 ], [ %19, %29 ], [ %19, %18 ]
  %49 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !60
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds %struct.ImDrawCmd, ptr %50, i64 %51
  store <4 x float> %3, ptr %52, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 16
  store ptr %5, ptr %53, align 8
  %54 = getelementptr inbounds i8, ptr %52, i64 24
  store i32 %7, ptr %54, align 8
  %55 = getelementptr inbounds i8, ptr %52, i64 28
  store i32 %9, ptr %55, align 4
  %56 = getelementptr inbounds i8, ptr %52, i64 32
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %56, i8 0, i64 24, i1 false)
  %57 = load i32, ptr %0, align 8, !tbaa !61
  %58 = add nsw i32 %57, 1
  store i32 %58, ptr %0, align 8, !tbaa !61
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?_PopUnusedDrawCmd@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !84
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %23

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !85
  %7 = zext i32 %2 to i64
  br label %8

8:                                                ; preds = %4, %19
  %9 = phi i64 [ %7, %4 ], [ %20, %19 ]
  %10 = add nuw i64 %9, 4294967295
  %11 = and i64 %10, 4294967295
  %12 = getelementptr inbounds %struct.ImDrawCmd, ptr %6, i64 %11, i32 4
  %13 = load i32, ptr %12, align 8, !tbaa !86
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.ImDrawCmd, ptr %6, i64 %11, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !88
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = add nsw i64 %9, -1
  %21 = trunc i64 %20 to i32
  store i32 %21, ptr %0, align 8, !tbaa !61
  %22 = icmp sgt i64 %9, 1
  br i1 %22, label %8, label %23

23:                                               ; preds = %19, %15, %8, %1
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddCallback@ImDrawList@@QEAAXP6AXPEBU1@PEBUImDrawCmd@@@ZPEAX@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !85
  %6 = load i32, ptr %0, align 8, !tbaa !84
  %7 = add nsw i32 %6, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.ImDrawCmd, ptr %5, i64 %8
  %10 = getelementptr inbounds %struct.ImDrawCmd, ptr %5, i64 %8, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !88
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 464)
  br label %14

14:                                               ; preds = %13, %3
  %15 = getelementptr inbounds %struct.ImDrawCmd, ptr %5, i64 %8, i32 4
  %16 = load i32, ptr %15, align 8, !tbaa !86
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  %19 = load ptr, ptr %4, align 8, !tbaa !85
  %20 = load i32, ptr %0, align 8, !tbaa !84
  %21 = add nsw i32 %20, -1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.ImDrawCmd, ptr %19, i64 %22
  br label %24

24:                                               ; preds = %18, %14
  %25 = phi ptr [ %23, %18 ], [ %9, %14 ]
  %26 = getelementptr inbounds %struct.ImDrawCmd, ptr %25, i64 0, i32 5
  store ptr %1, ptr %26, align 8, !tbaa !88
  %27 = getelementptr inbounds %struct.ImDrawCmd, ptr %25, i64 0, i32 6
  store ptr %2, ptr %27, align 8, !tbaa !109
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?_TryMergeDrawCmds@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !85
  %4 = load i32, ptr %0, align 8, !tbaa !84
  %5 = add nsw i32 %4, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6
  %8 = getelementptr inbounds %struct.ImDrawCmd, ptr %7, i64 -1
  %9 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(28) %7, ptr noundef nonnull dereferenceable(28) %8, i64 noundef 28)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %38

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.ImDrawCmd, ptr %8, i64 0, i32 3
  %13 = load i32, ptr %12, align 4, !tbaa !89
  %14 = getelementptr inbounds %struct.ImDrawCmd, ptr %8, i64 0, i32 4
  %15 = load i32, ptr %14, align 8, !tbaa !86
  %16 = add i32 %15, %13
  %17 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !89
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 5
  %22 = load ptr, ptr %21, align 8, !tbaa !88
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.ImDrawCmd, ptr %8, i64 0, i32 5
  %26 = load ptr, ptr %25, align 8, !tbaa !88
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %38

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 4
  %30 = load i32, ptr %29, align 8, !tbaa !86
  %31 = add i32 %30, %15
  store i32 %31, ptr %14, align 8, !tbaa !86
  %32 = icmp sgt i32 %4, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1823)
  %34 = load i32, ptr %0, align 8, !tbaa !61
  %35 = add nsw i32 %34, -1
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi i32 [ %5, %28 ], [ %35, %33 ]
  store i32 %37, ptr %0, align 8, !tbaa !61
  br label %38

38:                                               ; preds = %36, %24, %20, %11, %1
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #9

; Function Attrs: mustprogress uwtable
define dso_local void @"?_OnChangedClipRect@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !85
  %4 = load i32, ptr %0, align 8, !tbaa !84
  %5 = add nsw i32 %4, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6
  %8 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !86
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %13 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(16) %7, ptr noundef nonnull dereferenceable(16) %12, i64 noundef 16)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %51

16:                                               ; preds = %11, %1
  %17 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !88
  %19 = icmp eq ptr %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 507)
  %21 = load i32, ptr %8, align 8, !tbaa !86
  %22 = load i32, ptr %0, align 8
  br label %23

23:                                               ; preds = %20, %16
  %24 = phi i32 [ %22, %20 ], [ %4, %16 ]
  %25 = phi i32 [ %21, %20 ], [ %9, %16 ]
  %26 = getelementptr inbounds %struct.ImDrawCmd, ptr %7, i64 -1
  %27 = icmp eq i32 %25, 0
  %28 = icmp sgt i32 %24, 1
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %30, label %49

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %32 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(28) %31, ptr noundef nonnull dereferenceable(28) %26, i64 noundef 28)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.ImDrawCmd, ptr %26, i64 0, i32 3
  %36 = load i32, ptr %35, align 4, !tbaa !89
  %37 = getelementptr inbounds %struct.ImDrawCmd, ptr %26, i64 0, i32 4
  %38 = load i32, ptr %37, align 8, !tbaa !86
  %39 = add i32 %38, %36
  %40 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 3
  %41 = load i32, ptr %40, align 4, !tbaa !89
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %34
  %44 = getelementptr inbounds %struct.ImDrawCmd, ptr %26, i64 0, i32 5
  %45 = load ptr, ptr %44, align 8, !tbaa !88
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = add nsw i32 %24, -1
  store i32 %48, ptr %0, align 8, !tbaa !61
  br label %51

49:                                               ; preds = %43, %34, %30, %23
  %50 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(16) %50, i64 16, i1 false), !tbaa.struct !5
  br label %51

51:                                               ; preds = %47, %49, %15
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !85
  %4 = load i32, ptr %0, align 8, !tbaa !84
  %5 = add nsw i32 %4, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6
  %8 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !86
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !110
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !107
  %16 = icmp eq ptr %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %55

18:                                               ; preds = %11, %1
  %19 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 5
  %20 = load ptr, ptr %19, align 8, !tbaa !88
  %21 = icmp eq ptr %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 530)
  %23 = load i32, ptr %8, align 8, !tbaa !86
  %24 = load i32, ptr %0, align 8
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i32 [ %24, %22 ], [ %4, %18 ]
  %27 = phi i32 [ %23, %22 ], [ %9, %18 ]
  %28 = getelementptr inbounds %struct.ImDrawCmd, ptr %7, i64 -1
  %29 = icmp eq i32 %27, 0
  %30 = icmp sgt i32 %26, 1
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %32, label %51

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %34 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(28) %33, ptr noundef nonnull dereferenceable(28) %28, i64 noundef 28)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %51

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.ImDrawCmd, ptr %28, i64 0, i32 3
  %38 = load i32, ptr %37, align 4, !tbaa !89
  %39 = getelementptr inbounds %struct.ImDrawCmd, ptr %28, i64 0, i32 4
  %40 = load i32, ptr %39, align 8, !tbaa !86
  %41 = add i32 %40, %38
  %42 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 3
  %43 = load i32, ptr %42, align 4, !tbaa !89
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %36
  %46 = getelementptr inbounds %struct.ImDrawCmd, ptr %28, i64 0, i32 5
  %47 = load ptr, ptr %46, align 8, !tbaa !88
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = add nsw i32 %26, -1
  store i32 %50, ptr %0, align 8, !tbaa !61
  br label %55

51:                                               ; preds = %45, %36, %32, %25
  %52 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !107
  %54 = getelementptr inbounds %struct.ImDrawCmd, ptr %3, i64 %6, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !110
  br label %55

55:                                               ; preds = %49, %51, %17
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?_OnChangedVtxOffset@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  store i32 0, ptr %2, align 4, !tbaa !71
  %3 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !85
  %5 = load i32, ptr %0, align 8, !tbaa !84
  %6 = add nsw i32 %5, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.ImDrawCmd, ptr %4, i64 %7, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !86
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %21

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.ImDrawCmd, ptr %4, i64 %7, i32 5
  %14 = load ptr, ptr %13, align 8, !tbaa !88
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 555)
  br label %17

17:                                               ; preds = %16, %12
  %18 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 2
  %19 = load i32, ptr %18, align 8, !tbaa !108
  %20 = getelementptr inbounds %struct.ImDrawCmd, ptr %4, i64 %7, i32 2
  store i32 %19, ptr %20, align 8, !tbaa !111
  br label %21

21:                                               ; preds = %17, %11
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @"?_CalcCircleAutoSegmentCount@ImDrawList@@QEBAHM@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(200) %0, float noundef %1) local_unnamed_addr #10 align 2 {
  %3 = fadd fast float %1, 0x3FEFFFFDE0000000
  %4 = fptosi float %3 to i32
  %5 = icmp slt i32 %4, 64
  %6 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !68
  br i1 %5, label %8, label %13

8:                                                ; preds = %2
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %7, i64 0, i32 10, i64 %9
  %11 = load i8, ptr %10, align 1, !tbaa !46
  %12 = zext i8 %11 to i32
  br label %28

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %7, i64 0, i32 4
  %15 = load float, ptr %14, align 8, !tbaa !45
  %16 = tail call fast float @llvm.minnum.f32(float %15, float %1)
  %17 = fdiv fast float %16, %1
  %18 = fsub fast float 1.000000e+00, %17
  %19 = tail call fast float @acosf(float noundef %18) #38
  %20 = fdiv fast float 0x400921FB60000000, %19
  %21 = tail call fast float @llvm.ceil.f32(float %20)
  %22 = fptosi float %21 to i32
  %23 = add nsw i32 %22, 1
  %24 = sdiv i32 %23, 2
  %25 = shl nsw i32 %24, 1
  %26 = tail call i32 @llvm.smin.i32(i32 %25, i32 512)
  %27 = tail call i32 @llvm.smax.i32(i32 %26, i32 4)
  br label %28

28:                                               ; preds = %13, %8
  %29 = phi i32 [ %12, %8 ], [ %27, %13 ]
  ret i32 %29
}

; Function Attrs: uwtable
define dso_local void @"?PushClipRect@ImDrawList@@QEAAXAEBUImVec2@@0_N@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i1 noundef zeroext %3) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %6 = load float, ptr %5, align 4, !tbaa !112
  %7 = load float, ptr %2, align 4, !tbaa !113
  %8 = load <2 x float>, ptr %1, align 4, !tbaa !6
  br i1 %3, label %9, label %22

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 0, i32 2
  %12 = load float, ptr %11, align 8, !tbaa.struct !114
  %13 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 0, i32 3
  %14 = load float, ptr %13, align 4, !tbaa.struct !15
  %15 = load <2 x float>, ptr %10, align 8
  %16 = fcmp fast olt <2 x float> %8, %15
  %17 = select <2 x i1> %16, <2 x float> %15, <2 x float> %8
  %18 = fcmp fast ogt float %7, %12
  %19 = select i1 %18, float %12, float %7
  %20 = fcmp fast ogt float %6, %14
  br i1 %20, label %21, label %22

21:                                               ; preds = %9
  br label %22

22:                                               ; preds = %9, %21, %4
  %23 = phi float [ %14, %21 ], [ %6, %9 ], [ %6, %4 ]
  %24 = phi float [ %19, %21 ], [ %19, %9 ], [ %7, %4 ]
  %25 = phi <2 x float> [ %17, %21 ], [ %17, %9 ], [ %8, %4 ]
  %26 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9
  %27 = load i32, ptr %26, align 8, !tbaa !74
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 1
  %29 = load i32, ptr %28, align 4, !tbaa !72
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %55

31:                                               ; preds = %22
  %32 = add nsw i32 %27, 1
  %33 = icmp eq i32 %27, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = sdiv i32 %27, 2
  %36 = add nsw i32 %35, %27
  br label %37

37:                                               ; preds = %34, %31
  %38 = phi i32 [ %36, %34 ], [ 8, %31 ]
  %39 = tail call i32 @llvm.smax.i32(i32 %38, i32 %32)
  %40 = icmp slt i32 %27, %39
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = sext i32 %39 to i64
  %43 = shl nsw i64 %42, 4
  %44 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %43)
  %45 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !73
  %47 = icmp eq ptr %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  %49 = load i32, ptr %26, align 8, !tbaa !74
  %50 = sext i32 %49 to i64
  %51 = shl nsw i64 %50, 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %44, ptr nonnull align 4 %46, i64 %51, i1 false)
  %52 = load ptr, ptr %45, align 8, !tbaa !73
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %52)
  br label %53

53:                                               ; preds = %48, %41
  store ptr %44, ptr %45, align 8, !tbaa !73
  store i32 %39, ptr %28, align 4, !tbaa !72
  %54 = load i32, ptr %26, align 8, !tbaa !74
  br label %55

55:                                               ; preds = %22, %37, %53
  %56 = phi i32 [ %54, %53 ], [ %27, %37 ], [ %27, %22 ]
  %57 = extractelement <2 x float> %25, i64 1
  %58 = tail call fast float @llvm.maxnum.f32(float %57, float %23)
  %59 = extractelement <2 x float> %25, i64 0
  %60 = tail call fast float @llvm.maxnum.f32(float %59, float %24)
  %61 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !73
  %63 = sext i32 %56 to i64
  %64 = getelementptr inbounds %struct.ImVec4, ptr %62, i64 %63
  store <2 x float> %25, ptr %64, align 4
  %65 = getelementptr inbounds i8, ptr %64, i64 8
  store float %60, ptr %65, align 4
  %66 = getelementptr inbounds i8, ptr %64, i64 12
  store float %58, ptr %66, align 4
  %67 = load i32, ptr %26, align 8, !tbaa !74
  %68 = add nsw i32 %67, 1
  store i32 %68, ptr %26, align 8, !tbaa !74
  %69 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  store <2 x float> %25, ptr %69, align 8
  %70 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 0, i32 2
  store float %60, ptr %70, align 8, !tbaa.struct !114
  %71 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 0, i32 3
  store float %58, ptr %71, align 4, !tbaa.struct !15
  tail call void @"?_OnChangedClipRect@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?PushClipRectFullScreen@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.ImVec2, align 8
  %3 = alloca %struct.ImVec2, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #39
  %4 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %4, align 8, !tbaa !68
  %6 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %5, i64 0, i32 5, i32 2
  %7 = load <2 x float>, ptr %6, align 4, !tbaa !6
  store <2 x float> %7, ptr %2, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #39
  %8 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %5, i64 0, i32 5
  %9 = load <2 x float>, ptr %8, align 4, !tbaa !6
  store <2 x float> %9, ptr %3, align 8, !tbaa !6
  call void @"?PushClipRect@ImDrawList@@QEAAXAEBUImVec2@@0_N@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 4 dereferenceable(8) %2, i1 noundef zeroext false)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PopClipRect@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !74
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1823)
  %6 = load i32, ptr %2, align 8, !tbaa !74
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  %9 = add nsw i32 %8, -1
  store i32 %9, ptr %2, align 8, !tbaa !74
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !68
  %14 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %13, i64 0, i32 5
  br label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 9, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !115
  %18 = add nsw i32 %8, -2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.ImVec4, ptr %17, i64 %19
  br label %21

21:                                               ; preds = %15, %11
  %22 = phi ptr [ %14, %11 ], [ %20, %15 ]
  %23 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, ptr noundef nonnull align 4 dereferenceable(16) %22, i64 16, i1 false), !tbaa.struct !5
  tail call void @"?_OnChangedClipRect@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PushTextureID@ImDrawList@@QEAAXPEAX@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %1) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %4 = load i32, ptr %3, align 8, !tbaa !77
  %5 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !75
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = add nsw i32 %4, 1
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = sdiv i32 %4, 2
  %13 = add nsw i32 %12, %4
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi i32 [ %13, %11 ], [ 8, %8 ]
  %16 = tail call i32 @llvm.smax.i32(i32 %15, i32 %9)
  %17 = icmp slt i32 %4, %16
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = sext i32 %16 to i64
  %20 = shl nsw i64 %19, 3
  %21 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %20)
  %22 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !76
  %24 = icmp eq ptr %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %18
  %26 = load i32, ptr %3, align 8, !tbaa !77
  %27 = sext i32 %26 to i64
  %28 = shl nsw i64 %27, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr nonnull align 8 %23, i64 %28, i1 false)
  %29 = load ptr, ptr %22, align 8, !tbaa !76
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %29)
  br label %30

30:                                               ; preds = %25, %18
  store ptr %21, ptr %22, align 8, !tbaa !76
  store i32 %16, ptr %5, align 4, !tbaa !75
  %31 = load i32, ptr %3, align 8, !tbaa !77
  br label %32

32:                                               ; preds = %2, %14, %30
  %33 = phi i32 [ %31, %30 ], [ %4, %14 ], [ %4, %2 ]
  %34 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !76
  %36 = sext i32 %33 to i64
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  %38 = ptrtoint ptr %1 to i64
  store i64 %38, ptr %37, align 8
  %39 = load i32, ptr %3, align 8, !tbaa !77
  %40 = add nsw i32 %39, 1
  store i32 %40, ptr %3, align 8, !tbaa !77
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  store ptr %1, ptr %41, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PopTextureID@ImDrawList@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %3 = load i32, ptr %2, align 8, !tbaa !77
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1823)
  %6 = load i32, ptr %2, align 8, !tbaa !77
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  %9 = add nsw i32 %8, -1
  store i32 %9, ptr %2, align 8, !tbaa !77
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !116
  %14 = add nsw i32 %8, -2
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds ptr, ptr %13, i64 %15
  %17 = load ptr, ptr %16, align 8, !tbaa !117
  br label %18

18:                                               ; preds = %7, %11
  %19 = phi ptr [ %17, %11 ], [ null, %7 ]
  %20 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %5 = load i32, ptr %4, align 4, !tbaa !71
  %6 = add i32 %5, %2
  %7 = icmp ugt i32 %6, 65535
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 8, !tbaa !70
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !118
  %16 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 2
  store i32 %15, ptr %16, align 8, !tbaa !108
  store i32 0, ptr %4, align 4, !tbaa !71
  %17 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !85
  %19 = load i32, ptr %0, align 8, !tbaa !84
  %20 = add nsw i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.ImDrawCmd, ptr %18, i64 %21, i32 4
  %23 = load i32, ptr %22, align 8, !tbaa !86
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %13
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %35

26:                                               ; preds = %13
  %27 = getelementptr inbounds %struct.ImDrawCmd, ptr %18, i64 %21, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !88
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DI@FGNNAPCK@?$AAc?$AAu?$AAr?$AAr?$AA_?$AAc?$AAm?$AAd?$AA?9?$AA?$DO?$AAU?$AAs?$AAe?$AAr?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 555)
  %31 = load i32, ptr %16, align 8, !tbaa !108
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi i32 [ %31, %30 ], [ %15, %26 ]
  %34 = getelementptr inbounds %struct.ImDrawCmd, ptr %18, i64 %21, i32 2
  store i32 %33, ptr %34, align 8, !tbaa !111
  br label %35

35:                                               ; preds = %32, %25, %8, %3
  %36 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !85
  %38 = load i32, ptr %0, align 8, !tbaa !84
  %39 = add nsw i32 %38, -1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.ImDrawCmd, ptr %37, i64 %40, i32 4
  %42 = load i32, ptr %41, align 8, !tbaa !86
  %43 = add i32 %42, %1
  store i32 %43, ptr %41, align 8, !tbaa !86
  %44 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %45 = load i32, ptr %44, align 8, !tbaa !118
  %46 = add nsw i32 %45, %2
  %47 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 1
  %48 = load i32, ptr %47, align 4, !tbaa !65
  %49 = icmp slt i32 %48, %46
  br i1 %49, label %50, label %72

50:                                               ; preds = %35
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %50
  %53 = sdiv i32 %48, 2
  %54 = add nsw i32 %53, %48
  br label %55

55:                                               ; preds = %52, %50
  %56 = phi i32 [ %54, %52 ], [ 8, %50 ]
  %57 = tail call i32 @llvm.smax.i32(i32 %56, i32 %46)
  %58 = icmp slt i32 %48, %57
  br i1 %58, label %59, label %72

59:                                               ; preds = %55
  %60 = sext i32 %57 to i64
  %61 = mul nsw i64 %60, 20
  %62 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %61)
  %63 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !66
  %65 = icmp eq ptr %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %59
  %67 = load i32, ptr %44, align 8, !tbaa !67
  %68 = sext i32 %67 to i64
  %69 = mul nsw i64 %68, 20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %62, ptr nonnull align 4 %64, i64 %69, i1 false)
  %70 = load ptr, ptr %63, align 8, !tbaa !66
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %70)
  br label %71

71:                                               ; preds = %66, %59
  store ptr %62, ptr %63, align 8, !tbaa !66
  store i32 %57, ptr %47, align 4, !tbaa !65
  br label %72

72:                                               ; preds = %35, %55, %71
  store i32 %46, ptr %44, align 8, !tbaa !67
  %73 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !119
  %75 = sext i32 %45 to i64
  %76 = getelementptr inbounds %struct.ImDrawVert, ptr %74, i64 %75
  %77 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  store ptr %76, ptr %77, align 8, !tbaa !120
  %78 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1
  %79 = load i32, ptr %78, align 8, !tbaa !90
  %80 = add nsw i32 %79, %1
  %81 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 1
  %82 = load i32, ptr %81, align 4, !tbaa !62
  %83 = icmp slt i32 %82, %80
  br i1 %83, label %84, label %106

84:                                               ; preds = %72
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %84
  %87 = sdiv i32 %82, 2
  %88 = add nsw i32 %87, %82
  br label %89

89:                                               ; preds = %86, %84
  %90 = phi i32 [ %88, %86 ], [ 8, %84 ]
  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 %80)
  %92 = icmp slt i32 %82, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %89
  %94 = sext i32 %91 to i64
  %95 = shl nsw i64 %94, 1
  %96 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %95)
  %97 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 2
  %98 = load ptr, ptr %97, align 8, !tbaa !63
  %99 = icmp eq ptr %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %93
  %101 = load i32, ptr %78, align 8, !tbaa !64
  %102 = sext i32 %101 to i64
  %103 = shl nsw i64 %102, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %96, ptr nonnull align 2 %98, i64 %103, i1 false)
  %104 = load ptr, ptr %97, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %104)
  br label %105

105:                                              ; preds = %100, %93
  store ptr %96, ptr %97, align 8, !tbaa !63
  store i32 %91, ptr %81, align 4, !tbaa !62
  br label %106

106:                                              ; preds = %72, %89, %105
  store i32 %80, ptr %78, align 8, !tbaa !64
  %107 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !91
  %109 = sext i32 %79 to i64
  %110 = getelementptr inbounds i16, ptr %108, i64 %109
  %111 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  store ptr %110, ptr %111, align 8, !tbaa !99
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PrimUnreserve@ImDrawList@@QEAAXHH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %struct.ImVector.6, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !85
  %6 = load i32, ptr %0, align 8, !tbaa !84
  %7 = add nsw i32 %6, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.ImDrawCmd, ptr %5, i64 %8, i32 4
  %10 = load i32, ptr %9, align 8, !tbaa !86
  %11 = sub i32 %10, %1
  store i32 %11, ptr %9, align 8, !tbaa !86
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %13 = load i32, ptr %12, align 8, !tbaa !118
  %14 = sub nsw i32 %13, %2
  %15 = icmp slt i32 %2, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1817)
  br label %17

17:                                               ; preds = %3, %16
  store i32 %14, ptr %12, align 8, !tbaa !67
  %18 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !90
  %20 = icmp slt i32 %1, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@BPLGCGDC@?$AAn?$AAe?$AAw?$AA_?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1817)
  br label %22

22:                                               ; preds = %17, %21
  %23 = sub nsw i32 %19, %1
  store i32 %23, ptr %18, align 8, !tbaa !64
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @"?PrimRect@ImDrawList@@QEAAXAEBUImVec2@@0I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i32 noundef %3) local_unnamed_addr #11 align 2 {
  %5 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !112
  %7 = load i32, ptr %2, align 4, !tbaa !113
  %8 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !112
  %10 = load i32, ptr %1, align 4, !tbaa !113
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !68
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %15 = load i32, ptr %14, align 4, !tbaa !71
  %16 = trunc i32 %15 to i16
  %17 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %18 = load ptr, ptr %17, align 8, !tbaa !99
  store i16 %16, ptr %18, align 2, !tbaa !121
  %19 = add i16 %16, 1
  %20 = getelementptr inbounds i16, ptr %18, i64 1
  store i16 %19, ptr %20, align 2, !tbaa !121
  %21 = add i16 %16, 2
  %22 = getelementptr inbounds i16, ptr %18, i64 2
  store i16 %21, ptr %22, align 2, !tbaa !121
  %23 = getelementptr inbounds i16, ptr %18, i64 3
  store i16 %16, ptr %23, align 2, !tbaa !121
  %24 = getelementptr inbounds i16, ptr %18, i64 4
  store i16 %21, ptr %24, align 2, !tbaa !121
  %25 = add i16 %16, 3
  %26 = getelementptr inbounds i16, ptr %18, i64 5
  store i16 %25, ptr %26, align 2, !tbaa !121
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !120
  %29 = load i64, ptr %1, align 4
  store i64 %29, ptr %28, align 4
  %30 = load ptr, ptr %27, align 8, !tbaa !120
  %31 = getelementptr inbounds %struct.ImDrawVert, ptr %30, i64 0, i32 1
  store i64 %13, ptr %31, align 4
  %32 = load ptr, ptr %27, align 8, !tbaa !120
  %33 = getelementptr inbounds %struct.ImDrawVert, ptr %32, i64 0, i32 2
  store i32 %3, ptr %33, align 4, !tbaa !123
  %34 = getelementptr inbounds %struct.ImDrawVert, ptr %32, i64 1
  store i32 %7, ptr %34, align 4
  %35 = getelementptr inbounds %struct.ImDrawVert, ptr %32, i64 1, i32 0, i32 1
  store i32 %6, ptr %35, align 4
  %36 = load ptr, ptr %27, align 8, !tbaa !120
  %37 = getelementptr inbounds %struct.ImDrawVert, ptr %36, i64 1, i32 1
  store i64 %13, ptr %37, align 4
  %38 = load ptr, ptr %27, align 8, !tbaa !120
  %39 = getelementptr inbounds %struct.ImDrawVert, ptr %38, i64 1, i32 2
  store i32 %3, ptr %39, align 4, !tbaa !123
  %40 = getelementptr inbounds %struct.ImDrawVert, ptr %38, i64 2
  %41 = load i64, ptr %2, align 4
  store i64 %41, ptr %40, align 4
  %42 = load ptr, ptr %27, align 8, !tbaa !120
  %43 = getelementptr inbounds %struct.ImDrawVert, ptr %42, i64 2, i32 1
  store i64 %13, ptr %43, align 4
  %44 = load ptr, ptr %27, align 8, !tbaa !120
  %45 = getelementptr inbounds %struct.ImDrawVert, ptr %44, i64 2, i32 2
  store i32 %3, ptr %45, align 4, !tbaa !123
  %46 = getelementptr inbounds %struct.ImDrawVert, ptr %44, i64 3
  store i32 %10, ptr %46, align 4
  %47 = getelementptr inbounds %struct.ImDrawVert, ptr %44, i64 3, i32 0, i32 1
  store i32 %9, ptr %47, align 4
  %48 = load ptr, ptr %27, align 8, !tbaa !120
  %49 = getelementptr inbounds %struct.ImDrawVert, ptr %48, i64 3, i32 1
  store i64 %13, ptr %49, align 4
  %50 = load ptr, ptr %27, align 8, !tbaa !120
  %51 = getelementptr inbounds %struct.ImDrawVert, ptr %50, i64 3, i32 2
  store i32 %3, ptr %51, align 4, !tbaa !123
  %52 = getelementptr inbounds %struct.ImDrawVert, ptr %50, i64 4
  store ptr %52, ptr %27, align 8, !tbaa !120
  %53 = load i32, ptr %14, align 4, !tbaa !71
  %54 = add i32 %53, 4
  store i32 %54, ptr %14, align 4, !tbaa !71
  %55 = load ptr, ptr %17, align 8, !tbaa !99
  %56 = getelementptr inbounds i16, ptr %55, i64 6
  store ptr %56, ptr %17, align 8, !tbaa !99
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @"?PrimRectUV@ImDrawList@@QEAAXAEBUImVec2@@000I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, i32 noundef %5) local_unnamed_addr #12 align 2 {
  %7 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !112
  %9 = load i32, ptr %2, align 4, !tbaa !113
  %10 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !112
  %12 = load i32, ptr %1, align 4, !tbaa !113
  %13 = getelementptr inbounds %struct.ImVec2, ptr %3, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !112
  %15 = load i32, ptr %4, align 4, !tbaa !113
  %16 = getelementptr inbounds %struct.ImVec2, ptr %4, i64 0, i32 1
  %17 = load i32, ptr %16, align 4, !tbaa !112
  %18 = load i32, ptr %3, align 4, !tbaa !113
  %19 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %20 = load i32, ptr %19, align 4, !tbaa !71
  %21 = trunc i32 %20 to i16
  %22 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %23 = load ptr, ptr %22, align 8, !tbaa !99
  store i16 %21, ptr %23, align 2, !tbaa !121
  %24 = add i16 %21, 1
  %25 = getelementptr inbounds i16, ptr %23, i64 1
  store i16 %24, ptr %25, align 2, !tbaa !121
  %26 = add i16 %21, 2
  %27 = getelementptr inbounds i16, ptr %23, i64 2
  store i16 %26, ptr %27, align 2, !tbaa !121
  %28 = getelementptr inbounds i16, ptr %23, i64 3
  store i16 %21, ptr %28, align 2, !tbaa !121
  %29 = getelementptr inbounds i16, ptr %23, i64 4
  store i16 %26, ptr %29, align 2, !tbaa !121
  %30 = add i16 %21, 3
  %31 = getelementptr inbounds i16, ptr %23, i64 5
  store i16 %30, ptr %31, align 2, !tbaa !121
  %32 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !120
  %34 = load i64, ptr %1, align 4
  store i64 %34, ptr %33, align 4
  %35 = load ptr, ptr %32, align 8, !tbaa !120
  %36 = getelementptr inbounds %struct.ImDrawVert, ptr %35, i64 0, i32 1
  %37 = load i64, ptr %3, align 4
  store i64 %37, ptr %36, align 4
  %38 = load ptr, ptr %32, align 8, !tbaa !120
  %39 = getelementptr inbounds %struct.ImDrawVert, ptr %38, i64 0, i32 2
  store i32 %5, ptr %39, align 4, !tbaa !123
  %40 = getelementptr inbounds %struct.ImDrawVert, ptr %38, i64 1
  store i32 %9, ptr %40, align 4
  %41 = getelementptr inbounds %struct.ImDrawVert, ptr %38, i64 1, i32 0, i32 1
  store i32 %8, ptr %41, align 4
  %42 = load ptr, ptr %32, align 8, !tbaa !120
  %43 = getelementptr inbounds %struct.ImDrawVert, ptr %42, i64 1, i32 1
  store i32 %15, ptr %43, align 4
  %44 = getelementptr inbounds %struct.ImDrawVert, ptr %42, i64 1, i32 1, i32 1
  store i32 %14, ptr %44, align 4
  %45 = load ptr, ptr %32, align 8, !tbaa !120
  %46 = getelementptr inbounds %struct.ImDrawVert, ptr %45, i64 1, i32 2
  store i32 %5, ptr %46, align 4, !tbaa !123
  %47 = getelementptr inbounds %struct.ImDrawVert, ptr %45, i64 2
  %48 = load i64, ptr %2, align 4
  store i64 %48, ptr %47, align 4
  %49 = load ptr, ptr %32, align 8, !tbaa !120
  %50 = getelementptr inbounds %struct.ImDrawVert, ptr %49, i64 2, i32 1
  %51 = load i64, ptr %4, align 4
  store i64 %51, ptr %50, align 4
  %52 = load ptr, ptr %32, align 8, !tbaa !120
  %53 = getelementptr inbounds %struct.ImDrawVert, ptr %52, i64 2, i32 2
  store i32 %5, ptr %53, align 4, !tbaa !123
  %54 = getelementptr inbounds %struct.ImDrawVert, ptr %52, i64 3
  store i32 %12, ptr %54, align 4
  %55 = getelementptr inbounds %struct.ImDrawVert, ptr %52, i64 3, i32 0, i32 1
  store i32 %11, ptr %55, align 4
  %56 = load ptr, ptr %32, align 8, !tbaa !120
  %57 = getelementptr inbounds %struct.ImDrawVert, ptr %56, i64 3, i32 1
  store i32 %18, ptr %57, align 4
  %58 = getelementptr inbounds %struct.ImDrawVert, ptr %56, i64 3, i32 1, i32 1
  store i32 %17, ptr %58, align 4
  %59 = load ptr, ptr %32, align 8, !tbaa !120
  %60 = getelementptr inbounds %struct.ImDrawVert, ptr %59, i64 3, i32 2
  store i32 %5, ptr %60, align 4, !tbaa !123
  %61 = getelementptr inbounds %struct.ImDrawVert, ptr %59, i64 4
  store ptr %61, ptr %32, align 8, !tbaa !120
  %62 = load i32, ptr %19, align 4, !tbaa !71
  %63 = add i32 %62, 4
  store i32 %63, ptr %19, align 4, !tbaa !71
  %64 = load ptr, ptr %22, align 8, !tbaa !99
  %65 = getelementptr inbounds i16, ptr %64, i64 6
  store ptr %65, ptr %22, align 8, !tbaa !99
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @"?PrimQuadUV@ImDrawList@@QEAAXAEBUImVec2@@0000000I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %5, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %6, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %7, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %8, i32 noundef %9) local_unnamed_addr #13 align 2 {
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %12 = load i32, ptr %11, align 4, !tbaa !71
  %13 = trunc i32 %12 to i16
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !99
  store i16 %13, ptr %15, align 2, !tbaa !121
  %16 = add i16 %13, 1
  %17 = getelementptr inbounds i16, ptr %15, i64 1
  store i16 %16, ptr %17, align 2, !tbaa !121
  %18 = add i16 %13, 2
  %19 = getelementptr inbounds i16, ptr %15, i64 2
  store i16 %18, ptr %19, align 2, !tbaa !121
  %20 = getelementptr inbounds i16, ptr %15, i64 3
  store i16 %13, ptr %20, align 2, !tbaa !121
  %21 = getelementptr inbounds i16, ptr %15, i64 4
  store i16 %18, ptr %21, align 2, !tbaa !121
  %22 = add i16 %13, 3
  %23 = getelementptr inbounds i16, ptr %15, i64 5
  store i16 %22, ptr %23, align 2, !tbaa !121
  %24 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %25 = load ptr, ptr %24, align 8, !tbaa !120
  %26 = load i64, ptr %1, align 4
  store i64 %26, ptr %25, align 4
  %27 = load ptr, ptr %24, align 8, !tbaa !120
  %28 = getelementptr inbounds %struct.ImDrawVert, ptr %27, i64 0, i32 1
  %29 = load i64, ptr %5, align 4
  store i64 %29, ptr %28, align 4
  %30 = load ptr, ptr %24, align 8, !tbaa !120
  %31 = getelementptr inbounds %struct.ImDrawVert, ptr %30, i64 0, i32 2
  store i32 %9, ptr %31, align 4, !tbaa !123
  %32 = getelementptr inbounds %struct.ImDrawVert, ptr %30, i64 1
  %33 = load i64, ptr %2, align 4
  store i64 %33, ptr %32, align 4
  %34 = load ptr, ptr %24, align 8, !tbaa !120
  %35 = getelementptr inbounds %struct.ImDrawVert, ptr %34, i64 1, i32 1
  %36 = load i64, ptr %6, align 4
  store i64 %36, ptr %35, align 4
  %37 = load ptr, ptr %24, align 8, !tbaa !120
  %38 = getelementptr inbounds %struct.ImDrawVert, ptr %37, i64 1, i32 2
  store i32 %9, ptr %38, align 4, !tbaa !123
  %39 = getelementptr inbounds %struct.ImDrawVert, ptr %37, i64 2
  %40 = load i64, ptr %3, align 4
  store i64 %40, ptr %39, align 4
  %41 = load ptr, ptr %24, align 8, !tbaa !120
  %42 = getelementptr inbounds %struct.ImDrawVert, ptr %41, i64 2, i32 1
  %43 = load i64, ptr %7, align 4
  store i64 %43, ptr %42, align 4
  %44 = load ptr, ptr %24, align 8, !tbaa !120
  %45 = getelementptr inbounds %struct.ImDrawVert, ptr %44, i64 2, i32 2
  store i32 %9, ptr %45, align 4, !tbaa !123
  %46 = getelementptr inbounds %struct.ImDrawVert, ptr %44, i64 3
  %47 = load i64, ptr %4, align 4
  store i64 %47, ptr %46, align 4
  %48 = load ptr, ptr %24, align 8, !tbaa !120
  %49 = getelementptr inbounds %struct.ImDrawVert, ptr %48, i64 3, i32 1
  %50 = load i64, ptr %8, align 4
  store i64 %50, ptr %49, align 4
  %51 = load ptr, ptr %24, align 8, !tbaa !120
  %52 = getelementptr inbounds %struct.ImDrawVert, ptr %51, i64 3, i32 2
  store i32 %9, ptr %52, align 4, !tbaa !123
  %53 = getelementptr inbounds %struct.ImDrawVert, ptr %51, i64 4
  store ptr %53, ptr %24, align 8, !tbaa !120
  %54 = load i32, ptr %11, align 4, !tbaa !71
  %55 = add i32 %54, 4
  store i32 %55, ptr %11, align 4, !tbaa !71
  %56 = load ptr, ptr %14, align 8, !tbaa !99
  %57 = getelementptr inbounds i16, ptr %56, i64 6
  store ptr %57, ptr %14, align 8, !tbaa !99
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, float noundef %5) local_unnamed_addr #14 align 2 {
  %7 = icmp slt i32 %2, 2
  %8 = icmp ult i32 %3, 16777216
  %9 = or i1 %7, %8
  br i1 %9, label %576, label %10

10:                                               ; preds = %6
  %11 = and i32 %4, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %14 = load ptr, ptr %13, align 8, !tbaa !68
  %15 = load i64, ptr %14, align 8
  %16 = add nsw i32 %2, -1
  %17 = select i1 %12, i32 %16, i32 %2
  %18 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 14
  %19 = load float, ptr %18, align 8, !tbaa !83
  %20 = fcmp fast uge float %19, %5
  %21 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  %22 = load i32, ptr %21, align 8, !tbaa !70
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %484, label %25

25:                                               ; preds = %10
  %26 = and i32 %3, 16777215
  %27 = tail call fast float @llvm.maxnum.f32(float %5, float 1.000000e+00)
  %28 = fptosi float %27 to i32
  %29 = sitofp i32 %28 to float
  %30 = fsub fast float %27, %29
  %31 = and i32 %22, 2
  %32 = icmp ne i32 %31, 0
  %33 = icmp slt i32 %28, 63
  %34 = select i1 %32, i1 %33, i1 false
  %35 = fcmp fast ole float %30, 0x3EE4F8B580000000
  %36 = select i1 %34, i1 %35, i1 false
  %37 = fcmp fast oeq float %19, 1.000000e+00
  %38 = select i1 %36, i1 %37, i1 false
  %39 = select i1 %20, i32 12, i32 18
  %40 = select i1 %38, i32 6, i32 %39
  %41 = mul nsw i32 %40, %17
  br i1 %38, label %42, label %44

42:                                               ; preds = %25
  %43 = shl nuw nsw i32 %2, 1
  br label %49

44:                                               ; preds = %25
  %45 = shl nsw i32 %2, 2
  %46 = mul nsw i32 %2, 3
  %47 = select i1 %20, i32 %46, i32 %45
  %48 = select i1 %20, i32 3, i32 5
  br label %49

49:                                               ; preds = %44, %42
  %50 = phi i32 [ %48, %44 ], [ 3, %42 ]
  %51 = phi i32 [ %47, %44 ], [ %43, %42 ]
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef %41, i32 noundef %51)
  %52 = load ptr, ptr %13, align 8, !tbaa !68
  %53 = mul nsw i32 %50, %2
  %54 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %52, i64 0, i32 7, i32 1
  %55 = load i32, ptr %54, align 4, !tbaa !78
  %56 = icmp slt i32 %55, %53
  br i1 %56, label %57, label %67

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %52, i64 0, i32 7, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !79
  %60 = icmp eq ptr %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %59)
  br label %62

62:                                               ; preds = %61, %57
  %63 = sext i32 %53 to i64
  %64 = shl nsw i64 %63, 3
  %65 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %64)
  store ptr %65, ptr %58, align 8, !tbaa !79
  store i32 %53, ptr %54, align 4, !tbaa !78
  %66 = load ptr, ptr %13, align 8, !tbaa !68
  br label %67

67:                                               ; preds = %62, %49
  %68 = phi ptr [ %52, %49 ], [ %66, %62 ]
  %69 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %68, i64 0, i32 7, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !125
  %71 = zext i32 %2 to i64
  %72 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %71
  %73 = zext i32 %17 to i64
  br label %75

74:                                               ; preds = %96
  br i1 %12, label %104, label %114

75:                                               ; preds = %67, %96
  %76 = phi i64 [ 0, %67 ], [ %77, %96 ]
  %77 = add nuw nsw i64 %76, 1
  %78 = icmp eq i64 %77, %71
  %79 = and i64 %77, 4294967295
  %80 = select i1 %78, i64 0, i64 %79
  %81 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %80
  %82 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %76
  %83 = load <2 x float>, ptr %81, align 4, !tbaa !6
  %84 = load <2 x float>, ptr %82, align 4, !tbaa !6
  %85 = fsub fast <2 x float> %83, %84
  %86 = fmul fast <2 x float> %85, %85
  %87 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %88 = fadd fast <2 x float> %87, %86
  %89 = extractelement <2 x float> %88, i64 0
  %90 = fcmp fast ogt float %89, 0.000000e+00
  br i1 %90, label %91, label %96

91:                                               ; preds = %75
  %92 = shufflevector <2 x float> %88, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %93 = tail call fast <4 x float> @llvm.x86.sse.rsqrt.ss(<4 x float> %92)
  %94 = shufflevector <4 x float> %93, <4 x float> undef, <2 x i32> zeroinitializer
  %95 = fmul fast <2 x float> %94, %85
  br label %96

96:                                               ; preds = %91, %75
  %97 = phi <2 x float> [ %95, %91 ], [ %85, %75 ]
  %98 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %76
  %99 = extractelement <2 x float> %97, i64 1
  store float %99, ptr %98, align 4, !tbaa !113
  %100 = extractelement <2 x float> %97, i64 0
  %101 = fneg fast float %100
  %102 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %76, i32 1
  store float %101, ptr %102, align 4, !tbaa !112
  %103 = icmp eq i64 %77, %73
  br i1 %103, label %74, label %75, !llvm.loop !126

104:                                              ; preds = %74
  %105 = add nsw i32 %2, -2
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %106
  %108 = zext i32 %16 to i64
  %109 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %108
  %110 = load i64, ptr %107, align 4
  store i64 %110, ptr %109, align 4
  %111 = select i1 %38, i1 true, i1 %20
  %112 = load <2 x float>, ptr %70, align 4, !tbaa !6
  %113 = load <2 x float>, ptr %1, align 4, !tbaa !6
  br i1 %111, label %123, label %298

114:                                              ; preds = %74
  %115 = select i1 %38, i1 true, i1 %20
  br i1 %115, label %119, label %116

116:                                              ; preds = %114
  %117 = fsub fast float %27, %19
  %118 = fmul fast float %117, 5.000000e-01
  br label %349

119:                                              ; preds = %114
  %120 = fmul fast float %27, 5.000000e-01
  %121 = fadd fast float %120, 1.000000e+00
  %122 = select fast i1 %38, float %121, float %19
  br label %151

123:                                              ; preds = %104
  %124 = fmul fast float %27, 5.000000e-01
  %125 = fadd fast float %124, 1.000000e+00
  %126 = select fast i1 %38, float %125, float %19
  %127 = insertelement <2 x float> poison, float %126, i64 0
  %128 = shufflevector <2 x float> %127, <2 x float> poison, <2 x i32> zeroinitializer
  %129 = fmul fast <2 x float> %112, %128
  %130 = fadd fast <2 x float> %113, %129
  store <2 x float> %130, ptr %72, align 4
  %131 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 1
  %132 = load <2 x float>, ptr %70, align 4, !tbaa !6
  %133 = fmul fast <2 x float> %132, %128
  %134 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %135 = fsub fast <2 x float> %134, %133
  store <2 x float> %135, ptr %131, align 4
  %136 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %108
  %137 = shl nsw i32 %16, 1
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %138
  %140 = load <2 x float>, ptr %109, align 4, !tbaa !6
  %141 = fmul fast <2 x float> %140, %128
  %142 = load <2 x float>, ptr %136, align 4, !tbaa !6
  %143 = fadd fast <2 x float> %142, %141
  store <2 x float> %143, ptr %139, align 4
  %144 = or i32 %137, 1
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %145
  %147 = load <2 x float>, ptr %109, align 4, !tbaa !6
  %148 = fmul fast <2 x float> %147, %128
  %149 = load <2 x float>, ptr %136, align 4, !tbaa !6
  %150 = fsub fast <2 x float> %149, %148
  store <2 x float> %150, ptr %146, align 4
  br label %151

151:                                              ; preds = %123, %119
  %152 = phi float [ %122, %119 ], [ %126, %123 ]
  %153 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %154 = load i32, ptr %153, align 4, !tbaa !71
  %155 = select i1 %38, i32 2, i32 3
  %156 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %157 = load ptr, ptr %156, align 8, !tbaa !99
  %158 = zext i32 %17 to i64
  %159 = insertelement <2 x float> poison, float %152, i64 0
  %160 = shufflevector <2 x float> %159, <2 x float> poison, <2 x i32> zeroinitializer
  br label %166

161:                                              ; preds = %222
  %162 = icmp sgt i32 %2, 0
  br i1 %162, label %163, label %479

163:                                              ; preds = %161
  %164 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %165 = load ptr, ptr %164, align 8, !tbaa !120
  br label %270

166:                                              ; preds = %220, %151
  %167 = phi i64 [ 0, %151 ], [ %170, %220 ]
  %168 = phi ptr [ %157, %151 ], [ %221, %220 ]
  %169 = phi i32 [ %154, %151 ], [ %176, %220 ]
  %170 = add nuw nsw i64 %167, 1
  %171 = icmp eq i64 %170, %71
  %172 = trunc i64 %170 to i32
  %173 = select i1 %171, i32 0, i32 %172
  %174 = load i32, ptr %153, align 4
  %175 = add i32 %169, %155
  %176 = select i1 %171, i32 %174, i32 %175
  %177 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %167
  %178 = zext i32 %173 to i64
  %179 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %178
  %180 = load <2 x float>, ptr %177, align 4, !tbaa !6
  %181 = load <2 x float>, ptr %179, align 4, !tbaa !6
  %182 = fadd fast <2 x float> %181, %180
  %183 = fmul fast <2 x float> %182, <float 5.000000e-01, float 5.000000e-01>
  %184 = fmul fast <2 x float> %183, %183
  %185 = shufflevector <2 x float> %184, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %186 = fadd fast <2 x float> %185, %184
  %187 = extractelement <2 x float> %186, i64 0
  %188 = fcmp fast ogt float %187, 0x3EB0C6F7A0000000
  br i1 %188, label %189, label %196

189:                                              ; preds = %166
  %190 = fdiv fast float 1.000000e+00, %187
  %191 = fcmp fast ogt float %190, 1.000000e+02
  %192 = select i1 %191, float 1.000000e+02, float %190
  %193 = insertelement <2 x float> poison, float %192, i64 0
  %194 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> zeroinitializer
  %195 = fmul fast <2 x float> %194, %183
  br label %196

196:                                              ; preds = %189, %166
  %197 = phi <2 x float> [ %195, %189 ], [ %183, %166 ]
  %198 = fmul fast <2 x float> %197, %160
  %199 = shl nuw nsw i32 %173, 1
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %200
  %202 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %178
  %203 = load <2 x float>, ptr %202, align 4, !tbaa !6
  %204 = fadd fast <2 x float> %203, %198
  store <2 x float> %204, ptr %201, align 4, !tbaa !6
  %205 = getelementptr inbounds %struct.ImVec2, ptr %201, i64 1
  %206 = load <2 x float>, ptr %202, align 4, !tbaa !6
  %207 = fsub fast <2 x float> %206, %198
  store <2 x float> %207, ptr %205, align 4, !tbaa !6
  %208 = trunc i32 %176 to i16
  store i16 %208, ptr %168, align 2, !tbaa !121
  %209 = trunc i32 %169 to i16
  %210 = getelementptr inbounds i16, ptr %168, i64 1
  store i16 %209, ptr %210, align 2, !tbaa !121
  %211 = getelementptr inbounds i16, ptr %168, i64 2
  %212 = getelementptr inbounds i16, ptr %168, i64 4
  %213 = getelementptr inbounds i16, ptr %168, i64 5
  br i1 %38, label %214, label %222

214:                                              ; preds = %196
  %215 = add i16 %209, 1
  store i16 %215, ptr %211, align 2, !tbaa !121
  %216 = add i16 %208, 1
  %217 = getelementptr inbounds i16, ptr %168, i64 3
  store i16 %216, ptr %217, align 2, !tbaa !121
  store i16 %215, ptr %212, align 2, !tbaa !121
  store i16 %208, ptr %213, align 2, !tbaa !121
  %218 = getelementptr inbounds i16, ptr %168, i64 6
  store ptr %218, ptr %156, align 8, !tbaa !99
  %219 = icmp eq i64 %170, %158
  br i1 %219, label %236, label %220

220:                                              ; preds = %214, %222
  %221 = phi ptr [ %218, %214 ], [ %234, %222 ]
  br label %166, !llvm.loop !127

222:                                              ; preds = %196
  %223 = add i16 %209, 2
  store i16 %223, ptr %211, align 2, !tbaa !121
  %224 = getelementptr inbounds i16, ptr %168, i64 3
  store i16 %223, ptr %224, align 2, !tbaa !121
  %225 = add i16 %208, 2
  store i16 %225, ptr %212, align 2, !tbaa !121
  store i16 %208, ptr %213, align 2, !tbaa !121
  %226 = add i16 %208, 1
  %227 = getelementptr inbounds i16, ptr %168, i64 6
  store i16 %226, ptr %227, align 2, !tbaa !121
  %228 = add i16 %209, 1
  %229 = getelementptr inbounds i16, ptr %168, i64 7
  store i16 %228, ptr %229, align 2, !tbaa !121
  %230 = getelementptr inbounds i16, ptr %168, i64 8
  store i16 %209, ptr %230, align 2, !tbaa !121
  %231 = getelementptr inbounds i16, ptr %168, i64 9
  store i16 %209, ptr %231, align 2, !tbaa !121
  %232 = getelementptr inbounds i16, ptr %168, i64 10
  store i16 %208, ptr %232, align 2, !tbaa !121
  %233 = getelementptr inbounds i16, ptr %168, i64 11
  store i16 %226, ptr %233, align 2, !tbaa !121
  %234 = getelementptr inbounds i16, ptr %168, i64 12
  store ptr %234, ptr %156, align 8, !tbaa !99
  %235 = icmp eq i64 %170, %158
  br i1 %235, label %161, label %220

236:                                              ; preds = %214
  %237 = load ptr, ptr %13, align 8, !tbaa !68
  %238 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %237, i64 0, i32 11
  %239 = load ptr, ptr %238, align 8, !tbaa !128
  %240 = sext i32 %28 to i64
  %241 = getelementptr inbounds %struct.ImVec4, ptr %239, i64 %240
  %242 = load <2 x i32>, ptr %241, align 4
  %243 = getelementptr inbounds i8, ptr %241, i64 8
  %244 = load <2 x i32>, ptr %243, align 4
  %245 = icmp sgt i32 %2, 0
  br i1 %245, label %246, label %479

246:                                              ; preds = %236
  %247 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %248 = load ptr, ptr %247, align 8, !tbaa !120
  br label %249

249:                                              ; preds = %246, %249
  %250 = phi ptr [ %248, %246 ], [ %267, %249 ]
  %251 = phi i64 [ 0, %246 ], [ %268, %249 ]
  %252 = shl nuw nsw i64 %251, 1
  %253 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %252
  %254 = load i64, ptr %253, align 4
  store i64 %254, ptr %250, align 4
  %255 = load ptr, ptr %247, align 8, !tbaa !120
  %256 = getelementptr inbounds %struct.ImDrawVert, ptr %255, i64 0, i32 1
  store <2 x i32> %242, ptr %256, align 4
  %257 = load ptr, ptr %247, align 8, !tbaa !120
  %258 = getelementptr inbounds %struct.ImDrawVert, ptr %257, i64 0, i32 2
  store i32 %3, ptr %258, align 4, !tbaa !123
  %259 = or i64 %252, 1
  %260 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %259
  %261 = getelementptr inbounds %struct.ImDrawVert, ptr %257, i64 1
  %262 = load i64, ptr %260, align 4
  store i64 %262, ptr %261, align 4
  %263 = load ptr, ptr %247, align 8, !tbaa !120
  %264 = getelementptr inbounds %struct.ImDrawVert, ptr %263, i64 1, i32 1
  store <2 x i32> %244, ptr %264, align 4
  %265 = load ptr, ptr %247, align 8, !tbaa !120
  %266 = getelementptr inbounds %struct.ImDrawVert, ptr %265, i64 1, i32 2
  store i32 %3, ptr %266, align 4, !tbaa !123
  %267 = getelementptr inbounds %struct.ImDrawVert, ptr %265, i64 2
  store ptr %267, ptr %247, align 8, !tbaa !120
  %268 = add nuw nsw i64 %251, 1
  %269 = icmp eq i64 %268, %71
  br i1 %269, label %479, label %249, !llvm.loop !129

270:                                              ; preds = %163, %270
  %271 = phi ptr [ %165, %163 ], [ %295, %270 ]
  %272 = phi i64 [ 0, %163 ], [ %296, %270 ]
  %273 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %272
  %274 = load i64, ptr %273, align 4
  store i64 %274, ptr %271, align 4
  %275 = load ptr, ptr %164, align 8, !tbaa !120
  %276 = getelementptr inbounds %struct.ImDrawVert, ptr %275, i64 0, i32 1
  store i64 %15, ptr %276, align 4
  %277 = load ptr, ptr %164, align 8, !tbaa !120
  %278 = getelementptr inbounds %struct.ImDrawVert, ptr %277, i64 0, i32 2
  store i32 %3, ptr %278, align 4, !tbaa !123
  %279 = shl nuw nsw i64 %272, 1
  %280 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %279
  %281 = getelementptr inbounds %struct.ImDrawVert, ptr %277, i64 1
  %282 = load i64, ptr %280, align 4
  store i64 %282, ptr %281, align 4
  %283 = load ptr, ptr %164, align 8, !tbaa !120
  %284 = getelementptr inbounds %struct.ImDrawVert, ptr %283, i64 1, i32 1
  store i64 %15, ptr %284, align 4
  %285 = load ptr, ptr %164, align 8, !tbaa !120
  %286 = getelementptr inbounds %struct.ImDrawVert, ptr %285, i64 1, i32 2
  store i32 %26, ptr %286, align 4, !tbaa !123
  %287 = or i64 %279, 1
  %288 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %287
  %289 = getelementptr inbounds %struct.ImDrawVert, ptr %285, i64 2
  %290 = load i64, ptr %288, align 4
  store i64 %290, ptr %289, align 4
  %291 = load ptr, ptr %164, align 8, !tbaa !120
  %292 = getelementptr inbounds %struct.ImDrawVert, ptr %291, i64 2, i32 1
  store i64 %15, ptr %292, align 4
  %293 = load ptr, ptr %164, align 8, !tbaa !120
  %294 = getelementptr inbounds %struct.ImDrawVert, ptr %293, i64 2, i32 2
  store i32 %26, ptr %294, align 4, !tbaa !123
  %295 = getelementptr inbounds %struct.ImDrawVert, ptr %293, i64 3
  store ptr %295, ptr %164, align 8, !tbaa !120
  %296 = add nuw nsw i64 %272, 1
  %297 = icmp eq i64 %296, %71
  br i1 %297, label %479, label %270, !llvm.loop !130

298:                                              ; preds = %104
  %299 = fsub fast float %27, %19
  %300 = fmul fast float %299, 5.000000e-01
  %301 = fadd fast float %300, %19
  %302 = insertelement <2 x float> poison, float %301, i64 0
  %303 = shufflevector <2 x float> %302, <2 x float> poison, <2 x i32> zeroinitializer
  %304 = fmul fast <2 x float> %112, %303
  %305 = fadd fast <2 x float> %113, %304
  store <2 x float> %305, ptr %72, align 4
  %306 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 1
  %307 = load <2 x float>, ptr %70, align 4, !tbaa !6
  %308 = insertelement <2 x float> poison, float %300, i64 0
  %309 = shufflevector <2 x float> %308, <2 x float> poison, <2 x i32> zeroinitializer
  %310 = fmul fast <2 x float> %307, %309
  %311 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %312 = fadd fast <2 x float> %311, %310
  store <2 x float> %312, ptr %306, align 4
  %313 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 2
  %314 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %315 = fsub fast <2 x float> %314, %310
  store <2 x float> %315, ptr %313, align 4
  %316 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 3
  %317 = fmul fast <2 x float> %307, %303
  %318 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %319 = fsub fast <2 x float> %318, %317
  store <2 x float> %319, ptr %316, align 4
  %320 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %108
  %321 = shl nsw i32 %16, 2
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %322
  %324 = load <2 x float>, ptr %109, align 4, !tbaa !6
  %325 = fmul fast <2 x float> %324, %303
  %326 = load <2 x float>, ptr %320, align 4, !tbaa !6
  %327 = fadd fast <2 x float> %326, %325
  store <2 x float> %327, ptr %323, align 4
  %328 = or i32 %321, 1
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %329
  %331 = load <2 x float>, ptr %109, align 4, !tbaa !6
  %332 = fmul fast <2 x float> %331, %309
  %333 = load <2 x float>, ptr %320, align 4, !tbaa !6
  %334 = fadd fast <2 x float> %333, %332
  store <2 x float> %334, ptr %330, align 4
  %335 = or i32 %321, 2
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %336
  %338 = load <2 x float>, ptr %109, align 4, !tbaa !6
  %339 = fmul fast <2 x float> %338, %309
  %340 = load <2 x float>, ptr %320, align 4, !tbaa !6
  %341 = fsub fast <2 x float> %340, %339
  store <2 x float> %341, ptr %337, align 4
  %342 = or i32 %321, 3
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %343
  %345 = load <2 x float>, ptr %109, align 4, !tbaa !6
  %346 = fmul fast <2 x float> %345, %303
  %347 = load <2 x float>, ptr %320, align 4, !tbaa !6
  %348 = fsub fast <2 x float> %347, %346
  store <2 x float> %348, ptr %344, align 4
  br label %349

349:                                              ; preds = %298, %116
  %350 = phi float [ %118, %116 ], [ %300, %298 ]
  %351 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %352 = load i32, ptr %351, align 4, !tbaa !71
  %353 = fadd fast float %350, %19
  %354 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %355 = load ptr, ptr %354, align 8, !tbaa !99
  %356 = zext i32 %17 to i64
  %357 = insertelement <2 x float> poison, float %353, i64 0
  %358 = shufflevector <2 x float> %357, <2 x float> poison, <2 x i32> zeroinitializer
  %359 = insertelement <2 x float> poison, float %350, i64 0
  %360 = shufflevector <2 x float> %359, <2 x float> poison, <2 x i32> zeroinitializer
  br label %366

361:                                              ; preds = %396
  store ptr %440, ptr %354, align 8, !tbaa !99
  %362 = icmp sgt i32 %2, 0
  br i1 %362, label %363, label %479

363:                                              ; preds = %361
  %364 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %365 = load ptr, ptr %364, align 8, !tbaa !120
  br label %442

366:                                              ; preds = %349, %396
  %367 = phi i64 [ 0, %349 ], [ %370, %396 ]
  %368 = phi ptr [ %355, %349 ], [ %440, %396 ]
  %369 = phi i32 [ %352, %349 ], [ %376, %396 ]
  %370 = add nuw nsw i64 %367, 1
  %371 = icmp eq i64 %370, %71
  %372 = trunc i64 %370 to i32
  %373 = select i1 %371, i32 0, i32 %372
  %374 = load i32, ptr %351, align 4
  %375 = add i32 %369, 4
  %376 = select i1 %371, i32 %374, i32 %375
  %377 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %367
  %378 = zext i32 %373 to i64
  %379 = getelementptr inbounds %struct.ImVec2, ptr %70, i64 %378
  %380 = load <2 x float>, ptr %377, align 4, !tbaa !6
  %381 = load <2 x float>, ptr %379, align 4, !tbaa !6
  %382 = fadd fast <2 x float> %381, %380
  %383 = fmul fast <2 x float> %382, <float 5.000000e-01, float 5.000000e-01>
  %384 = fmul fast <2 x float> %383, %383
  %385 = shufflevector <2 x float> %384, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %386 = fadd fast <2 x float> %385, %384
  %387 = extractelement <2 x float> %386, i64 0
  %388 = fcmp fast ogt float %387, 0x3EB0C6F7A0000000
  br i1 %388, label %389, label %396

389:                                              ; preds = %366
  %390 = fdiv fast float 1.000000e+00, %387
  %391 = fcmp fast ogt float %390, 1.000000e+02
  %392 = select i1 %391, float 1.000000e+02, float %390
  %393 = insertelement <2 x float> poison, float %392, i64 0
  %394 = shufflevector <2 x float> %393, <2 x float> poison, <2 x i32> zeroinitializer
  %395 = fmul fast <2 x float> %394, %383
  br label %396

396:                                              ; preds = %389, %366
  %397 = phi <2 x float> [ %395, %389 ], [ %383, %366 ]
  %398 = fmul fast <2 x float> %397, %358
  %399 = shl nsw i32 %373, 2
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %400
  %402 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %378
  %403 = load <2 x float>, ptr %402, align 4, !tbaa !6
  %404 = fadd fast <2 x float> %403, %398
  store <2 x float> %404, ptr %401, align 4, !tbaa !6
  %405 = getelementptr inbounds %struct.ImVec2, ptr %401, i64 1
  %406 = fmul fast <2 x float> %397, %360
  %407 = load <2 x float>, ptr %402, align 4, !tbaa !6
  %408 = fadd fast <2 x float> %407, %406
  store <2 x float> %408, ptr %405, align 4, !tbaa !6
  %409 = getelementptr inbounds %struct.ImVec2, ptr %401, i64 2
  %410 = load <2 x float>, ptr %402, align 4, !tbaa !6
  %411 = fsub fast <2 x float> %410, %406
  store <2 x float> %411, ptr %409, align 4, !tbaa !6
  %412 = getelementptr inbounds %struct.ImVec2, ptr %401, i64 3
  %413 = load <2 x float>, ptr %402, align 4, !tbaa !6
  %414 = fsub fast <2 x float> %413, %398
  store <2 x float> %414, ptr %412, align 4, !tbaa !6
  %415 = trunc i32 %376 to i16
  %416 = add i16 %415, 1
  store i16 %416, ptr %368, align 2, !tbaa !121
  %417 = trunc i32 %369 to i16
  %418 = add i16 %417, 1
  %419 = getelementptr inbounds i16, ptr %368, i64 1
  store i16 %418, ptr %419, align 2, !tbaa !121
  %420 = add i16 %417, 2
  %421 = getelementptr inbounds i16, ptr %368, i64 2
  store i16 %420, ptr %421, align 2, !tbaa !121
  %422 = getelementptr inbounds i16, ptr %368, i64 3
  store i16 %420, ptr %422, align 2, !tbaa !121
  %423 = add i16 %415, 2
  %424 = getelementptr inbounds i16, ptr %368, i64 4
  store i16 %423, ptr %424, align 2, !tbaa !121
  %425 = getelementptr inbounds i16, ptr %368, i64 5
  store i16 %416, ptr %425, align 2, !tbaa !121
  %426 = getelementptr inbounds i16, ptr %368, i64 6
  store i16 %416, ptr %426, align 2, !tbaa !121
  %427 = getelementptr inbounds i16, ptr %368, i64 7
  store i16 %418, ptr %427, align 2, !tbaa !121
  %428 = getelementptr inbounds i16, ptr %368, i64 8
  store i16 %417, ptr %428, align 2, !tbaa !121
  %429 = getelementptr inbounds i16, ptr %368, i64 9
  store i16 %417, ptr %429, align 2, !tbaa !121
  %430 = getelementptr inbounds i16, ptr %368, i64 10
  store i16 %415, ptr %430, align 2, !tbaa !121
  %431 = getelementptr inbounds i16, ptr %368, i64 11
  store i16 %416, ptr %431, align 2, !tbaa !121
  %432 = getelementptr inbounds i16, ptr %368, i64 12
  store i16 %423, ptr %432, align 2, !tbaa !121
  %433 = getelementptr inbounds i16, ptr %368, i64 13
  store i16 %420, ptr %433, align 2, !tbaa !121
  %434 = add i16 %417, 3
  %435 = getelementptr inbounds i16, ptr %368, i64 14
  store i16 %434, ptr %435, align 2, !tbaa !121
  %436 = getelementptr inbounds i16, ptr %368, i64 15
  store i16 %434, ptr %436, align 2, !tbaa !121
  %437 = add i16 %415, 3
  %438 = getelementptr inbounds i16, ptr %368, i64 16
  store i16 %437, ptr %438, align 2, !tbaa !121
  %439 = getelementptr inbounds i16, ptr %368, i64 17
  store i16 %423, ptr %439, align 2, !tbaa !121
  %440 = getelementptr inbounds i16, ptr %368, i64 18
  %441 = icmp eq i64 %370, %356
  br i1 %441, label %361, label %366, !llvm.loop !131

442:                                              ; preds = %363, %442
  %443 = phi ptr [ %365, %363 ], [ %476, %442 ]
  %444 = phi i64 [ 0, %363 ], [ %477, %442 ]
  %445 = shl nsw i64 %444, 2
  %446 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %445
  %447 = load i64, ptr %446, align 4
  store i64 %447, ptr %443, align 4
  %448 = load ptr, ptr %364, align 8, !tbaa !120
  %449 = getelementptr inbounds %struct.ImDrawVert, ptr %448, i64 0, i32 1
  store i64 %15, ptr %449, align 4
  %450 = load ptr, ptr %364, align 8, !tbaa !120
  %451 = getelementptr inbounds %struct.ImDrawVert, ptr %450, i64 0, i32 2
  store i32 %26, ptr %451, align 4, !tbaa !123
  %452 = or i64 %445, 1
  %453 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %452
  %454 = getelementptr inbounds %struct.ImDrawVert, ptr %450, i64 1
  %455 = load i64, ptr %453, align 4
  store i64 %455, ptr %454, align 4
  %456 = load ptr, ptr %364, align 8, !tbaa !120
  %457 = getelementptr inbounds %struct.ImDrawVert, ptr %456, i64 1, i32 1
  store i64 %15, ptr %457, align 4
  %458 = load ptr, ptr %364, align 8, !tbaa !120
  %459 = getelementptr inbounds %struct.ImDrawVert, ptr %458, i64 1, i32 2
  store i32 %3, ptr %459, align 4, !tbaa !123
  %460 = or i64 %445, 2
  %461 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %460
  %462 = getelementptr inbounds %struct.ImDrawVert, ptr %458, i64 2
  %463 = load i64, ptr %461, align 4
  store i64 %463, ptr %462, align 4
  %464 = load ptr, ptr %364, align 8, !tbaa !120
  %465 = getelementptr inbounds %struct.ImDrawVert, ptr %464, i64 2, i32 1
  store i64 %15, ptr %465, align 4
  %466 = load ptr, ptr %364, align 8, !tbaa !120
  %467 = getelementptr inbounds %struct.ImDrawVert, ptr %466, i64 2, i32 2
  store i32 %3, ptr %467, align 4, !tbaa !123
  %468 = or i64 %445, 3
  %469 = getelementptr inbounds %struct.ImVec2, ptr %72, i64 %468
  %470 = getelementptr inbounds %struct.ImDrawVert, ptr %466, i64 3
  %471 = load i64, ptr %469, align 4
  store i64 %471, ptr %470, align 4
  %472 = load ptr, ptr %364, align 8, !tbaa !120
  %473 = getelementptr inbounds %struct.ImDrawVert, ptr %472, i64 3, i32 1
  store i64 %15, ptr %473, align 4
  %474 = load ptr, ptr %364, align 8, !tbaa !120
  %475 = getelementptr inbounds %struct.ImDrawVert, ptr %474, i64 3, i32 2
  store i32 %26, ptr %475, align 4, !tbaa !123
  %476 = getelementptr inbounds %struct.ImDrawVert, ptr %474, i64 4
  store ptr %476, ptr %364, align 8, !tbaa !120
  %477 = add nuw nsw i64 %444, 1
  %478 = icmp eq i64 %477, %71
  br i1 %478, label %479, label %442, !llvm.loop !132

479:                                              ; preds = %442, %270, %249, %361, %161, %236
  %480 = and i32 %51, 65535
  %481 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %482 = load i32, ptr %481, align 4, !tbaa !71
  %483 = add i32 %482, %480
  store i32 %483, ptr %481, align 4, !tbaa !71
  br label %576

484:                                              ; preds = %10
  %485 = mul nsw i32 %17, 6
  %486 = shl nsw i32 %17, 2
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef %485, i32 noundef %486)
  %487 = fmul fast float %5, 5.000000e-01
  %488 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %489 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %490 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %491 = zext i32 %2 to i64
  %492 = zext i32 %17 to i64
  %493 = insertelement <2 x float> poison, float %487, i64 0
  %494 = shufflevector <2 x float> %493, <2 x float> poison, <2 x i32> zeroinitializer
  br label %495

495:                                              ; preds = %484, %518
  %496 = phi i64 [ 0, %484 ], [ %497, %518 ]
  %497 = add nuw nsw i64 %496, 1
  %498 = icmp eq i64 %497, %491
  %499 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %496
  %500 = and i64 %497, 4294967295
  %501 = select i1 %498, i64 0, i64 %500
  %502 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %501
  %503 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %501, i32 1
  %504 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %496, i32 1
  %505 = load <2 x float>, ptr %502, align 4, !tbaa !6
  %506 = load <2 x float>, ptr %499, align 4, !tbaa !6
  %507 = fsub fast <2 x float> %505, %506
  %508 = fmul fast <2 x float> %507, %507
  %509 = shufflevector <2 x float> %508, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %510 = fadd fast <2 x float> %509, %508
  %511 = extractelement <2 x float> %510, i64 0
  %512 = fcmp fast ogt float %511, 0.000000e+00
  br i1 %512, label %513, label %518

513:                                              ; preds = %495
  %514 = shufflevector <2 x float> %510, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %515 = tail call fast <4 x float> @llvm.x86.sse.rsqrt.ss(<4 x float> %514)
  %516 = shufflevector <4 x float> %515, <4 x float> undef, <2 x i32> zeroinitializer
  %517 = fmul fast <2 x float> %516, %507
  br label %518

518:                                              ; preds = %513, %495
  %519 = phi <2 x float> [ %517, %513 ], [ %507, %495 ]
  %520 = fmul fast <2 x float> %519, %494
  %521 = extractelement <2 x float> %520, i64 1
  %522 = extractelement <2 x float> %506, i64 0
  %523 = fadd fast float %521, %522
  %524 = load ptr, ptr %488, align 8, !tbaa !120
  store float %523, ptr %524, align 4, !tbaa !133
  %525 = extractelement <2 x float> %520, i64 0
  %526 = shufflevector <2 x float> %506, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %527 = fsub fast <2 x float> %526, %520
  %528 = extractelement <2 x float> %527, i64 0
  %529 = getelementptr inbounds %struct.ImVec2, ptr %524, i64 0, i32 1
  store float %528, ptr %529, align 4, !tbaa !134
  %530 = getelementptr inbounds %struct.ImDrawVert, ptr %524, i64 0, i32 1
  store i64 %15, ptr %530, align 4
  %531 = load ptr, ptr %488, align 8, !tbaa !120
  %532 = getelementptr inbounds %struct.ImDrawVert, ptr %531, i64 0, i32 2
  store i32 %3, ptr %532, align 4, !tbaa !123
  %533 = getelementptr inbounds %struct.ImDrawVert, ptr %531, i64 1
  %534 = load <2 x float>, ptr %502, align 4, !tbaa !6
  %535 = shufflevector <2 x float> %534, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %536 = fadd fast <2 x float> %535, %520
  %537 = fsub fast <2 x float> %535, %520
  %538 = shufflevector <2 x float> %537, <2 x float> %536, <2 x i32> <i32 0, i32 3>
  %539 = shufflevector <2 x float> %538, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %539, ptr %533, align 4, !tbaa !6
  %540 = getelementptr inbounds %struct.ImDrawVert, ptr %531, i64 1, i32 1
  store i64 %15, ptr %540, align 4
  %541 = load ptr, ptr %488, align 8, !tbaa !120
  %542 = getelementptr inbounds %struct.ImDrawVert, ptr %541, i64 1, i32 2
  store i32 %3, ptr %542, align 4, !tbaa !123
  %543 = load float, ptr %502, align 4, !tbaa !113
  %544 = fsub fast float %543, %521
  %545 = getelementptr inbounds %struct.ImDrawVert, ptr %541, i64 2
  store float %544, ptr %545, align 4, !tbaa !133
  %546 = load float, ptr %503, align 4, !tbaa !112
  %547 = fadd fast float %546, %525
  %548 = getelementptr inbounds %struct.ImDrawVert, ptr %541, i64 2, i32 0, i32 1
  store float %547, ptr %548, align 4, !tbaa !134
  %549 = getelementptr inbounds %struct.ImDrawVert, ptr %541, i64 2, i32 1
  store i64 %15, ptr %549, align 4
  %550 = load ptr, ptr %488, align 8, !tbaa !120
  %551 = getelementptr inbounds %struct.ImDrawVert, ptr %550, i64 2, i32 2
  store i32 %3, ptr %551, align 4, !tbaa !123
  %552 = load float, ptr %499, align 4, !tbaa !113
  %553 = fsub fast float %552, %521
  %554 = getelementptr inbounds %struct.ImDrawVert, ptr %550, i64 3
  store float %553, ptr %554, align 4, !tbaa !133
  %555 = load float, ptr %504, align 4, !tbaa !112
  %556 = fadd fast float %555, %525
  %557 = getelementptr inbounds %struct.ImDrawVert, ptr %550, i64 3, i32 0, i32 1
  store float %556, ptr %557, align 4, !tbaa !134
  %558 = getelementptr inbounds %struct.ImDrawVert, ptr %550, i64 3, i32 1
  store i64 %15, ptr %558, align 4
  %559 = load ptr, ptr %488, align 8, !tbaa !120
  %560 = getelementptr inbounds %struct.ImDrawVert, ptr %559, i64 3, i32 2
  store i32 %3, ptr %560, align 4, !tbaa !123
  %561 = getelementptr inbounds %struct.ImDrawVert, ptr %559, i64 4
  store ptr %561, ptr %488, align 8, !tbaa !120
  %562 = load i32, ptr %489, align 4, !tbaa !71
  %563 = trunc i32 %562 to i16
  %564 = load ptr, ptr %490, align 8, !tbaa !99
  store i16 %563, ptr %564, align 2, !tbaa !121
  %565 = add i16 %563, 1
  %566 = getelementptr inbounds i16, ptr %564, i64 1
  store i16 %565, ptr %566, align 2, !tbaa !121
  %567 = add i16 %563, 2
  %568 = getelementptr inbounds i16, ptr %564, i64 2
  store i16 %567, ptr %568, align 2, !tbaa !121
  %569 = getelementptr inbounds i16, ptr %564, i64 3
  store i16 %563, ptr %569, align 2, !tbaa !121
  %570 = getelementptr inbounds i16, ptr %564, i64 4
  store i16 %567, ptr %570, align 2, !tbaa !121
  %571 = add i16 %563, 3
  %572 = getelementptr inbounds i16, ptr %564, i64 5
  store i16 %571, ptr %572, align 2, !tbaa !121
  %573 = getelementptr inbounds i16, ptr %564, i64 6
  store ptr %573, ptr %490, align 8, !tbaa !99
  %574 = add i32 %562, 4
  store i32 %574, ptr %489, align 4, !tbaa !71
  %575 = icmp eq i64 %497, %492
  br i1 %575, label %576, label %495, !llvm.loop !135

576:                                              ; preds = %518, %479, %6
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 align 2 {
  %5 = icmp slt i32 %2, 3
  %6 = icmp ult i32 %3, 16777216
  %7 = or i1 %5, %6
  br i1 %7, label %311, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !68
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  %13 = load i32, ptr %12, align 8, !tbaa !70
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %195, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 14
  %18 = load float, ptr %17, align 8, !tbaa !83
  %19 = and i32 %3, 16777215
  %20 = mul i32 %2, 9
  %21 = add i32 %20, -6
  %22 = shl nuw nsw i32 %2, 1
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef %21, i32 noundef %22)
  %23 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %24 = load i32, ptr %23, align 4, !tbaa !71
  %25 = add i32 %24, 1
  %26 = trunc i32 %24 to i16
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %28 = load ptr, ptr %27, align 8, !tbaa !99
  %29 = and i32 %2, 1
  %30 = icmp eq i32 %2, 3
  br i1 %30, label %36, label %31

31:                                               ; preds = %16
  %32 = and i32 %2, -2
  %33 = add i32 %32, -4
  br label %72

34:                                               ; preds = %72
  %35 = shl nuw i32 %91, 1
  br label %36

36:                                               ; preds = %34, %16
  %37 = phi ptr [ undef, %16 ], [ %90, %34 ]
  %38 = phi ptr [ %28, %16 ], [ %90, %34 ]
  %39 = phi i32 [ 4, %16 ], [ %35, %34 ]
  %40 = icmp eq i32 %29, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  store i16 %26, ptr %38, align 2, !tbaa !121
  %42 = add i32 %39, %24
  %43 = trunc i32 %42 to i16
  %44 = add i16 %43, -2
  %45 = getelementptr inbounds i16, ptr %38, i64 1
  store i16 %44, ptr %45, align 2, !tbaa !121
  %46 = getelementptr inbounds i16, ptr %38, i64 2
  store i16 %43, ptr %46, align 2, !tbaa !121
  %47 = getelementptr inbounds i16, ptr %38, i64 3
  br label %48

48:                                               ; preds = %36, %41
  %49 = phi ptr [ %37, %36 ], [ %47, %41 ]
  store ptr %49, ptr %27, align 8, !tbaa !99
  %50 = load ptr, ptr %9, align 8, !tbaa !68
  %51 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %50, i64 0, i32 7, i32 1
  %52 = load i32, ptr %51, align 4, !tbaa !78
  %53 = icmp slt i32 %52, %2
  br i1 %53, label %54, label %64

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %50, i64 0, i32 7, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !79
  %57 = icmp eq ptr %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %56)
  br label %59

59:                                               ; preds = %58, %54
  %60 = sext i32 %2 to i64
  %61 = shl nsw i64 %60, 3
  %62 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %61)
  store ptr %62, ptr %55, align 8, !tbaa !79
  store i32 %2, ptr %51, align 4, !tbaa !78
  %63 = load ptr, ptr %9, align 8, !tbaa !68
  br label %64

64:                                               ; preds = %48, %59
  %65 = phi ptr [ %50, %48 ], [ %63, %59 ]
  %66 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %65, i64 0, i32 7, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !125
  %68 = add nsw i32 %2, -1
  %69 = icmp sgt i32 %2, 0
  br i1 %69, label %70, label %131

70:                                               ; preds = %64
  %71 = zext i32 %2 to i64
  br label %102

72:                                               ; preds = %72, %31
  %73 = phi ptr [ %28, %31 ], [ %90, %72 ]
  %74 = phi i32 [ 2, %31 ], [ %91, %72 ]
  %75 = phi i32 [ 0, %31 ], [ %92, %72 ]
  store i16 %26, ptr %73, align 2, !tbaa !121
  %76 = shl nuw i32 %74, 1
  %77 = add i32 %76, %24
  %78 = trunc i32 %77 to i16
  %79 = add i16 %78, -2
  %80 = getelementptr inbounds i16, ptr %73, i64 1
  store i16 %79, ptr %80, align 2, !tbaa !121
  %81 = getelementptr inbounds i16, ptr %73, i64 2
  store i16 %78, ptr %81, align 2, !tbaa !121
  %82 = getelementptr inbounds i16, ptr %73, i64 3
  store i16 %26, ptr %82, align 2, !tbaa !121
  %83 = shl nuw i32 %74, 1
  %84 = or i32 %83, 2
  %85 = add i32 %84, %24
  %86 = trunc i32 %85 to i16
  %87 = add i16 %86, -2
  %88 = getelementptr inbounds i16, ptr %73, i64 4
  store i16 %87, ptr %88, align 2, !tbaa !121
  %89 = getelementptr inbounds i16, ptr %73, i64 5
  store i16 %86, ptr %89, align 2, !tbaa !121
  %90 = getelementptr inbounds i16, ptr %73, i64 6
  %91 = add nuw nsw i32 %74, 2
  %92 = add i32 %75, 2
  %93 = icmp eq i32 %75, %33
  br i1 %93, label %34, label %72, !llvm.loop !136

94:                                               ; preds = %121
  br i1 %69, label %95, label %131

95:                                               ; preds = %94
  %96 = fmul fast float %18, 5.000000e-01
  %97 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %98 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %99 = zext i32 %2 to i64
  %100 = insertelement <2 x float> poison, float %96, i64 0
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer
  br label %135

102:                                              ; preds = %70, %121
  %103 = phi i64 [ 0, %70 ], [ %128, %121 ]
  %104 = phi i32 [ %68, %70 ], [ %129, %121 ]
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %105
  %107 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %103
  %108 = load <2 x float>, ptr %107, align 4, !tbaa !6
  %109 = load <2 x float>, ptr %106, align 4, !tbaa !6
  %110 = fsub fast <2 x float> %108, %109
  %111 = fmul fast <2 x float> %110, %110
  %112 = shufflevector <2 x float> %111, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %113 = fadd fast <2 x float> %112, %111
  %114 = extractelement <2 x float> %113, i64 0
  %115 = fcmp fast ogt float %114, 0.000000e+00
  br i1 %115, label %116, label %121

116:                                              ; preds = %102
  %117 = shufflevector <2 x float> %113, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %118 = tail call fast <4 x float> @llvm.x86.sse.rsqrt.ss(<4 x float> %117)
  %119 = shufflevector <4 x float> %118, <4 x float> undef, <2 x i32> zeroinitializer
  %120 = fmul fast <2 x float> %119, %110
  br label %121

121:                                              ; preds = %116, %102
  %122 = phi <2 x float> [ %120, %116 ], [ %110, %102 ]
  %123 = getelementptr inbounds %struct.ImVec2, ptr %67, i64 %105
  %124 = extractelement <2 x float> %122, i64 1
  store float %124, ptr %123, align 4, !tbaa !113
  %125 = extractelement <2 x float> %122, i64 0
  %126 = fneg fast float %125
  %127 = getelementptr inbounds %struct.ImVec2, ptr %67, i64 %105, i32 1
  store float %126, ptr %127, align 4, !tbaa !112
  %128 = add nuw nsw i64 %103, 1
  %129 = trunc i64 %103 to i32
  %130 = icmp eq i64 %128, %71
  br i1 %130, label %94, label %102, !llvm.loop !137

131:                                              ; preds = %157, %64, %94
  %132 = and i32 %22, 65534
  %133 = load i32, ptr %23, align 4, !tbaa !71
  %134 = add i32 %133, %132
  store i32 %134, ptr %23, align 4, !tbaa !71
  br label %311

135:                                              ; preds = %95, %157
  %136 = phi i64 [ 0, %95 ], [ %192, %157 ]
  %137 = phi i32 [ %68, %95 ], [ %193, %157 ]
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.ImVec2, ptr %67, i64 %138
  %140 = getelementptr inbounds %struct.ImVec2, ptr %67, i64 %136
  %141 = load <2 x float>, ptr %139, align 4, !tbaa !6
  %142 = load <2 x float>, ptr %140, align 4, !tbaa !6
  %143 = fadd fast <2 x float> %142, %141
  %144 = fmul fast <2 x float> %143, <float 5.000000e-01, float 5.000000e-01>
  %145 = fmul fast <2 x float> %144, %144
  %146 = shufflevector <2 x float> %145, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %147 = fadd fast <2 x float> %146, %145
  %148 = extractelement <2 x float> %147, i64 0
  %149 = fcmp fast ogt float %148, 0x3EB0C6F7A0000000
  br i1 %149, label %150, label %157

150:                                              ; preds = %135
  %151 = fdiv fast float 1.000000e+00, %148
  %152 = fcmp fast ogt float %151, 1.000000e+02
  %153 = select i1 %152, float 1.000000e+02, float %151
  %154 = insertelement <2 x float> poison, float %153, i64 0
  %155 = shufflevector <2 x float> %154, <2 x float> poison, <2 x i32> zeroinitializer
  %156 = fmul fast <2 x float> %155, %144
  br label %157

157:                                              ; preds = %150, %135
  %158 = phi <2 x float> [ %156, %150 ], [ %144, %135 ]
  %159 = fmul fast <2 x float> %158, %101
  %160 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %136
  %161 = load ptr, ptr %97, align 8, !tbaa !120
  %162 = load <2 x float>, ptr %160, align 4, !tbaa !6
  %163 = fsub fast <2 x float> %162, %159
  store <2 x float> %163, ptr %161, align 4, !tbaa !6
  %164 = getelementptr inbounds %struct.ImDrawVert, ptr %161, i64 0, i32 1
  store i64 %11, ptr %164, align 4
  %165 = load ptr, ptr %97, align 8, !tbaa !120
  %166 = getelementptr inbounds %struct.ImDrawVert, ptr %165, i64 0, i32 2
  store i32 %3, ptr %166, align 4, !tbaa !123
  %167 = getelementptr inbounds %struct.ImDrawVert, ptr %165, i64 1
  %168 = load <2 x float>, ptr %160, align 4, !tbaa !6
  %169 = fadd fast <2 x float> %168, %159
  store <2 x float> %169, ptr %167, align 4, !tbaa !6
  %170 = getelementptr inbounds %struct.ImDrawVert, ptr %165, i64 1, i32 1
  store i64 %11, ptr %170, align 4
  %171 = load ptr, ptr %97, align 8, !tbaa !120
  %172 = getelementptr inbounds %struct.ImDrawVert, ptr %171, i64 1, i32 2
  store i32 %19, ptr %172, align 4, !tbaa !123
  %173 = getelementptr inbounds %struct.ImDrawVert, ptr %171, i64 2
  store ptr %173, ptr %97, align 8, !tbaa !120
  %174 = trunc i64 %136 to i32
  %175 = shl i32 %174, 1
  %176 = add i32 %175, %24
  %177 = trunc i32 %176 to i16
  %178 = load ptr, ptr %98, align 8, !tbaa !99
  store i16 %177, ptr %178, align 2, !tbaa !121
  %179 = shl i32 %137, 1
  %180 = add i32 %179, %24
  %181 = trunc i32 %180 to i16
  %182 = getelementptr inbounds i16, ptr %178, i64 1
  store i16 %181, ptr %182, align 2, !tbaa !121
  %183 = add i32 %179, %25
  %184 = trunc i32 %183 to i16
  %185 = getelementptr inbounds i16, ptr %178, i64 2
  store i16 %184, ptr %185, align 2, !tbaa !121
  %186 = getelementptr inbounds i16, ptr %178, i64 3
  store i16 %184, ptr %186, align 2, !tbaa !121
  %187 = add i32 %175, %25
  %188 = trunc i32 %187 to i16
  %189 = getelementptr inbounds i16, ptr %178, i64 4
  store i16 %188, ptr %189, align 2, !tbaa !121
  %190 = getelementptr inbounds i16, ptr %178, i64 5
  store i16 %177, ptr %190, align 2, !tbaa !121
  %191 = getelementptr inbounds i16, ptr %178, i64 6
  store ptr %191, ptr %98, align 8, !tbaa !99
  %192 = add nuw nsw i64 %136, 1
  %193 = trunc i64 %136 to i32
  %194 = icmp eq i64 %192, %99
  br i1 %194, label %131, label %135, !llvm.loop !138

195:                                              ; preds = %8
  %196 = mul i32 %2, 3
  %197 = add i32 %196, -6
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef %197, i32 noundef %2)
  %198 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %199 = zext i32 %2 to i64
  %200 = load ptr, ptr %198, align 8, !tbaa !120
  %201 = and i64 %199, 1
  %202 = icmp eq i32 %2, 1
  br i1 %202, label %205, label %203

203:                                              ; preds = %195
  %204 = and i64 %199, 4294967294
  br label %231

205:                                              ; preds = %231, %195
  %206 = phi ptr [ %200, %195 ], [ %249, %231 ]
  %207 = phi i64 [ 0, %195 ], [ %250, %231 ]
  %208 = icmp eq i64 %201, 0
  br i1 %208, label %217, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %207
  %211 = load i64, ptr %210, align 4
  store i64 %211, ptr %206, align 4
  %212 = load ptr, ptr %198, align 8, !tbaa !120
  %213 = getelementptr inbounds %struct.ImDrawVert, ptr %212, i64 0, i32 1
  store i64 %11, ptr %213, align 4
  %214 = load ptr, ptr %198, align 8, !tbaa !120
  %215 = getelementptr inbounds %struct.ImDrawVert, ptr %214, i64 0, i32 2
  store i32 %3, ptr %215, align 4, !tbaa !123
  %216 = getelementptr inbounds %struct.ImDrawVert, ptr %214, i64 1
  store ptr %216, ptr %198, align 8, !tbaa !120
  br label %217

217:                                              ; preds = %205, %209
  %218 = icmp sgt i32 %2, 2
  %219 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %220 = load i32, ptr %219, align 4, !tbaa !71
  br i1 %218, label %221, label %273

221:                                              ; preds = %217
  %222 = trunc i32 %220 to i16
  %223 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %224 = load ptr, ptr %223, align 8, !tbaa !99
  %225 = add i32 %2, -2
  %226 = add i32 %2, -3
  %227 = and i32 %225, 3
  %228 = icmp ult i32 %226, 3
  br i1 %228, label %253, label %229

229:                                              ; preds = %221
  %230 = and i32 %225, -4
  br label %277

231:                                              ; preds = %231, %203
  %232 = phi ptr [ %200, %203 ], [ %249, %231 ]
  %233 = phi i64 [ 0, %203 ], [ %250, %231 ]
  %234 = phi i64 [ 0, %203 ], [ %251, %231 ]
  %235 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %233
  %236 = load i64, ptr %235, align 4
  store i64 %236, ptr %232, align 4
  %237 = load ptr, ptr %198, align 8, !tbaa !120
  %238 = getelementptr inbounds %struct.ImDrawVert, ptr %237, i64 0, i32 1
  store i64 %11, ptr %238, align 4
  %239 = load ptr, ptr %198, align 8, !tbaa !120
  %240 = getelementptr inbounds %struct.ImDrawVert, ptr %239, i64 0, i32 2
  store i32 %3, ptr %240, align 4, !tbaa !123
  %241 = getelementptr inbounds %struct.ImDrawVert, ptr %239, i64 1
  store ptr %241, ptr %198, align 8, !tbaa !120
  %242 = or i64 %233, 1
  %243 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 %242
  %244 = load i64, ptr %243, align 4
  store i64 %244, ptr %241, align 4
  %245 = load ptr, ptr %198, align 8, !tbaa !120
  %246 = getelementptr inbounds %struct.ImDrawVert, ptr %245, i64 0, i32 1
  store i64 %11, ptr %246, align 4
  %247 = load ptr, ptr %198, align 8, !tbaa !120
  %248 = getelementptr inbounds %struct.ImDrawVert, ptr %247, i64 0, i32 2
  store i32 %3, ptr %248, align 4, !tbaa !123
  %249 = getelementptr inbounds %struct.ImDrawVert, ptr %247, i64 1
  store ptr %249, ptr %198, align 8, !tbaa !120
  %250 = add nuw nsw i64 %233, 2
  %251 = add nuw nsw i64 %234, 2
  %252 = icmp eq i64 %251, %204
  br i1 %252, label %205, label %231, !llvm.loop !139

253:                                              ; preds = %277, %221
  %254 = phi ptr [ undef, %221 ], [ %307, %277 ]
  %255 = phi ptr [ %224, %221 ], [ %307, %277 ]
  %256 = phi i32 [ 2, %221 ], [ %308, %277 ]
  %257 = icmp eq i32 %227, 0
  br i1 %257, label %271, label %258

258:                                              ; preds = %253, %258
  %259 = phi ptr [ %267, %258 ], [ %255, %253 ]
  %260 = phi i32 [ %268, %258 ], [ %256, %253 ]
  %261 = phi i32 [ %269, %258 ], [ 0, %253 ]
  store i16 %222, ptr %259, align 2, !tbaa !121
  %262 = add i32 %220, %260
  %263 = trunc i32 %262 to i16
  %264 = add i16 %263, -1
  %265 = getelementptr inbounds i16, ptr %259, i64 1
  store i16 %264, ptr %265, align 2, !tbaa !121
  %266 = getelementptr inbounds i16, ptr %259, i64 2
  store i16 %263, ptr %266, align 2, !tbaa !121
  %267 = getelementptr inbounds i16, ptr %259, i64 3
  %268 = add nuw nsw i32 %260, 1
  %269 = add i32 %261, 1
  %270 = icmp eq i32 %269, %227
  br i1 %270, label %271, label %258, !llvm.loop !140

271:                                              ; preds = %258, %253
  %272 = phi ptr [ %254, %253 ], [ %267, %258 ]
  store ptr %272, ptr %223, align 8, !tbaa !99
  br label %273

273:                                              ; preds = %217, %271
  %274 = and i32 %2, 65535
  %275 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %276 = add i32 %220, %274
  store i32 %276, ptr %275, align 4, !tbaa !71
  br label %311

277:                                              ; preds = %277, %229
  %278 = phi ptr [ %224, %229 ], [ %307, %277 ]
  %279 = phi i32 [ 2, %229 ], [ %308, %277 ]
  %280 = phi i32 [ 0, %229 ], [ %309, %277 ]
  store i16 %222, ptr %278, align 2, !tbaa !121
  %281 = add i32 %220, %279
  %282 = trunc i32 %281 to i16
  %283 = add i16 %282, -1
  %284 = getelementptr inbounds i16, ptr %278, i64 1
  store i16 %283, ptr %284, align 2, !tbaa !121
  %285 = getelementptr inbounds i16, ptr %278, i64 2
  store i16 %282, ptr %285, align 2, !tbaa !121
  %286 = getelementptr inbounds i16, ptr %278, i64 3
  %287 = or i32 %279, 1
  store i16 %222, ptr %286, align 2, !tbaa !121
  %288 = add i32 %220, %287
  %289 = trunc i32 %288 to i16
  %290 = add i16 %289, -1
  %291 = getelementptr inbounds i16, ptr %278, i64 4
  store i16 %290, ptr %291, align 2, !tbaa !121
  %292 = getelementptr inbounds i16, ptr %278, i64 5
  store i16 %289, ptr %292, align 2, !tbaa !121
  %293 = getelementptr inbounds i16, ptr %278, i64 6
  %294 = add nuw nsw i32 %279, 2
  store i16 %222, ptr %293, align 2, !tbaa !121
  %295 = add i32 %220, %294
  %296 = trunc i32 %295 to i16
  %297 = add i16 %296, -1
  %298 = getelementptr inbounds i16, ptr %278, i64 7
  store i16 %297, ptr %298, align 2, !tbaa !121
  %299 = getelementptr inbounds i16, ptr %278, i64 8
  store i16 %296, ptr %299, align 2, !tbaa !121
  %300 = getelementptr inbounds i16, ptr %278, i64 9
  %301 = add nuw nsw i32 %279, 3
  store i16 %222, ptr %300, align 2, !tbaa !121
  %302 = add i32 %220, %301
  %303 = trunc i32 %302 to i16
  %304 = add i16 %303, -1
  %305 = getelementptr inbounds i16, ptr %278, i64 10
  store i16 %304, ptr %305, align 2, !tbaa !121
  %306 = getelementptr inbounds i16, ptr %278, i64 11
  store i16 %303, ptr %306, align 2, !tbaa !121
  %307 = getelementptr inbounds i16, ptr %278, i64 12
  %308 = add nuw nsw i32 %279, 4
  %309 = add i32 %280, 4
  %310 = icmp eq i32 %309, %230
  br i1 %310, label %253, label %277, !llvm.loop !142

311:                                              ; preds = %131, %273, %4
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #7 align 2 {
  %7 = fcmp fast olt float %2, 5.000000e-01
  br i1 %7, label %8, label %47

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %10 = load i32, ptr %9, align 8, !tbaa !80
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !78
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = add nsw i32 %10, 1
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = sdiv i32 %10, 2
  %19 = add nsw i32 %18, %10
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %19, %17 ], [ 8, %14 ]
  %22 = tail call i32 @llvm.smax.i32(i32 %21, i32 %15)
  %23 = icmp slt i32 %10, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = sext i32 %22 to i64
  %26 = shl nsw i64 %25, 3
  %27 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %26)
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !79
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = load i32, ptr %9, align 8, !tbaa !80
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %27, ptr nonnull align 4 %29, i64 %34, i1 false)
  %35 = load ptr, ptr %28, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %35)
  br label %36

36:                                               ; preds = %31, %24
  store ptr %27, ptr %28, align 8, !tbaa !79
  store i32 %22, ptr %11, align 4, !tbaa !78
  %37 = load i32, ptr %9, align 8, !tbaa !80
  br label %38

38:                                               ; preds = %8, %20, %36
  %39 = phi i32 [ %37, %36 ], [ %10, %20 ], [ %10, %8 ]
  %40 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !79
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds %struct.ImVec2, ptr %41, i64 %42
  %44 = load i64, ptr %1, align 4
  store i64 %44, ptr %43, align 4
  %45 = load i32, ptr %9, align 8, !tbaa !80
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr %9, align 8, !tbaa !80
  br label %232

47:                                               ; preds = %6
  %48 = icmp slt i32 %5, 1
  br i1 %48, label %49, label %80

49:                                               ; preds = %47
  %50 = fadd fast float %2, 0x3FEFFFFDE0000000
  %51 = fptosi float %50 to i32
  %52 = icmp slt i32 %51, 64
  %53 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %54 = load ptr, ptr %53, align 8, !tbaa !68
  br i1 %52, label %55, label %60

55:                                               ; preds = %49
  %56 = sext i32 %51 to i64
  %57 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %54, i64 0, i32 10, i64 %56
  %58 = load i8, ptr %57, align 1, !tbaa !46
  %59 = zext i8 %58 to i32
  br label %75

60:                                               ; preds = %49
  %61 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %54, i64 0, i32 4
  %62 = load float, ptr %61, align 8, !tbaa !45
  %63 = tail call fast float @llvm.minnum.f32(float %62, float %2)
  %64 = fdiv fast float %63, %2
  %65 = fsub fast float 1.000000e+00, %64
  %66 = tail call fast float @acosf(float noundef %65) #38
  %67 = fdiv fast float 0x400921FB60000000, %66
  %68 = tail call fast float @llvm.ceil.f32(float %67)
  %69 = fptosi float %68 to i32
  %70 = add nsw i32 %69, 1
  %71 = sdiv i32 %70, 2
  %72 = shl nsw i32 %71, 1
  %73 = tail call i32 @llvm.smin.i32(i32 %72, i32 512)
  %74 = tail call i32 @llvm.smax.i32(i32 %73, i32 4)
  br label %75

75:                                               ; preds = %55, %60
  %76 = phi i32 [ %59, %55 ], [ %74, %60 ]
  %77 = trunc i32 %76 to i16
  %78 = udiv i16 48, %77
  %79 = zext i16 %78 to i32
  br label %80

80:                                               ; preds = %75, %47
  %81 = phi i32 [ %79, %75 ], [ %5, %47 ]
  %82 = icmp eq i32 %81, 0
  %83 = tail call i32 @llvm.smin.i32(i32 %81, i32 12)
  %84 = select i1 %82, i32 1, i32 %83
  %85 = sub nsw i32 %4, %3
  %86 = tail call i32 @llvm.abs.i32(i32 %85, i1 true)
  %87 = add nuw nsw i32 %86, 1
  %88 = icmp ugt i32 %84, 1
  br i1 %88, label %89, label %101

89:                                               ; preds = %80
  %90 = udiv i32 %86, %84
  %91 = add nuw nsw i32 %90, 1
  %92 = urem i32 %86, %84
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = add nuw nsw i32 %90, 2
  %96 = sub nsw i32 %84, %92
  %97 = trunc i32 %96 to i8
  %98 = sdiv i8 %97, -2
  %99 = sext i8 %98 to i32
  %100 = add nsw i32 %84, %99
  br label %101

101:                                              ; preds = %89, %94, %80
  %102 = phi i1 [ false, %80 ], [ true, %94 ], [ false, %89 ]
  %103 = phi i32 [ %87, %80 ], [ %95, %94 ], [ %91, %89 ]
  %104 = phi i32 [ 1, %80 ], [ %100, %94 ], [ %83, %89 ]
  %105 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %106 = load i32, ptr %105, align 8, !tbaa !143
  %107 = add nsw i32 %106, %103
  %108 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %109 = load i32, ptr %108, align 4, !tbaa !78
  %110 = icmp slt i32 %109, %107
  br i1 %110, label %111, label %133

111:                                              ; preds = %101
  %112 = icmp eq i32 %109, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %111
  %114 = sdiv i32 %109, 2
  %115 = add nsw i32 %114, %109
  br label %116

116:                                              ; preds = %113, %111
  %117 = phi i32 [ %115, %113 ], [ 8, %111 ]
  %118 = tail call i32 @llvm.smax.i32(i32 %117, i32 %107)
  %119 = icmp slt i32 %109, %118
  br i1 %119, label %120, label %133

120:                                              ; preds = %116
  %121 = sext i32 %118 to i64
  %122 = shl nsw i64 %121, 3
  %123 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %122)
  %124 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %125 = load ptr, ptr %124, align 8, !tbaa !79
  %126 = icmp eq ptr %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = load i32, ptr %105, align 8, !tbaa !80
  %129 = sext i32 %128 to i64
  %130 = shl nsw i64 %129, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %123, ptr nonnull align 4 %125, i64 %130, i1 false)
  %131 = load ptr, ptr %124, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %131)
  br label %132

132:                                              ; preds = %127, %120
  store ptr %123, ptr %124, align 8, !tbaa !79
  store i32 %118, ptr %108, align 4, !tbaa !78
  br label %133

133:                                              ; preds = %101, %116, %132
  store i32 %107, ptr %105, align 8, !tbaa !80
  %134 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !144
  %136 = sext i32 %106 to i64
  %137 = getelementptr inbounds %struct.ImVec2, ptr %135, i64 %136
  %138 = icmp ugt i32 %3, 47
  br i1 %138, label %139, label %144

139:                                              ; preds = %133
  %140 = srem i32 %3, 48
  %141 = icmp slt i32 %140, 0
  %142 = add nsw i32 %140, 48
  %143 = select i1 %141, i32 %142, i32 %140
  br label %144

144:                                              ; preds = %139, %133
  %145 = phi i32 [ %3, %133 ], [ %143, %139 ]
  %146 = icmp slt i32 %4, %3
  %147 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %148 = load ptr, ptr %147, align 8, !tbaa !68
  %149 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %150 = load float, ptr %1, align 4, !tbaa !113
  br i1 %146, label %167, label %151

151:                                              ; preds = %144
  %152 = sext i32 %145 to i64
  %153 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %148, i64 0, i32 8, i64 %152
  %154 = load float, ptr %149, align 4, !tbaa !112
  %155 = load <2 x float>, ptr %153, align 8
  %156 = insertelement <2 x float> poison, float %2, i64 0
  %157 = shufflevector <2 x float> %156, <2 x float> poison, <2 x i32> zeroinitializer
  %158 = fmul fast <2 x float> %155, %157
  %159 = insertelement <2 x float> poison, float %150, i64 0
  %160 = insertelement <2 x float> %159, float %154, i64 1
  %161 = fadd fast <2 x float> %160, %158
  store <2 x float> %161, ptr %137, align 4, !tbaa !6
  %162 = getelementptr inbounds %struct.ImVec2, ptr %137, i64 1
  %163 = add nsw i32 %104, %3
  %164 = icmp sgt i32 %163, %4
  br i1 %164, label %217, label %165

165:                                              ; preds = %151
  %166 = add nsw i32 %145, %104
  br label %183

167:                                              ; preds = %144
  %168 = zext i32 %145 to i64
  %169 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %148, i64 0, i32 8, i64 %168
  %170 = load float, ptr %149, align 4, !tbaa !112
  %171 = load <2 x float>, ptr %169, align 8
  %172 = insertelement <2 x float> poison, float %2, i64 0
  %173 = shufflevector <2 x float> %172, <2 x float> poison, <2 x i32> zeroinitializer
  %174 = fmul fast <2 x float> %171, %173
  %175 = insertelement <2 x float> poison, float %150, i64 0
  %176 = insertelement <2 x float> %175, float %170, i64 1
  %177 = fadd fast <2 x float> %176, %174
  store <2 x float> %177, ptr %137, align 4, !tbaa !6
  %178 = getelementptr inbounds %struct.ImVec2, ptr %137, i64 1
  %179 = sub nsw i32 %3, %104
  %180 = icmp slt i32 %179, %4
  br i1 %180, label %217, label %181

181:                                              ; preds = %167
  %182 = sub nsw i32 %145, %104
  br label %200

183:                                              ; preds = %165, %183
  %184 = phi ptr [ %162, %165 ], [ %196, %183 ]
  %185 = phi i32 [ %166, %165 ], [ %198, %183 ]
  %186 = phi i32 [ %163, %165 ], [ %197, %183 ]
  %187 = icmp sgt i32 %185, 47
  %188 = add nsw i32 %185, -48
  %189 = select i1 %187, i32 %188, i32 %185
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %148, i64 0, i32 8, i64 %190
  %192 = load <2 x float>, ptr %191, align 8
  %193 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %194 = fmul fast <2 x float> %192, %157
  %195 = fadd fast <2 x float> %193, %194
  store <2 x float> %195, ptr %184, align 4, !tbaa !6
  %196 = getelementptr inbounds %struct.ImVec2, ptr %184, i64 1
  %197 = add nsw i32 %84, %186
  %198 = add nsw i32 %189, %84
  %199 = icmp sgt i32 %197, %4
  br i1 %199, label %217, label %183, !llvm.loop !145

200:                                              ; preds = %181, %200
  %201 = phi ptr [ %178, %181 ], [ %213, %200 ]
  %202 = phi i32 [ %179, %181 ], [ %214, %200 ]
  %203 = phi i32 [ %182, %181 ], [ %215, %200 ]
  %204 = icmp slt i32 %203, 0
  %205 = add nsw i32 %203, 48
  %206 = select i1 %204, i32 %205, i32 %203
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %148, i64 0, i32 8, i64 %207
  %209 = load <2 x float>, ptr %208, align 8
  %210 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %211 = fmul fast <2 x float> %209, %173
  %212 = fadd fast <2 x float> %210, %211
  store <2 x float> %212, ptr %201, align 4, !tbaa !6
  %213 = getelementptr inbounds %struct.ImVec2, ptr %201, i64 1
  %214 = sub nsw i32 %202, %84
  %215 = sub nsw i32 %206, %84
  %216 = icmp slt i32 %214, %4
  br i1 %216, label %217, label %200, !llvm.loop !146

217:                                              ; preds = %183, %200, %151, %167
  %218 = phi ptr [ %178, %167 ], [ %162, %151 ], [ %213, %200 ], [ %196, %183 ]
  br i1 %102, label %219, label %232

219:                                              ; preds = %217
  %220 = srem i32 %4, 48
  %221 = icmp slt i32 %220, 0
  %222 = add nsw i32 %220, 48
  %223 = select i1 %221, i32 %222, i32 %220
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %148, i64 0, i32 8, i64 %224
  %226 = load <2 x float>, ptr %225, align 8
  %227 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %228 = insertelement <2 x float> poison, float %2, i64 0
  %229 = shufflevector <2 x float> %228, <2 x float> poison, <2 x i32> zeroinitializer
  %230 = fmul fast <2 x float> %226, %229
  %231 = fadd fast <2 x float> %227, %230
  store <2 x float> %231, ptr %218, align 4, !tbaa !6
  br label %232

232:                                              ; preds = %217, %219, %38
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?_PathArcToN@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, float noundef %3, float noundef %4, i32 noundef %5) local_unnamed_addr #0 align 2 {
  %7 = fcmp fast olt float %2, 5.000000e-01
  %8 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %9 = load i32, ptr %8, align 8, !tbaa !80
  br i1 %7, label %10, label %47

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !78
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %10
  %15 = add nsw i32 %9, 1
  %16 = icmp eq i32 %9, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = sdiv i32 %9, 2
  %19 = add nsw i32 %18, %9
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %19, %17 ], [ 8, %14 ]
  %22 = tail call i32 @llvm.smax.i32(i32 %21, i32 %15)
  %23 = icmp slt i32 %9, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = sext i32 %22 to i64
  %26 = shl nsw i64 %25, 3
  %27 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %26)
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !79
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = load i32, ptr %8, align 8, !tbaa !80
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %27, ptr nonnull align 4 %29, i64 %34, i1 false)
  %35 = load ptr, ptr %28, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %35)
  br label %36

36:                                               ; preds = %31, %24
  store ptr %27, ptr %28, align 8, !tbaa !79
  store i32 %22, ptr %11, align 4, !tbaa !78
  %37 = load i32, ptr %8, align 8, !tbaa !80
  br label %38

38:                                               ; preds = %10, %20, %36
  %39 = phi i32 [ %37, %36 ], [ %9, %20 ], [ %9, %10 ]
  %40 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !79
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds %struct.ImVec2, ptr %41, i64 %42
  %44 = load i64, ptr %1, align 4
  store i64 %44, ptr %43, align 4
  %45 = load i32, ptr %8, align 8, !tbaa !80
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr %8, align 8, !tbaa !80
  br label %124

47:                                               ; preds = %6
  %48 = add i32 %5, 1
  %49 = add nsw i32 %48, %9
  %50 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %51 = load i32, ptr %50, align 4, !tbaa !78
  %52 = icmp slt i32 %51, %49
  br i1 %52, label %53, label %66

53:                                               ; preds = %47
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 3
  %56 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %55)
  %57 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !79
  %59 = icmp eq ptr %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %53
  %61 = load i32, ptr %8, align 8, !tbaa !80
  %62 = sext i32 %61 to i64
  %63 = shl nsw i64 %62, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %56, ptr nonnull align 4 %58, i64 %63, i1 false)
  %64 = load ptr, ptr %57, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %64)
  br label %65

65:                                               ; preds = %60, %53
  store ptr %56, ptr %57, align 8, !tbaa !79
  store i32 %49, ptr %50, align 4, !tbaa !78
  br label %66

66:                                               ; preds = %47, %65
  %67 = icmp slt i32 %5, 0
  br i1 %67, label %124, label %68

68:                                               ; preds = %66
  %69 = sitofp i32 %5 to float
  %70 = fsub fast float %4, %3
  %71 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %72 = load i32, ptr %8, align 8, !tbaa !80
  %73 = insertelement <2 x float> poison, float %2, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fdiv fast float 1.000000e+00, %69
  br label %76

76:                                               ; preds = %68, %115
  %77 = phi i32 [ %72, %68 ], [ %121, %115 ]
  %78 = phi i32 [ 0, %68 ], [ %122, %115 ]
  %79 = sitofp i32 %78 to float
  %80 = fmul fast float %70, %79
  %81 = fmul fast float %80, %75
  %82 = fadd fast float %81, %3
  %83 = tail call fast float @llvm.sin.f32(float %82)
  %84 = tail call fast float @llvm.cos.f32(float %82)
  %85 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %86 = insertelement <2 x float> poison, float %84, i64 0
  %87 = insertelement <2 x float> %86, float %83, i64 1
  %88 = fmul fast <2 x float> %87, %74
  %89 = fadd fast <2 x float> %85, %88
  %90 = load i32, ptr %50, align 4, !tbaa !78
  %91 = icmp eq i32 %77, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %76
  %93 = add nsw i32 %77, 1
  %94 = icmp eq i32 %77, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = sdiv i32 %77, 2
  %97 = add nsw i32 %96, %77
  br label %98

98:                                               ; preds = %95, %92
  %99 = phi i32 [ %97, %95 ], [ 8, %92 ]
  %100 = tail call i32 @llvm.smax.i32(i32 %99, i32 %93)
  %101 = icmp slt i32 %77, %100
  br i1 %101, label %102, label %115

102:                                              ; preds = %98
  %103 = sext i32 %100 to i64
  %104 = shl nsw i64 %103, 3
  %105 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %104)
  %106 = load ptr, ptr %71, align 8, !tbaa !79
  %107 = icmp eq ptr %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = load i32, ptr %8, align 8, !tbaa !80
  %110 = sext i32 %109 to i64
  %111 = shl nsw i64 %110, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %105, ptr nonnull align 4 %106, i64 %111, i1 false)
  %112 = load ptr, ptr %71, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %112)
  br label %113

113:                                              ; preds = %108, %102
  store ptr %105, ptr %71, align 8, !tbaa !79
  store i32 %100, ptr %50, align 4, !tbaa !78
  %114 = load i32, ptr %8, align 8, !tbaa !80
  br label %115

115:                                              ; preds = %76, %98, %113
  %116 = phi i32 [ %114, %113 ], [ %77, %98 ], [ %77, %76 ]
  %117 = load ptr, ptr %71, align 8, !tbaa !79
  %118 = sext i32 %116 to i64
  %119 = getelementptr inbounds %struct.ImVec2, ptr %117, i64 %118
  store <2 x float> %89, ptr %119, align 4
  %120 = load i32, ptr %8, align 8, !tbaa !80
  %121 = add nsw i32 %120, 1
  store i32 %121, ptr %8, align 8, !tbaa !80
  %122 = add nuw i32 %78, 1
  %123 = icmp eq i32 %78, %5
  br i1 %123, label %124, label %76, !llvm.loop !147

124:                                              ; preds = %115, %66, %38
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #7 align 2 {
  %6 = fcmp fast olt float %2, 5.000000e-01
  br i1 %6, label %7, label %46

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %9 = load i32, ptr %8, align 8, !tbaa !80
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !78
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %37

13:                                               ; preds = %7
  %14 = add nsw i32 %9, 1
  %15 = icmp eq i32 %9, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = sdiv i32 %9, 2
  %18 = add nsw i32 %17, %9
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi i32 [ %18, %16 ], [ 8, %13 ]
  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 %14)
  %22 = icmp slt i32 %9, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = sext i32 %21 to i64
  %25 = shl nsw i64 %24, 3
  %26 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %25)
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !79
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = load i32, ptr %8, align 8, !tbaa !80
  %32 = sext i32 %31 to i64
  %33 = shl nsw i64 %32, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %26, ptr nonnull align 4 %28, i64 %33, i1 false)
  %34 = load ptr, ptr %27, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %34)
  br label %35

35:                                               ; preds = %30, %23
  store ptr %26, ptr %27, align 8, !tbaa !79
  store i32 %21, ptr %10, align 4, !tbaa !78
  %36 = load i32, ptr %8, align 8, !tbaa !80
  br label %37

37:                                               ; preds = %7, %19, %35
  %38 = phi i32 [ %36, %35 ], [ %9, %19 ], [ %9, %7 ]
  %39 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !79
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds %struct.ImVec2, ptr %40, i64 %41
  %43 = load i64, ptr %1, align 4
  store i64 %43, ptr %42, align 4
  %44 = load i32, ptr %8, align 8, !tbaa !80
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr %8, align 8, !tbaa !80
  br label %49

46:                                               ; preds = %5
  %47 = shl nsw i32 %4, 2
  %48 = shl nsw i32 %3, 2
  tail call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %48, i32 noundef %47, i32 noundef 0)
  br label %49

49:                                               ; preds = %46, %37
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, float noundef %3, float noundef %4, i32 noundef %5) local_unnamed_addr #0 align 2 {
  %7 = fcmp fast olt float %2, 5.000000e-01
  br i1 %7, label %8, label %47

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %10 = load i32, ptr %9, align 8, !tbaa !80
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !78
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = add nsw i32 %10, 1
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = sdiv i32 %10, 2
  %19 = add nsw i32 %18, %10
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %19, %17 ], [ 8, %14 ]
  %22 = tail call i32 @llvm.smax.i32(i32 %21, i32 %15)
  %23 = icmp slt i32 %10, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = sext i32 %22 to i64
  %26 = shl nsw i64 %25, 3
  %27 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %26)
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !79
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = load i32, ptr %9, align 8, !tbaa !80
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %27, ptr nonnull align 4 %29, i64 %34, i1 false)
  %35 = load ptr, ptr %28, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %35)
  br label %36

36:                                               ; preds = %31, %24
  store ptr %27, ptr %28, align 8, !tbaa !79
  store i32 %22, ptr %11, align 4, !tbaa !78
  %37 = load i32, ptr %9, align 8, !tbaa !80
  br label %38

38:                                               ; preds = %8, %20, %36
  %39 = phi i32 [ %37, %36 ], [ %10, %20 ], [ %10, %8 ]
  %40 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !79
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds %struct.ImVec2, ptr %41, i64 %42
  %44 = load i64, ptr %1, align 4
  store i64 %44, ptr %43, align 4
  %45 = load i32, ptr %9, align 8, !tbaa !80
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr %9, align 8, !tbaa !80
  br label %256

47:                                               ; preds = %6
  %48 = icmp sgt i32 %5, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @"?_PathArcToN@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, float noundef %3, float noundef %4, i32 noundef %5)
  br label %256

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %52 = load ptr, ptr %51, align 8, !tbaa !68
  %53 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %52, i64 0, i32 9
  %54 = load float, ptr %53, align 8, !tbaa !39
  %55 = fcmp fast ult float %54, %2
  br i1 %55, label %220, label %56

56:                                               ; preds = %50
  %57 = fcmp fast olt float %4, %3
  %58 = fmul fast float %3, 0x401E8EC880000000
  %59 = fmul fast float %4, 0x401E8EC880000000
  br i1 %57, label %60, label %73

60:                                               ; preds = %56
  %61 = fcmp fast ult float %58, 0.000000e+00
  %62 = fptosi float %58 to i32
  %63 = sitofp i32 %62 to float
  %64 = fcmp fast une float %58, %63
  %65 = select i1 %61, i1 %64, i1 false
  %66 = sext i1 %65 to i32
  %67 = add nsw i32 %66, %62
  %68 = sitofp i32 %67 to float
  %69 = fptosi float %68 to i32
  %70 = tail call fast float @llvm.ceil.f32(float %59)
  %71 = fptosi float %70 to i32
  %72 = sub nsw i32 %69, %71
  br label %86

73:                                               ; preds = %56
  %74 = tail call fast float @llvm.ceil.f32(float %58)
  %75 = fptosi float %74 to i32
  %76 = fcmp fast ult float %59, 0.000000e+00
  %77 = fptosi float %59 to i32
  %78 = sitofp i32 %77 to float
  %79 = fcmp fast une float %59, %78
  %80 = select i1 %76, i1 %79, i1 false
  %81 = sext i1 %80 to i32
  %82 = add nsw i32 %81, %77
  %83 = sitofp i32 %82 to float
  %84 = fptosi float %83 to i32
  %85 = sub nsw i32 %84, %75
  br label %86

86:                                               ; preds = %73, %60
  %87 = phi i32 [ %85, %73 ], [ %72, %60 ]
  %88 = phi i32 [ %84, %73 ], [ %71, %60 ]
  %89 = phi i32 [ %75, %73 ], [ %69, %60 ]
  %90 = tail call i32 @llvm.smax.i32(i32 %87, i32 0)
  %91 = sitofp i32 %89 to float
  %92 = fmul fast float %91, 0x3FC0C15240000000
  %93 = sitofp i32 %88 to float
  %94 = fmul fast float %93, 0x3FC0C15240000000
  %95 = fsub fast float %92, %3
  %96 = tail call fast float @llvm.fabs.f32(float %95)
  %97 = fcmp fast oge float %96, 0x3EE4F8B580000000
  %98 = fsub fast float %4, %94
  %99 = tail call fast float @llvm.fabs.f32(float %98)
  %100 = fcmp fast oge float %99, 0x3EE4F8B580000000
  %101 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %102 = load i32, ptr %101, align 8, !tbaa !143
  %103 = add nuw nsw i32 %90, 1
  %104 = zext i1 %97 to i32
  %105 = zext i1 %100 to i32
  %106 = add i32 %103, %102
  %107 = add i32 %106, %105
  %108 = add i32 %107, %104
  %109 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %110 = load i32, ptr %109, align 4, !tbaa !78
  %111 = icmp slt i32 %110, %108
  br i1 %111, label %112, label %125

112:                                              ; preds = %86
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 3
  %115 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %114)
  %116 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %117 = load ptr, ptr %116, align 8, !tbaa !79
  %118 = icmp eq ptr %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %112
  %120 = load i32, ptr %101, align 8, !tbaa !80
  %121 = sext i32 %120 to i64
  %122 = shl nsw i64 %121, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %115, ptr nonnull align 4 %117, i64 %122, i1 false)
  %123 = load ptr, ptr %116, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %123)
  br label %124

124:                                              ; preds = %119, %112
  store ptr %115, ptr %116, align 8, !tbaa !79
  store i32 %108, ptr %109, align 4, !tbaa !78
  br label %125

125:                                              ; preds = %86, %124
  %126 = phi i32 [ %110, %86 ], [ %108, %124 ]
  br i1 %97, label %127, label %171

127:                                              ; preds = %125
  %128 = tail call fast float @llvm.sin.f32(float %3)
  %129 = tail call fast float @llvm.cos.f32(float %3)
  %130 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %131 = insertelement <2 x float> poison, float %129, i64 0
  %132 = insertelement <2 x float> %131, float %128, i64 1
  %133 = insertelement <2 x float> poison, float %2, i64 0
  %134 = shufflevector <2 x float> %133, <2 x float> poison, <2 x i32> zeroinitializer
  %135 = fmul fast <2 x float> %132, %134
  %136 = fadd fast <2 x float> %130, %135
  %137 = load i32, ptr %101, align 8, !tbaa !80
  %138 = icmp eq i32 %137, %126
  br i1 %138, label %139, label %163

139:                                              ; preds = %127
  %140 = add nsw i32 %126, 1
  %141 = icmp eq i32 %126, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %139
  %143 = sdiv i32 %126, 2
  %144 = add nsw i32 %143, %126
  br label %145

145:                                              ; preds = %142, %139
  %146 = phi i32 [ %144, %142 ], [ 8, %139 ]
  %147 = tail call i32 @llvm.smax.i32(i32 %146, i32 %140)
  %148 = icmp slt i32 %126, %147
  br i1 %148, label %149, label %163

149:                                              ; preds = %145
  %150 = sext i32 %147 to i64
  %151 = shl nsw i64 %150, 3
  %152 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %151)
  %153 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %154 = load ptr, ptr %153, align 8, !tbaa !79
  %155 = icmp eq ptr %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %149
  %157 = load i32, ptr %101, align 8, !tbaa !80
  %158 = sext i32 %157 to i64
  %159 = shl nsw i64 %158, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %152, ptr nonnull align 4 %154, i64 %159, i1 false)
  %160 = load ptr, ptr %153, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %160)
  br label %161

161:                                              ; preds = %156, %149
  store ptr %152, ptr %153, align 8, !tbaa !79
  store i32 %147, ptr %109, align 4, !tbaa !78
  %162 = load i32, ptr %101, align 8, !tbaa !80
  br label %163

163:                                              ; preds = %127, %145, %161
  %164 = phi i32 [ %162, %161 ], [ %126, %145 ], [ %137, %127 ]
  %165 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %166 = load ptr, ptr %165, align 8, !tbaa !79
  %167 = sext i32 %164 to i64
  %168 = getelementptr inbounds %struct.ImVec2, ptr %166, i64 %167
  store <2 x float> %136, ptr %168, align 4
  %169 = load i32, ptr %101, align 8, !tbaa !80
  %170 = add nsw i32 %169, 1
  store i32 %170, ptr %101, align 8, !tbaa !80
  br label %171

171:                                              ; preds = %163, %125
  %172 = icmp slt i32 %87, 1
  br i1 %172, label %174, label %173

173:                                              ; preds = %171
  tail call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %89, i32 noundef %88, i32 noundef 0)
  br label %174

174:                                              ; preds = %173, %171
  br i1 %100, label %175, label %256

175:                                              ; preds = %174
  %176 = tail call fast float @llvm.sin.f32(float %4)
  %177 = tail call fast float @llvm.cos.f32(float %4)
  %178 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %179 = insertelement <2 x float> poison, float %177, i64 0
  %180 = insertelement <2 x float> %179, float %176, i64 1
  %181 = insertelement <2 x float> poison, float %2, i64 0
  %182 = shufflevector <2 x float> %181, <2 x float> poison, <2 x i32> zeroinitializer
  %183 = fmul fast <2 x float> %180, %182
  %184 = fadd fast <2 x float> %178, %183
  %185 = load i32, ptr %101, align 8, !tbaa !80
  %186 = load i32, ptr %109, align 4, !tbaa !78
  %187 = icmp eq i32 %185, %186
  br i1 %187, label %188, label %212

188:                                              ; preds = %175
  %189 = add nsw i32 %185, 1
  %190 = icmp eq i32 %185, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %188
  %192 = sdiv i32 %185, 2
  %193 = add nsw i32 %192, %185
  br label %194

194:                                              ; preds = %191, %188
  %195 = phi i32 [ %193, %191 ], [ 8, %188 ]
  %196 = tail call i32 @llvm.smax.i32(i32 %195, i32 %189)
  %197 = icmp slt i32 %185, %196
  br i1 %197, label %198, label %212

198:                                              ; preds = %194
  %199 = sext i32 %196 to i64
  %200 = shl nsw i64 %199, 3
  %201 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %200)
  %202 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %203 = load ptr, ptr %202, align 8, !tbaa !79
  %204 = icmp eq ptr %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %198
  %206 = load i32, ptr %101, align 8, !tbaa !80
  %207 = sext i32 %206 to i64
  %208 = shl nsw i64 %207, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %201, ptr nonnull align 4 %203, i64 %208, i1 false)
  %209 = load ptr, ptr %202, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %209)
  br label %210

210:                                              ; preds = %205, %198
  store ptr %201, ptr %202, align 8, !tbaa !79
  store i32 %196, ptr %109, align 4, !tbaa !78
  %211 = load i32, ptr %101, align 8, !tbaa !80
  br label %212

212:                                              ; preds = %175, %194, %210
  %213 = phi i32 [ %211, %210 ], [ %185, %194 ], [ %185, %175 ]
  %214 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %215 = load ptr, ptr %214, align 8, !tbaa !79
  %216 = sext i32 %213 to i64
  %217 = getelementptr inbounds %struct.ImVec2, ptr %215, i64 %216
  store <2 x float> %184, ptr %217, align 4
  %218 = load i32, ptr %101, align 8, !tbaa !80
  %219 = add nsw i32 %218, 1
  store i32 %219, ptr %101, align 8, !tbaa !80
  br label %256

220:                                              ; preds = %50
  %221 = fsub fast float %4, %3
  %222 = tail call fast float @llvm.fabs.f32(float %221)
  %223 = fadd fast float %2, 0x3FEFFFFDE0000000
  %224 = fptosi float %223 to i32
  %225 = icmp slt i32 %224, 64
  br i1 %225, label %226, label %231

226:                                              ; preds = %220
  %227 = sext i32 %224 to i64
  %228 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %52, i64 0, i32 10, i64 %227
  %229 = load i8, ptr %228, align 1, !tbaa !46
  %230 = zext i8 %229 to i32
  br label %246

231:                                              ; preds = %220
  %232 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %52, i64 0, i32 4
  %233 = load float, ptr %232, align 8, !tbaa !45
  %234 = tail call fast float @llvm.minnum.f32(float %233, float %2)
  %235 = fdiv fast float %234, %2
  %236 = fsub fast float 1.000000e+00, %235
  %237 = tail call fast float @acosf(float noundef %236) #38
  %238 = fdiv fast float 0x400921FB60000000, %237
  %239 = tail call fast float @llvm.ceil.f32(float %238)
  %240 = fptosi float %239 to i32
  %241 = add nsw i32 %240, 1
  %242 = sdiv i32 %241, 2
  %243 = shl nsw i32 %242, 1
  %244 = tail call i32 @llvm.smin.i32(i32 %243, i32 512)
  %245 = tail call i32 @llvm.smax.i32(i32 %244, i32 4)
  br label %246

246:                                              ; preds = %226, %231
  %247 = phi i32 [ %230, %226 ], [ %245, %231 ]
  %248 = fdiv fast float 0x401921FB60000000, %222
  %249 = fptosi float %248 to i32
  %250 = sitofp i32 %247 to float
  %251 = fmul fast float %222, 0x3FC45F3060000000
  %252 = fmul fast float %251, %250
  %253 = tail call fast float @llvm.ceil.f32(float %252)
  %254 = fptosi float %253 to i32
  %255 = tail call i32 @llvm.smax.i32(i32 %254, i32 %249)
  tail call void @"?_PathArcToN@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, float noundef %3, float noundef %4, i32 noundef %255)
  br label %256

256:                                              ; preds = %174, %212, %38, %49, %246
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @"?ImBezierCubicCalc@@YA?AUImVec2@@AEBU1@000M@Z"(ptr noalias nocapture writeonly sret(%struct.ImVec2) align 4 %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, float noundef %5) local_unnamed_addr #16 {
  %7 = fsub fast float 1.000000e+00, %5
  %8 = fmul fast float %7, %7
  %9 = fmul fast float %8, %7
  %10 = fmul fast float %7, 3.000000e+00
  %11 = fmul fast float %7, %5
  %12 = fmul fast float %11, %10
  %13 = fmul fast float %5, %5
  %14 = fmul fast float %10, %13
  %15 = fmul fast float %13, %5
  %16 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %17 = insertelement <2 x float> poison, float %9, i64 0
  %18 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> zeroinitializer
  %19 = fmul fast <2 x float> %16, %18
  %20 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %21 = insertelement <2 x float> poison, float %12, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul fast <2 x float> %20, %22
  %24 = fadd fast <2 x float> %23, %19
  %25 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %26 = insertelement <2 x float> poison, float %14, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = fmul fast <2 x float> %25, %27
  %29 = fadd fast <2 x float> %24, %28
  %30 = load <2 x float>, ptr %4, align 4, !tbaa !6
  %31 = insertelement <2 x float> poison, float %15, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = fmul fast <2 x float> %30, %32
  %34 = fadd fast <2 x float> %29, %33
  store <2 x float> %34, ptr %0, align 4, !tbaa !6
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @"?ImBezierQuadraticCalc@@YA?AUImVec2@@AEBU1@00M@Z"(ptr noalias nocapture writeonly sret(%struct.ImVec2) align 4 %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, float noundef %4) local_unnamed_addr #16 {
  %6 = fsub fast float 1.000000e+00, %4
  %7 = fmul fast float %6, %6
  %8 = fmul fast float %4, 2.000000e+00
  %9 = fmul fast float %8, %6
  %10 = fmul fast float %4, %4
  %11 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %12 = insertelement <2 x float> poison, float %7, i64 0
  %13 = shufflevector <2 x float> %12, <2 x float> poison, <2 x i32> zeroinitializer
  %14 = fmul fast <2 x float> %11, %13
  %15 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %16 = insertelement <2 x float> poison, float %9, i64 0
  %17 = shufflevector <2 x float> %16, <2 x float> poison, <2 x i32> zeroinitializer
  %18 = fmul fast <2 x float> %15, %17
  %19 = fadd fast <2 x float> %18, %14
  %20 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %21 = insertelement <2 x float> poison, float %10, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul fast <2 x float> %20, %22
  %24 = fadd fast <2 x float> %19, %23
  store <2 x float> %24, ptr %0, align 4, !tbaa !6
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PathBezierCubicCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4) local_unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %7 = load i32, ptr %6, align 8, !tbaa !80
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %10 = load i32, ptr %6, align 8, !tbaa !80
  br label %11

11:                                               ; preds = %5, %9
  %12 = phi i32 [ %10, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !79
  %15 = add nsw i32 %12, -1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.ImVec2, ptr %14, i64 %16
  %18 = load <2 x float>, ptr %17, align 4
  %19 = icmp eq i32 %4, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %21, align 8, !tbaa !68
  %23 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %22, i64 0, i32 3
  %24 = load float, ptr %23, align 4, !tbaa !148
  %25 = fcmp fast ogt float %24, 0.000000e+00
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@DFNGCDMN@?$AA_?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe?$AAs?$AAs?$AAe?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1287)
  %27 = load ptr, ptr %21, align 8, !tbaa !68
  %28 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %27, i64 0, i32 3
  %29 = load float, ptr %28, align 4, !tbaa !148
  br label %30

30:                                               ; preds = %26, %20
  %31 = phi float [ %29, %26 ], [ %24, %20 ]
  %32 = getelementptr inbounds %struct.ImVec2, ptr %3, i64 0, i32 1
  %33 = load float, ptr %32, align 4, !tbaa !112
  %34 = load float, ptr %3, align 4, !tbaa !113
  %35 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %36 = load float, ptr %35, align 4, !tbaa !112
  %37 = load float, ptr %2, align 4, !tbaa !113
  %38 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %39 = load float, ptr %38, align 4, !tbaa !112
  %40 = load float, ptr %1, align 4, !tbaa !113
  %41 = extractelement <2 x float> %18, i64 0
  %42 = extractelement <2 x float> %18, i64 1
  tail call fastcc void @"?PathBezierCubicCurveToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z"(ptr noundef nonnull %6, float noundef %41, float noundef %42, float noundef %40, float noundef %39, float noundef %37, float noundef %36, float noundef %34, float noundef %33, float noundef %31, i32 noundef 0)
  br label %115

43:                                               ; preds = %11
  %44 = icmp slt i32 %4, 1
  br i1 %44, label %115, label %45

45:                                               ; preds = %43
  %46 = sitofp i32 %4 to float
  %47 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %48 = fdiv fast float 1.000000e+00, %46
  br label %49

49:                                               ; preds = %45, %106
  %50 = phi i32 [ %12, %45 ], [ %112, %106 ]
  %51 = phi i32 [ 1, %45 ], [ %113, %106 ]
  %52 = sitofp i32 %51 to float
  %53 = fmul fast float %52, %48
  %54 = fsub fast float 1.000000e+00, %53
  %55 = fmul fast float %54, %54
  %56 = fmul fast float %55, %54
  %57 = fmul fast float %54, 3.000000e+00
  %58 = fmul fast float %54, %53
  %59 = fmul fast float %58, %57
  %60 = fmul fast float %53, %53
  %61 = fmul fast float %57, %60
  %62 = fmul fast float %60, %53
  %63 = insertelement <2 x float> poison, float %56, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = fmul fast <2 x float> %64, %18
  %66 = load <2 x float>, ptr %1, align 4, !tbaa !6, !noalias !149
  %67 = insertelement <2 x float> poison, float %59, i64 0
  %68 = shufflevector <2 x float> %67, <2 x float> poison, <2 x i32> zeroinitializer
  %69 = fmul fast <2 x float> %66, %68
  %70 = fadd fast <2 x float> %69, %65
  %71 = load <2 x float>, ptr %2, align 4, !tbaa !6, !noalias !149
  %72 = insertelement <2 x float> poison, float %61, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = fmul fast <2 x float> %71, %73
  %75 = fadd fast <2 x float> %70, %74
  %76 = load <2 x float>, ptr %3, align 4, !tbaa !6, !noalias !149
  %77 = insertelement <2 x float> poison, float %62, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = fmul fast <2 x float> %76, %78
  %80 = fadd fast <2 x float> %75, %79
  %81 = load i32, ptr %47, align 4, !tbaa !78
  %82 = icmp eq i32 %50, %81
  br i1 %82, label %83, label %106

83:                                               ; preds = %49
  %84 = add nsw i32 %50, 1
  %85 = icmp eq i32 %50, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = sdiv i32 %50, 2
  %88 = add nsw i32 %87, %50
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi i32 [ %88, %86 ], [ 8, %83 ]
  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 %84)
  %92 = icmp slt i32 %50, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %89
  %94 = sext i32 %91 to i64
  %95 = shl nsw i64 %94, 3
  %96 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %95)
  %97 = load ptr, ptr %13, align 8, !tbaa !79
  %98 = icmp eq ptr %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %93
  %100 = load i32, ptr %6, align 8, !tbaa !80
  %101 = sext i32 %100 to i64
  %102 = shl nsw i64 %101, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %96, ptr nonnull align 4 %97, i64 %102, i1 false)
  %103 = load ptr, ptr %13, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %103)
  br label %104

104:                                              ; preds = %99, %93
  store ptr %96, ptr %13, align 8, !tbaa !79
  store i32 %91, ptr %47, align 4, !tbaa !78
  %105 = load i32, ptr %6, align 8, !tbaa !80
  br label %106

106:                                              ; preds = %49, %89, %104
  %107 = phi i32 [ %105, %104 ], [ %50, %89 ], [ %50, %49 ]
  %108 = load ptr, ptr %13, align 8, !tbaa !79
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds %struct.ImVec2, ptr %108, i64 %109
  store <2 x float> %80, ptr %110, align 4
  %111 = load i32, ptr %6, align 8, !tbaa !80
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr %6, align 8, !tbaa !80
  %113 = add nuw i32 %51, 1
  %114 = icmp eq i32 %51, %4
  br i1 %114, label %115, label %49, !llvm.loop !152

115:                                              ; preds = %106, %43, %30
  ret void
}

; Function Attrs: uwtable
define internal fastcc void @"?PathBezierCubicCurveToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z"(ptr noundef %0, float noundef %1, float noundef %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6, float noundef %7, float noundef %8, float noundef %9, i32 noundef %10) unnamed_addr #0 {
  %12 = tail call i32 @llvm.smax.i32(i32 %10, i32 10)
  %13 = insertelement <2 x float> poison, float %3, i64 0
  %14 = insertelement <2 x float> %13, float %5, i64 1
  %15 = insertelement <2 x float> poison, float %4, i64 0
  %16 = insertelement <2 x float> %15, float %6, i64 1
  %17 = insertelement <2 x float> poison, float %7, i64 0
  %18 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> zeroinitializer
  %19 = insertelement <2 x float> poison, float %8, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %88, %11
  %22 = phi float [ %1, %11 ], [ %117, %88 ]
  %23 = phi float [ %2, %11 ], [ %122, %88 ]
  %24 = phi i32 [ %10, %11 ], [ %123, %88 ]
  %25 = phi <2 x float> [ %14, %11 ], [ %126, %88 ]
  %26 = phi <2 x float> [ %16, %11 ], [ %127, %88 ]
  %27 = fsub fast float %7, %22
  %28 = fsub fast float %8, %23
  %29 = fsub fast <2 x float> %25, %18
  %30 = insertelement <2 x float> poison, float %28, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = fmul fast <2 x float> %29, %31
  %33 = fsub fast <2 x float> %26, %20
  %34 = insertelement <2 x float> poison, float %27, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = fmul fast <2 x float> %33, %35
  %37 = fsub fast <2 x float> %32, %36
  %38 = tail call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %37)
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %40 = fadd fast <2 x float> %39, %38
  %41 = fmul fast <2 x float> %40, %40
  %42 = extractelement <2 x float> %41, i64 0
  %43 = fmul fast float %27, %27
  %44 = fmul fast float %28, %28
  %45 = fadd fast float %44, %43
  %46 = fmul fast float %45, %9
  %47 = fcmp fast olt float %42, %46
  br i1 %47, label %48, label %86

48:                                               ; preds = %21
  %49 = load i32, ptr %0, align 8, !tbaa !80
  %50 = getelementptr inbounds %struct.ImVector.5, ptr %0, i64 0, i32 1
  %51 = load i32, ptr %50, align 4, !tbaa !78
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %53, label %77

53:                                               ; preds = %48
  %54 = add nsw i32 %49, 1
  %55 = icmp eq i32 %49, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = sdiv i32 %49, 2
  %58 = add nsw i32 %57, %49
  br label %59

59:                                               ; preds = %56, %53
  %60 = phi i32 [ %58, %56 ], [ 8, %53 ]
  %61 = tail call i32 @llvm.smax.i32(i32 %60, i32 %54)
  %62 = icmp slt i32 %49, %61
  br i1 %62, label %63, label %77

63:                                               ; preds = %59
  %64 = sext i32 %61 to i64
  %65 = shl nsw i64 %64, 3
  %66 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %65)
  %67 = getelementptr inbounds %struct.ImVector.5, ptr %0, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !79
  %69 = icmp eq ptr %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = load i32, ptr %0, align 8, !tbaa !80
  %72 = sext i32 %71 to i64
  %73 = shl nsw i64 %72, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %66, ptr nonnull align 4 %68, i64 %73, i1 false)
  %74 = load ptr, ptr %67, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %74)
  br label %75

75:                                               ; preds = %70, %63
  store ptr %66, ptr %67, align 8, !tbaa !79
  store i32 %61, ptr %50, align 4, !tbaa !78
  %76 = load i32, ptr %0, align 8, !tbaa !80
  br label %77

77:                                               ; preds = %48, %59, %75
  %78 = phi i32 [ %76, %75 ], [ %49, %59 ], [ %49, %48 ]
  %79 = getelementptr inbounds %struct.ImVector.5, ptr %0, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !79
  %81 = sext i32 %78 to i64
  %82 = getelementptr inbounds %struct.ImVec2, ptr %80, i64 %81
  store float %7, ptr %82, align 4
  %83 = getelementptr inbounds i8, ptr %82, i64 4
  store float %8, ptr %83, align 4
  %84 = load i32, ptr %0, align 8, !tbaa !80
  %85 = add nsw i32 %84, 1
  store i32 %85, ptr %0, align 8, !tbaa !80
  br label %128

86:                                               ; preds = %21
  %87 = icmp eq i32 %24, %12
  br i1 %87, label %128, label %88

88:                                               ; preds = %86
  %89 = insertelement <2 x float> poison, float %22, i64 0
  %90 = insertelement <2 x float> %89, float %7, i64 1
  %91 = fadd fast <2 x float> %25, %90
  %92 = insertelement <2 x float> poison, float %23, i64 0
  %93 = insertelement <2 x float> %92, float %8, i64 1
  %94 = fadd fast <2 x float> %26, %93
  %95 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %96 = fadd fast <2 x float> %95, %25
  %97 = extractelement <2 x float> %96, i64 0
  %98 = fmul fast float %97, 5.000000e-01
  %99 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %100 = fadd fast <2 x float> %99, %26
  %101 = extractelement <2 x float> %100, i64 0
  %102 = fmul fast float %101, 5.000000e-01
  %103 = fmul fast <2 x float> %91, <float 5.000000e-01, float 5.000000e-01>
  %104 = insertelement <2 x float> poison, float %98, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fadd fast <2 x float> %105, %103
  %107 = fmul fast <2 x float> %106, <float 5.000000e-01, float 5.000000e-01>
  %108 = fmul fast <2 x float> %94, <float 5.000000e-01, float 5.000000e-01>
  %109 = insertelement <2 x float> poison, float %102, i64 0
  %110 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> zeroinitializer
  %111 = fadd fast <2 x float> %110, %108
  %112 = fmul fast <2 x float> %111, <float 5.000000e-01, float 5.000000e-01>
  %113 = extractelement <2 x float> %107, i64 0
  %114 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %115 = fadd fast <2 x float> %107, %114
  %116 = extractelement <2 x float> %115, i64 0
  %117 = fmul fast float %116, 5.000000e-01
  %118 = extractelement <2 x float> %112, i64 0
  %119 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %120 = fadd fast <2 x float> %112, %119
  %121 = extractelement <2 x float> %120, i64 0
  %122 = fmul fast float %121, 5.000000e-01
  %123 = add i32 %24, 1
  %124 = extractelement <2 x float> %103, i64 0
  %125 = extractelement <2 x float> %108, i64 0
  tail call fastcc void @"?PathBezierCubicCurveToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMMMH@Z"(ptr noundef %0, float noundef %22, float noundef %23, float noundef %124, float noundef %125, float noundef %113, float noundef %118, float noundef %117, float noundef %122, float noundef %9, i32 noundef %123)
  %126 = shufflevector <2 x float> %107, <2 x float> %103, <2 x i32> <i32 1, i32 3>
  %127 = shufflevector <2 x float> %112, <2 x float> %108, <2 x i32> <i32 1, i32 3>
  br label %21

128:                                              ; preds = %86, %77
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?PathBezierQuadraticCurveTo@ImDrawList@@QEAAXAEBUImVec2@@0H@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i32 noundef %3) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %6 = load i32, ptr %5, align 8, !tbaa !80
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %9 = load i32, ptr %5, align 8, !tbaa !80
  br label %10

10:                                               ; preds = %4, %8
  %11 = phi i32 [ %9, %8 ], [ %6, %4 ]
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !79
  %14 = add nsw i32 %11, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.ImVec2, ptr %13, i64 %15
  %17 = load <2 x float>, ptr %16, align 4
  %18 = icmp eq i32 %3, 0
  br i1 %18, label %19, label %39

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !68
  %22 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %21, i64 0, i32 3
  %23 = load float, ptr %22, align 4, !tbaa !148
  %24 = fcmp fast ogt float %23, 0.000000e+00
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@DFNGCDMN@?$AA_?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe?$AAs?$AAs?$AAe?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1303)
  %26 = load ptr, ptr %20, align 8, !tbaa !68
  %27 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %26, i64 0, i32 3
  %28 = load float, ptr %27, align 4, !tbaa !148
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi float [ %28, %25 ], [ %23, %19 ]
  %31 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %32 = load float, ptr %31, align 4, !tbaa !112
  %33 = load float, ptr %2, align 4, !tbaa !113
  %34 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %35 = load float, ptr %34, align 4, !tbaa !112
  %36 = load float, ptr %1, align 4, !tbaa !113
  %37 = extractelement <2 x float> %17, i64 0
  %38 = extractelement <2 x float> %17, i64 1
  tail call fastcc void @"?PathBezierQuadraticCurveToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMH@Z"(ptr noundef nonnull %5, float noundef %37, float noundef %38, float noundef %36, float noundef %35, float noundef %33, float noundef %32, float noundef %30, i32 noundef 0)
  br label %102

39:                                               ; preds = %10
  %40 = icmp slt i32 %3, 1
  br i1 %40, label %102, label %41

41:                                               ; preds = %39
  %42 = sitofp i32 %3 to float
  %43 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %44 = fdiv fast float 1.000000e+00, %42
  br label %45

45:                                               ; preds = %41, %93
  %46 = phi i32 [ %11, %41 ], [ %99, %93 ]
  %47 = phi i32 [ 1, %41 ], [ %100, %93 ]
  %48 = sitofp i32 %47 to float
  %49 = fmul fast float %48, %44
  %50 = fsub fast float 1.000000e+00, %49
  %51 = fmul fast float %50, %50
  %52 = fmul fast float %49, 2.000000e+00
  %53 = fmul fast float %52, %50
  %54 = fmul fast float %49, %49
  %55 = insertelement <2 x float> poison, float %51, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %57 = fmul fast <2 x float> %56, %17
  %58 = load <2 x float>, ptr %1, align 4, !tbaa !6, !noalias !153
  %59 = insertelement <2 x float> poison, float %53, i64 0
  %60 = shufflevector <2 x float> %59, <2 x float> poison, <2 x i32> zeroinitializer
  %61 = fmul fast <2 x float> %58, %60
  %62 = fadd fast <2 x float> %61, %57
  %63 = load <2 x float>, ptr %2, align 4, !tbaa !6, !noalias !153
  %64 = insertelement <2 x float> poison, float %54, i64 0
  %65 = shufflevector <2 x float> %64, <2 x float> poison, <2 x i32> zeroinitializer
  %66 = fmul fast <2 x float> %63, %65
  %67 = fadd fast <2 x float> %62, %66
  %68 = load i32, ptr %43, align 4, !tbaa !78
  %69 = icmp eq i32 %46, %68
  br i1 %69, label %70, label %93

70:                                               ; preds = %45
  %71 = add nsw i32 %46, 1
  %72 = icmp eq i32 %46, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = sdiv i32 %46, 2
  %75 = add nsw i32 %74, %46
  br label %76

76:                                               ; preds = %73, %70
  %77 = phi i32 [ %75, %73 ], [ 8, %70 ]
  %78 = tail call i32 @llvm.smax.i32(i32 %77, i32 %71)
  %79 = icmp slt i32 %46, %78
  br i1 %79, label %80, label %93

80:                                               ; preds = %76
  %81 = sext i32 %78 to i64
  %82 = shl nsw i64 %81, 3
  %83 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %82)
  %84 = load ptr, ptr %12, align 8, !tbaa !79
  %85 = icmp eq ptr %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %80
  %87 = load i32, ptr %5, align 8, !tbaa !80
  %88 = sext i32 %87 to i64
  %89 = shl nsw i64 %88, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %83, ptr nonnull align 4 %84, i64 %89, i1 false)
  %90 = load ptr, ptr %12, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %90)
  br label %91

91:                                               ; preds = %86, %80
  store ptr %83, ptr %12, align 8, !tbaa !79
  store i32 %78, ptr %43, align 4, !tbaa !78
  %92 = load i32, ptr %5, align 8, !tbaa !80
  br label %93

93:                                               ; preds = %45, %76, %91
  %94 = phi i32 [ %92, %91 ], [ %46, %76 ], [ %46, %45 ]
  %95 = load ptr, ptr %12, align 8, !tbaa !79
  %96 = sext i32 %94 to i64
  %97 = getelementptr inbounds %struct.ImVec2, ptr %95, i64 %96
  store <2 x float> %67, ptr %97, align 4
  %98 = load i32, ptr %5, align 8, !tbaa !80
  %99 = add nsw i32 %98, 1
  store i32 %99, ptr %5, align 8, !tbaa !80
  %100 = add nuw i32 %47, 1
  %101 = icmp eq i32 %47, %3
  br i1 %101, label %102, label %45, !llvm.loop !156

102:                                              ; preds = %93, %39, %29
  ret void
}

; Function Attrs: uwtable
define internal fastcc void @"?PathBezierQuadraticCurveToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMH@Z"(ptr noundef %0, float noundef %1, float noundef %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6, float noundef %7, i32 noundef %8) unnamed_addr #0 {
  %10 = fsub fast float %5, %1
  %11 = fsub fast float %6, %2
  %12 = fsub fast float %3, %5
  %13 = fmul fast float %12, %11
  %14 = fsub fast float %4, %6
  %15 = fmul fast float %14, %10
  %16 = fsub fast float %13, %15
  %17 = fmul fast float %16, %16
  %18 = fmul fast float %17, 4.000000e+00
  %19 = fmul fast float %10, %10
  %20 = fmul fast float %11, %11
  %21 = fadd fast float %20, %19
  %22 = fmul fast float %21, %7
  %23 = fcmp fast olt float %18, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = tail call i32 @llvm.smax.i32(i32 %8, i32 10)
  br label %64

26:                                               ; preds = %71, %9
  %27 = load i32, ptr %0, align 8, !tbaa !80
  %28 = getelementptr inbounds %struct.ImVector.5, ptr %0, i64 0, i32 1
  %29 = load i32, ptr %28, align 4, !tbaa !78
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %55

31:                                               ; preds = %26
  %32 = add nsw i32 %27, 1
  %33 = icmp eq i32 %27, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = sdiv i32 %27, 2
  %36 = add nsw i32 %35, %27
  br label %37

37:                                               ; preds = %34, %31
  %38 = phi i32 [ %36, %34 ], [ 8, %31 ]
  %39 = tail call i32 @llvm.smax.i32(i32 %38, i32 %32)
  %40 = icmp slt i32 %27, %39
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = sext i32 %39 to i64
  %43 = shl nsw i64 %42, 3
  %44 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %43)
  %45 = getelementptr inbounds %struct.ImVector.5, ptr %0, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !79
  %47 = icmp eq ptr %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  %49 = load i32, ptr %0, align 8, !tbaa !80
  %50 = sext i32 %49 to i64
  %51 = shl nsw i64 %50, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %44, ptr nonnull align 4 %46, i64 %51, i1 false)
  %52 = load ptr, ptr %45, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %52)
  br label %53

53:                                               ; preds = %48, %41
  store ptr %44, ptr %45, align 8, !tbaa !79
  store i32 %39, ptr %28, align 4, !tbaa !78
  %54 = load i32, ptr %0, align 8, !tbaa !80
  br label %55

55:                                               ; preds = %26, %37, %53
  %56 = phi i32 [ %54, %53 ], [ %27, %37 ], [ %27, %26 ]
  %57 = getelementptr inbounds %struct.ImVector.5, ptr %0, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !79
  %59 = sext i32 %56 to i64
  %60 = getelementptr inbounds %struct.ImVec2, ptr %58, i64 %59
  store float %5, ptr %60, align 4
  %61 = getelementptr inbounds i8, ptr %60, i64 4
  store float %6, ptr %61, align 4
  %62 = load i32, ptr %0, align 8, !tbaa !80
  %63 = add nsw i32 %62, 1
  store i32 %63, ptr %0, align 8, !tbaa !80
  br label %107

64:                                               ; preds = %24, %71
  %65 = phi i32 [ %92, %71 ], [ %8, %24 ]
  %66 = phi float [ %89, %71 ], [ %4, %24 ]
  %67 = phi float [ %85, %71 ], [ %3, %24 ]
  %68 = phi float [ %91, %71 ], [ %2, %24 ]
  %69 = phi float [ %87, %71 ], [ %1, %24 ]
  %70 = icmp eq i32 %65, %25
  br i1 %70, label %107, label %71

71:                                               ; preds = %64
  %72 = insertelement <2 x float> poison, float %67, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = insertelement <2 x float> poison, float %69, i64 0
  %75 = insertelement <2 x float> %74, float %5, i64 1
  %76 = fadd fast <2 x float> %73, %75
  %77 = insertelement <2 x float> poison, float %66, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = insertelement <2 x float> poison, float %68, i64 0
  %80 = insertelement <2 x float> %79, float %6, i64 1
  %81 = fadd fast <2 x float> %78, %80
  %82 = fmul fast <2 x float> %76, <float 5.000000e-01, float 5.000000e-01>
  %83 = fmul fast <2 x float> %81, <float 5.000000e-01, float 5.000000e-01>
  %84 = extractelement <2 x float> %82, i64 0
  %85 = extractelement <2 x float> %82, i64 1
  %86 = fadd fast float %84, %85
  %87 = fmul fast float %86, 5.000000e-01
  %88 = extractelement <2 x float> %83, i64 0
  %89 = extractelement <2 x float> %83, i64 1
  %90 = fadd fast float %88, %89
  %91 = fmul fast float %90, 5.000000e-01
  %92 = add i32 %65, 1
  tail call fastcc void @"?PathBezierQuadraticCurveToCasteljau@@YAXPEAU?$ImVector@UImVec2@@@@MMMMMMMH@Z"(ptr noundef %0, float noundef %69, float noundef %68, float noundef %84, float noundef %88, float noundef %87, float noundef %91, float noundef %7, i32 noundef %92)
  %93 = fsub fast float %5, %87
  %94 = fsub fast float %6, %91
  %95 = fsub fast float %85, %5
  %96 = fmul fast float %95, %94
  %97 = fsub fast float %89, %6
  %98 = fmul fast float %97, %93
  %99 = fsub fast float %96, %98
  %100 = fmul fast float %99, %99
  %101 = fmul fast float %100, 4.000000e+00
  %102 = fmul fast float %93, %93
  %103 = fmul fast float %94, %94
  %104 = fadd fast float %103, %102
  %105 = fmul fast float %104, %7
  %106 = fcmp fast olt float %101, %105
  br i1 %106, label %26, label %64

107:                                              ; preds = %64, %55
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, float noundef %3, i32 noundef %4) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.ImVec2, align 8
  %7 = alloca %struct.ImVec2, align 8
  %8 = alloca %struct.ImVec2, align 8
  %9 = alloca %struct.ImVec2, align 8
  %10 = icmp eq i32 %4, -1
  br i1 %10, label %25, label %11

11:                                               ; preds = %5
  %12 = add i32 %4, -1
  %13 = icmp ult i32 %12, 15
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = shl nuw nsw i32 %4, 4
  br label %25

16:                                               ; preds = %11
  %17 = and i32 %4, 15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1JM@GAJOFMMN@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AA0?$AAF?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAM?$AAi?$AAs?$AAu?$AAs?$AAe?$AA?5?$AAo@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1341)
  br label %20

20:                                               ; preds = %19, %16
  %21 = and i32 %4, 496
  %22 = icmp eq i32 %21, 0
  %23 = or i32 %4, 240
  %24 = select i1 %22, i32 %23, i32 %4
  br label %25

25:                                               ; preds = %5, %14, %20
  %26 = phi i32 [ %15, %14 ], [ %24, %20 ], [ 240, %5 ]
  %27 = load float, ptr %2, align 4, !tbaa !113
  %28 = and i32 %26, 48
  %29 = icmp eq i32 %28, 48
  %30 = and i32 %26, 192
  %31 = icmp eq i32 %30, 192
  %32 = or i1 %29, %31
  %33 = select fast i1 %32, float 5.000000e-01, float 1.000000e+00
  %34 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %35 = load float, ptr %34, align 4, !tbaa !112
  %36 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %37 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %38 = extractelement <2 x float> %37, i64 0
  %39 = fsub fast float %27, %38
  %40 = tail call fast float @llvm.fabs.f32(float %39)
  %41 = fmul fast float %40, %33
  %42 = fadd fast float %41, -1.000000e+00
  %43 = tail call fast float @llvm.minnum.f32(float %3, float %42)
  %44 = extractelement <2 x float> %37, i64 1
  %45 = fsub fast float %35, %44
  %46 = tail call fast float @llvm.fabs.f32(float %45)
  %47 = and i32 %26, 80
  %48 = icmp eq i32 %47, 80
  %49 = and i32 %26, 160
  %50 = icmp eq i32 %49, 160
  %51 = or i1 %48, %50
  %52 = select fast i1 %51, float 5.000000e-01, float 1.000000e+00
  %53 = fmul fast float %46, %52
  %54 = fadd fast float %53, -1.000000e+00
  %55 = tail call fast float @llvm.minnum.f32(float %43, float %54)
  %56 = fcmp fast olt float %55, 5.000000e-01
  %57 = and i32 %26, 496
  %58 = icmp eq i32 %57, 256
  %59 = or i1 %58, %56
  br i1 %59, label %60, label %202

60:                                               ; preds = %25
  %61 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %62 = load i32, ptr %61, align 8, !tbaa !80
  %63 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %64 = load i32, ptr %63, align 4, !tbaa !78
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %90

66:                                               ; preds = %60
  %67 = add nsw i32 %62, 1
  %68 = icmp eq i32 %62, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = sdiv i32 %62, 2
  %71 = add nsw i32 %70, %62
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i32 [ %71, %69 ], [ 8, %66 ]
  %74 = tail call i32 @llvm.smax.i32(i32 %73, i32 %67)
  %75 = icmp slt i32 %62, %74
  br i1 %75, label %76, label %90

76:                                               ; preds = %72
  %77 = sext i32 %74 to i64
  %78 = shl nsw i64 %77, 3
  %79 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %78)
  %80 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !79
  %82 = icmp eq ptr %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %76
  %84 = load i32, ptr %61, align 8, !tbaa !80
  %85 = sext i32 %84 to i64
  %86 = shl nsw i64 %85, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %79, ptr nonnull align 4 %81, i64 %86, i1 false)
  %87 = load ptr, ptr %80, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %87)
  br label %88

88:                                               ; preds = %83, %76
  store ptr %79, ptr %80, align 8, !tbaa !79
  store i32 %74, ptr %63, align 4, !tbaa !78
  %89 = load i32, ptr %61, align 8, !tbaa !80
  br label %90

90:                                               ; preds = %60, %72, %88
  %91 = phi i32 [ %89, %88 ], [ %62, %72 ], [ %62, %60 ]
  %92 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %93 = load ptr, ptr %92, align 8, !tbaa !79
  %94 = sext i32 %91 to i64
  %95 = getelementptr inbounds %struct.ImVec2, ptr %93, i64 %94
  %96 = load i64, ptr %1, align 4
  store i64 %96, ptr %95, align 4
  %97 = load i32, ptr %61, align 8, !tbaa !80
  %98 = add nsw i32 %97, 1
  store i32 %98, ptr %61, align 8, !tbaa !80
  %99 = load i32, ptr %36, align 4, !tbaa !112
  %100 = load i32, ptr %2, align 4, !tbaa !113
  %101 = load i32, ptr %63, align 4, !tbaa !78
  %102 = icmp eq i32 %98, %101
  br i1 %102, label %103, label %126

103:                                              ; preds = %90
  %104 = add nsw i32 %97, 2
  %105 = icmp eq i32 %98, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = sdiv i32 %98, 2
  %108 = add nsw i32 %107, %98
  br label %109

109:                                              ; preds = %106, %103
  %110 = phi i32 [ %108, %106 ], [ 8, %103 ]
  %111 = tail call i32 @llvm.smax.i32(i32 %110, i32 %104)
  %112 = icmp slt i32 %98, %111
  br i1 %112, label %113, label %126

113:                                              ; preds = %109
  %114 = sext i32 %111 to i64
  %115 = shl nsw i64 %114, 3
  %116 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %115)
  %117 = load ptr, ptr %92, align 8, !tbaa !79
  %118 = icmp eq ptr %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = load i32, ptr %61, align 8, !tbaa !80
  %121 = sext i32 %120 to i64
  %122 = shl nsw i64 %121, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %116, ptr nonnull align 4 %117, i64 %122, i1 false)
  %123 = load ptr, ptr %92, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %123)
  br label %124

124:                                              ; preds = %119, %113
  store ptr %116, ptr %92, align 8, !tbaa !79
  store i32 %111, ptr %63, align 4, !tbaa !78
  %125 = load i32, ptr %61, align 8, !tbaa !80
  br label %126

126:                                              ; preds = %90, %109, %124
  %127 = phi i32 [ %125, %124 ], [ %98, %109 ], [ %98, %90 ]
  %128 = load ptr, ptr %92, align 8, !tbaa !79
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds %struct.ImVec2, ptr %128, i64 %129
  store i32 %100, ptr %130, align 4
  %131 = getelementptr inbounds i8, ptr %130, i64 4
  store i32 %99, ptr %131, align 4
  %132 = load i32, ptr %61, align 8, !tbaa !80
  %133 = add nsw i32 %132, 1
  store i32 %133, ptr %61, align 8, !tbaa !80
  %134 = load i32, ptr %63, align 4, !tbaa !78
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %136, label %159

136:                                              ; preds = %126
  %137 = add nsw i32 %132, 2
  %138 = icmp eq i32 %133, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = sdiv i32 %133, 2
  %141 = add nsw i32 %140, %133
  br label %142

142:                                              ; preds = %139, %136
  %143 = phi i32 [ %141, %139 ], [ 8, %136 ]
  %144 = tail call i32 @llvm.smax.i32(i32 %143, i32 %137)
  %145 = icmp slt i32 %133, %144
  br i1 %145, label %146, label %159

146:                                              ; preds = %142
  %147 = sext i32 %144 to i64
  %148 = shl nsw i64 %147, 3
  %149 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %148)
  %150 = load ptr, ptr %92, align 8, !tbaa !79
  %151 = icmp eq ptr %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %146
  %153 = load i32, ptr %61, align 8, !tbaa !80
  %154 = sext i32 %153 to i64
  %155 = shl nsw i64 %154, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %149, ptr nonnull align 4 %150, i64 %155, i1 false)
  %156 = load ptr, ptr %92, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %156)
  br label %157

157:                                              ; preds = %152, %146
  store ptr %149, ptr %92, align 8, !tbaa !79
  store i32 %144, ptr %63, align 4, !tbaa !78
  %158 = load i32, ptr %61, align 8, !tbaa !80
  br label %159

159:                                              ; preds = %126, %142, %157
  %160 = phi i32 [ %158, %157 ], [ %133, %142 ], [ %133, %126 ]
  %161 = load ptr, ptr %92, align 8, !tbaa !79
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds %struct.ImVec2, ptr %161, i64 %162
  %164 = load i64, ptr %2, align 4
  store i64 %164, ptr %163, align 4
  %165 = load i32, ptr %61, align 8, !tbaa !80
  %166 = add nsw i32 %165, 1
  store i32 %166, ptr %61, align 8, !tbaa !80
  %167 = load i32, ptr %34, align 4, !tbaa !112
  %168 = load i32, ptr %1, align 4, !tbaa !113
  %169 = load i32, ptr %63, align 4, !tbaa !78
  %170 = icmp eq i32 %166, %169
  br i1 %170, label %171, label %194

171:                                              ; preds = %159
  %172 = add nsw i32 %165, 2
  %173 = icmp eq i32 %166, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %171
  %175 = sdiv i32 %166, 2
  %176 = add nsw i32 %175, %166
  br label %177

177:                                              ; preds = %174, %171
  %178 = phi i32 [ %176, %174 ], [ 8, %171 ]
  %179 = tail call i32 @llvm.smax.i32(i32 %178, i32 %172)
  %180 = icmp slt i32 %166, %179
  br i1 %180, label %181, label %194

181:                                              ; preds = %177
  %182 = sext i32 %179 to i64
  %183 = shl nsw i64 %182, 3
  %184 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %183)
  %185 = load ptr, ptr %92, align 8, !tbaa !79
  %186 = icmp eq ptr %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %181
  %188 = load i32, ptr %61, align 8, !tbaa !80
  %189 = sext i32 %188 to i64
  %190 = shl nsw i64 %189, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %184, ptr nonnull align 4 %185, i64 %190, i1 false)
  %191 = load ptr, ptr %92, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %191)
  br label %192

192:                                              ; preds = %187, %181
  store ptr %184, ptr %92, align 8, !tbaa !79
  store i32 %179, ptr %63, align 4, !tbaa !78
  %193 = load i32, ptr %61, align 8, !tbaa !80
  br label %194

194:                                              ; preds = %159, %177, %192
  %195 = phi i32 [ %193, %192 ], [ %166, %177 ], [ %166, %159 ]
  %196 = load ptr, ptr %92, align 8, !tbaa !79
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds %struct.ImVec2, ptr %196, i64 %197
  store i32 %168, ptr %198, align 4
  %199 = getelementptr inbounds i8, ptr %198, i64 4
  store i32 %167, ptr %199, align 4
  %200 = load i32, ptr %61, align 8, !tbaa !80
  %201 = add nsw i32 %200, 1
  store i32 %201, ptr %61, align 8, !tbaa !80
  br label %400

202:                                              ; preds = %25
  %203 = and i32 %26, 16
  %204 = icmp eq i32 %203, 0
  %205 = select fast i1 %204, float 0.000000e+00, float %55
  %206 = and i32 %26, 32
  %207 = icmp eq i32 %206, 0
  %208 = select fast i1 %207, float 0.000000e+00, float %55
  %209 = and i32 %26, 128
  %210 = icmp eq i32 %209, 0
  %211 = select fast i1 %210, float 0.000000e+00, float %55
  %212 = and i32 %26, 64
  %213 = icmp eq i32 %212, 0
  %214 = select fast i1 %213, float 0.000000e+00, float %55
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  %215 = insertelement <2 x float> poison, float %205, i64 0
  %216 = shufflevector <2 x float> %215, <2 x float> poison, <2 x i32> zeroinitializer
  %217 = fadd fast <2 x float> %216, %37
  store <2 x float> %217, ptr %6, align 8, !tbaa !6
  %218 = fcmp fast olt float %205, 5.000000e-01
  br i1 %218, label %219, label %258

219:                                              ; preds = %202
  %220 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %221 = load i32, ptr %220, align 8, !tbaa !80
  %222 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %223 = load i32, ptr %222, align 4, !tbaa !78
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %225, label %249

225:                                              ; preds = %219
  %226 = add nsw i32 %221, 1
  %227 = icmp eq i32 %221, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %225
  %229 = sdiv i32 %221, 2
  %230 = add nsw i32 %229, %221
  br label %231

231:                                              ; preds = %228, %225
  %232 = phi i32 [ %230, %228 ], [ 8, %225 ]
  %233 = tail call i32 @llvm.smax.i32(i32 %232, i32 %226)
  %234 = icmp slt i32 %221, %233
  br i1 %234, label %235, label %249

235:                                              ; preds = %231
  %236 = sext i32 %233 to i64
  %237 = shl nsw i64 %236, 3
  %238 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %237)
  %239 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %240 = load ptr, ptr %239, align 8, !tbaa !79
  %241 = icmp eq ptr %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %235
  %243 = load i32, ptr %220, align 8, !tbaa !80
  %244 = sext i32 %243 to i64
  %245 = shl nsw i64 %244, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %238, ptr nonnull align 4 %240, i64 %245, i1 false)
  %246 = load ptr, ptr %239, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %246)
  br label %247

247:                                              ; preds = %242, %235
  store ptr %238, ptr %239, align 8, !tbaa !79
  store i32 %233, ptr %222, align 4, !tbaa !78
  %248 = load i32, ptr %220, align 8, !tbaa !80
  br label %249

249:                                              ; preds = %247, %231, %219
  %250 = phi i32 [ %248, %247 ], [ %221, %231 ], [ %221, %219 ]
  %251 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %252 = load ptr, ptr %251, align 8, !tbaa !79
  %253 = sext i32 %250 to i64
  %254 = getelementptr inbounds %struct.ImVec2, ptr %252, i64 %253
  %255 = load i64, ptr %6, align 8
  store i64 %255, ptr %254, align 4
  %256 = load i32, ptr %220, align 8, !tbaa !80
  %257 = add nsw i32 %256, 1
  store i32 %257, ptr %220, align 8, !tbaa !80
  br label %259

258:                                              ; preds = %202
  call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %6, float noundef %205, i32 noundef 24, i32 noundef 36, i32 noundef 0)
  br label %259

259:                                              ; preds = %249, %258
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  %260 = load float, ptr %36, align 4, !tbaa !112
  %261 = fadd fast float %260, %208
  %262 = load float, ptr %2, align 4, !tbaa !113
  %263 = fsub fast float %262, %208
  store float %263, ptr %7, align 8, !tbaa !113
  %264 = getelementptr inbounds %struct.ImVec2, ptr %7, i64 0, i32 1
  store float %261, ptr %264, align 4, !tbaa !112
  %265 = fcmp fast olt float %208, 5.000000e-01
  br i1 %265, label %266, label %305

266:                                              ; preds = %259
  %267 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %268 = load i32, ptr %267, align 8, !tbaa !80
  %269 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %270 = load i32, ptr %269, align 4, !tbaa !78
  %271 = icmp eq i32 %268, %270
  br i1 %271, label %272, label %296

272:                                              ; preds = %266
  %273 = add nsw i32 %268, 1
  %274 = icmp eq i32 %268, 0
  br i1 %274, label %278, label %275

275:                                              ; preds = %272
  %276 = sdiv i32 %268, 2
  %277 = add nsw i32 %276, %268
  br label %278

278:                                              ; preds = %275, %272
  %279 = phi i32 [ %277, %275 ], [ 8, %272 ]
  %280 = tail call i32 @llvm.smax.i32(i32 %279, i32 %273)
  %281 = icmp slt i32 %268, %280
  br i1 %281, label %282, label %296

282:                                              ; preds = %278
  %283 = sext i32 %280 to i64
  %284 = shl nsw i64 %283, 3
  %285 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %284)
  %286 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %287 = load ptr, ptr %286, align 8, !tbaa !79
  %288 = icmp eq ptr %287, null
  br i1 %288, label %294, label %289

289:                                              ; preds = %282
  %290 = load i32, ptr %267, align 8, !tbaa !80
  %291 = sext i32 %290 to i64
  %292 = shl nsw i64 %291, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %285, ptr nonnull align 4 %287, i64 %292, i1 false)
  %293 = load ptr, ptr %286, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %293)
  br label %294

294:                                              ; preds = %289, %282
  store ptr %285, ptr %286, align 8, !tbaa !79
  store i32 %280, ptr %269, align 4, !tbaa !78
  %295 = load i32, ptr %267, align 8, !tbaa !80
  br label %296

296:                                              ; preds = %294, %278, %266
  %297 = phi i32 [ %295, %294 ], [ %268, %278 ], [ %268, %266 ]
  %298 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %299 = load ptr, ptr %298, align 8, !tbaa !79
  %300 = sext i32 %297 to i64
  %301 = getelementptr inbounds %struct.ImVec2, ptr %299, i64 %300
  %302 = load i64, ptr %7, align 8
  store i64 %302, ptr %301, align 4
  %303 = load i32, ptr %267, align 8, !tbaa !80
  %304 = add nsw i32 %303, 1
  store i32 %304, ptr %267, align 8, !tbaa !80
  br label %306

305:                                              ; preds = %259
  call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %7, float noundef %208, i32 noundef 36, i32 noundef 48, i32 noundef 0)
  br label %306

306:                                              ; preds = %296, %305
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %307 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %308 = insertelement <2 x float> poison, float %211, i64 0
  %309 = shufflevector <2 x float> %308, <2 x float> poison, <2 x i32> zeroinitializer
  %310 = fsub fast <2 x float> %307, %309
  store <2 x float> %310, ptr %8, align 8, !tbaa !6
  %311 = fcmp fast olt float %211, 5.000000e-01
  br i1 %311, label %312, label %351

312:                                              ; preds = %306
  %313 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %314 = load i32, ptr %313, align 8, !tbaa !80
  %315 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %316 = load i32, ptr %315, align 4, !tbaa !78
  %317 = icmp eq i32 %314, %316
  br i1 %317, label %318, label %342

318:                                              ; preds = %312
  %319 = add nsw i32 %314, 1
  %320 = icmp eq i32 %314, 0
  br i1 %320, label %324, label %321

321:                                              ; preds = %318
  %322 = sdiv i32 %314, 2
  %323 = add nsw i32 %322, %314
  br label %324

324:                                              ; preds = %321, %318
  %325 = phi i32 [ %323, %321 ], [ 8, %318 ]
  %326 = tail call i32 @llvm.smax.i32(i32 %325, i32 %319)
  %327 = icmp slt i32 %314, %326
  br i1 %327, label %328, label %342

328:                                              ; preds = %324
  %329 = sext i32 %326 to i64
  %330 = shl nsw i64 %329, 3
  %331 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %330)
  %332 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %333 = load ptr, ptr %332, align 8, !tbaa !79
  %334 = icmp eq ptr %333, null
  br i1 %334, label %340, label %335

335:                                              ; preds = %328
  %336 = load i32, ptr %313, align 8, !tbaa !80
  %337 = sext i32 %336 to i64
  %338 = shl nsw i64 %337, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %331, ptr nonnull align 4 %333, i64 %338, i1 false)
  %339 = load ptr, ptr %332, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %339)
  br label %340

340:                                              ; preds = %335, %328
  store ptr %331, ptr %332, align 8, !tbaa !79
  store i32 %326, ptr %315, align 4, !tbaa !78
  %341 = load i32, ptr %313, align 8, !tbaa !80
  br label %342

342:                                              ; preds = %340, %324, %312
  %343 = phi i32 [ %341, %340 ], [ %314, %324 ], [ %314, %312 ]
  %344 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %345 = load ptr, ptr %344, align 8, !tbaa !79
  %346 = sext i32 %343 to i64
  %347 = getelementptr inbounds %struct.ImVec2, ptr %345, i64 %346
  %348 = load i64, ptr %8, align 8
  store i64 %348, ptr %347, align 4
  %349 = load i32, ptr %313, align 8, !tbaa !80
  %350 = add nsw i32 %349, 1
  store i32 %350, ptr %313, align 8, !tbaa !80
  br label %352

351:                                              ; preds = %306
  call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %8, float noundef %211, i32 noundef 0, i32 noundef 12, i32 noundef 0)
  br label %352

352:                                              ; preds = %342, %351
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #39
  %353 = load float, ptr %34, align 4, !tbaa !112
  %354 = fsub fast float %353, %214
  %355 = load float, ptr %1, align 4, !tbaa !113
  %356 = fadd fast float %355, %214
  store float %356, ptr %9, align 8, !tbaa !113
  %357 = getelementptr inbounds %struct.ImVec2, ptr %9, i64 0, i32 1
  store float %354, ptr %357, align 4, !tbaa !112
  %358 = fcmp fast olt float %214, 5.000000e-01
  br i1 %358, label %359, label %398

359:                                              ; preds = %352
  %360 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %361 = load i32, ptr %360, align 8, !tbaa !80
  %362 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %363 = load i32, ptr %362, align 4, !tbaa !78
  %364 = icmp eq i32 %361, %363
  br i1 %364, label %365, label %389

365:                                              ; preds = %359
  %366 = add nsw i32 %361, 1
  %367 = icmp eq i32 %361, 0
  br i1 %367, label %371, label %368

368:                                              ; preds = %365
  %369 = sdiv i32 %361, 2
  %370 = add nsw i32 %369, %361
  br label %371

371:                                              ; preds = %368, %365
  %372 = phi i32 [ %370, %368 ], [ 8, %365 ]
  %373 = tail call i32 @llvm.smax.i32(i32 %372, i32 %366)
  %374 = icmp slt i32 %361, %373
  br i1 %374, label %375, label %389

375:                                              ; preds = %371
  %376 = sext i32 %373 to i64
  %377 = shl nsw i64 %376, 3
  %378 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %377)
  %379 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %380 = load ptr, ptr %379, align 8, !tbaa !79
  %381 = icmp eq ptr %380, null
  br i1 %381, label %387, label %382

382:                                              ; preds = %375
  %383 = load i32, ptr %360, align 8, !tbaa !80
  %384 = sext i32 %383 to i64
  %385 = shl nsw i64 %384, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %378, ptr nonnull align 4 %380, i64 %385, i1 false)
  %386 = load ptr, ptr %379, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %386)
  br label %387

387:                                              ; preds = %382, %375
  store ptr %378, ptr %379, align 8, !tbaa !79
  store i32 %373, ptr %362, align 4, !tbaa !78
  %388 = load i32, ptr %360, align 8, !tbaa !80
  br label %389

389:                                              ; preds = %387, %371, %359
  %390 = phi i32 [ %388, %387 ], [ %361, %371 ], [ %361, %359 ]
  %391 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %392 = load ptr, ptr %391, align 8, !tbaa !79
  %393 = sext i32 %390 to i64
  %394 = getelementptr inbounds %struct.ImVec2, ptr %392, i64 %393
  %395 = load i64, ptr %9, align 8
  store i64 %395, ptr %394, align 4
  %396 = load i32, ptr %360, align 8, !tbaa !80
  %397 = add nsw i32 %396, 1
  store i32 %397, ptr %360, align 8, !tbaa !80
  br label %399

398:                                              ; preds = %352
  call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %9, float noundef %214, i32 noundef 12, i32 noundef 24, i32 noundef 0)
  br label %399

399:                                              ; preds = %389, %398
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  br label %400

400:                                              ; preds = %399, %194
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #6

; Function Attrs: uwtable
define dso_local void @"?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i32 noundef %3, float noundef %4) local_unnamed_addr #0 align 2 {
  %6 = icmp ult i32 %3, 16777216
  br i1 %6, label %82, label %7

7:                                                ; preds = %5
  %8 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %9 = fadd fast <2 x float> %8, <float 5.000000e-01, float 5.000000e-01>
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %11 = load i32, ptr %10, align 8, !tbaa !80
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !78
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %39

15:                                               ; preds = %7
  %16 = add nsw i32 %11, 1
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = sdiv i32 %11, 2
  %20 = add nsw i32 %19, %11
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i32 [ %20, %18 ], [ 8, %15 ]
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 %16)
  %24 = icmp slt i32 %11, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 3
  %28 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %27)
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !79
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = load i32, ptr %10, align 8, !tbaa !80
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %28, ptr nonnull align 4 %30, i64 %35, i1 false)
  %36 = load ptr, ptr %29, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %36)
  br label %37

37:                                               ; preds = %32, %25
  store ptr %28, ptr %29, align 8, !tbaa !79
  store i32 %23, ptr %12, align 4, !tbaa !78
  %38 = load i32, ptr %10, align 8, !tbaa !80
  br label %39

39:                                               ; preds = %7, %21, %37
  %40 = phi i32 [ %38, %37 ], [ %11, %21 ], [ %11, %7 ]
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !79
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %struct.ImVec2, ptr %42, i64 %43
  store <2 x float> %9, ptr %44, align 4
  %45 = load i32, ptr %10, align 8, !tbaa !80
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr %10, align 8, !tbaa !80
  %47 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %48 = fadd fast <2 x float> %47, <float 5.000000e-01, float 5.000000e-01>
  %49 = load i32, ptr %12, align 4, !tbaa !78
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %74

51:                                               ; preds = %39
  %52 = add nsw i32 %45, 2
  %53 = icmp eq i32 %46, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = sdiv i32 %46, 2
  %56 = add nsw i32 %55, %46
  br label %57

57:                                               ; preds = %54, %51
  %58 = phi i32 [ %56, %54 ], [ 8, %51 ]
  %59 = tail call i32 @llvm.smax.i32(i32 %58, i32 %52)
  %60 = icmp slt i32 %46, %59
  br i1 %60, label %61, label %74

61:                                               ; preds = %57
  %62 = sext i32 %59 to i64
  %63 = shl nsw i64 %62, 3
  %64 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %63)
  %65 = load ptr, ptr %41, align 8, !tbaa !79
  %66 = icmp eq ptr %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = load i32, ptr %10, align 8, !tbaa !80
  %69 = sext i32 %68 to i64
  %70 = shl nsw i64 %69, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %64, ptr nonnull align 4 %65, i64 %70, i1 false)
  %71 = load ptr, ptr %41, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %71)
  br label %72

72:                                               ; preds = %67, %61
  store ptr %64, ptr %41, align 8, !tbaa !79
  store i32 %59, ptr %12, align 4, !tbaa !78
  %73 = load i32, ptr %10, align 8, !tbaa !80
  br label %74

74:                                               ; preds = %39, %57, %72
  %75 = phi i32 [ %73, %72 ], [ %46, %57 ], [ %46, %39 ]
  %76 = load ptr, ptr %41, align 8, !tbaa !79
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds %struct.ImVec2, ptr %76, i64 %77
  store <2 x float> %48, ptr %78, align 4
  %79 = load i32, ptr %10, align 8, !tbaa !80
  %80 = add nsw i32 %79, 1
  store i32 %80, ptr %10, align 8, !tbaa !80
  %81 = load ptr, ptr %41, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %81, i32 noundef %80, i32 noundef %3, i32 noundef 0, float noundef %4)
  store i32 0, ptr %10, align 8, !tbaa !143
  br label %82

82:                                               ; preds = %5, %74
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i32 noundef %3, float noundef %4, i32 noundef %5, float noundef %6) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.ImVec2, align 8
  %9 = alloca %struct.ImVec2, align 8
  %10 = alloca %struct.ImVec2, align 8
  %11 = alloca %struct.ImVec2, align 8
  %12 = icmp ult i32 %3, 16777216
  br i1 %12, label %33, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 3
  %15 = load i32, ptr %14, align 8, !tbaa !70
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %19 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %20 = fadd fast <2 x float> %19, <float -5.000000e-01, float -5.000000e-01>
  store <2 x float> %20, ptr %8, align 8, !tbaa !6, !alias.scope !157
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #39
  %21 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %22 = fadd fast <2 x float> %21, <float 5.000000e-01, float 5.000000e-01>
  store <2 x float> %22, ptr %9, align 8, !tbaa !6, !alias.scope !160
  call void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %9, ptr noundef nonnull align 4 dereferenceable(8) %8, float noundef %4, i32 noundef %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  br label %28

23:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %24 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %25 = fadd fast <2 x float> %24, <float 0xBFDF5C2900000000, float 0xBFDF5C2900000000>
  store <2 x float> %25, ptr %10, align 8, !tbaa !6, !alias.scope !163
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #39
  %26 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %27 = fadd fast <2 x float> %26, <float 5.000000e-01, float 5.000000e-01>
  store <2 x float> %27, ptr %11, align 8, !tbaa !6, !alias.scope !166
  call void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %11, ptr noundef nonnull align 4 dereferenceable(8) %10, float noundef %4, i32 noundef %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #39
  br label %28

28:                                               ; preds = %23, %18
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %30 = load i32, ptr %29, align 8, !tbaa !143
  %31 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %32, i32 noundef %30, i32 noundef %3, i32 noundef 1, float noundef %6)
  store i32 0, ptr %29, align 8, !tbaa !143
  br label %33

33:                                               ; preds = %7, %28
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i32 noundef %3, float noundef %4, i32 noundef %5) local_unnamed_addr #7 align 2 {
  %7 = icmp ult i32 %3, 16777216
  br i1 %7, label %71, label %8

8:                                                ; preds = %6
  %9 = fcmp fast olt float %4, 5.000000e-01
  %10 = and i32 %5, 496
  %11 = icmp eq i32 %10, 256
  %12 = or i1 %9, %11
  br i1 %12, label %13, label %66

13:                                               ; preds = %8
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %14 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !112
  %16 = load i32, ptr %2, align 4, !tbaa !113
  %17 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %18 = load i32, ptr %17, align 4, !tbaa !112
  %19 = load i32, ptr %1, align 4, !tbaa !113
  %20 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !68
  %22 = load i64, ptr %21, align 8
  %23 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %24 = load i32, ptr %23, align 4, !tbaa !71
  %25 = trunc i32 %24 to i16
  %26 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %27 = load ptr, ptr %26, align 8, !tbaa !99
  store i16 %25, ptr %27, align 2, !tbaa !121
  %28 = add i16 %25, 1
  %29 = getelementptr inbounds i16, ptr %27, i64 1
  store i16 %28, ptr %29, align 2, !tbaa !121
  %30 = add i16 %25, 2
  %31 = getelementptr inbounds i16, ptr %27, i64 2
  store i16 %30, ptr %31, align 2, !tbaa !121
  %32 = getelementptr inbounds i16, ptr %27, i64 3
  store i16 %25, ptr %32, align 2, !tbaa !121
  %33 = getelementptr inbounds i16, ptr %27, i64 4
  store i16 %30, ptr %33, align 2, !tbaa !121
  %34 = add i16 %25, 3
  %35 = getelementptr inbounds i16, ptr %27, i64 5
  store i16 %34, ptr %35, align 2, !tbaa !121
  %36 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %37 = load ptr, ptr %36, align 8, !tbaa !120
  %38 = load i64, ptr %1, align 4
  store i64 %38, ptr %37, align 4
  %39 = load ptr, ptr %36, align 8, !tbaa !120
  %40 = getelementptr inbounds %struct.ImDrawVert, ptr %39, i64 0, i32 1
  store i64 %22, ptr %40, align 4
  %41 = load ptr, ptr %36, align 8, !tbaa !120
  %42 = getelementptr inbounds %struct.ImDrawVert, ptr %41, i64 0, i32 2
  store i32 %3, ptr %42, align 4, !tbaa !123
  %43 = getelementptr inbounds %struct.ImDrawVert, ptr %41, i64 1
  store i32 %16, ptr %43, align 4
  %44 = getelementptr inbounds %struct.ImDrawVert, ptr %41, i64 1, i32 0, i32 1
  store i32 %15, ptr %44, align 4
  %45 = load ptr, ptr %36, align 8, !tbaa !120
  %46 = getelementptr inbounds %struct.ImDrawVert, ptr %45, i64 1, i32 1
  store i64 %22, ptr %46, align 4
  %47 = load ptr, ptr %36, align 8, !tbaa !120
  %48 = getelementptr inbounds %struct.ImDrawVert, ptr %47, i64 1, i32 2
  store i32 %3, ptr %48, align 4, !tbaa !123
  %49 = getelementptr inbounds %struct.ImDrawVert, ptr %47, i64 2
  %50 = load i64, ptr %2, align 4
  store i64 %50, ptr %49, align 4
  %51 = load ptr, ptr %36, align 8, !tbaa !120
  %52 = getelementptr inbounds %struct.ImDrawVert, ptr %51, i64 2, i32 1
  store i64 %22, ptr %52, align 4
  %53 = load ptr, ptr %36, align 8, !tbaa !120
  %54 = getelementptr inbounds %struct.ImDrawVert, ptr %53, i64 2, i32 2
  store i32 %3, ptr %54, align 4, !tbaa !123
  %55 = getelementptr inbounds %struct.ImDrawVert, ptr %53, i64 3
  store i32 %19, ptr %55, align 4
  %56 = getelementptr inbounds %struct.ImDrawVert, ptr %53, i64 3, i32 0, i32 1
  store i32 %18, ptr %56, align 4
  %57 = load ptr, ptr %36, align 8, !tbaa !120
  %58 = getelementptr inbounds %struct.ImDrawVert, ptr %57, i64 3, i32 1
  store i64 %22, ptr %58, align 4
  %59 = load ptr, ptr %36, align 8, !tbaa !120
  %60 = getelementptr inbounds %struct.ImDrawVert, ptr %59, i64 3, i32 2
  store i32 %3, ptr %60, align 4, !tbaa !123
  %61 = getelementptr inbounds %struct.ImDrawVert, ptr %59, i64 4
  store ptr %61, ptr %36, align 8, !tbaa !120
  %62 = load i32, ptr %23, align 4, !tbaa !71
  %63 = add i32 %62, 4
  store i32 %63, ptr %23, align 4, !tbaa !71
  %64 = load ptr, ptr %26, align 8, !tbaa !99
  %65 = getelementptr inbounds i16, ptr %64, i64 6
  store ptr %65, ptr %26, align 8, !tbaa !99
  br label %71

66:                                               ; preds = %8
  tail call void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, ptr noundef nonnull align 4 dereferenceable(8) %2, float noundef %4, i32 noundef %5)
  %67 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %68 = load i32, ptr %67, align 8, !tbaa !143
  %69 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %70, i32 noundef %68, i32 noundef %3)
  store i32 0, ptr %67, align 8, !tbaa !143
  br label %71

71:                                               ; preds = %6, %66, %13
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?AddRectFilledMultiColor@ImDrawList@@QEAAXAEBUImVec2@@0IIII@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) local_unnamed_addr #0 align 2 {
  %8 = or i32 %4, %3
  %9 = or i32 %8, %5
  %10 = or i32 %9, %6
  %11 = icmp ult i32 %10, 16777216
  br i1 %11, label %70, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %14 = load ptr, ptr %13, align 8, !tbaa !68
  %15 = load i64, ptr %14, align 8
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %16 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %17 = load i32, ptr %16, align 4, !tbaa !71
  %18 = trunc i32 %17 to i16
  %19 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !99
  store i16 %18, ptr %20, align 2, !tbaa !121
  %21 = getelementptr inbounds i16, ptr %20, i64 1
  %22 = add i16 %18, 1
  store i16 %22, ptr %21, align 2, !tbaa !121
  %23 = getelementptr inbounds i16, ptr %20, i64 2
  %24 = add i16 %18, 2
  store i16 %24, ptr %23, align 2, !tbaa !121
  %25 = getelementptr inbounds i16, ptr %20, i64 3
  store i16 %18, ptr %25, align 2, !tbaa !121
  %26 = getelementptr inbounds i16, ptr %20, i64 4
  store i16 %24, ptr %26, align 2, !tbaa !121
  %27 = getelementptr inbounds i16, ptr %20, i64 5
  %28 = add i16 %18, 3
  store i16 %28, ptr %27, align 2, !tbaa !121
  %29 = getelementptr inbounds i16, ptr %20, i64 6
  store ptr %29, ptr %19, align 8, !tbaa !99
  %30 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %31 = load ptr, ptr %30, align 8, !tbaa !120
  %32 = load i64, ptr %1, align 4
  store i64 %32, ptr %31, align 4
  %33 = load ptr, ptr %30, align 8, !tbaa !120
  %34 = getelementptr inbounds %struct.ImDrawVert, ptr %33, i64 0, i32 1
  store i64 %15, ptr %34, align 4
  %35 = load ptr, ptr %30, align 8, !tbaa !120
  %36 = getelementptr inbounds %struct.ImDrawVert, ptr %35, i64 0, i32 2
  store i32 %3, ptr %36, align 4, !tbaa !123
  %37 = getelementptr inbounds %struct.ImDrawVert, ptr %35, i64 1
  store ptr %37, ptr %30, align 8, !tbaa !120
  %38 = load i32, ptr %16, align 4, !tbaa !71
  %39 = add i32 %38, 1
  store i32 %39, ptr %16, align 4, !tbaa !71
  %40 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %41 = load i32, ptr %40, align 4, !tbaa !112
  %42 = load i32, ptr %2, align 4, !tbaa !113
  store i32 %42, ptr %37, align 4
  %43 = getelementptr inbounds %struct.ImDrawVert, ptr %35, i64 1, i32 0, i32 1
  store i32 %41, ptr %43, align 4
  %44 = load ptr, ptr %30, align 8, !tbaa !120
  %45 = getelementptr inbounds %struct.ImDrawVert, ptr %44, i64 0, i32 1
  store i64 %15, ptr %45, align 4
  %46 = load ptr, ptr %30, align 8, !tbaa !120
  %47 = getelementptr inbounds %struct.ImDrawVert, ptr %46, i64 0, i32 2
  store i32 %4, ptr %47, align 4, !tbaa !123
  %48 = getelementptr inbounds %struct.ImDrawVert, ptr %46, i64 1
  store ptr %48, ptr %30, align 8, !tbaa !120
  %49 = load i32, ptr %16, align 4, !tbaa !71
  %50 = add i32 %49, 1
  store i32 %50, ptr %16, align 4, !tbaa !71
  %51 = load i64, ptr %2, align 4
  store i64 %51, ptr %48, align 4
  %52 = load ptr, ptr %30, align 8, !tbaa !120
  %53 = getelementptr inbounds %struct.ImDrawVert, ptr %52, i64 0, i32 1
  store i64 %15, ptr %53, align 4
  %54 = load ptr, ptr %30, align 8, !tbaa !120
  %55 = getelementptr inbounds %struct.ImDrawVert, ptr %54, i64 0, i32 2
  store i32 %5, ptr %55, align 4, !tbaa !123
  %56 = getelementptr inbounds %struct.ImDrawVert, ptr %54, i64 1
  store ptr %56, ptr %30, align 8, !tbaa !120
  %57 = load i32, ptr %16, align 4, !tbaa !71
  %58 = add i32 %57, 1
  store i32 %58, ptr %16, align 4, !tbaa !71
  %59 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %60 = load i32, ptr %59, align 4, !tbaa !112
  %61 = load i32, ptr %1, align 4, !tbaa !113
  store i32 %61, ptr %56, align 4
  %62 = getelementptr inbounds %struct.ImDrawVert, ptr %54, i64 1, i32 0, i32 1
  store i32 %60, ptr %62, align 4
  %63 = load ptr, ptr %30, align 8, !tbaa !120
  %64 = getelementptr inbounds %struct.ImDrawVert, ptr %63, i64 0, i32 1
  store i64 %15, ptr %64, align 4
  %65 = load ptr, ptr %30, align 8, !tbaa !120
  %66 = getelementptr inbounds %struct.ImDrawVert, ptr %65, i64 0, i32 2
  store i32 %6, ptr %66, align 4, !tbaa !123
  %67 = getelementptr inbounds %struct.ImDrawVert, ptr %65, i64 1
  store ptr %67, ptr %30, align 8, !tbaa !120
  %68 = load i32, ptr %16, align 4, !tbaa !71
  %69 = add i32 %68, 1
  store i32 %69, ptr %16, align 4, !tbaa !71
  br label %70

70:                                               ; preds = %7, %12
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddQuad@ImDrawList@@QEAAXAEBUImVec2@@000IM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, i32 noundef %5, float noundef %6) local_unnamed_addr #7 align 2 {
  %8 = icmp ult i32 %5, 16777216
  br i1 %8, label %148, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %11 = load i32, ptr %10, align 8, !tbaa !80
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !78
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %39

15:                                               ; preds = %9
  %16 = add nsw i32 %11, 1
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = sdiv i32 %11, 2
  %20 = add nsw i32 %19, %11
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i32 [ %20, %18 ], [ 8, %15 ]
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 %16)
  %24 = icmp slt i32 %11, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 3
  %28 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %27)
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !79
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = load i32, ptr %10, align 8, !tbaa !80
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %28, ptr nonnull align 4 %30, i64 %35, i1 false)
  %36 = load ptr, ptr %29, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %36)
  br label %37

37:                                               ; preds = %32, %25
  store ptr %28, ptr %29, align 8, !tbaa !79
  store i32 %23, ptr %12, align 4, !tbaa !78
  %38 = load i32, ptr %10, align 8, !tbaa !80
  br label %39

39:                                               ; preds = %9, %21, %37
  %40 = phi i32 [ %38, %37 ], [ %11, %21 ], [ %11, %9 ]
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !79
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %struct.ImVec2, ptr %42, i64 %43
  %45 = load i64, ptr %1, align 4
  store i64 %45, ptr %44, align 4
  %46 = load i32, ptr %10, align 8, !tbaa !80
  %47 = add nsw i32 %46, 1
  store i32 %47, ptr %10, align 8, !tbaa !80
  %48 = load i32, ptr %12, align 4, !tbaa !78
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %73

50:                                               ; preds = %39
  %51 = add nsw i32 %46, 2
  %52 = icmp eq i32 %47, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = sdiv i32 %47, 2
  %55 = add nsw i32 %54, %47
  br label %56

56:                                               ; preds = %53, %50
  %57 = phi i32 [ %55, %53 ], [ 8, %50 ]
  %58 = tail call i32 @llvm.smax.i32(i32 %57, i32 %51)
  %59 = icmp slt i32 %47, %58
  br i1 %59, label %60, label %73

60:                                               ; preds = %56
  %61 = sext i32 %58 to i64
  %62 = shl nsw i64 %61, 3
  %63 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %62)
  %64 = load ptr, ptr %41, align 8, !tbaa !79
  %65 = icmp eq ptr %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %60
  %67 = load i32, ptr %10, align 8, !tbaa !80
  %68 = sext i32 %67 to i64
  %69 = shl nsw i64 %68, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %63, ptr nonnull align 4 %64, i64 %69, i1 false)
  %70 = load ptr, ptr %41, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %70)
  br label %71

71:                                               ; preds = %66, %60
  store ptr %63, ptr %41, align 8, !tbaa !79
  store i32 %58, ptr %12, align 4, !tbaa !78
  %72 = load i32, ptr %10, align 8, !tbaa !80
  br label %73

73:                                               ; preds = %39, %56, %71
  %74 = phi i32 [ %72, %71 ], [ %47, %56 ], [ %47, %39 ]
  %75 = load ptr, ptr %41, align 8, !tbaa !79
  %76 = sext i32 %74 to i64
  %77 = getelementptr inbounds %struct.ImVec2, ptr %75, i64 %76
  %78 = load i64, ptr %2, align 4
  store i64 %78, ptr %77, align 4
  %79 = load i32, ptr %10, align 8, !tbaa !80
  %80 = add nsw i32 %79, 1
  store i32 %80, ptr %10, align 8, !tbaa !80
  %81 = load i32, ptr %12, align 4, !tbaa !78
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %83, label %106

83:                                               ; preds = %73
  %84 = add nsw i32 %79, 2
  %85 = icmp eq i32 %80, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = sdiv i32 %80, 2
  %88 = add nsw i32 %87, %80
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi i32 [ %88, %86 ], [ 8, %83 ]
  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 %84)
  %92 = icmp slt i32 %80, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %89
  %94 = sext i32 %91 to i64
  %95 = shl nsw i64 %94, 3
  %96 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %95)
  %97 = load ptr, ptr %41, align 8, !tbaa !79
  %98 = icmp eq ptr %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %93
  %100 = load i32, ptr %10, align 8, !tbaa !80
  %101 = sext i32 %100 to i64
  %102 = shl nsw i64 %101, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %96, ptr nonnull align 4 %97, i64 %102, i1 false)
  %103 = load ptr, ptr %41, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %103)
  br label %104

104:                                              ; preds = %99, %93
  store ptr %96, ptr %41, align 8, !tbaa !79
  store i32 %91, ptr %12, align 4, !tbaa !78
  %105 = load i32, ptr %10, align 8, !tbaa !80
  br label %106

106:                                              ; preds = %73, %89, %104
  %107 = phi i32 [ %105, %104 ], [ %80, %89 ], [ %80, %73 ]
  %108 = load ptr, ptr %41, align 8, !tbaa !79
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds %struct.ImVec2, ptr %108, i64 %109
  %111 = load i64, ptr %3, align 4
  store i64 %111, ptr %110, align 4
  %112 = load i32, ptr %10, align 8, !tbaa !80
  %113 = add nsw i32 %112, 1
  store i32 %113, ptr %10, align 8, !tbaa !80
  %114 = load i32, ptr %12, align 4, !tbaa !78
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %116, label %139

116:                                              ; preds = %106
  %117 = add nsw i32 %112, 2
  %118 = icmp eq i32 %113, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = sdiv i32 %113, 2
  %121 = add nsw i32 %120, %113
  br label %122

122:                                              ; preds = %119, %116
  %123 = phi i32 [ %121, %119 ], [ 8, %116 ]
  %124 = tail call i32 @llvm.smax.i32(i32 %123, i32 %117)
  %125 = icmp slt i32 %113, %124
  br i1 %125, label %126, label %139

126:                                              ; preds = %122
  %127 = sext i32 %124 to i64
  %128 = shl nsw i64 %127, 3
  %129 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %128)
  %130 = load ptr, ptr %41, align 8, !tbaa !79
  %131 = icmp eq ptr %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %126
  %133 = load i32, ptr %10, align 8, !tbaa !80
  %134 = sext i32 %133 to i64
  %135 = shl nsw i64 %134, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %129, ptr nonnull align 4 %130, i64 %135, i1 false)
  %136 = load ptr, ptr %41, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %136)
  br label %137

137:                                              ; preds = %132, %126
  store ptr %129, ptr %41, align 8, !tbaa !79
  store i32 %124, ptr %12, align 4, !tbaa !78
  %138 = load i32, ptr %10, align 8, !tbaa !80
  br label %139

139:                                              ; preds = %106, %122, %137
  %140 = phi i32 [ %138, %137 ], [ %113, %122 ], [ %113, %106 ]
  %141 = load ptr, ptr %41, align 8, !tbaa !79
  %142 = sext i32 %140 to i64
  %143 = getelementptr inbounds %struct.ImVec2, ptr %141, i64 %142
  %144 = load i64, ptr %4, align 4
  store i64 %144, ptr %143, align 4
  %145 = load i32, ptr %10, align 8, !tbaa !80
  %146 = add nsw i32 %145, 1
  store i32 %146, ptr %10, align 8, !tbaa !80
  %147 = load ptr, ptr %41, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %147, i32 noundef %146, i32 noundef %5, i32 noundef 1, float noundef %6)
  store i32 0, ptr %10, align 8, !tbaa !143
  br label %148

148:                                              ; preds = %7, %139
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddQuadFilled@ImDrawList@@QEAAXAEBUImVec2@@000I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, i32 noundef %5) local_unnamed_addr #7 align 2 {
  %7 = icmp ult i32 %5, 16777216
  br i1 %7, label %147, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %10 = load i32, ptr %9, align 8, !tbaa !80
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !78
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = add nsw i32 %10, 1
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = sdiv i32 %10, 2
  %19 = add nsw i32 %18, %10
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %19, %17 ], [ 8, %14 ]
  %22 = tail call i32 @llvm.smax.i32(i32 %21, i32 %15)
  %23 = icmp slt i32 %10, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = sext i32 %22 to i64
  %26 = shl nsw i64 %25, 3
  %27 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %26)
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !79
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = load i32, ptr %9, align 8, !tbaa !80
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %27, ptr nonnull align 4 %29, i64 %34, i1 false)
  %35 = load ptr, ptr %28, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %35)
  br label %36

36:                                               ; preds = %31, %24
  store ptr %27, ptr %28, align 8, !tbaa !79
  store i32 %22, ptr %11, align 4, !tbaa !78
  %37 = load i32, ptr %9, align 8, !tbaa !80
  br label %38

38:                                               ; preds = %8, %20, %36
  %39 = phi i32 [ %37, %36 ], [ %10, %20 ], [ %10, %8 ]
  %40 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !79
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds %struct.ImVec2, ptr %41, i64 %42
  %44 = load i64, ptr %1, align 4
  store i64 %44, ptr %43, align 4
  %45 = load i32, ptr %9, align 8, !tbaa !80
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr %9, align 8, !tbaa !80
  %47 = load i32, ptr %11, align 4, !tbaa !78
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %72

49:                                               ; preds = %38
  %50 = add nsw i32 %45, 2
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = sdiv i32 %46, 2
  %54 = add nsw i32 %53, %46
  br label %55

55:                                               ; preds = %52, %49
  %56 = phi i32 [ %54, %52 ], [ 8, %49 ]
  %57 = tail call i32 @llvm.smax.i32(i32 %56, i32 %50)
  %58 = icmp slt i32 %46, %57
  br i1 %58, label %59, label %72

59:                                               ; preds = %55
  %60 = sext i32 %57 to i64
  %61 = shl nsw i64 %60, 3
  %62 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %61)
  %63 = load ptr, ptr %40, align 8, !tbaa !79
  %64 = icmp eq ptr %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = load i32, ptr %9, align 8, !tbaa !80
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %62, ptr nonnull align 4 %63, i64 %68, i1 false)
  %69 = load ptr, ptr %40, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %69)
  br label %70

70:                                               ; preds = %65, %59
  store ptr %62, ptr %40, align 8, !tbaa !79
  store i32 %57, ptr %11, align 4, !tbaa !78
  %71 = load i32, ptr %9, align 8, !tbaa !80
  br label %72

72:                                               ; preds = %38, %55, %70
  %73 = phi i32 [ %71, %70 ], [ %46, %55 ], [ %46, %38 ]
  %74 = load ptr, ptr %40, align 8, !tbaa !79
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds %struct.ImVec2, ptr %74, i64 %75
  %77 = load i64, ptr %2, align 4
  store i64 %77, ptr %76, align 4
  %78 = load i32, ptr %9, align 8, !tbaa !80
  %79 = add nsw i32 %78, 1
  store i32 %79, ptr %9, align 8, !tbaa !80
  %80 = load i32, ptr %11, align 4, !tbaa !78
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %105

82:                                               ; preds = %72
  %83 = add nsw i32 %78, 2
  %84 = icmp eq i32 %79, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = sdiv i32 %79, 2
  %87 = add nsw i32 %86, %79
  br label %88

88:                                               ; preds = %85, %82
  %89 = phi i32 [ %87, %85 ], [ 8, %82 ]
  %90 = tail call i32 @llvm.smax.i32(i32 %89, i32 %83)
  %91 = icmp slt i32 %79, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = sext i32 %90 to i64
  %94 = shl nsw i64 %93, 3
  %95 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %94)
  %96 = load ptr, ptr %40, align 8, !tbaa !79
  %97 = icmp eq ptr %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = load i32, ptr %9, align 8, !tbaa !80
  %100 = sext i32 %99 to i64
  %101 = shl nsw i64 %100, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %95, ptr nonnull align 4 %96, i64 %101, i1 false)
  %102 = load ptr, ptr %40, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %102)
  br label %103

103:                                              ; preds = %98, %92
  store ptr %95, ptr %40, align 8, !tbaa !79
  store i32 %90, ptr %11, align 4, !tbaa !78
  %104 = load i32, ptr %9, align 8, !tbaa !80
  br label %105

105:                                              ; preds = %72, %88, %103
  %106 = phi i32 [ %104, %103 ], [ %79, %88 ], [ %79, %72 ]
  %107 = load ptr, ptr %40, align 8, !tbaa !79
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds %struct.ImVec2, ptr %107, i64 %108
  %110 = load i64, ptr %3, align 4
  store i64 %110, ptr %109, align 4
  %111 = load i32, ptr %9, align 8, !tbaa !80
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr %9, align 8, !tbaa !80
  %113 = load i32, ptr %11, align 4, !tbaa !78
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %115, label %138

115:                                              ; preds = %105
  %116 = add nsw i32 %111, 2
  %117 = icmp eq i32 %112, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = sdiv i32 %112, 2
  %120 = add nsw i32 %119, %112
  br label %121

121:                                              ; preds = %118, %115
  %122 = phi i32 [ %120, %118 ], [ 8, %115 ]
  %123 = tail call i32 @llvm.smax.i32(i32 %122, i32 %116)
  %124 = icmp slt i32 %112, %123
  br i1 %124, label %125, label %138

125:                                              ; preds = %121
  %126 = sext i32 %123 to i64
  %127 = shl nsw i64 %126, 3
  %128 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %127)
  %129 = load ptr, ptr %40, align 8, !tbaa !79
  %130 = icmp eq ptr %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = load i32, ptr %9, align 8, !tbaa !80
  %133 = sext i32 %132 to i64
  %134 = shl nsw i64 %133, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %128, ptr nonnull align 4 %129, i64 %134, i1 false)
  %135 = load ptr, ptr %40, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %135)
  br label %136

136:                                              ; preds = %131, %125
  store ptr %128, ptr %40, align 8, !tbaa !79
  store i32 %123, ptr %11, align 4, !tbaa !78
  %137 = load i32, ptr %9, align 8, !tbaa !80
  br label %138

138:                                              ; preds = %105, %121, %136
  %139 = phi i32 [ %137, %136 ], [ %112, %121 ], [ %112, %105 ]
  %140 = load ptr, ptr %40, align 8, !tbaa !79
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds %struct.ImVec2, ptr %140, i64 %141
  %143 = load i64, ptr %4, align 4
  store i64 %143, ptr %142, align 4
  %144 = load i32, ptr %9, align 8, !tbaa !80
  %145 = add nsw i32 %144, 1
  store i32 %145, ptr %9, align 8, !tbaa !80
  %146 = load ptr, ptr %40, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %146, i32 noundef %145, i32 noundef %5)
  store i32 0, ptr %9, align 8, !tbaa !143
  br label %147

147:                                              ; preds = %6, %138
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddTriangle@ImDrawList@@QEAAXAEBUImVec2@@00IM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4, float noundef %5) local_unnamed_addr #7 align 2 {
  %7 = icmp ult i32 %4, 16777216
  br i1 %7, label %114, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %10 = load i32, ptr %9, align 8, !tbaa !80
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !78
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = add nsw i32 %10, 1
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = sdiv i32 %10, 2
  %19 = add nsw i32 %18, %10
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %19, %17 ], [ 8, %14 ]
  %22 = tail call i32 @llvm.smax.i32(i32 %21, i32 %15)
  %23 = icmp slt i32 %10, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = sext i32 %22 to i64
  %26 = shl nsw i64 %25, 3
  %27 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %26)
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !79
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = load i32, ptr %9, align 8, !tbaa !80
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %27, ptr nonnull align 4 %29, i64 %34, i1 false)
  %35 = load ptr, ptr %28, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %35)
  br label %36

36:                                               ; preds = %31, %24
  store ptr %27, ptr %28, align 8, !tbaa !79
  store i32 %22, ptr %11, align 4, !tbaa !78
  %37 = load i32, ptr %9, align 8, !tbaa !80
  br label %38

38:                                               ; preds = %8, %20, %36
  %39 = phi i32 [ %37, %36 ], [ %10, %20 ], [ %10, %8 ]
  %40 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !79
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds %struct.ImVec2, ptr %41, i64 %42
  %44 = load i64, ptr %1, align 4
  store i64 %44, ptr %43, align 4
  %45 = load i32, ptr %9, align 8, !tbaa !80
  %46 = add nsw i32 %45, 1
  store i32 %46, ptr %9, align 8, !tbaa !80
  %47 = load i32, ptr %11, align 4, !tbaa !78
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %72

49:                                               ; preds = %38
  %50 = add nsw i32 %45, 2
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = sdiv i32 %46, 2
  %54 = add nsw i32 %53, %46
  br label %55

55:                                               ; preds = %52, %49
  %56 = phi i32 [ %54, %52 ], [ 8, %49 ]
  %57 = tail call i32 @llvm.smax.i32(i32 %56, i32 %50)
  %58 = icmp slt i32 %46, %57
  br i1 %58, label %59, label %72

59:                                               ; preds = %55
  %60 = sext i32 %57 to i64
  %61 = shl nsw i64 %60, 3
  %62 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %61)
  %63 = load ptr, ptr %40, align 8, !tbaa !79
  %64 = icmp eq ptr %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = load i32, ptr %9, align 8, !tbaa !80
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %62, ptr nonnull align 4 %63, i64 %68, i1 false)
  %69 = load ptr, ptr %40, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %69)
  br label %70

70:                                               ; preds = %65, %59
  store ptr %62, ptr %40, align 8, !tbaa !79
  store i32 %57, ptr %11, align 4, !tbaa !78
  %71 = load i32, ptr %9, align 8, !tbaa !80
  br label %72

72:                                               ; preds = %38, %55, %70
  %73 = phi i32 [ %71, %70 ], [ %46, %55 ], [ %46, %38 ]
  %74 = load ptr, ptr %40, align 8, !tbaa !79
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds %struct.ImVec2, ptr %74, i64 %75
  %77 = load i64, ptr %2, align 4
  store i64 %77, ptr %76, align 4
  %78 = load i32, ptr %9, align 8, !tbaa !80
  %79 = add nsw i32 %78, 1
  store i32 %79, ptr %9, align 8, !tbaa !80
  %80 = load i32, ptr %11, align 4, !tbaa !78
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %105

82:                                               ; preds = %72
  %83 = add nsw i32 %78, 2
  %84 = icmp eq i32 %79, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = sdiv i32 %79, 2
  %87 = add nsw i32 %86, %79
  br label %88

88:                                               ; preds = %85, %82
  %89 = phi i32 [ %87, %85 ], [ 8, %82 ]
  %90 = tail call i32 @llvm.smax.i32(i32 %89, i32 %83)
  %91 = icmp slt i32 %79, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = sext i32 %90 to i64
  %94 = shl nsw i64 %93, 3
  %95 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %94)
  %96 = load ptr, ptr %40, align 8, !tbaa !79
  %97 = icmp eq ptr %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = load i32, ptr %9, align 8, !tbaa !80
  %100 = sext i32 %99 to i64
  %101 = shl nsw i64 %100, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %95, ptr nonnull align 4 %96, i64 %101, i1 false)
  %102 = load ptr, ptr %40, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %102)
  br label %103

103:                                              ; preds = %98, %92
  store ptr %95, ptr %40, align 8, !tbaa !79
  store i32 %90, ptr %11, align 4, !tbaa !78
  %104 = load i32, ptr %9, align 8, !tbaa !80
  br label %105

105:                                              ; preds = %72, %88, %103
  %106 = phi i32 [ %104, %103 ], [ %79, %88 ], [ %79, %72 ]
  %107 = load ptr, ptr %40, align 8, !tbaa !79
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds %struct.ImVec2, ptr %107, i64 %108
  %110 = load i64, ptr %3, align 4
  store i64 %110, ptr %109, align 4
  %111 = load i32, ptr %9, align 8, !tbaa !80
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr %9, align 8, !tbaa !80
  %113 = load ptr, ptr %40, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %113, i32 noundef %112, i32 noundef %4, i32 noundef 1, float noundef %5)
  store i32 0, ptr %9, align 8, !tbaa !143
  br label %114

114:                                              ; preds = %6, %105
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4) local_unnamed_addr #7 align 2 {
  %6 = icmp ult i32 %4, 16777216
  br i1 %6, label %113, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %9 = load i32, ptr %8, align 8, !tbaa !80
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !78
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %37

13:                                               ; preds = %7
  %14 = add nsw i32 %9, 1
  %15 = icmp eq i32 %9, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = sdiv i32 %9, 2
  %18 = add nsw i32 %17, %9
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi i32 [ %18, %16 ], [ 8, %13 ]
  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 %14)
  %22 = icmp slt i32 %9, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = sext i32 %21 to i64
  %25 = shl nsw i64 %24, 3
  %26 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %25)
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !79
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = load i32, ptr %8, align 8, !tbaa !80
  %32 = sext i32 %31 to i64
  %33 = shl nsw i64 %32, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %26, ptr nonnull align 4 %28, i64 %33, i1 false)
  %34 = load ptr, ptr %27, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %34)
  br label %35

35:                                               ; preds = %30, %23
  store ptr %26, ptr %27, align 8, !tbaa !79
  store i32 %21, ptr %10, align 4, !tbaa !78
  %36 = load i32, ptr %8, align 8, !tbaa !80
  br label %37

37:                                               ; preds = %7, %19, %35
  %38 = phi i32 [ %36, %35 ], [ %9, %19 ], [ %9, %7 ]
  %39 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !79
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds %struct.ImVec2, ptr %40, i64 %41
  %43 = load i64, ptr %1, align 4
  store i64 %43, ptr %42, align 4
  %44 = load i32, ptr %8, align 8, !tbaa !80
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr %8, align 8, !tbaa !80
  %46 = load i32, ptr %10, align 4, !tbaa !78
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %71

48:                                               ; preds = %37
  %49 = add nsw i32 %44, 2
  %50 = icmp eq i32 %45, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = sdiv i32 %45, 2
  %53 = add nsw i32 %52, %45
  br label %54

54:                                               ; preds = %51, %48
  %55 = phi i32 [ %53, %51 ], [ 8, %48 ]
  %56 = tail call i32 @llvm.smax.i32(i32 %55, i32 %49)
  %57 = icmp slt i32 %45, %56
  br i1 %57, label %58, label %71

58:                                               ; preds = %54
  %59 = sext i32 %56 to i64
  %60 = shl nsw i64 %59, 3
  %61 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %60)
  %62 = load ptr, ptr %39, align 8, !tbaa !79
  %63 = icmp eq ptr %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = load i32, ptr %8, align 8, !tbaa !80
  %66 = sext i32 %65 to i64
  %67 = shl nsw i64 %66, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %61, ptr nonnull align 4 %62, i64 %67, i1 false)
  %68 = load ptr, ptr %39, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %68)
  br label %69

69:                                               ; preds = %64, %58
  store ptr %61, ptr %39, align 8, !tbaa !79
  store i32 %56, ptr %10, align 4, !tbaa !78
  %70 = load i32, ptr %8, align 8, !tbaa !80
  br label %71

71:                                               ; preds = %37, %54, %69
  %72 = phi i32 [ %70, %69 ], [ %45, %54 ], [ %45, %37 ]
  %73 = load ptr, ptr %39, align 8, !tbaa !79
  %74 = sext i32 %72 to i64
  %75 = getelementptr inbounds %struct.ImVec2, ptr %73, i64 %74
  %76 = load i64, ptr %2, align 4
  store i64 %76, ptr %75, align 4
  %77 = load i32, ptr %8, align 8, !tbaa !80
  %78 = add nsw i32 %77, 1
  store i32 %78, ptr %8, align 8, !tbaa !80
  %79 = load i32, ptr %10, align 4, !tbaa !78
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %81, label %104

81:                                               ; preds = %71
  %82 = add nsw i32 %77, 2
  %83 = icmp eq i32 %78, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = sdiv i32 %78, 2
  %86 = add nsw i32 %85, %78
  br label %87

87:                                               ; preds = %84, %81
  %88 = phi i32 [ %86, %84 ], [ 8, %81 ]
  %89 = tail call i32 @llvm.smax.i32(i32 %88, i32 %82)
  %90 = icmp slt i32 %78, %89
  br i1 %90, label %91, label %104

91:                                               ; preds = %87
  %92 = sext i32 %89 to i64
  %93 = shl nsw i64 %92, 3
  %94 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %93)
  %95 = load ptr, ptr %39, align 8, !tbaa !79
  %96 = icmp eq ptr %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = load i32, ptr %8, align 8, !tbaa !80
  %99 = sext i32 %98 to i64
  %100 = shl nsw i64 %99, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %94, ptr nonnull align 4 %95, i64 %100, i1 false)
  %101 = load ptr, ptr %39, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %101)
  br label %102

102:                                              ; preds = %97, %91
  store ptr %94, ptr %39, align 8, !tbaa !79
  store i32 %89, ptr %10, align 4, !tbaa !78
  %103 = load i32, ptr %8, align 8, !tbaa !80
  br label %104

104:                                              ; preds = %71, %87, %102
  %105 = phi i32 [ %103, %102 ], [ %78, %87 ], [ %78, %71 ]
  %106 = load ptr, ptr %39, align 8, !tbaa !79
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds %struct.ImVec2, ptr %106, i64 %107
  %109 = load i64, ptr %3, align 4
  store i64 %109, ptr %108, align 4
  %110 = load i32, ptr %8, align 8, !tbaa !80
  %111 = add nsw i32 %110, 1
  store i32 %111, ptr %8, align 8, !tbaa !80
  %112 = load ptr, ptr %39, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %112, i32 noundef %111, i32 noundef %4)
  store i32 0, ptr %8, align 8, !tbaa !143
  br label %113

113:                                              ; preds = %5, %104
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddCircle@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %3, i32 noundef %4, float noundef %5) local_unnamed_addr #7 align 2 {
  %7 = icmp ult i32 %3, 16777216
  %8 = fcmp fast olt float %2, 5.000000e-01
  %9 = select i1 %7, i1 true, i1 %8
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = icmp slt i32 %4, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %10
  %13 = fadd fast float %2, -5.000000e-01
  tail call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %13, i32 noundef 0, i32 noundef 48, i32 noundef 0)
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %15 = load i32, ptr %14, align 8, !tbaa !143
  %16 = add nsw i32 %15, -1
  store i32 %16, ptr %14, align 8, !tbaa !143
  br label %29

17:                                               ; preds = %10
  %18 = icmp ult i32 %4, 3
  %19 = tail call i32 @llvm.smin.i32(i32 %4, i32 512)
  %20 = select i1 %18, i32 3, i32 %19
  %21 = sitofp i32 %20 to float
  %22 = fmul fast float %21, 0x401921FB60000000
  %23 = fadd fast float %22, 0xC01921FB60000000
  %24 = fdiv fast float %23, %21
  %25 = add nsw i32 %20, -1
  %26 = fadd fast float %2, -5.000000e-01
  tail call void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %26, float noundef 0.000000e+00, float noundef %24, i32 noundef %25)
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %28 = load i32, ptr %27, align 8, !tbaa !143
  br label %29

29:                                               ; preds = %17, %12
  %30 = phi i32 [ %28, %17 ], [ %16, %12 ]
  %31 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %32 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %33, i32 noundef %30, i32 noundef %3, i32 noundef 1, float noundef %5)
  store i32 0, ptr %31, align 8, !tbaa !143
  br label %34

34:                                               ; preds = %6, %29
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddCircleFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #7 align 2 {
  %6 = icmp ult i32 %3, 16777216
  %7 = fcmp fast olt float %2, 5.000000e-01
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp slt i32 %4, 1
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  tail call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, i32 noundef 0, i32 noundef 48, i32 noundef 0)
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %13 = load i32, ptr %12, align 8, !tbaa !143
  %14 = add nsw i32 %13, -1
  store i32 %14, ptr %12, align 8, !tbaa !143
  br label %26

15:                                               ; preds = %9
  %16 = icmp ult i32 %4, 3
  %17 = tail call i32 @llvm.smin.i32(i32 %4, i32 512)
  %18 = select i1 %16, i32 3, i32 %17
  %19 = sitofp i32 %18 to float
  %20 = fmul fast float %19, 0x401921FB60000000
  %21 = fadd fast float %20, 0xC01921FB60000000
  %22 = fdiv fast float %21, %19
  %23 = add nsw i32 %18, -1
  tail call void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, float noundef 0.000000e+00, float noundef %22, i32 noundef %23)
  %24 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %25 = load i32, ptr %24, align 8, !tbaa !143
  br label %26

26:                                               ; preds = %15, %11
  %27 = phi i32 [ %25, %15 ], [ %14, %11 ]
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %30, i32 noundef %27, i32 noundef %3)
  store i32 0, ptr %28, align 8, !tbaa !143
  br label %31

31:                                               ; preds = %5, %26
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddNgon@ImDrawList@@QEAAXAEBUImVec2@@MIHM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %3, i32 noundef %4, float noundef %5) local_unnamed_addr #7 align 2 {
  %7 = icmp ult i32 %3, 16777216
  %8 = icmp slt i32 %4, 3
  %9 = or i1 %7, %8
  br i1 %9, label %21, label %10

10:                                               ; preds = %6
  %11 = sitofp i32 %4 to float
  %12 = fmul fast float %11, 0x401921FB60000000
  %13 = fadd fast float %12, 0xC01921FB60000000
  %14 = fdiv fast float %13, %11
  %15 = add nsw i32 %4, -1
  %16 = fadd fast float %2, -5.000000e-01
  tail call void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %16, float noundef 0.000000e+00, float noundef %14, i32 noundef %15)
  %17 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %18 = load i32, ptr %17, align 8, !tbaa !143
  %19 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %20, i32 noundef %18, i32 noundef %3, i32 noundef 1, float noundef %5)
  store i32 0, ptr %17, align 8, !tbaa !143
  br label %21

21:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddNgonFilled@ImDrawList@@QEAAXAEBUImVec2@@MIH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, float noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #7 align 2 {
  %6 = icmp ult i32 %3, 16777216
  %7 = icmp slt i32 %4, 3
  %8 = or i1 %6, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = sitofp i32 %4 to float
  %11 = fmul fast float %10, 0x401921FB60000000
  %12 = fadd fast float %11, 0xC01921FB60000000
  %13 = fdiv fast float %12, %10
  %14 = add nsw i32 %4, -1
  tail call void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %1, float noundef %2, float noundef 0.000000e+00, float noundef %13, i32 noundef %14)
  %15 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %16 = load i32, ptr %15, align 8, !tbaa !143
  %17 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %18, i32 noundef %16, i32 noundef %3)
  store i32 0, ptr %15, align 8, !tbaa !143
  br label %19

19:                                               ; preds = %5, %9
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddBezierCubic@ImDrawList@@QEAAXAEBUImVec2@@000IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, i32 noundef %5, float noundef %6, i32 noundef %7) local_unnamed_addr #7 align 2 {
  %9 = icmp ult i32 %5, 16777216
  br i1 %9, label %51, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %12 = load i32, ptr %11, align 8, !tbaa !80
  %13 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !78
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %40

16:                                               ; preds = %10
  %17 = add nsw i32 %12, 1
  %18 = icmp eq i32 %12, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = sdiv i32 %12, 2
  %21 = add nsw i32 %20, %12
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i32 [ %21, %19 ], [ 8, %16 ]
  %24 = tail call i32 @llvm.smax.i32(i32 %23, i32 %17)
  %25 = icmp slt i32 %12, %24
  br i1 %25, label %26, label %40

26:                                               ; preds = %22
  %27 = sext i32 %24 to i64
  %28 = shl nsw i64 %27, 3
  %29 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %28)
  %30 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !79
  %32 = icmp eq ptr %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = load i32, ptr %11, align 8, !tbaa !80
  %35 = sext i32 %34 to i64
  %36 = shl nsw i64 %35, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %29, ptr nonnull align 4 %31, i64 %36, i1 false)
  %37 = load ptr, ptr %30, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %37)
  br label %38

38:                                               ; preds = %33, %26
  store ptr %29, ptr %30, align 8, !tbaa !79
  store i32 %24, ptr %13, align 4, !tbaa !78
  %39 = load i32, ptr %11, align 8, !tbaa !80
  br label %40

40:                                               ; preds = %10, %22, %38
  %41 = phi i32 [ %39, %38 ], [ %12, %22 ], [ %12, %10 ]
  %42 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !79
  %44 = sext i32 %41 to i64
  %45 = getelementptr inbounds %struct.ImVec2, ptr %43, i64 %44
  %46 = load i64, ptr %1, align 4
  store i64 %46, ptr %45, align 4
  %47 = load i32, ptr %11, align 8, !tbaa !80
  %48 = add nsw i32 %47, 1
  store i32 %48, ptr %11, align 8, !tbaa !80
  tail call void @"?PathBezierCubicCurveTo@ImDrawList@@QEAAXAEBUImVec2@@00H@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 4 dereferenceable(8) %4, i32 noundef %7)
  %49 = load i32, ptr %11, align 8, !tbaa !143
  %50 = load ptr, ptr %42, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %50, i32 noundef %49, i32 noundef %5, i32 noundef 0, float noundef %6)
  store i32 0, ptr %11, align 8, !tbaa !143
  br label %51

51:                                               ; preds = %8, %40
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddBezierQuadratic@ImDrawList@@QEAAXAEBUImVec2@@00IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4, float noundef %5, i32 noundef %6) local_unnamed_addr #7 align 2 {
  %8 = icmp ult i32 %4, 16777216
  br i1 %8, label %50, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %11 = load i32, ptr %10, align 8, !tbaa !80
  %12 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !78
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %39

15:                                               ; preds = %9
  %16 = add nsw i32 %11, 1
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = sdiv i32 %11, 2
  %20 = add nsw i32 %19, %11
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i32 [ %20, %18 ], [ 8, %15 ]
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 %16)
  %24 = icmp slt i32 %11, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 3
  %28 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %27)
  %29 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !79
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = load i32, ptr %10, align 8, !tbaa !80
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %28, ptr nonnull align 4 %30, i64 %35, i1 false)
  %36 = load ptr, ptr %29, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %36)
  br label %37

37:                                               ; preds = %32, %25
  store ptr %28, ptr %29, align 8, !tbaa !79
  store i32 %23, ptr %12, align 4, !tbaa !78
  %38 = load i32, ptr %10, align 8, !tbaa !80
  br label %39

39:                                               ; preds = %9, %21, %37
  %40 = phi i32 [ %38, %37 ], [ %11, %21 ], [ %11, %9 ]
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !79
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %struct.ImVec2, ptr %42, i64 %43
  %45 = load i64, ptr %1, align 4
  store i64 %45, ptr %44, align 4
  %46 = load i32, ptr %10, align 8, !tbaa !80
  %47 = add nsw i32 %46, 1
  store i32 %47, ptr %10, align 8, !tbaa !80
  tail call void @"?PathBezierQuadraticCurveTo@ImDrawList@@QEAAXAEBUImVec2@@0H@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 4 dereferenceable(8) %3, i32 noundef %6)
  %48 = load i32, ptr %10, align 8, !tbaa !143
  %49 = load ptr, ptr %41, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %49, i32 noundef %48, i32 noundef %4, i32 noundef 0, float noundef %5)
  store i32 0, ptr %10, align 8, !tbaa !143
  br label %50

50:                                               ; preds = %7, %39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr noundef readonly %1, float noundef %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4, ptr noundef %5, ptr noundef %6, float noundef %7, ptr noundef readonly %8) local_unnamed_addr #7 align 2 {
  %10 = alloca %struct.ImVec4, align 8
  %11 = icmp ult i32 %4, 16777216
  br i1 %11, label %58, label %12

12:                                               ; preds = %9
  %13 = icmp eq ptr %6, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %5)
  %16 = getelementptr inbounds i8, ptr %5, i64 %15
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi ptr [ %16, %14 ], [ %6, %12 ]
  %19 = icmp eq ptr %18, %5
  br i1 %19, label %58, label %20

20:                                               ; preds = %17
  %21 = icmp eq ptr %1, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %24 = load ptr, ptr %23, align 8, !tbaa !68
  %25 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !169
  br label %27

27:                                               ; preds = %22, %20
  %28 = phi ptr [ %26, %22 ], [ %1, %20 ]
  %29 = fcmp fast oeq float %2, 0.000000e+00
  br i1 %29, label %30, label %35

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %32 = load ptr, ptr %31, align 8, !tbaa !68
  %33 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %32, i64 0, i32 2
  %34 = load float, ptr %33, align 8, !tbaa !170
  br label %35

35:                                               ; preds = %30, %27
  %36 = phi float [ %34, %30 ], [ %2, %27 ]
  %37 = getelementptr inbounds %struct.ImFont, ptr %28, i64 0, i32 6
  %38 = load ptr, ptr %37, align 8, !tbaa !171
  %39 = getelementptr inbounds %struct.ImFontAtlas, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !176
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %42 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !107
  %44 = icmp eq ptr %40, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %35
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1GI@CIGOLMNM@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1585)
  br label %46

46:                                               ; preds = %45, %35
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #39
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %10, ptr noundef nonnull align 8 dereferenceable(16) %41, i64 16, i1 false), !tbaa.struct !5
  %47 = icmp ne ptr %8, null
  br i1 %47, label %48, label %57

48:                                               ; preds = %46
  %49 = load <2 x float>, ptr %8, align 4, !tbaa !6
  %50 = load <2 x float>, ptr %10, align 8, !tbaa !6
  %51 = tail call fast <2 x float> @llvm.maxnum.v2f32(<2 x float> %50, <2 x float> %49)
  store <2 x float> %51, ptr %10, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.ImVec4, ptr %8, i64 0, i32 2
  %53 = getelementptr inbounds %struct.ImVec4, ptr %10, i64 0, i32 2
  %54 = load <2 x float>, ptr %52, align 4, !tbaa !6
  %55 = load <2 x float>, ptr %53, align 8, !tbaa !6
  %56 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %55, <2 x float> %54)
  store <2 x float> %56, ptr %53, align 8, !tbaa !6
  br label %57

57:                                               ; preds = %48, %46
  call void @"?RenderText@ImFont@@QEBAXPEAUImDrawList@@MAEBUImVec2@@IAEBUImVec4@@PEBD3M_N@Z"(ptr noundef nonnull align 8 dereferenceable(120) %28, ptr noundef nonnull %0, float noundef %36, ptr noundef nonnull align 4 dereferenceable(8) %3, i32 noundef %4, ptr noundef nonnull align 4 dereferenceable(16) %10, ptr noundef %5, ptr noundef %18, float noundef %7, i1 noundef zeroext %47)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #39
  br label %58

58:                                               ; preds = %17, %9, %57
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local i64 @strlen(ptr nocapture noundef) local_unnamed_addr #9

; Function Attrs: mustprogress uwtable
define dso_local void @"?RenderText@ImFont@@QEBAXPEAUImDrawList@@MAEBUImVec2@@IAEBUImVec4@@PEBD3M_N@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, ptr nocapture noundef %1, float noundef %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %5, ptr noundef %6, ptr noundef %7, float noundef %8, i1 noundef zeroext %9) local_unnamed_addr #7 align 2 {
  %11 = alloca i32, align 4
  %12 = icmp eq ptr %7, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %6)
  %15 = getelementptr inbounds i8, ptr %6, i64 %14
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi ptr [ %7, %10 ], [ %15, %13 ]
  %18 = load float, ptr %3, align 4, !tbaa !113
  %19 = fptosi float %18 to i32
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %struct.ImVec2, ptr %3, i64 0, i32 1
  %22 = load float, ptr %21, align 4, !tbaa !112
  %23 = fptosi float %22 to i32
  %24 = sitofp i32 %23 to float
  %25 = getelementptr inbounds %struct.ImVec4, ptr %5, i64 0, i32 3
  %26 = load float, ptr %25, align 4, !tbaa !10
  %27 = fcmp fast olt float %26, %24
  br i1 %27, label %399, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 2
  %30 = load float, ptr %29, align 4, !tbaa !181
  %31 = fdiv fast float %2, %30
  %32 = fmul fast float %31, %30
  %33 = fcmp fast ogt float %8, 0.000000e+00
  %34 = fadd fast float %32, %24
  %35 = getelementptr inbounds %struct.ImVec4, ptr %5, i64 0, i32 1
  %36 = load float, ptr %35, align 4, !tbaa !182
  %37 = fcmp fast olt float %34, %36
  %38 = icmp ugt ptr %17, %6
  %39 = select i1 %37, i1 %38, i1 false
  br i1 %39, label %40, label %86

40:                                               ; preds = %28
  %41 = ptrtoint ptr %17 to i64
  br i1 %33, label %42, label %73

42:                                               ; preds = %40, %62
  %43 = phi float [ %68, %62 ], [ %34, %40 ]
  %44 = phi ptr [ %67, %62 ], [ %6, %40 ]
  %45 = ptrtoint ptr %44 to i64
  %46 = sub i64 %41, %45
  %47 = tail call ptr @memchr(ptr noundef %44, i32 noundef 10, i64 noundef %46)
  %48 = icmp eq ptr %47, null
  %49 = select i1 %48, ptr %17, ptr %47
  %50 = tail call noundef ptr @"?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z"(ptr noundef nonnull align 8 dereferenceable(120) %0, float noundef %31, ptr noundef %44, ptr noundef %49, float noundef %8)
  %51 = icmp ult ptr %50, %17
  br i1 %51, label %52, label %62

52:                                               ; preds = %42
  %53 = ptrtoint ptr %50 to i64
  %54 = sub i64 %41, %53
  %55 = getelementptr i8, ptr %50, i64 %54
  br label %56

56:                                               ; preds = %59, %52
  %57 = phi ptr [ %60, %59 ], [ %50, %52 ]
  %58 = load i8, ptr %57, align 1, !tbaa !46
  switch i8 %58, label %62 [
    i8 32, label %59
    i8 9, label %59
  ]

59:                                               ; preds = %56, %56
  %60 = getelementptr inbounds i8, ptr %57, i64 1
  %61 = icmp eq ptr %60, %55
  br i1 %61, label %62, label %56, !llvm.loop !183

62:                                               ; preds = %56, %59, %42
  %63 = phi ptr [ %50, %42 ], [ %55, %59 ], [ %57, %56 ]
  %64 = load i8, ptr %63, align 1, !tbaa !46
  %65 = icmp eq i8 %64, 10
  %66 = zext i1 %65 to i64
  %67 = getelementptr i8, ptr %63, i64 %66
  %68 = fadd fast float %43, %32
  %69 = load float, ptr %35, align 4, !tbaa !182
  %70 = fcmp fast olt float %68, %69
  %71 = icmp ult ptr %67, %17
  %72 = select i1 %70, i1 %71, i1 false
  br i1 %72, label %42, label %86, !llvm.loop !184

73:                                               ; preds = %40, %73
  %74 = phi float [ %82, %73 ], [ %34, %40 ]
  %75 = phi ptr [ %81, %73 ], [ %6, %40 ]
  %76 = ptrtoint ptr %75 to i64
  %77 = sub i64 %41, %76
  %78 = tail call ptr @memchr(ptr noundef %75, i32 noundef 10, i64 noundef %77)
  %79 = icmp eq ptr %78, null
  %80 = getelementptr inbounds i8, ptr %78, i64 1
  %81 = select i1 %79, ptr %17, ptr %80
  %82 = fadd fast float %74, %32
  %83 = fcmp fast olt float %82, %36
  %84 = icmp ult ptr %81, %17
  %85 = select i1 %83, i1 %84, i1 false
  br i1 %85, label %73, label %86, !llvm.loop !184

86:                                               ; preds = %73, %62, %28
  %87 = phi ptr [ %6, %28 ], [ %67, %62 ], [ %81, %73 ]
  %88 = phi float [ %24, %28 ], [ %43, %62 ], [ %74, %73 ]
  %89 = ptrtoint ptr %17 to i64
  %90 = ptrtoint ptr %87 to i64
  %91 = sub i64 %89, %90
  %92 = icmp slt i64 %91, 10001
  %93 = select i1 %92, i1 true, i1 %33
  br i1 %93, label %112, label %94

94:                                               ; preds = %86
  %95 = load float, ptr %25, align 4, !tbaa !10
  %96 = fcmp fast olt float %88, %95
  %97 = icmp ult ptr %87, %17
  %98 = select i1 %96, i1 %97, i1 false
  br i1 %98, label %99, label %112

99:                                               ; preds = %94, %99
  %100 = phi ptr [ %107, %99 ], [ %87, %94 ]
  %101 = phi float [ %108, %99 ], [ %88, %94 ]
  %102 = ptrtoint ptr %100 to i64
  %103 = sub i64 %89, %102
  %104 = tail call ptr @memchr(ptr noundef %100, i32 noundef 10, i64 noundef %103)
  %105 = icmp eq ptr %104, null
  %106 = getelementptr inbounds i8, ptr %104, i64 1
  %107 = select i1 %105, ptr %17, ptr %106
  %108 = fadd fast float %101, %32
  %109 = fcmp fast olt float %108, %95
  %110 = icmp ult ptr %107, %17
  %111 = select i1 %109, i1 %110, i1 false
  br i1 %111, label %99, label %112, !llvm.loop !185

112:                                              ; preds = %99, %94, %86
  %113 = phi ptr [ %17, %86 ], [ %87, %94 ], [ %107, %99 ]
  %114 = icmp eq ptr %87, %113
  br i1 %114, label %399, label %115

115:                                              ; preds = %112
  %116 = ptrtoint ptr %113 to i64
  %117 = sub i64 %116, %90
  %118 = trunc i64 %117 to i32
  %119 = shl nsw i32 %118, 2
  %120 = mul nsw i32 %118, 6
  %121 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1
  %122 = load i32, ptr %121, align 8, !tbaa !90
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %1, i32 noundef %120, i32 noundef %119)
  %123 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 7
  %124 = load ptr, ptr %123, align 8, !tbaa !120
  %125 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 8
  %126 = load ptr, ptr %125, align 8, !tbaa !99
  %127 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 4
  %128 = load i32, ptr %127, align 4, !tbaa !71
  %129 = or i32 %4, 16777215
  %130 = fadd fast float %20, %8
  %131 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %132 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %133 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %134 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %135 = getelementptr inbounds %struct.ImVec4, ptr %5, i64 0, i32 2
  br label %136

136:                                              ; preds = %115, %365
  %137 = phi ptr [ %87, %115 ], [ %200, %365 ]
  %138 = phi ptr [ %124, %115 ], [ %366, %365 ]
  %139 = phi ptr [ %126, %115 ], [ %367, %365 ]
  %140 = phi i32 [ %128, %115 ], [ %368, %365 ]
  %141 = phi ptr [ null, %115 ], [ %187, %365 ]
  %142 = phi float [ %88, %115 ], [ %185, %365 ]
  %143 = phi float [ %20, %115 ], [ %369, %365 ]
  br label %144

144:                                              ; preds = %136, %203
  %145 = phi ptr [ %200, %203 ], [ %137, %136 ]
  %146 = phi ptr [ %187, %203 ], [ %141, %136 ]
  %147 = phi float [ %204, %203 ], [ %142, %136 ]
  %148 = phi float [ %20, %203 ], [ %143, %136 ]
  %149 = icmp ult ptr %145, %113
  br i1 %149, label %150, label %370

150:                                              ; preds = %144
  br i1 %33, label %151, label %183

151:                                              ; preds = %150, %176
  %152 = phi float [ %20, %176 ], [ %148, %150 ]
  %153 = phi float [ %164, %176 ], [ %147, %150 ]
  %154 = phi ptr [ null, %176 ], [ %146, %150 ]
  %155 = phi ptr [ %181, %176 ], [ %145, %150 ]
  %156 = icmp eq ptr %154, null
  br i1 %156, label %157, label %160

157:                                              ; preds = %151
  %158 = fsub fast float %130, %152
  %159 = call noundef ptr @"?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z"(ptr noundef nonnull align 8 dereferenceable(120) %0, float noundef %31, ptr noundef %155, ptr noundef nonnull %113, float noundef %158)
  br label %160

160:                                              ; preds = %157, %151
  %161 = phi ptr [ %154, %151 ], [ %159, %157 ]
  %162 = icmp ult ptr %155, %161
  br i1 %162, label %183, label %163

163:                                              ; preds = %160
  %164 = fadd fast float %153, %32
  %165 = ptrtoint ptr %155 to i64
  %166 = sub i64 %116, %165
  %167 = getelementptr i8, ptr %155, i64 %166
  br label %168

168:                                              ; preds = %171, %163
  %169 = phi ptr [ %172, %171 ], [ %155, %163 ]
  %170 = load i8, ptr %169, align 1, !tbaa !46
  switch i8 %170, label %176 [
    i8 32, label %171
    i8 9, label %171
  ]

171:                                              ; preds = %168, %168
  %172 = getelementptr inbounds i8, ptr %169, i64 1
  %173 = icmp eq ptr %172, %167
  br i1 %173, label %174, label %168, !llvm.loop !183

174:                                              ; preds = %171
  %175 = load i8, ptr %167, align 1, !tbaa !46
  br label %176

176:                                              ; preds = %168, %174
  %177 = phi i8 [ %175, %174 ], [ %170, %168 ]
  %178 = phi ptr [ %167, %174 ], [ %169, %168 ]
  %179 = icmp eq i8 %177, 10
  %180 = zext i1 %179 to i64
  %181 = getelementptr i8, ptr %178, i64 %180
  %182 = icmp ult ptr %181, %113
  br i1 %182, label %151, label %370, !llvm.loop !186

183:                                              ; preds = %160, %150
  %184 = phi ptr [ %145, %150 ], [ %155, %160 ]
  %185 = phi float [ %147, %150 ], [ %153, %160 ]
  %186 = phi float [ %148, %150 ], [ %152, %160 ]
  %187 = phi ptr [ %146, %150 ], [ %161, %160 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #39
  %188 = load i8, ptr %184, align 1, !tbaa !46
  %189 = sext i8 %188 to i32
  store i32 %189, ptr %11, align 4, !tbaa !105
  %190 = icmp sgt i8 %188, -1
  br i1 %190, label %191, label %193

191:                                              ; preds = %183
  %192 = getelementptr inbounds i8, ptr %184, i64 1
  br label %198

193:                                              ; preds = %183
  %194 = call noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef nonnull %11, ptr noundef nonnull %184, ptr noundef nonnull %113)
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %184, i64 %195
  %197 = load i32, ptr %11, align 4, !tbaa !105
  br label %198

198:                                              ; preds = %193, %191
  %199 = phi i32 [ %197, %193 ], [ %189, %191 ]
  %200 = phi ptr [ %196, %193 ], [ %192, %191 ]
  %201 = icmp ult i32 %199, 32
  br i1 %201, label %202, label %207

202:                                              ; preds = %198
  switch i32 %199, label %207 [
    i32 10, label %203
    i32 13, label %365
  ], !llvm.loop !186

203:                                              ; preds = %202
  %204 = fadd fast float %185, %32
  %205 = load float, ptr %25, align 4, !tbaa !10
  %206 = fcmp fast ogt float %204, %205
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #39
  br i1 %206, label %370, label %144

207:                                              ; preds = %202, %198
  %208 = and i32 %199, 65535
  %209 = load i32, ptr %131, align 8, !tbaa !187
  %210 = icmp ult i32 %208, %209
  br i1 %210, label %213, label %211

211:                                              ; preds = %207
  %212 = load ptr, ptr %132, align 8, !tbaa !188
  br label %224

213:                                              ; preds = %207
  %214 = zext i32 %208 to i64
  %215 = load ptr, ptr %133, align 8, !tbaa !189
  %216 = getelementptr inbounds i16, ptr %215, i64 %214
  %217 = load i16, ptr %216, align 2, !tbaa !121
  %218 = icmp eq i16 %217, -1
  %219 = load ptr, ptr %132, align 8
  %220 = load ptr, ptr %134, align 8
  %221 = zext i16 %217 to i64
  %222 = getelementptr inbounds %struct.ImFontGlyph, ptr %220, i64 %221
  %223 = select i1 %218, ptr %219, ptr %222
  br label %224

224:                                              ; preds = %211, %213
  %225 = phi ptr [ %212, %211 ], [ %223, %213 ]
  %226 = icmp eq ptr %225, null
  br i1 %226, label %365, label %227, !llvm.loop !186

227:                                              ; preds = %224
  %228 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 1
  %229 = load float, ptr %228, align 4, !tbaa !190
  %230 = fmul fast float %229, %31
  %231 = load i32, ptr %225, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %360, label %234

234:                                              ; preds = %227
  %235 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 2
  %236 = load float, ptr %235, align 4, !tbaa !192
  %237 = fmul fast float %236, %31
  %238 = fadd fast float %237, %186
  %239 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 4
  %240 = load float, ptr %239, align 4, !tbaa !193
  %241 = fmul fast float %240, %31
  %242 = fadd fast float %241, %186
  %243 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 3
  %244 = load float, ptr %243, align 4, !tbaa !194
  %245 = fmul fast float %244, %31
  %246 = fadd fast float %245, %185
  %247 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 5
  %248 = load float, ptr %247, align 4, !tbaa !195
  %249 = fmul fast float %248, %31
  %250 = fadd fast float %249, %185
  %251 = load float, ptr %135, align 4, !tbaa !196
  %252 = fcmp fast ugt float %238, %251
  br i1 %252, label %360, label %253

253:                                              ; preds = %234
  %254 = load float, ptr %5, align 4, !tbaa !19
  %255 = fcmp fast ult float %242, %254
  br i1 %255, label %360, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 6
  %258 = load float, ptr %257, align 4, !tbaa !197
  %259 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 7
  %260 = load float, ptr %259, align 4, !tbaa !198
  %261 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 8
  %262 = load float, ptr %261, align 4, !tbaa !199
  %263 = getelementptr inbounds %struct.ImFontGlyph, ptr %225, i64 0, i32 9
  %264 = load float, ptr %263, align 4, !tbaa !200
  br i1 %9, label %265, label %315

265:                                              ; preds = %256
  %266 = fcmp fast olt float %238, %254
  br i1 %266, label %267, label %275

267:                                              ; preds = %265
  %268 = fsub fast float %242, %254
  %269 = fsub fast float %241, %237
  %270 = fdiv fast float %268, %269
  %271 = fsub fast float 1.000000e+00, %270
  %272 = fsub fast float %262, %258
  %273 = fmul fast float %272, %271
  %274 = fadd fast float %273, %258
  br label %275

275:                                              ; preds = %267, %265
  %276 = phi float [ %254, %267 ], [ %238, %265 ]
  %277 = phi float [ %274, %267 ], [ %258, %265 ]
  %278 = load float, ptr %35, align 4, !tbaa !182
  %279 = fcmp fast olt float %246, %278
  br i1 %279, label %280, label %288

280:                                              ; preds = %275
  %281 = fsub fast float %250, %278
  %282 = fsub fast float %249, %245
  %283 = fdiv fast float %281, %282
  %284 = fsub fast float 1.000000e+00, %283
  %285 = fsub fast float %264, %260
  %286 = fmul fast float %284, %285
  %287 = fadd fast float %286, %260
  br label %288

288:                                              ; preds = %280, %275
  %289 = phi float [ %278, %280 ], [ %246, %275 ]
  %290 = phi float [ %287, %280 ], [ %260, %275 ]
  %291 = fcmp fast ogt float %242, %251
  br i1 %291, label %292, label %299

292:                                              ; preds = %288
  %293 = fsub fast float %251, %276
  %294 = fsub fast float %242, %276
  %295 = fsub fast float %262, %277
  %296 = fmul fast float %295, %293
  %297 = fdiv fast float %296, %294
  %298 = fadd fast float %297, %277
  br label %299

299:                                              ; preds = %292, %288
  %300 = phi float [ %251, %292 ], [ %242, %288 ]
  %301 = phi float [ %298, %292 ], [ %262, %288 ]
  %302 = load float, ptr %25, align 4, !tbaa !10
  %303 = fcmp fast ogt float %250, %302
  br i1 %303, label %304, label %311

304:                                              ; preds = %299
  %305 = fsub fast float %302, %289
  %306 = fsub fast float %250, %289
  %307 = fsub fast float %264, %290
  %308 = fmul fast float %305, %307
  %309 = fdiv fast float %308, %306
  %310 = fadd fast float %309, %290
  br label %311

311:                                              ; preds = %304, %299
  %312 = phi float [ %302, %304 ], [ %250, %299 ]
  %313 = phi float [ %310, %304 ], [ %264, %299 ]
  %314 = fcmp fast ult float %289, %312
  br i1 %314, label %315, label %358

315:                                              ; preds = %256, %311
  %316 = phi float [ %276, %311 ], [ %238, %256 ]
  %317 = phi float [ %300, %311 ], [ %242, %256 ]
  %318 = phi float [ %289, %311 ], [ %246, %256 ]
  %319 = phi float [ %312, %311 ], [ %250, %256 ]
  %320 = phi float [ %277, %311 ], [ %258, %256 ]
  %321 = phi float [ %290, %311 ], [ %260, %256 ]
  %322 = phi float [ %301, %311 ], [ %262, %256 ]
  %323 = phi float [ %313, %311 ], [ %264, %256 ]
  %324 = and i32 %231, 1
  %325 = icmp eq i32 %324, 0
  %326 = select i1 %325, i32 %4, i32 %129
  store float %316, ptr %138, align 4, !tbaa !133
  %327 = getelementptr inbounds %struct.ImVec2, ptr %138, i64 0, i32 1
  store float %318, ptr %327, align 4, !tbaa !134
  %328 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 0, i32 2
  store i32 %326, ptr %328, align 4, !tbaa !123
  %329 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 0, i32 1
  store float %320, ptr %329, align 4, !tbaa !201
  %330 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 0, i32 1, i32 1
  store float %321, ptr %330, align 4, !tbaa !202
  %331 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 1
  store float %317, ptr %331, align 4, !tbaa !133
  %332 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 1, i32 0, i32 1
  store float %318, ptr %332, align 4, !tbaa !134
  %333 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 1, i32 2
  store i32 %326, ptr %333, align 4, !tbaa !123
  %334 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 1, i32 1
  store float %322, ptr %334, align 4, !tbaa !201
  %335 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 1, i32 1, i32 1
  store float %321, ptr %335, align 4, !tbaa !202
  %336 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 2
  store float %317, ptr %336, align 4, !tbaa !133
  %337 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 2, i32 0, i32 1
  store float %319, ptr %337, align 4, !tbaa !134
  %338 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 2, i32 2
  store i32 %326, ptr %338, align 4, !tbaa !123
  %339 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 2, i32 1
  store float %322, ptr %339, align 4, !tbaa !201
  %340 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 2, i32 1, i32 1
  store float %323, ptr %340, align 4, !tbaa !202
  %341 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 3
  store float %316, ptr %341, align 4, !tbaa !133
  %342 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 3, i32 0, i32 1
  store float %319, ptr %342, align 4, !tbaa !134
  %343 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 3, i32 2
  store i32 %326, ptr %343, align 4, !tbaa !123
  %344 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 3, i32 1
  store float %320, ptr %344, align 4, !tbaa !201
  %345 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 3, i32 1, i32 1
  store float %323, ptr %345, align 4, !tbaa !202
  %346 = trunc i32 %140 to i16
  store i16 %346, ptr %139, align 2, !tbaa !121
  %347 = add i16 %346, 1
  %348 = getelementptr inbounds i16, ptr %139, i64 1
  store i16 %347, ptr %348, align 2, !tbaa !121
  %349 = add i16 %346, 2
  %350 = getelementptr inbounds i16, ptr %139, i64 2
  store i16 %349, ptr %350, align 2, !tbaa !121
  %351 = getelementptr inbounds i16, ptr %139, i64 3
  store i16 %346, ptr %351, align 2, !tbaa !121
  %352 = getelementptr inbounds i16, ptr %139, i64 4
  store i16 %349, ptr %352, align 2, !tbaa !121
  %353 = add i16 %346, 3
  %354 = getelementptr inbounds i16, ptr %139, i64 5
  store i16 %353, ptr %354, align 2, !tbaa !121
  %355 = getelementptr inbounds %struct.ImDrawVert, ptr %138, i64 4
  %356 = add i32 %140, 4
  %357 = getelementptr inbounds i16, ptr %139, i64 6
  br label %360

358:                                              ; preds = %311
  %359 = fadd fast float %230, %186
  br label %365

360:                                              ; preds = %234, %253, %315, %227
  %361 = phi ptr [ %138, %227 ], [ %355, %315 ], [ %138, %234 ], [ %138, %253 ]
  %362 = phi ptr [ %139, %227 ], [ %357, %315 ], [ %139, %234 ], [ %139, %253 ]
  %363 = phi i32 [ %140, %227 ], [ %356, %315 ], [ %140, %234 ], [ %140, %253 ]
  %364 = fadd fast float %230, %186
  br label %365

365:                                              ; preds = %202, %358, %224, %360
  %366 = phi ptr [ %138, %224 ], [ %361, %360 ], [ %138, %358 ], [ %138, %202 ]
  %367 = phi ptr [ %139, %224 ], [ %362, %360 ], [ %139, %358 ], [ %139, %202 ]
  %368 = phi i32 [ %140, %224 ], [ %363, %360 ], [ %140, %358 ], [ %140, %202 ]
  %369 = phi float [ %186, %224 ], [ %364, %360 ], [ %359, %358 ], [ %186, %202 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #39
  br label %136

370:                                              ; preds = %144, %203, %176
  %371 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 2
  %372 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 2, i32 2
  %373 = load ptr, ptr %372, align 8, !tbaa !119
  %374 = ptrtoint ptr %138 to i64
  %375 = ptrtoint ptr %373 to i64
  %376 = sub i64 %374, %375
  %377 = sdiv exact i64 %376, 20
  %378 = trunc i64 %377 to i32
  store i32 %378, ptr %371, align 8, !tbaa !118
  %379 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1, i32 2
  %380 = load ptr, ptr %379, align 8, !tbaa !91
  %381 = ptrtoint ptr %139 to i64
  %382 = ptrtoint ptr %380 to i64
  %383 = sub i64 %381, %382
  %384 = lshr exact i64 %383, 1
  %385 = trunc i64 %384 to i32
  store i32 %385, ptr %121, align 8, !tbaa !90
  %386 = add i32 %122, %120
  %387 = sub i32 %385, %386
  %388 = load i32, ptr %1, align 8, !tbaa !84
  %389 = add nsw i32 %388, -1
  %390 = icmp sgt i32 %388, 0
  br i1 %390, label %392, label %391

391:                                              ; preds = %370
  call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %392

392:                                              ; preds = %370, %391
  %393 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 2
  %394 = load ptr, ptr %393, align 8, !tbaa !60
  %395 = sext i32 %389 to i64
  %396 = getelementptr inbounds %struct.ImDrawCmd, ptr %394, i64 %395, i32 4
  %397 = load i32, ptr %396, align 8, !tbaa !86
  %398 = add i32 %387, %397
  store i32 %398, ptr %396, align 8, !tbaa !86
  store ptr %138, ptr %123, align 8, !tbaa !120
  store ptr %139, ptr %125, align 8, !tbaa !99
  store i32 %140, ptr %127, align 4, !tbaa !71
  br label %399

399:                                              ; preds = %392, %112, %16
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #7 align 2 {
  %6 = alloca %struct.ImVec4, align 4
  %7 = icmp ult i32 %2, 16777216
  br i1 %7, label %33, label %8

8:                                                ; preds = %5
  %9 = icmp eq ptr %4, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %3)
  %12 = getelementptr inbounds i8, ptr %3, i64 %11
  br label %13

13:                                               ; preds = %10, %8
  %14 = phi ptr [ %12, %10 ], [ %4, %8 ]
  %15 = icmp eq ptr %14, %3
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !68
  %19 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !169
  %21 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %18, i64 0, i32 2
  %22 = load float, ptr %21, align 8, !tbaa !170
  %23 = getelementptr inbounds %struct.ImFont, ptr %20, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !171
  %25 = getelementptr inbounds %struct.ImFontAtlas, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !176
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !107
  %30 = icmp eq ptr %26, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %16
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1GI@CIGOLMNM@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA_@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1585)
  br label %32

32:                                               ; preds = %31, %16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #39
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false), !tbaa.struct !5
  call void @"?RenderText@ImFont@@QEBAXPEAUImDrawList@@MAEBUImVec2@@IAEBUImVec4@@PEBD3M_N@Z"(ptr noundef nonnull align 8 dereferenceable(120) %20, ptr noundef nonnull %0, float noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1, i32 noundef %2, ptr noundef nonnull align 4 dereferenceable(16) %6, ptr noundef %3, ptr noundef %14, float noundef 0.000000e+00, i1 noundef zeroext false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #39
  br label %33

33:                                               ; preds = %5, %13, %32
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %5, i32 noundef %6) local_unnamed_addr #7 align 2 {
  %8 = icmp ult i32 %6, 16777216
  br i1 %8, label %187, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !107
  %12 = icmp eq ptr %11, %1
  br i1 %12, label %127, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %15 = load i32, ptr %14, align 8, !tbaa !77
  %16 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 1
  %17 = load i32, ptr %16, align 4, !tbaa !75
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %43

19:                                               ; preds = %13
  %20 = add nsw i32 %15, 1
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = sdiv i32 %15, 2
  %24 = add nsw i32 %23, %15
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i32 [ %24, %22 ], [ 8, %19 ]
  %27 = tail call i32 @llvm.smax.i32(i32 %26, i32 %20)
  %28 = icmp slt i32 %15, %27
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = sext i32 %27 to i64
  %31 = shl nsw i64 %30, 3
  %32 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %31)
  %33 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !76
  %35 = icmp eq ptr %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = load i32, ptr %14, align 8, !tbaa !77
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %32, ptr nonnull align 8 %34, i64 %39, i1 false)
  %40 = load ptr, ptr %33, align 8, !tbaa !76
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %40)
  br label %41

41:                                               ; preds = %36, %29
  store ptr %32, ptr %33, align 8, !tbaa !76
  store i32 %27, ptr %16, align 4, !tbaa !75
  %42 = load i32, ptr %14, align 8, !tbaa !77
  br label %43

43:                                               ; preds = %13, %25, %41
  %44 = phi i32 [ %42, %41 ], [ %15, %25 ], [ %15, %13 ]
  %45 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !76
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds ptr, ptr %46, i64 %47
  %49 = ptrtoint ptr %1 to i64
  store i64 %49, ptr %48, align 8
  %50 = load i32, ptr %14, align 8, !tbaa !77
  %51 = add nsw i32 %50, 1
  store i32 %51, ptr %14, align 8, !tbaa !77
  store ptr %1, ptr %10, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %52 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %53 = load i32, ptr %52, align 4, !tbaa !112
  %54 = load i32, ptr %3, align 4, !tbaa !113
  %55 = getelementptr inbounds %struct.ImVec2, ptr %3, i64 0, i32 1
  %56 = load i32, ptr %55, align 4, !tbaa !112
  %57 = load i32, ptr %2, align 4, !tbaa !113
  %58 = getelementptr inbounds %struct.ImVec2, ptr %4, i64 0, i32 1
  %59 = load i32, ptr %58, align 4, !tbaa !112
  %60 = load i32, ptr %5, align 4, !tbaa !113
  %61 = getelementptr inbounds %struct.ImVec2, ptr %5, i64 0, i32 1
  %62 = load i32, ptr %61, align 4, !tbaa !112
  %63 = load i32, ptr %4, align 4, !tbaa !113
  %64 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %65 = load i32, ptr %64, align 4, !tbaa !71
  %66 = trunc i32 %65 to i16
  %67 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %68 = load ptr, ptr %67, align 8, !tbaa !99
  store i16 %66, ptr %68, align 2, !tbaa !121
  %69 = add i16 %66, 1
  %70 = getelementptr inbounds i16, ptr %68, i64 1
  store i16 %69, ptr %70, align 2, !tbaa !121
  %71 = add i16 %66, 2
  %72 = getelementptr inbounds i16, ptr %68, i64 2
  store i16 %71, ptr %72, align 2, !tbaa !121
  %73 = getelementptr inbounds i16, ptr %68, i64 3
  store i16 %66, ptr %73, align 2, !tbaa !121
  %74 = getelementptr inbounds i16, ptr %68, i64 4
  store i16 %71, ptr %74, align 2, !tbaa !121
  %75 = add i16 %66, 3
  %76 = getelementptr inbounds i16, ptr %68, i64 5
  store i16 %75, ptr %76, align 2, !tbaa !121
  %77 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %78 = load ptr, ptr %77, align 8, !tbaa !120
  %79 = load i64, ptr %2, align 4
  store i64 %79, ptr %78, align 4
  %80 = load ptr, ptr %77, align 8, !tbaa !120
  %81 = getelementptr inbounds %struct.ImDrawVert, ptr %80, i64 0, i32 1
  %82 = load i64, ptr %4, align 4
  store i64 %82, ptr %81, align 4
  %83 = load ptr, ptr %77, align 8, !tbaa !120
  %84 = getelementptr inbounds %struct.ImDrawVert, ptr %83, i64 0, i32 2
  store i32 %6, ptr %84, align 4, !tbaa !123
  %85 = getelementptr inbounds %struct.ImDrawVert, ptr %83, i64 1
  store i32 %54, ptr %85, align 4
  %86 = getelementptr inbounds %struct.ImDrawVert, ptr %83, i64 1, i32 0, i32 1
  store i32 %53, ptr %86, align 4
  %87 = load ptr, ptr %77, align 8, !tbaa !120
  %88 = getelementptr inbounds %struct.ImDrawVert, ptr %87, i64 1, i32 1
  store i32 %60, ptr %88, align 4
  %89 = getelementptr inbounds %struct.ImDrawVert, ptr %87, i64 1, i32 1, i32 1
  store i32 %59, ptr %89, align 4
  %90 = load ptr, ptr %77, align 8, !tbaa !120
  %91 = getelementptr inbounds %struct.ImDrawVert, ptr %90, i64 1, i32 2
  store i32 %6, ptr %91, align 4, !tbaa !123
  %92 = getelementptr inbounds %struct.ImDrawVert, ptr %90, i64 2
  %93 = load i64, ptr %3, align 4
  store i64 %93, ptr %92, align 4
  %94 = load ptr, ptr %77, align 8, !tbaa !120
  %95 = getelementptr inbounds %struct.ImDrawVert, ptr %94, i64 2, i32 1
  %96 = load i64, ptr %5, align 4
  store i64 %96, ptr %95, align 4
  %97 = load ptr, ptr %77, align 8, !tbaa !120
  %98 = getelementptr inbounds %struct.ImDrawVert, ptr %97, i64 2, i32 2
  store i32 %6, ptr %98, align 4, !tbaa !123
  %99 = getelementptr inbounds %struct.ImDrawVert, ptr %97, i64 3
  store i32 %57, ptr %99, align 4
  %100 = getelementptr inbounds %struct.ImDrawVert, ptr %97, i64 3, i32 0, i32 1
  store i32 %56, ptr %100, align 4
  %101 = load ptr, ptr %77, align 8, !tbaa !120
  %102 = getelementptr inbounds %struct.ImDrawVert, ptr %101, i64 3, i32 1
  store i32 %63, ptr %102, align 4
  %103 = getelementptr inbounds %struct.ImDrawVert, ptr %101, i64 3, i32 1, i32 1
  store i32 %62, ptr %103, align 4
  %104 = load ptr, ptr %77, align 8, !tbaa !120
  %105 = getelementptr inbounds %struct.ImDrawVert, ptr %104, i64 3, i32 2
  store i32 %6, ptr %105, align 4, !tbaa !123
  %106 = getelementptr inbounds %struct.ImDrawVert, ptr %104, i64 4
  store ptr %106, ptr %77, align 8, !tbaa !120
  %107 = load i32, ptr %64, align 4, !tbaa !71
  %108 = add i32 %107, 4
  store i32 %108, ptr %64, align 4, !tbaa !71
  %109 = load ptr, ptr %67, align 8, !tbaa !99
  %110 = getelementptr inbounds i16, ptr %109, i64 6
  store ptr %110, ptr %67, align 8, !tbaa !99
  %111 = load i32, ptr %14, align 8, !tbaa !77
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %43
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1823)
  %114 = load i32, ptr %14, align 8, !tbaa !77
  br label %115

115:                                              ; preds = %113, %43
  %116 = phi i32 [ %114, %113 ], [ %111, %43 ]
  %117 = add nsw i32 %116, -1
  store i32 %117, ptr %14, align 8, !tbaa !77
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %115
  %120 = load ptr, ptr %45, align 8, !tbaa !116
  %121 = add nsw i32 %116, -2
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds ptr, ptr %120, i64 %122
  %124 = load ptr, ptr %123, align 8, !tbaa !117
  br label %125

125:                                              ; preds = %115, %119
  %126 = phi ptr [ %124, %119 ], [ null, %115 ]
  store ptr %126, ptr %10, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %187

127:                                              ; preds = %9
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %128 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %129 = load i32, ptr %128, align 4, !tbaa !112
  %130 = load i32, ptr %3, align 4, !tbaa !113
  %131 = getelementptr inbounds %struct.ImVec2, ptr %3, i64 0, i32 1
  %132 = load i32, ptr %131, align 4, !tbaa !112
  %133 = load i32, ptr %2, align 4, !tbaa !113
  %134 = getelementptr inbounds %struct.ImVec2, ptr %4, i64 0, i32 1
  %135 = load i32, ptr %134, align 4, !tbaa !112
  %136 = load i32, ptr %5, align 4, !tbaa !113
  %137 = getelementptr inbounds %struct.ImVec2, ptr %5, i64 0, i32 1
  %138 = load i32, ptr %137, align 4, !tbaa !112
  %139 = load i32, ptr %4, align 4, !tbaa !113
  %140 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %141 = load i32, ptr %140, align 4, !tbaa !71
  %142 = trunc i32 %141 to i16
  %143 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %144 = load ptr, ptr %143, align 8, !tbaa !99
  store i16 %142, ptr %144, align 2, !tbaa !121
  %145 = add i16 %142, 1
  %146 = getelementptr inbounds i16, ptr %144, i64 1
  store i16 %145, ptr %146, align 2, !tbaa !121
  %147 = add i16 %142, 2
  %148 = getelementptr inbounds i16, ptr %144, i64 2
  store i16 %147, ptr %148, align 2, !tbaa !121
  %149 = getelementptr inbounds i16, ptr %144, i64 3
  store i16 %142, ptr %149, align 2, !tbaa !121
  %150 = getelementptr inbounds i16, ptr %144, i64 4
  store i16 %147, ptr %150, align 2, !tbaa !121
  %151 = add i16 %142, 3
  %152 = getelementptr inbounds i16, ptr %144, i64 5
  store i16 %151, ptr %152, align 2, !tbaa !121
  %153 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %154 = load ptr, ptr %153, align 8, !tbaa !120
  %155 = load i64, ptr %2, align 4
  store i64 %155, ptr %154, align 4
  %156 = load ptr, ptr %153, align 8, !tbaa !120
  %157 = getelementptr inbounds %struct.ImDrawVert, ptr %156, i64 0, i32 1
  %158 = load i64, ptr %4, align 4
  store i64 %158, ptr %157, align 4
  %159 = load ptr, ptr %153, align 8, !tbaa !120
  %160 = getelementptr inbounds %struct.ImDrawVert, ptr %159, i64 0, i32 2
  store i32 %6, ptr %160, align 4, !tbaa !123
  %161 = getelementptr inbounds %struct.ImDrawVert, ptr %159, i64 1
  store i32 %130, ptr %161, align 4
  %162 = getelementptr inbounds %struct.ImDrawVert, ptr %159, i64 1, i32 0, i32 1
  store i32 %129, ptr %162, align 4
  %163 = load ptr, ptr %153, align 8, !tbaa !120
  %164 = getelementptr inbounds %struct.ImDrawVert, ptr %163, i64 1, i32 1
  store i32 %136, ptr %164, align 4
  %165 = getelementptr inbounds %struct.ImDrawVert, ptr %163, i64 1, i32 1, i32 1
  store i32 %135, ptr %165, align 4
  %166 = load ptr, ptr %153, align 8, !tbaa !120
  %167 = getelementptr inbounds %struct.ImDrawVert, ptr %166, i64 1, i32 2
  store i32 %6, ptr %167, align 4, !tbaa !123
  %168 = getelementptr inbounds %struct.ImDrawVert, ptr %166, i64 2
  %169 = load i64, ptr %3, align 4
  store i64 %169, ptr %168, align 4
  %170 = load ptr, ptr %153, align 8, !tbaa !120
  %171 = getelementptr inbounds %struct.ImDrawVert, ptr %170, i64 2, i32 1
  %172 = load i64, ptr %5, align 4
  store i64 %172, ptr %171, align 4
  %173 = load ptr, ptr %153, align 8, !tbaa !120
  %174 = getelementptr inbounds %struct.ImDrawVert, ptr %173, i64 2, i32 2
  store i32 %6, ptr %174, align 4, !tbaa !123
  %175 = getelementptr inbounds %struct.ImDrawVert, ptr %173, i64 3
  store i32 %133, ptr %175, align 4
  %176 = getelementptr inbounds %struct.ImDrawVert, ptr %173, i64 3, i32 0, i32 1
  store i32 %132, ptr %176, align 4
  %177 = load ptr, ptr %153, align 8, !tbaa !120
  %178 = getelementptr inbounds %struct.ImDrawVert, ptr %177, i64 3, i32 1
  store i32 %139, ptr %178, align 4
  %179 = getelementptr inbounds %struct.ImDrawVert, ptr %177, i64 3, i32 1, i32 1
  store i32 %138, ptr %179, align 4
  %180 = load ptr, ptr %153, align 8, !tbaa !120
  %181 = getelementptr inbounds %struct.ImDrawVert, ptr %180, i64 3, i32 2
  store i32 %6, ptr %181, align 4, !tbaa !123
  %182 = getelementptr inbounds %struct.ImDrawVert, ptr %180, i64 4
  store ptr %182, ptr %153, align 8, !tbaa !120
  %183 = load i32, ptr %140, align 4, !tbaa !71
  %184 = add i32 %183, 4
  store i32 %184, ptr %140, align 4, !tbaa !71
  %185 = load ptr, ptr %143, align 8, !tbaa !99
  %186 = getelementptr inbounds i16, ptr %185, i64 6
  store ptr %186, ptr %143, align 8, !tbaa !99
  br label %187

187:                                              ; preds = %125, %127, %7
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddImageQuad@ImDrawList@@QEAAXPEAXAEBUImVec2@@1111111I@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %5, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %6, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %7, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %8, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %9, i32 noundef %10) local_unnamed_addr #7 align 2 {
  %12 = icmp ult i32 %10, 16777216
  br i1 %12, label %167, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !107
  %16 = icmp eq ptr %15, %1
  br i1 %16, label %119, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %19 = load i32, ptr %18, align 8, !tbaa !77
  %20 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !75
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %47

23:                                               ; preds = %17
  %24 = add nsw i32 %19, 1
  %25 = icmp eq i32 %19, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = sdiv i32 %19, 2
  %28 = add nsw i32 %27, %19
  br label %29

29:                                               ; preds = %26, %23
  %30 = phi i32 [ %28, %26 ], [ 8, %23 ]
  %31 = tail call i32 @llvm.smax.i32(i32 %30, i32 %24)
  %32 = icmp slt i32 %19, %31
  br i1 %32, label %33, label %47

33:                                               ; preds = %29
  %34 = sext i32 %31 to i64
  %35 = shl nsw i64 %34, 3
  %36 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %35)
  %37 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !76
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = load i32, ptr %18, align 8, !tbaa !77
  %42 = sext i32 %41 to i64
  %43 = shl nsw i64 %42, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr nonnull align 8 %38, i64 %43, i1 false)
  %44 = load ptr, ptr %37, align 8, !tbaa !76
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %44)
  br label %45

45:                                               ; preds = %40, %33
  store ptr %36, ptr %37, align 8, !tbaa !76
  store i32 %31, ptr %20, align 4, !tbaa !75
  %46 = load i32, ptr %18, align 8, !tbaa !77
  br label %47

47:                                               ; preds = %17, %29, %45
  %48 = phi i32 [ %46, %45 ], [ %19, %29 ], [ %19, %17 ]
  %49 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !76
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds ptr, ptr %50, i64 %51
  %53 = ptrtoint ptr %1 to i64
  store i64 %53, ptr %52, align 8
  %54 = load i32, ptr %18, align 8, !tbaa !77
  %55 = add nsw i32 %54, 1
  store i32 %55, ptr %18, align 8, !tbaa !77
  store ptr %1, ptr %14, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %56 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %57 = load i32, ptr %56, align 4, !tbaa !71
  %58 = trunc i32 %57 to i16
  %59 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !99
  store i16 %58, ptr %60, align 2, !tbaa !121
  %61 = add i16 %58, 1
  %62 = getelementptr inbounds i16, ptr %60, i64 1
  store i16 %61, ptr %62, align 2, !tbaa !121
  %63 = add i16 %58, 2
  %64 = getelementptr inbounds i16, ptr %60, i64 2
  store i16 %63, ptr %64, align 2, !tbaa !121
  %65 = getelementptr inbounds i16, ptr %60, i64 3
  store i16 %58, ptr %65, align 2, !tbaa !121
  %66 = getelementptr inbounds i16, ptr %60, i64 4
  store i16 %63, ptr %66, align 2, !tbaa !121
  %67 = add i16 %58, 3
  %68 = getelementptr inbounds i16, ptr %60, i64 5
  store i16 %67, ptr %68, align 2, !tbaa !121
  %69 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %70 = load ptr, ptr %69, align 8, !tbaa !120
  %71 = load i64, ptr %2, align 4
  store i64 %71, ptr %70, align 4
  %72 = load ptr, ptr %69, align 8, !tbaa !120
  %73 = getelementptr inbounds %struct.ImDrawVert, ptr %72, i64 0, i32 1
  %74 = load i64, ptr %6, align 4
  store i64 %74, ptr %73, align 4
  %75 = load ptr, ptr %69, align 8, !tbaa !120
  %76 = getelementptr inbounds %struct.ImDrawVert, ptr %75, i64 0, i32 2
  store i32 %10, ptr %76, align 4, !tbaa !123
  %77 = getelementptr inbounds %struct.ImDrawVert, ptr %75, i64 1
  %78 = load i64, ptr %3, align 4
  store i64 %78, ptr %77, align 4
  %79 = load ptr, ptr %69, align 8, !tbaa !120
  %80 = getelementptr inbounds %struct.ImDrawVert, ptr %79, i64 1, i32 1
  %81 = load i64, ptr %7, align 4
  store i64 %81, ptr %80, align 4
  %82 = load ptr, ptr %69, align 8, !tbaa !120
  %83 = getelementptr inbounds %struct.ImDrawVert, ptr %82, i64 1, i32 2
  store i32 %10, ptr %83, align 4, !tbaa !123
  %84 = getelementptr inbounds %struct.ImDrawVert, ptr %82, i64 2
  %85 = load i64, ptr %4, align 4
  store i64 %85, ptr %84, align 4
  %86 = load ptr, ptr %69, align 8, !tbaa !120
  %87 = getelementptr inbounds %struct.ImDrawVert, ptr %86, i64 2, i32 1
  %88 = load i64, ptr %8, align 4
  store i64 %88, ptr %87, align 4
  %89 = load ptr, ptr %69, align 8, !tbaa !120
  %90 = getelementptr inbounds %struct.ImDrawVert, ptr %89, i64 2, i32 2
  store i32 %10, ptr %90, align 4, !tbaa !123
  %91 = getelementptr inbounds %struct.ImDrawVert, ptr %89, i64 3
  %92 = load i64, ptr %5, align 4
  store i64 %92, ptr %91, align 4
  %93 = load ptr, ptr %69, align 8, !tbaa !120
  %94 = getelementptr inbounds %struct.ImDrawVert, ptr %93, i64 3, i32 1
  %95 = load i64, ptr %9, align 4
  store i64 %95, ptr %94, align 4
  %96 = load ptr, ptr %69, align 8, !tbaa !120
  %97 = getelementptr inbounds %struct.ImDrawVert, ptr %96, i64 3, i32 2
  store i32 %10, ptr %97, align 4, !tbaa !123
  %98 = getelementptr inbounds %struct.ImDrawVert, ptr %96, i64 4
  store ptr %98, ptr %69, align 8, !tbaa !120
  %99 = load i32, ptr %56, align 4, !tbaa !71
  %100 = add i32 %99, 4
  store i32 %100, ptr %56, align 4, !tbaa !71
  %101 = load ptr, ptr %59, align 8, !tbaa !99
  %102 = getelementptr inbounds i16, ptr %101, i64 6
  store ptr %102, ptr %59, align 8, !tbaa !99
  %103 = load i32, ptr %18, align 8, !tbaa !77
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %47
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1823)
  %106 = load i32, ptr %18, align 8, !tbaa !77
  br label %107

107:                                              ; preds = %105, %47
  %108 = phi i32 [ %106, %105 ], [ %103, %47 ]
  %109 = add nsw i32 %108, -1
  store i32 %109, ptr %18, align 8, !tbaa !77
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = load ptr, ptr %49, align 8, !tbaa !116
  %113 = add nsw i32 %108, -2
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds ptr, ptr %112, i64 %114
  %116 = load ptr, ptr %115, align 8, !tbaa !117
  br label %117

117:                                              ; preds = %107, %111
  %118 = phi ptr [ %116, %111 ], [ null, %107 ]
  store ptr %118, ptr %14, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %167

119:                                              ; preds = %13
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %120 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %121 = load i32, ptr %120, align 4, !tbaa !71
  %122 = trunc i32 %121 to i16
  %123 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %124 = load ptr, ptr %123, align 8, !tbaa !99
  store i16 %122, ptr %124, align 2, !tbaa !121
  %125 = add i16 %122, 1
  %126 = getelementptr inbounds i16, ptr %124, i64 1
  store i16 %125, ptr %126, align 2, !tbaa !121
  %127 = add i16 %122, 2
  %128 = getelementptr inbounds i16, ptr %124, i64 2
  store i16 %127, ptr %128, align 2, !tbaa !121
  %129 = getelementptr inbounds i16, ptr %124, i64 3
  store i16 %122, ptr %129, align 2, !tbaa !121
  %130 = getelementptr inbounds i16, ptr %124, i64 4
  store i16 %127, ptr %130, align 2, !tbaa !121
  %131 = add i16 %122, 3
  %132 = getelementptr inbounds i16, ptr %124, i64 5
  store i16 %131, ptr %132, align 2, !tbaa !121
  %133 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %134 = load ptr, ptr %133, align 8, !tbaa !120
  %135 = load i64, ptr %2, align 4
  store i64 %135, ptr %134, align 4
  %136 = load ptr, ptr %133, align 8, !tbaa !120
  %137 = getelementptr inbounds %struct.ImDrawVert, ptr %136, i64 0, i32 1
  %138 = load i64, ptr %6, align 4
  store i64 %138, ptr %137, align 4
  %139 = load ptr, ptr %133, align 8, !tbaa !120
  %140 = getelementptr inbounds %struct.ImDrawVert, ptr %139, i64 0, i32 2
  store i32 %10, ptr %140, align 4, !tbaa !123
  %141 = getelementptr inbounds %struct.ImDrawVert, ptr %139, i64 1
  %142 = load i64, ptr %3, align 4
  store i64 %142, ptr %141, align 4
  %143 = load ptr, ptr %133, align 8, !tbaa !120
  %144 = getelementptr inbounds %struct.ImDrawVert, ptr %143, i64 1, i32 1
  %145 = load i64, ptr %7, align 4
  store i64 %145, ptr %144, align 4
  %146 = load ptr, ptr %133, align 8, !tbaa !120
  %147 = getelementptr inbounds %struct.ImDrawVert, ptr %146, i64 1, i32 2
  store i32 %10, ptr %147, align 4, !tbaa !123
  %148 = getelementptr inbounds %struct.ImDrawVert, ptr %146, i64 2
  %149 = load i64, ptr %4, align 4
  store i64 %149, ptr %148, align 4
  %150 = load ptr, ptr %133, align 8, !tbaa !120
  %151 = getelementptr inbounds %struct.ImDrawVert, ptr %150, i64 2, i32 1
  %152 = load i64, ptr %8, align 4
  store i64 %152, ptr %151, align 4
  %153 = load ptr, ptr %133, align 8, !tbaa !120
  %154 = getelementptr inbounds %struct.ImDrawVert, ptr %153, i64 2, i32 2
  store i32 %10, ptr %154, align 4, !tbaa !123
  %155 = getelementptr inbounds %struct.ImDrawVert, ptr %153, i64 3
  %156 = load i64, ptr %5, align 4
  store i64 %156, ptr %155, align 4
  %157 = load ptr, ptr %133, align 8, !tbaa !120
  %158 = getelementptr inbounds %struct.ImDrawVert, ptr %157, i64 3, i32 1
  %159 = load i64, ptr %9, align 4
  store i64 %159, ptr %158, align 4
  %160 = load ptr, ptr %133, align 8, !tbaa !120
  %161 = getelementptr inbounds %struct.ImDrawVert, ptr %160, i64 3, i32 2
  store i32 %10, ptr %161, align 4, !tbaa !123
  %162 = getelementptr inbounds %struct.ImDrawVert, ptr %160, i64 4
  store ptr %162, ptr %133, align 8, !tbaa !120
  %163 = load i32, ptr %120, align 4, !tbaa !71
  %164 = add i32 %163, 4
  store i32 %164, ptr %120, align 4, !tbaa !71
  %165 = load ptr, ptr %123, align 8, !tbaa !99
  %166 = getelementptr inbounds i16, ptr %165, i64 6
  store ptr %166, ptr %123, align 8, !tbaa !99
  br label %167

167:                                              ; preds = %117, %119, %11
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?AddImageRounded@ImDrawList@@QEAAXPEAXAEBUImVec2@@111IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %5, i32 noundef %6, float noundef %7, i32 noundef %8) local_unnamed_addr #0 align 2 {
  %10 = icmp ult i32 %6, 16777216
  br i1 %10, label %437, label %11

11:                                               ; preds = %9
  %12 = icmp eq i32 %8, -1
  br i1 %12, label %27, label %13

13:                                               ; preds = %11
  %14 = add i32 %8, -1
  %15 = icmp ult i32 %14, 15
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = shl nuw nsw i32 %8, 4
  br label %27

18:                                               ; preds = %13
  %19 = and i32 %8, 15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1JM@GAJOFMMN@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA0?$AAx?$AA0?$AAF?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAM?$AAi?$AAs?$AAu?$AAs?$AAe?$AA?5?$AAo@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1341)
  br label %22

22:                                               ; preds = %21, %18
  %23 = and i32 %8, 496
  %24 = icmp eq i32 %23, 0
  %25 = or i32 %8, 240
  %26 = select i1 %24, i32 %25, i32 %8
  br label %27

27:                                               ; preds = %11, %16, %22
  %28 = phi i32 [ %17, %16 ], [ %26, %22 ], [ 240, %11 ]
  %29 = fcmp fast olt float %7, 5.000000e-01
  %30 = and i32 %28, 496
  %31 = icmp eq i32 %30, 256
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  tail call void @"?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 4 dereferenceable(8) %3, ptr noundef nonnull align 4 dereferenceable(8) %4, ptr noundef nonnull align 4 dereferenceable(8) %5, i32 noundef %6)
  br label %437

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 12, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !107
  %37 = icmp eq ptr %36, %1
  br i1 %37, label %265, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10
  %40 = load i32, ptr %39, align 8, !tbaa !77
  %41 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 1
  %42 = load i32, ptr %41, align 4, !tbaa !75
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %68

44:                                               ; preds = %38
  %45 = add nsw i32 %40, 1
  %46 = icmp eq i32 %40, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = sdiv i32 %40, 2
  %49 = add nsw i32 %48, %40
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i32 [ %49, %47 ], [ 8, %44 ]
  %52 = tail call i32 @llvm.smax.i32(i32 %51, i32 %45)
  %53 = icmp slt i32 %40, %52
  br i1 %53, label %54, label %68

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = shl nsw i64 %55, 3
  %57 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %56)
  %58 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !76
  %60 = icmp eq ptr %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = load i32, ptr %39, align 8, !tbaa !77
  %63 = sext i32 %62 to i64
  %64 = shl nsw i64 %63, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %57, ptr nonnull align 8 %59, i64 %64, i1 false)
  %65 = load ptr, ptr %58, align 8, !tbaa !76
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %65)
  br label %66

66:                                               ; preds = %61, %54
  store ptr %57, ptr %58, align 8, !tbaa !76
  store i32 %52, ptr %41, align 4, !tbaa !75
  %67 = load i32, ptr %39, align 8, !tbaa !77
  br label %68

68:                                               ; preds = %38, %50, %66
  %69 = phi i32 [ %67, %66 ], [ %40, %50 ], [ %40, %38 ]
  %70 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 10, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !76
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds ptr, ptr %71, i64 %72
  %74 = ptrtoint ptr %1 to i64
  store i64 %74, ptr %73, align 8
  %75 = load i32, ptr %39, align 8, !tbaa !77
  %76 = add nsw i32 %75, 1
  store i32 %76, ptr %39, align 8, !tbaa !77
  store ptr %1, ptr %35, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  %77 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %78 = load i32, ptr %77, align 8, !tbaa !118
  tail call void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 4 dereferenceable(8) %3, float noundef %7, i32 noundef %28)
  %79 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %80 = load i32, ptr %79, align 8, !tbaa !143
  %81 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %82 = load ptr, ptr %81, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %82, i32 noundef %80, i32 noundef %6)
  store i32 0, ptr %79, align 8, !tbaa !143
  %83 = load i32, ptr %77, align 8, !tbaa !118
  %84 = getelementptr i8, ptr %2, i64 4
  %85 = getelementptr i8, ptr %4, i64 4
  %86 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %87 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %88 = fsub fast <2 x float> %86, %87
  %89 = load <2 x float>, ptr %5, align 4, !tbaa !6
  %90 = load <2 x float>, ptr %4, align 4, !tbaa !6
  %91 = fsub fast <2 x float> %89, %90
  %92 = fcmp fast une <2 x float> %88, zeroinitializer
  %93 = fdiv fast <2 x float> %91, %88
  %94 = select <2 x i1> %92, <2 x float> %93, <2 x float> zeroinitializer
  %95 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %96 = load ptr, ptr %95, align 8, !tbaa !119
  %97 = ptrtoint ptr %96 to i64
  %98 = sext i32 %83 to i64
  %99 = getelementptr inbounds %struct.ImDrawVert, ptr %96, i64 %98
  %100 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %90, <2 x float> %89)
  %101 = tail call fast <2 x float> @llvm.maxnum.v2f32(<2 x float> %90, <2 x float> %89)
  %102 = icmp slt i32 %78, %83
  br i1 %102, label %103, label %248

103:                                              ; preds = %68
  %104 = sext i32 %78 to i64
  %105 = getelementptr %struct.ImDrawVert, ptr %96, i64 %104
  %106 = mul nsw i64 %104, 20
  %107 = add i64 %106, %97
  %108 = add i64 %107, 20
  %109 = mul nsw i64 %98, 20
  %110 = add i64 %109, %97
  %111 = tail call i64 @llvm.umax.i64(i64 %108, i64 %110)
  %112 = add i64 %111, -20
  %113 = sub i64 %112, %97
  %114 = icmp ne i64 %113, %106
  %115 = zext i1 %114 to i64
  %116 = or i64 %106, %115
  %117 = sub i64 %113, %116
  %118 = udiv i64 %117, 20
  %119 = add nuw nsw i64 %118, %115
  %120 = add nuw nsw i64 %119, 1
  %121 = icmp ult i64 %119, 12
  br i1 %121, label %232, label %122

122:                                              ; preds = %103
  %123 = mul nsw i64 %104, 20
  %124 = add i64 %123, %97
  %125 = add i64 %124, 20
  %126 = mul nsw i64 %98, 20
  %127 = add i64 %126, %97
  %128 = tail call i64 @llvm.umax.i64(i64 %125, i64 %127)
  %129 = add i64 %128, -20
  %130 = sub i64 %129, %97
  %131 = icmp ne i64 %130, %123
  %132 = zext i1 %131 to i64
  %133 = or i64 %123, %132
  %134 = sub i64 %130, %133
  %135 = udiv i64 %134, 20
  %136 = add nuw nsw i64 %135, %132
  %137 = add nsw i64 %136, %104
  %138 = mul i64 %137, 20
  %139 = add i64 %138, 16
  %140 = getelementptr i8, ptr %96, i64 %139
  %141 = getelementptr i8, ptr %2, i64 8
  %142 = getelementptr i8, ptr %4, i64 8
  %143 = icmp ult ptr %105, %141
  %144 = icmp ugt ptr %140, %2
  %145 = and i1 %143, %144
  %146 = icmp ult ptr %105, %142
  %147 = icmp ugt ptr %140, %4
  %148 = and i1 %146, %147
  %149 = or i1 %145, %148
  br i1 %149, label %232, label %150

150:                                              ; preds = %122
  %151 = and i64 %120, 3
  %152 = icmp eq i64 %151, 0
  %153 = select i1 %152, i64 4, i64 %151
  %154 = sub nsw i64 %120, %153
  %155 = mul i64 %154, 20
  %156 = getelementptr i8, ptr %105, i64 %155
  %157 = shufflevector <2 x float> %94, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %158 = shufflevector <2 x float> %94, <2 x float> poison, <4 x i32> zeroinitializer
  %159 = shufflevector <2 x float> %100, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %160 = shufflevector <2 x float> %101, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %161 = shufflevector <2 x float> %100, <2 x float> poison, <4 x i32> zeroinitializer
  %162 = shufflevector <2 x float> %101, <2 x float> poison, <4 x i32> zeroinitializer
  %163 = load float, ptr %2, align 4, !tbaa !113, !alias.scope !203
  %164 = insertelement <4 x float> poison, float %163, i64 0
  %165 = shufflevector <4 x float> %164, <4 x float> poison, <4 x i32> zeroinitializer
  %166 = load float, ptr %84, align 4, !tbaa !112, !alias.scope !203
  %167 = insertelement <4 x float> poison, float %166, i64 0
  %168 = shufflevector <4 x float> %167, <4 x float> poison, <4 x i32> zeroinitializer
  %169 = load float, ptr %4, align 4, !tbaa !113, !alias.scope !206
  %170 = insertelement <4 x float> poison, float %169, i64 0
  %171 = shufflevector <4 x float> %170, <4 x float> poison, <4 x i32> zeroinitializer
  %172 = load float, ptr %85, align 4, !tbaa !112, !alias.scope !206
  %173 = insertelement <4 x float> poison, float %172, i64 0
  %174 = shufflevector <4 x float> %173, <4 x float> poison, <4 x i32> zeroinitializer
  br label %175

175:                                              ; preds = %175, %150
  %176 = phi i64 [ 0, %150 ], [ %230, %175 ]
  %177 = mul i64 %176, 20
  %178 = getelementptr i8, ptr %105, i64 %177
  %179 = mul i64 %176, 20
  %180 = add i64 %179, 20
  %181 = getelementptr i8, ptr %105, i64 %180
  %182 = mul i64 %176, 20
  %183 = add i64 %182, 40
  %184 = getelementptr i8, ptr %105, i64 %183
  %185 = mul i64 %176, 20
  %186 = add i64 %185, 60
  %187 = getelementptr i8, ptr %105, i64 %186
  %188 = getelementptr inbounds %struct.ImVec2, ptr %178, i64 0, i32 1
  %189 = getelementptr inbounds %struct.ImVec2, ptr %181, i64 0, i32 1
  %190 = getelementptr inbounds %struct.ImVec2, ptr %184, i64 0, i32 1
  %191 = getelementptr inbounds %struct.ImVec2, ptr %187, i64 0, i32 1
  %192 = load float, ptr %188, align 4, !tbaa !134, !alias.scope !208, !noalias !210
  %193 = load float, ptr %189, align 4, !tbaa !134, !alias.scope !208, !noalias !210
  %194 = load float, ptr %190, align 4, !tbaa !134, !alias.scope !208, !noalias !210
  %195 = load float, ptr %191, align 4, !tbaa !134, !alias.scope !208, !noalias !210
  %196 = insertelement <4 x float> poison, float %192, i64 0
  %197 = insertelement <4 x float> %196, float %193, i64 1
  %198 = insertelement <4 x float> %197, float %194, i64 2
  %199 = insertelement <4 x float> %198, float %195, i64 3
  %200 = load float, ptr %178, align 4, !tbaa !133, !alias.scope !208, !noalias !210
  %201 = load float, ptr %181, align 4, !tbaa !133, !alias.scope !208, !noalias !210
  %202 = load float, ptr %184, align 4, !tbaa !133, !alias.scope !208, !noalias !210
  %203 = load float, ptr %187, align 4, !tbaa !133, !alias.scope !208, !noalias !210
  %204 = insertelement <4 x float> poison, float %200, i64 0
  %205 = insertelement <4 x float> %204, float %201, i64 1
  %206 = insertelement <4 x float> %205, float %202, i64 2
  %207 = insertelement <4 x float> %206, float %203, i64 3
  %208 = fsub fast <4 x float> %199, %168
  %209 = fsub fast <4 x float> %207, %165
  %210 = fmul fast <4 x float> %208, %157
  %211 = fmul fast <4 x float> %209, %158
  %212 = fadd fast <4 x float> %210, %174
  %213 = fadd fast <4 x float> %211, %171
  %214 = fcmp fast olt <4 x float> %212, %159
  %215 = tail call fast <4 x float> @llvm.minnum.v4f32(<4 x float> %160, <4 x float> %212)
  %216 = select <4 x i1> %214, <4 x float> %159, <4 x float> %215
  %217 = fcmp fast olt <4 x float> %213, %161
  %218 = tail call fast <4 x float> @llvm.minnum.v4f32(<4 x float> %162, <4 x float> %213)
  %219 = select <4 x i1> %217, <4 x float> %161, <4 x float> %218
  %220 = getelementptr inbounds %struct.ImDrawVert, ptr %178, i64 0, i32 1
  %221 = getelementptr inbounds %struct.ImDrawVert, ptr %181, i64 0, i32 1
  %222 = getelementptr inbounds %struct.ImDrawVert, ptr %184, i64 0, i32 1
  %223 = getelementptr inbounds %struct.ImDrawVert, ptr %187, i64 0, i32 1
  %224 = extractelement <4 x float> %219, i64 0
  store float %224, ptr %220, align 4, !alias.scope !208, !noalias !210
  %225 = getelementptr inbounds %struct.ImDrawVert, ptr %178, i64 0, i32 1, i32 1
  %226 = extractelement <4 x float> %216, i64 0
  store float %226, ptr %225, align 4, !alias.scope !208, !noalias !210
  %227 = shufflevector <4 x float> %219, <4 x float> %216, <2 x i32> <i32 1, i32 5>
  store <2 x float> %227, ptr %221, align 4, !alias.scope !208, !noalias !210
  %228 = shufflevector <4 x float> %219, <4 x float> %216, <2 x i32> <i32 2, i32 6>
  store <2 x float> %228, ptr %222, align 4, !alias.scope !208, !noalias !210
  %229 = shufflevector <4 x float> %219, <4 x float> %216, <2 x i32> <i32 3, i32 7>
  store <2 x float> %229, ptr %223, align 4, !alias.scope !208, !noalias !210
  %230 = add nuw i64 %176, 4
  %231 = icmp eq i64 %230, %154
  br i1 %231, label %232, label %175, !llvm.loop !211

232:                                              ; preds = %175, %122, %103
  %233 = phi ptr [ %105, %122 ], [ %105, %103 ], [ %156, %175 ]
  br label %234

234:                                              ; preds = %232, %234
  %235 = phi ptr [ %246, %234 ], [ %233, %232 ]
  %236 = getelementptr inbounds %struct.ImDrawVert, ptr %235, i64 0, i32 1
  %237 = load <2 x float>, ptr %235, align 4, !tbaa !6
  %238 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %239 = fsub fast <2 x float> %237, %238
  %240 = fmul fast <2 x float> %239, %94
  %241 = load <2 x float>, ptr %4, align 4, !tbaa !6
  %242 = fadd fast <2 x float> %240, %241
  %243 = fcmp fast olt <2 x float> %242, %100
  %244 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %101, <2 x float> %242)
  %245 = select <2 x i1> %243, <2 x float> %100, <2 x float> %244
  store <2 x float> %245, ptr %236, align 4
  %246 = getelementptr inbounds %struct.ImDrawVert, ptr %235, i64 1
  %247 = icmp ult ptr %246, %99
  br i1 %247, label %234, label %248, !llvm.loop !212

248:                                              ; preds = %234, %68
  %249 = load i32, ptr %39, align 8, !tbaa !77
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %248
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1823)
  %252 = load i32, ptr %39, align 8, !tbaa !77
  br label %253

253:                                              ; preds = %251, %248
  %254 = phi i32 [ %252, %251 ], [ %249, %248 ]
  %255 = add nsw i32 %254, -1
  store i32 %255, ptr %39, align 8, !tbaa !77
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %263, label %257

257:                                              ; preds = %253
  %258 = load ptr, ptr %70, align 8, !tbaa !116
  %259 = add nsw i32 %254, -2
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds ptr, ptr %258, i64 %260
  %262 = load ptr, ptr %261, align 8, !tbaa !117
  br label %263

263:                                              ; preds = %253, %257
  %264 = phi ptr [ %262, %257 ], [ null, %253 ]
  store ptr %264, ptr %35, align 8, !tbaa !107
  tail call void @"?_OnChangedTextureID@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %0)
  br label %437

265:                                              ; preds = %34
  %266 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2
  %267 = load i32, ptr %266, align 8, !tbaa !118
  tail call void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %2, ptr noundef nonnull align 4 dereferenceable(8) %3, float noundef %7, i32 noundef %28)
  %268 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %269 = load i32, ptr %268, align 8, !tbaa !143
  %270 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %271 = load ptr, ptr %270, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %271, i32 noundef %269, i32 noundef %6)
  store i32 0, ptr %268, align 8, !tbaa !143
  %272 = load i32, ptr %266, align 8, !tbaa !118
  %273 = getelementptr i8, ptr %2, i64 4
  %274 = getelementptr i8, ptr %4, i64 4
  %275 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %276 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %277 = fsub fast <2 x float> %275, %276
  %278 = load <2 x float>, ptr %5, align 4, !tbaa !6
  %279 = load <2 x float>, ptr %4, align 4, !tbaa !6
  %280 = fsub fast <2 x float> %278, %279
  %281 = fcmp fast une <2 x float> %277, zeroinitializer
  %282 = fdiv fast <2 x float> %280, %277
  %283 = select <2 x i1> %281, <2 x float> %282, <2 x float> zeroinitializer
  %284 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %285 = load ptr, ptr %284, align 8, !tbaa !119
  %286 = ptrtoint ptr %285 to i64
  %287 = sext i32 %272 to i64
  %288 = getelementptr inbounds %struct.ImDrawVert, ptr %285, i64 %287
  %289 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %279, <2 x float> %278)
  %290 = tail call fast <2 x float> @llvm.maxnum.v2f32(<2 x float> %279, <2 x float> %278)
  %291 = icmp slt i32 %267, %272
  br i1 %291, label %292, label %437

292:                                              ; preds = %265
  %293 = sext i32 %267 to i64
  %294 = getelementptr %struct.ImDrawVert, ptr %285, i64 %293
  %295 = mul nsw i64 %293, 20
  %296 = add i64 %295, %286
  %297 = add i64 %296, 20
  %298 = mul nsw i64 %287, 20
  %299 = add i64 %298, %286
  %300 = tail call i64 @llvm.umax.i64(i64 %297, i64 %299)
  %301 = add i64 %300, -20
  %302 = sub i64 %301, %286
  %303 = icmp ne i64 %302, %295
  %304 = zext i1 %303 to i64
  %305 = or i64 %295, %304
  %306 = sub i64 %302, %305
  %307 = udiv i64 %306, 20
  %308 = add nuw nsw i64 %307, %304
  %309 = add nuw nsw i64 %308, 1
  %310 = icmp ult i64 %308, 12
  br i1 %310, label %421, label %311

311:                                              ; preds = %292
  %312 = mul nsw i64 %293, 20
  %313 = add i64 %312, %286
  %314 = add i64 %313, 20
  %315 = mul nsw i64 %287, 20
  %316 = add i64 %315, %286
  %317 = tail call i64 @llvm.umax.i64(i64 %314, i64 %316)
  %318 = add i64 %317, -20
  %319 = sub i64 %318, %286
  %320 = icmp ne i64 %319, %312
  %321 = zext i1 %320 to i64
  %322 = or i64 %312, %321
  %323 = sub i64 %319, %322
  %324 = udiv i64 %323, 20
  %325 = add nuw nsw i64 %324, %321
  %326 = add nsw i64 %325, %293
  %327 = mul i64 %326, 20
  %328 = add i64 %327, 16
  %329 = getelementptr i8, ptr %285, i64 %328
  %330 = getelementptr i8, ptr %2, i64 8
  %331 = getelementptr i8, ptr %4, i64 8
  %332 = icmp ult ptr %294, %330
  %333 = icmp ugt ptr %329, %2
  %334 = and i1 %332, %333
  %335 = icmp ult ptr %294, %331
  %336 = icmp ugt ptr %329, %4
  %337 = and i1 %335, %336
  %338 = or i1 %334, %337
  br i1 %338, label %421, label %339

339:                                              ; preds = %311
  %340 = and i64 %309, 3
  %341 = icmp eq i64 %340, 0
  %342 = select i1 %341, i64 4, i64 %340
  %343 = sub nsw i64 %309, %342
  %344 = mul i64 %343, 20
  %345 = getelementptr i8, ptr %294, i64 %344
  %346 = shufflevector <2 x float> %283, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %347 = shufflevector <2 x float> %283, <2 x float> poison, <4 x i32> zeroinitializer
  %348 = shufflevector <2 x float> %289, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %349 = shufflevector <2 x float> %290, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %350 = shufflevector <2 x float> %289, <2 x float> poison, <4 x i32> zeroinitializer
  %351 = shufflevector <2 x float> %290, <2 x float> poison, <4 x i32> zeroinitializer
  %352 = load float, ptr %2, align 4, !tbaa !113, !alias.scope !213
  %353 = insertelement <4 x float> poison, float %352, i64 0
  %354 = shufflevector <4 x float> %353, <4 x float> poison, <4 x i32> zeroinitializer
  %355 = load float, ptr %273, align 4, !tbaa !112, !alias.scope !213
  %356 = insertelement <4 x float> poison, float %355, i64 0
  %357 = shufflevector <4 x float> %356, <4 x float> poison, <4 x i32> zeroinitializer
  %358 = load float, ptr %4, align 4, !tbaa !113, !alias.scope !216
  %359 = insertelement <4 x float> poison, float %358, i64 0
  %360 = shufflevector <4 x float> %359, <4 x float> poison, <4 x i32> zeroinitializer
  %361 = load float, ptr %274, align 4, !tbaa !112, !alias.scope !216
  %362 = insertelement <4 x float> poison, float %361, i64 0
  %363 = shufflevector <4 x float> %362, <4 x float> poison, <4 x i32> zeroinitializer
  br label %364

364:                                              ; preds = %364, %339
  %365 = phi i64 [ 0, %339 ], [ %419, %364 ]
  %366 = mul i64 %365, 20
  %367 = getelementptr i8, ptr %294, i64 %366
  %368 = mul i64 %365, 20
  %369 = add i64 %368, 20
  %370 = getelementptr i8, ptr %294, i64 %369
  %371 = mul i64 %365, 20
  %372 = add i64 %371, 40
  %373 = getelementptr i8, ptr %294, i64 %372
  %374 = mul i64 %365, 20
  %375 = add i64 %374, 60
  %376 = getelementptr i8, ptr %294, i64 %375
  %377 = getelementptr inbounds %struct.ImVec2, ptr %367, i64 0, i32 1
  %378 = getelementptr inbounds %struct.ImVec2, ptr %370, i64 0, i32 1
  %379 = getelementptr inbounds %struct.ImVec2, ptr %373, i64 0, i32 1
  %380 = getelementptr inbounds %struct.ImVec2, ptr %376, i64 0, i32 1
  %381 = load float, ptr %377, align 4, !tbaa !134, !alias.scope !218, !noalias !220
  %382 = load float, ptr %378, align 4, !tbaa !134, !alias.scope !218, !noalias !220
  %383 = load float, ptr %379, align 4, !tbaa !134, !alias.scope !218, !noalias !220
  %384 = load float, ptr %380, align 4, !tbaa !134, !alias.scope !218, !noalias !220
  %385 = insertelement <4 x float> poison, float %381, i64 0
  %386 = insertelement <4 x float> %385, float %382, i64 1
  %387 = insertelement <4 x float> %386, float %383, i64 2
  %388 = insertelement <4 x float> %387, float %384, i64 3
  %389 = load float, ptr %367, align 4, !tbaa !133, !alias.scope !218, !noalias !220
  %390 = load float, ptr %370, align 4, !tbaa !133, !alias.scope !218, !noalias !220
  %391 = load float, ptr %373, align 4, !tbaa !133, !alias.scope !218, !noalias !220
  %392 = load float, ptr %376, align 4, !tbaa !133, !alias.scope !218, !noalias !220
  %393 = insertelement <4 x float> poison, float %389, i64 0
  %394 = insertelement <4 x float> %393, float %390, i64 1
  %395 = insertelement <4 x float> %394, float %391, i64 2
  %396 = insertelement <4 x float> %395, float %392, i64 3
  %397 = fsub fast <4 x float> %388, %357
  %398 = fsub fast <4 x float> %396, %354
  %399 = fmul fast <4 x float> %397, %346
  %400 = fmul fast <4 x float> %398, %347
  %401 = fadd fast <4 x float> %399, %363
  %402 = fadd fast <4 x float> %400, %360
  %403 = fcmp fast olt <4 x float> %401, %348
  %404 = tail call fast <4 x float> @llvm.minnum.v4f32(<4 x float> %349, <4 x float> %401)
  %405 = select <4 x i1> %403, <4 x float> %348, <4 x float> %404
  %406 = fcmp fast olt <4 x float> %402, %350
  %407 = tail call fast <4 x float> @llvm.minnum.v4f32(<4 x float> %351, <4 x float> %402)
  %408 = select <4 x i1> %406, <4 x float> %350, <4 x float> %407
  %409 = getelementptr inbounds %struct.ImDrawVert, ptr %367, i64 0, i32 1
  %410 = getelementptr inbounds %struct.ImDrawVert, ptr %370, i64 0, i32 1
  %411 = getelementptr inbounds %struct.ImDrawVert, ptr %373, i64 0, i32 1
  %412 = getelementptr inbounds %struct.ImDrawVert, ptr %376, i64 0, i32 1
  %413 = extractelement <4 x float> %408, i64 0
  store float %413, ptr %409, align 4, !alias.scope !218, !noalias !220
  %414 = getelementptr inbounds %struct.ImDrawVert, ptr %367, i64 0, i32 1, i32 1
  %415 = extractelement <4 x float> %405, i64 0
  store float %415, ptr %414, align 4, !alias.scope !218, !noalias !220
  %416 = shufflevector <4 x float> %408, <4 x float> %405, <2 x i32> <i32 1, i32 5>
  store <2 x float> %416, ptr %410, align 4, !alias.scope !218, !noalias !220
  %417 = shufflevector <4 x float> %408, <4 x float> %405, <2 x i32> <i32 2, i32 6>
  store <2 x float> %417, ptr %411, align 4, !alias.scope !218, !noalias !220
  %418 = shufflevector <4 x float> %408, <4 x float> %405, <2 x i32> <i32 3, i32 7>
  store <2 x float> %418, ptr %412, align 4, !alias.scope !218, !noalias !220
  %419 = add nuw i64 %365, 4
  %420 = icmp eq i64 %419, %343
  br i1 %420, label %421, label %364, !llvm.loop !221

421:                                              ; preds = %364, %311, %292
  %422 = phi ptr [ %294, %311 ], [ %294, %292 ], [ %345, %364 ]
  br label %423

423:                                              ; preds = %421, %423
  %424 = phi ptr [ %435, %423 ], [ %422, %421 ]
  %425 = getelementptr inbounds %struct.ImDrawVert, ptr %424, i64 0, i32 1
  %426 = load <2 x float>, ptr %424, align 4, !tbaa !6
  %427 = load <2 x float>, ptr %2, align 4, !tbaa !6
  %428 = fsub fast <2 x float> %426, %427
  %429 = fmul fast <2 x float> %428, %283
  %430 = load <2 x float>, ptr %4, align 4, !tbaa !6
  %431 = fadd fast <2 x float> %429, %430
  %432 = fcmp fast olt <2 x float> %431, %289
  %433 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %290, <2 x float> %431)
  %434 = select <2 x i1> %432, <2 x float> %289, <2 x float> %433
  store <2 x float> %434, ptr %425, align 4
  %435 = getelementptr inbounds %struct.ImDrawVert, ptr %424, i64 1
  %436 = icmp ult ptr %435, %288
  br i1 %436, label %423, label %437, !llvm.loop !222

437:                                              ; preds = %423, %265, %263, %9, %33
  ret void
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local void @"?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %4, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %5, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %6, i1 noundef zeroext %7) local_unnamed_addr #17 {
  %9 = getelementptr i8, ptr %3, i64 4
  %10 = getelementptr i8, ptr %5, i64 4
  %11 = load <2 x float>, ptr %4, align 4, !tbaa !6
  %12 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %13 = fsub fast <2 x float> %11, %12
  %14 = load <2 x float>, ptr %6, align 4, !tbaa !6
  %15 = load <2 x float>, ptr %5, align 4, !tbaa !6
  %16 = fsub fast <2 x float> %14, %15
  %17 = fcmp fast une <2 x float> %13, zeroinitializer
  %18 = fdiv fast <2 x float> %16, %13
  %19 = select <2 x i1> %17, <2 x float> %18, <2 x float> zeroinitializer
  %20 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !119
  %22 = ptrtoint ptr %21 to i64
  %23 = sext i32 %1 to i64
  %24 = getelementptr %struct.ImDrawVert, ptr %21, i64 %23
  %25 = sext i32 %2 to i64
  %26 = getelementptr inbounds %struct.ImDrawVert, ptr %21, i64 %25
  br i1 %7, label %148, label %27

27:                                               ; preds = %8
  %28 = icmp slt i32 %1, %2
  br i1 %28, label %29, label %306

29:                                               ; preds = %27
  %30 = mul nsw i64 %23, 20
  %31 = add i64 %30, %22
  %32 = add i64 %31, 20
  %33 = mul nsw i64 %25, 20
  %34 = add i64 %33, %22
  %35 = tail call i64 @llvm.umax.i64(i64 %32, i64 %34)
  %36 = add i64 %35, -20
  %37 = sub i64 %36, %22
  %38 = icmp ne i64 %37, %30
  %39 = zext i1 %38 to i64
  %40 = or i64 %30, %39
  %41 = sub i64 %37, %40
  %42 = udiv i64 %41, 20
  %43 = add nuw nsw i64 %42, %39
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %43, 16
  br i1 %45, label %46, label %48

46:                                               ; preds = %97, %48, %29
  %47 = phi ptr [ %24, %48 ], [ %24, %29 ], [ %82, %97 ]
  br label %295

48:                                               ; preds = %29
  %49 = mul nsw i64 %23, 20
  %50 = add i64 %49, %22
  %51 = add i64 %50, 20
  %52 = mul nsw i64 %25, 20
  %53 = add i64 %52, %22
  %54 = tail call i64 @llvm.umax.i64(i64 %51, i64 %53)
  %55 = add i64 %54, -20
  %56 = sub i64 %55, %22
  %57 = icmp ne i64 %56, %49
  %58 = zext i1 %57 to i64
  %59 = or i64 %49, %58
  %60 = sub i64 %56, %59
  %61 = udiv i64 %60, 20
  %62 = add nuw nsw i64 %61, %58
  %63 = add nsw i64 %62, %23
  %64 = mul i64 %63, 20
  %65 = add i64 %64, 16
  %66 = getelementptr i8, ptr %21, i64 %65
  %67 = getelementptr i8, ptr %3, i64 8
  %68 = getelementptr i8, ptr %5, i64 8
  %69 = icmp ult ptr %24, %67
  %70 = icmp ugt ptr %66, %3
  %71 = and i1 %69, %70
  %72 = icmp ult ptr %24, %68
  %73 = icmp ugt ptr %66, %5
  %74 = and i1 %72, %73
  %75 = or i1 %71, %74
  br i1 %75, label %46, label %76

76:                                               ; preds = %48
  %77 = and i64 %44, 3
  %78 = icmp eq i64 %77, 0
  %79 = select i1 %78, i64 4, i64 %77
  %80 = sub nsw i64 %44, %79
  %81 = mul i64 %80, 20
  %82 = getelementptr i8, ptr %24, i64 %81
  %83 = shufflevector <2 x float> %19, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %84 = shufflevector <2 x float> %19, <2 x float> poison, <4 x i32> zeroinitializer
  %85 = load float, ptr %3, align 4, !tbaa !113, !alias.scope !223
  %86 = insertelement <4 x float> poison, float %85, i64 0
  %87 = shufflevector <4 x float> %86, <4 x float> poison, <4 x i32> zeroinitializer
  %88 = load float, ptr %9, align 4, !tbaa !112, !alias.scope !223
  %89 = insertelement <4 x float> poison, float %88, i64 0
  %90 = shufflevector <4 x float> %89, <4 x float> poison, <4 x i32> zeroinitializer
  %91 = load float, ptr %5, align 4, !tbaa !113, !alias.scope !226
  %92 = insertelement <4 x float> poison, float %91, i64 0
  %93 = shufflevector <4 x float> %92, <4 x float> poison, <4 x i32> zeroinitializer
  %94 = load float, ptr %10, align 4, !tbaa !112, !alias.scope !226
  %95 = insertelement <4 x float> poison, float %94, i64 0
  %96 = shufflevector <4 x float> %95, <4 x float> poison, <4 x i32> zeroinitializer
  br label %97

97:                                               ; preds = %97, %76
  %98 = phi i64 [ 0, %76 ], [ %146, %97 ]
  %99 = mul i64 %98, 20
  %100 = getelementptr i8, ptr %24, i64 %99
  %101 = mul i64 %98, 20
  %102 = add i64 %101, 20
  %103 = getelementptr i8, ptr %24, i64 %102
  %104 = mul i64 %98, 20
  %105 = add i64 %104, 40
  %106 = getelementptr i8, ptr %24, i64 %105
  %107 = mul i64 %98, 20
  %108 = add i64 %107, 60
  %109 = getelementptr i8, ptr %24, i64 %108
  %110 = getelementptr inbounds %struct.ImVec2, ptr %100, i64 0, i32 1
  %111 = getelementptr inbounds %struct.ImVec2, ptr %103, i64 0, i32 1
  %112 = getelementptr inbounds %struct.ImVec2, ptr %106, i64 0, i32 1
  %113 = getelementptr inbounds %struct.ImVec2, ptr %109, i64 0, i32 1
  %114 = load float, ptr %110, align 4, !tbaa !134, !alias.scope !228, !noalias !230
  %115 = load float, ptr %111, align 4, !tbaa !134, !alias.scope !228, !noalias !230
  %116 = load float, ptr %112, align 4, !tbaa !134, !alias.scope !228, !noalias !230
  %117 = load float, ptr %113, align 4, !tbaa !134, !alias.scope !228, !noalias !230
  %118 = insertelement <4 x float> poison, float %114, i64 0
  %119 = insertelement <4 x float> %118, float %115, i64 1
  %120 = insertelement <4 x float> %119, float %116, i64 2
  %121 = insertelement <4 x float> %120, float %117, i64 3
  %122 = load float, ptr %100, align 4, !tbaa !133, !alias.scope !228, !noalias !230
  %123 = load float, ptr %103, align 4, !tbaa !133, !alias.scope !228, !noalias !230
  %124 = load float, ptr %106, align 4, !tbaa !133, !alias.scope !228, !noalias !230
  %125 = load float, ptr %109, align 4, !tbaa !133, !alias.scope !228, !noalias !230
  %126 = insertelement <4 x float> poison, float %122, i64 0
  %127 = insertelement <4 x float> %126, float %123, i64 1
  %128 = insertelement <4 x float> %127, float %124, i64 2
  %129 = insertelement <4 x float> %128, float %125, i64 3
  %130 = fsub fast <4 x float> %121, %90
  %131 = fsub fast <4 x float> %129, %87
  %132 = fmul fast <4 x float> %130, %83
  %133 = fmul fast <4 x float> %131, %84
  %134 = fadd fast <4 x float> %132, %96
  %135 = fadd fast <4 x float> %133, %93
  %136 = getelementptr inbounds %struct.ImDrawVert, ptr %100, i64 0, i32 1
  %137 = getelementptr inbounds %struct.ImDrawVert, ptr %103, i64 0, i32 1
  %138 = getelementptr inbounds %struct.ImDrawVert, ptr %106, i64 0, i32 1
  %139 = getelementptr inbounds %struct.ImDrawVert, ptr %109, i64 0, i32 1
  %140 = extractelement <4 x float> %135, i64 0
  store float %140, ptr %136, align 4, !alias.scope !228, !noalias !230
  %141 = getelementptr inbounds %struct.ImDrawVert, ptr %100, i64 0, i32 1, i32 1
  %142 = extractelement <4 x float> %134, i64 0
  store float %142, ptr %141, align 4, !alias.scope !228, !noalias !230
  %143 = shufflevector <4 x float> %135, <4 x float> %134, <2 x i32> <i32 1, i32 5>
  store <2 x float> %143, ptr %137, align 4, !alias.scope !228, !noalias !230
  %144 = shufflevector <4 x float> %135, <4 x float> %134, <2 x i32> <i32 2, i32 6>
  store <2 x float> %144, ptr %138, align 4, !alias.scope !228, !noalias !230
  %145 = shufflevector <4 x float> %135, <4 x float> %134, <2 x i32> <i32 3, i32 7>
  store <2 x float> %145, ptr %139, align 4, !alias.scope !228, !noalias !230
  %146 = add nuw i64 %98, 4
  %147 = icmp eq i64 %146, %80
  br i1 %147, label %46, label %97, !llvm.loop !231

148:                                              ; preds = %8
  %149 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %15, <2 x float> %14)
  %150 = tail call fast <2 x float> @llvm.maxnum.v2f32(<2 x float> %15, <2 x float> %14)
  %151 = icmp slt i32 %1, %2
  br i1 %151, label %152, label %306

152:                                              ; preds = %148
  %153 = mul nsw i64 %23, 20
  %154 = add i64 %153, %22
  %155 = add i64 %154, 20
  %156 = mul nsw i64 %25, 20
  %157 = add i64 %156, %22
  %158 = tail call i64 @llvm.umax.i64(i64 %155, i64 %157)
  %159 = add i64 %158, -20
  %160 = sub i64 %159, %22
  %161 = icmp ne i64 %160, %153
  %162 = zext i1 %161 to i64
  %163 = or i64 %153, %162
  %164 = sub i64 %160, %163
  %165 = udiv i64 %164, 20
  %166 = add nuw nsw i64 %165, %162
  %167 = add nuw nsw i64 %166, 1
  %168 = icmp ult i64 %166, 12
  br i1 %168, label %279, label %169

169:                                              ; preds = %152
  %170 = mul nsw i64 %23, 20
  %171 = add i64 %170, %22
  %172 = add i64 %171, 20
  %173 = mul nsw i64 %25, 20
  %174 = add i64 %173, %22
  %175 = tail call i64 @llvm.umax.i64(i64 %172, i64 %174)
  %176 = add i64 %175, -20
  %177 = sub i64 %176, %22
  %178 = icmp ne i64 %177, %170
  %179 = zext i1 %178 to i64
  %180 = or i64 %170, %179
  %181 = sub i64 %177, %180
  %182 = udiv i64 %181, 20
  %183 = add nuw nsw i64 %182, %179
  %184 = add nsw i64 %183, %23
  %185 = mul i64 %184, 20
  %186 = add i64 %185, 16
  %187 = getelementptr i8, ptr %21, i64 %186
  %188 = getelementptr i8, ptr %3, i64 8
  %189 = getelementptr i8, ptr %5, i64 8
  %190 = icmp ult ptr %24, %188
  %191 = icmp ugt ptr %187, %3
  %192 = and i1 %190, %191
  %193 = icmp ult ptr %24, %189
  %194 = icmp ugt ptr %187, %5
  %195 = and i1 %193, %194
  %196 = or i1 %192, %195
  br i1 %196, label %279, label %197

197:                                              ; preds = %169
  %198 = and i64 %167, 3
  %199 = icmp eq i64 %198, 0
  %200 = select i1 %199, i64 4, i64 %198
  %201 = sub nsw i64 %167, %200
  %202 = mul i64 %201, 20
  %203 = getelementptr i8, ptr %24, i64 %202
  %204 = shufflevector <2 x float> %19, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %205 = shufflevector <2 x float> %19, <2 x float> poison, <4 x i32> zeroinitializer
  %206 = shufflevector <2 x float> %149, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %207 = shufflevector <2 x float> %150, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %208 = shufflevector <2 x float> %149, <2 x float> poison, <4 x i32> zeroinitializer
  %209 = shufflevector <2 x float> %150, <2 x float> poison, <4 x i32> zeroinitializer
  %210 = load float, ptr %3, align 4, !tbaa !113, !alias.scope !232
  %211 = insertelement <4 x float> poison, float %210, i64 0
  %212 = shufflevector <4 x float> %211, <4 x float> poison, <4 x i32> zeroinitializer
  %213 = load float, ptr %9, align 4, !tbaa !112, !alias.scope !232
  %214 = insertelement <4 x float> poison, float %213, i64 0
  %215 = shufflevector <4 x float> %214, <4 x float> poison, <4 x i32> zeroinitializer
  %216 = load float, ptr %5, align 4, !tbaa !113, !alias.scope !235
  %217 = insertelement <4 x float> poison, float %216, i64 0
  %218 = shufflevector <4 x float> %217, <4 x float> poison, <4 x i32> zeroinitializer
  %219 = load float, ptr %10, align 4, !tbaa !112, !alias.scope !235
  %220 = insertelement <4 x float> poison, float %219, i64 0
  %221 = shufflevector <4 x float> %220, <4 x float> poison, <4 x i32> zeroinitializer
  br label %222

222:                                              ; preds = %222, %197
  %223 = phi i64 [ 0, %197 ], [ %277, %222 ]
  %224 = mul i64 %223, 20
  %225 = getelementptr i8, ptr %24, i64 %224
  %226 = mul i64 %223, 20
  %227 = add i64 %226, 20
  %228 = getelementptr i8, ptr %24, i64 %227
  %229 = mul i64 %223, 20
  %230 = add i64 %229, 40
  %231 = getelementptr i8, ptr %24, i64 %230
  %232 = mul i64 %223, 20
  %233 = add i64 %232, 60
  %234 = getelementptr i8, ptr %24, i64 %233
  %235 = getelementptr inbounds %struct.ImVec2, ptr %225, i64 0, i32 1
  %236 = getelementptr inbounds %struct.ImVec2, ptr %228, i64 0, i32 1
  %237 = getelementptr inbounds %struct.ImVec2, ptr %231, i64 0, i32 1
  %238 = getelementptr inbounds %struct.ImVec2, ptr %234, i64 0, i32 1
  %239 = load float, ptr %235, align 4, !tbaa !134, !alias.scope !237, !noalias !239
  %240 = load float, ptr %236, align 4, !tbaa !134, !alias.scope !237, !noalias !239
  %241 = load float, ptr %237, align 4, !tbaa !134, !alias.scope !237, !noalias !239
  %242 = load float, ptr %238, align 4, !tbaa !134, !alias.scope !237, !noalias !239
  %243 = insertelement <4 x float> poison, float %239, i64 0
  %244 = insertelement <4 x float> %243, float %240, i64 1
  %245 = insertelement <4 x float> %244, float %241, i64 2
  %246 = insertelement <4 x float> %245, float %242, i64 3
  %247 = load float, ptr %225, align 4, !tbaa !133, !alias.scope !237, !noalias !239
  %248 = load float, ptr %228, align 4, !tbaa !133, !alias.scope !237, !noalias !239
  %249 = load float, ptr %231, align 4, !tbaa !133, !alias.scope !237, !noalias !239
  %250 = load float, ptr %234, align 4, !tbaa !133, !alias.scope !237, !noalias !239
  %251 = insertelement <4 x float> poison, float %247, i64 0
  %252 = insertelement <4 x float> %251, float %248, i64 1
  %253 = insertelement <4 x float> %252, float %249, i64 2
  %254 = insertelement <4 x float> %253, float %250, i64 3
  %255 = fsub fast <4 x float> %246, %215
  %256 = fsub fast <4 x float> %254, %212
  %257 = fmul fast <4 x float> %255, %204
  %258 = fmul fast <4 x float> %256, %205
  %259 = fadd fast <4 x float> %257, %221
  %260 = fadd fast <4 x float> %258, %218
  %261 = fcmp fast olt <4 x float> %259, %206
  %262 = tail call fast <4 x float> @llvm.minnum.v4f32(<4 x float> %207, <4 x float> %259)
  %263 = select <4 x i1> %261, <4 x float> %206, <4 x float> %262
  %264 = fcmp fast olt <4 x float> %260, %208
  %265 = tail call fast <4 x float> @llvm.minnum.v4f32(<4 x float> %209, <4 x float> %260)
  %266 = select <4 x i1> %264, <4 x float> %208, <4 x float> %265
  %267 = getelementptr inbounds %struct.ImDrawVert, ptr %225, i64 0, i32 1
  %268 = getelementptr inbounds %struct.ImDrawVert, ptr %228, i64 0, i32 1
  %269 = getelementptr inbounds %struct.ImDrawVert, ptr %231, i64 0, i32 1
  %270 = getelementptr inbounds %struct.ImDrawVert, ptr %234, i64 0, i32 1
  %271 = extractelement <4 x float> %266, i64 0
  store float %271, ptr %267, align 4, !alias.scope !237, !noalias !239
  %272 = getelementptr inbounds %struct.ImDrawVert, ptr %225, i64 0, i32 1, i32 1
  %273 = extractelement <4 x float> %263, i64 0
  store float %273, ptr %272, align 4, !alias.scope !237, !noalias !239
  %274 = shufflevector <4 x float> %266, <4 x float> %263, <2 x i32> <i32 1, i32 5>
  store <2 x float> %274, ptr %268, align 4, !alias.scope !237, !noalias !239
  %275 = shufflevector <4 x float> %266, <4 x float> %263, <2 x i32> <i32 2, i32 6>
  store <2 x float> %275, ptr %269, align 4, !alias.scope !237, !noalias !239
  %276 = shufflevector <4 x float> %266, <4 x float> %263, <2 x i32> <i32 3, i32 7>
  store <2 x float> %276, ptr %270, align 4, !alias.scope !237, !noalias !239
  %277 = add nuw i64 %223, 4
  %278 = icmp eq i64 %277, %201
  br i1 %278, label %279, label %222, !llvm.loop !240

279:                                              ; preds = %222, %169, %152
  %280 = phi ptr [ %24, %169 ], [ %24, %152 ], [ %203, %222 ]
  br label %281

281:                                              ; preds = %279, %281
  %282 = phi ptr [ %293, %281 ], [ %280, %279 ]
  %283 = getelementptr inbounds %struct.ImDrawVert, ptr %282, i64 0, i32 1
  %284 = load <2 x float>, ptr %282, align 4, !tbaa !6
  %285 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %286 = fsub fast <2 x float> %284, %285
  %287 = fmul fast <2 x float> %286, %19
  %288 = load <2 x float>, ptr %5, align 4, !tbaa !6
  %289 = fadd fast <2 x float> %287, %288
  %290 = fcmp fast olt <2 x float> %289, %149
  %291 = tail call fast <2 x float> @llvm.minnum.v2f32(<2 x float> %150, <2 x float> %289)
  %292 = select <2 x i1> %290, <2 x float> %149, <2 x float> %291
  store <2 x float> %292, ptr %283, align 4
  %293 = getelementptr inbounds %struct.ImDrawVert, ptr %282, i64 1
  %294 = icmp ult ptr %293, %26
  br i1 %294, label %281, label %306, !llvm.loop !241

295:                                              ; preds = %46, %295
  %296 = phi ptr [ %304, %295 ], [ %47, %46 ]
  %297 = getelementptr inbounds %struct.ImDrawVert, ptr %296, i64 0, i32 1
  %298 = load <2 x float>, ptr %296, align 4, !tbaa !6
  %299 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %300 = fsub fast <2 x float> %298, %299
  %301 = fmul fast <2 x float> %300, %19
  %302 = load <2 x float>, ptr %5, align 4, !tbaa !6
  %303 = fadd fast <2 x float> %301, %302
  store <2 x float> %303, ptr %297, align 4
  %304 = getelementptr inbounds %struct.ImDrawVert, ptr %296, i64 1
  %305 = icmp ult ptr %304, %26
  br i1 %305, label %295, label %306, !llvm.loop !242

306:                                              ; preds = %295, %281, %27, %148
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?Split@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(24) %0, ptr nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #0 align 2 personality ptr @__CxxFrameHandler3 {
  %4 = load i32, ptr %0, align 8, !tbaa !81
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 4
  %8 = icmp slt i32 %7, 2
  %9 = select i1 %5, i1 %8, i1 false
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BAE@LAENHIMB@?$AA_?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1685)
  br label %11

11:                                               ; preds = %3, %10
  %12 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2
  %13 = load i32, ptr %12, align 8
  %14 = icmp slt i32 %13, %2
  br i1 %14, label %15, label %33

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 1
  %17 = load i32, ptr %16, align 4, !tbaa !103
  %18 = icmp slt i32 %17, %2
  br i1 %18, label %19, label %32

19:                                               ; preds = %15
  %20 = sext i32 %2 to i64
  %21 = shl nsw i64 %20, 5
  %22 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %21)
  %23 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !92
  %25 = icmp eq ptr %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = load i32, ptr %12, align 8, !tbaa !104
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr nonnull align 8 %24, i64 %29, i1 false)
  %30 = load ptr, ptr %23, align 8, !tbaa !92
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %30)
  br label %31

31:                                               ; preds = %19, %26
  store ptr %22, ptr %23, align 8, !tbaa !92
  store i32 %2, ptr %16, align 4, !tbaa !103
  br label %32

32:                                               ; preds = %15, %31
  store i32 %2, ptr %12, align 8, !tbaa !104
  br label %33

33:                                               ; preds = %32, %11
  %34 = phi i32 [ %2, %32 ], [ %13, %11 ]
  store i32 %2, ptr %6, align 4, !tbaa !82
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %37

37:                                               ; preds = %33, %36
  %38 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !92
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %39, i8 0, i64 32, i1 false)
  %40 = icmp sgt i32 %2, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = sext i32 %13 to i64
  %43 = zext i32 %2 to i64
  br label %45

44:                                               ; preds = %98, %37
  ret void

45:                                               ; preds = %41, %98
  %46 = phi i64 [ 1, %41 ], [ %99, %98 ]
  %47 = icmp slt i64 %46, %42
  %48 = load i32, ptr %12, align 8
  %49 = sext i32 %48 to i64
  %50 = icmp slt i64 %46, %49
  br i1 %47, label %56, label %51

51:                                               ; preds = %45
  br i1 %50, label %53, label %52

52:                                               ; preds = %51
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %53

53:                                               ; preds = %51, %52
  %54 = load ptr, ptr %38, align 8, !tbaa !92
  %55 = getelementptr inbounds %struct.ImDrawChannel, ptr %54, i64 %46
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %55, i8 0, i64 32, i1 false)
  br label %98

56:                                               ; preds = %45
  br i1 %50, label %58, label %57

57:                                               ; preds = %56
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %58

58:                                               ; preds = %56, %57
  %59 = load ptr, ptr %38, align 8, !tbaa !92
  %60 = getelementptr inbounds %struct.ImDrawChannel, ptr %59, i64 %46
  %61 = getelementptr inbounds %struct.ImVector.6, ptr %60, i64 0, i32 1
  %62 = load i32, ptr %61, align 4, !tbaa !59
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %58
  %65 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %66 = getelementptr inbounds %struct.ImVector.6, ptr %60, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !60
  %68 = icmp eq ptr %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = load i32, ptr %60, align 8, !tbaa !61
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %71, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr nonnull align 8 %67, i64 %72, i1 false)
  %73 = load ptr, ptr %66, align 8, !tbaa !60
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %73)
  br label %74

74:                                               ; preds = %69, %64
  store ptr %65, ptr %66, align 8, !tbaa !60
  store i32 0, ptr %61, align 4, !tbaa !59
  br label %75

75:                                               ; preds = %58, %74
  store i32 0, ptr %60, align 8, !tbaa !61
  %76 = load i32, ptr %12, align 8
  %77 = sext i32 %76 to i64
  %78 = icmp slt i64 %46, %77
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %80

80:                                               ; preds = %75, %79
  %81 = load ptr, ptr %38, align 8, !tbaa !92
  %82 = getelementptr inbounds %struct.ImDrawChannel, ptr %81, i64 %46, i32 1
  %83 = getelementptr inbounds %struct.ImDrawChannel, ptr %81, i64 %46, i32 1, i32 1
  %84 = load i32, ptr %83, align 4, !tbaa !62
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %97

86:                                               ; preds = %80
  %87 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
  %88 = getelementptr inbounds %struct.ImDrawChannel, ptr %81, i64 %46, i32 1, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !63
  %90 = icmp eq ptr %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = load i32, ptr %82, align 8, !tbaa !64
  %93 = sext i32 %92 to i64
  %94 = shl nsw i64 %93, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %87, ptr nonnull align 2 %89, i64 %94, i1 false)
  %95 = load ptr, ptr %88, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %95)
  br label %96

96:                                               ; preds = %91, %86
  store ptr %87, ptr %88, align 8, !tbaa !63
  store i32 0, ptr %83, align 4, !tbaa !62
  br label %97

97:                                               ; preds = %80, %96
  store i32 0, ptr %82, align 8, !tbaa !64
  br label %98

98:                                               ; preds = %53, %97
  %99 = add nuw nsw i64 %46, 1
  %100 = icmp eq i64 %99, %43
  br i1 %100, label %44, label %45, !llvm.loop !243
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(24) %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 align 2 {
  %4 = icmp sgt i32 %2, -1
  %5 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4
  %7 = icmp sgt i32 %6, %2
  %8 = select i1 %4, i1 %7, i1 false
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DC@ILGGLBID@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?5?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1785)
  br label %10

10:                                               ; preds = %3, %9
  %11 = load i32, ptr %0, align 8, !tbaa !81
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %54, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ImDrawListSplitter, ptr %0, i64 0, i32 2, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !244
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds %struct.ImDrawChannel, ptr %15, i64 %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  %18 = load ptr, ptr %14, align 8, !tbaa !244
  %19 = load i32, ptr %0, align 8, !tbaa !81
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.ImDrawChannel, ptr %18, i64 %20, i32 1
  %22 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %22, i64 16, i1 false)
  store i32 %2, ptr %0, align 8, !tbaa !81
  %23 = load ptr, ptr %14, align 8, !tbaa !244
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds %struct.ImDrawChannel, ptr %23, i64 %24
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %25, i64 16, i1 false)
  %26 = load ptr, ptr %14, align 8, !tbaa !244
  %27 = getelementptr inbounds %struct.ImDrawChannel, ptr %26, i64 %24, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 1, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !91
  %30 = load i32, ptr %22, align 8, !tbaa !90
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, ptr %29, i64 %31
  %33 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 8
  store ptr %32, ptr %33, align 8, !tbaa !99
  %34 = load i32, ptr %1, align 8, !tbaa !84
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %13
  %37 = getelementptr inbounds %struct.ImVector.6, ptr %1, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !85
  %39 = add nsw i32 %34, -1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.ImDrawCmd, ptr %38, i64 %40
  %42 = icmp eq ptr %38, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %13, %36
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %1)
  br label %54

44:                                               ; preds = %36
  %45 = getelementptr inbounds %struct.ImDrawCmd, ptr %38, i64 %40, i32 4
  %46 = load i32, ptr %45, align 8, !tbaa !86
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 12
  br i1 %47, label %49, label %50

49:                                               ; preds = %44
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %41, ptr noundef nonnull align 8 dereferenceable(28) %48, i64 28, i1 false)
  br label %54

50:                                               ; preds = %44
  %51 = tail call i32 @memcmp(ptr noundef nonnull dereferenceable(28) %41, ptr noundef nonnull dereferenceable(28) %48, i64 noundef 28)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  tail call void @"?AddDrawCmd@ImDrawList@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(200) %1)
  br label %54

54:                                               ; preds = %43, %50, %53, %49, %10
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?DeIndexAllBuffers@ImDrawData@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(48) %0) local_unnamed_addr #0 align 2 personality ptr @__CxxFrameHandler3 {
  %2 = alloca %struct.ImVector.7, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  %3 = getelementptr inbounds %struct.ImDrawData, ptr %0, i64 0, i32 2
  store i32 0, ptr %3, align 8, !tbaa !245
  %4 = getelementptr inbounds %struct.ImDrawData, ptr %0, i64 0, i32 3
  store i32 0, ptr %4, align 4, !tbaa !247
  %5 = getelementptr inbounds %struct.ImDrawData, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !248
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.ImDrawData, ptr %0, i64 0, i32 4
  %10 = getelementptr inbounds %struct.ImVector.7, ptr %2, i64 0, i32 1
  %11 = getelementptr inbounds %struct.ImVector.7, ptr %2, i64 0, i32 2
  br label %18

12:                                               ; preds = %104
  %13 = icmp eq ptr %107, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %107)
          to label %17 unwind label %15

15:                                               ; preds = %14
  %16 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %16) ]
  unreachable

17:                                               ; preds = %1, %12, %14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #39
  ret void

18:                                               ; preds = %8, %104
  %19 = phi i32 [ %6, %8 ], [ %105, %104 ]
  %20 = phi i32 [ 0, %8 ], [ %106, %104 ]
  %21 = phi ptr [ null, %8 ], [ %107, %104 ]
  %22 = phi i32 [ 0, %8 ], [ %108, %104 ]
  %23 = phi i64 [ 0, %8 ], [ %109, %104 ]
  %24 = load ptr, ptr %9, align 8, !tbaa !249
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8, !tbaa !117
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %26, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !64
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %104, label %30

30:                                               ; preds = %18
  %31 = icmp slt i32 %22, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %30
  %33 = icmp eq i32 %22, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = sdiv i32 %22, 2
  %36 = add nsw i32 %35, %22
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi i32 [ %36, %34 ], [ 8, %32 ]
  %39 = tail call i32 @llvm.smax.i32(i32 %38, i32 %28)
  %40 = icmp slt i32 %22, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = sext i32 %39 to i64
  %43 = mul nsw i64 %42, 20
  %44 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %43)
          to label %45 unwind label %112

45:                                               ; preds = %41
  %46 = icmp eq ptr %21, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = sext i32 %20 to i64
  %49 = mul nsw i64 %48, 20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %44, ptr nonnull align 4 %21, i64 %49, i1 false)
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %21)
          to label %50 unwind label %112

50:                                               ; preds = %47, %45
  store ptr %44, ptr %11, align 8, !tbaa !66
  store i32 %39, ptr %10, align 4, !tbaa !65
  br label %51

51:                                               ; preds = %30, %37, %50
  %52 = phi ptr [ %21, %30 ], [ %21, %37 ], [ %44, %50 ]
  %53 = phi i32 [ %22, %30 ], [ %22, %37 ], [ %39, %50 ]
  store i32 %28, ptr %2, align 8, !tbaa !67
  %54 = getelementptr inbounds %struct.ImDrawList, ptr %26, i64 0, i32 1, i32 2
  %55 = getelementptr inbounds %struct.ImDrawList, ptr %26, i64 0, i32 2
  %56 = getelementptr inbounds %struct.ImDrawList, ptr %26, i64 0, i32 2, i32 2
  br label %57

57:                                               ; preds = %51, %96
  %58 = phi i32 [ %98, %96 ], [ 0, %51 ]
  %59 = load i32, ptr %27, align 8, !tbaa !90
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %81, label %61

61:                                               ; preds = %57
  %62 = load i32, ptr %55, align 8, !tbaa !67
  store i32 %62, ptr %2, align 8, !tbaa !67
  store i32 %28, ptr %55, align 8, !tbaa !67
  %63 = getelementptr inbounds %struct.ImDrawList, ptr %26, i64 0, i32 2, i32 1
  %64 = load i32, ptr %63, align 4, !tbaa !65
  store i32 %64, ptr %10, align 4, !tbaa !65
  store i32 %53, ptr %63, align 4, !tbaa !65
  %65 = load ptr, ptr %56, align 8, !tbaa !66
  store ptr %65, ptr %11, align 8, !tbaa !66
  store ptr %52, ptr %56, align 8, !tbaa !66
  %66 = getelementptr inbounds %struct.ImDrawList, ptr %26, i64 0, i32 1, i32 1
  %67 = load i32, ptr %66, align 4, !tbaa !62
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %99

69:                                               ; preds = %61
  %70 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 0)
          to label %71 unwind label %112

71:                                               ; preds = %69
  %72 = load ptr, ptr %54, align 8, !tbaa !63
  %73 = icmp eq ptr %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %71
  %75 = load i32, ptr %27, align 8, !tbaa !64
  %76 = sext i32 %75 to i64
  %77 = shl nsw i64 %76, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %70, ptr nonnull align 2 %72, i64 %77, i1 false)
  %78 = load ptr, ptr %54, align 8, !tbaa !63
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %78)
          to label %79 unwind label %112

79:                                               ; preds = %74, %71
  store ptr %70, ptr %54, align 8, !tbaa !63
  store i32 0, ptr %66, align 4, !tbaa !62
  %80 = load i32, ptr %55, align 8, !tbaa !118
  br label %99

81:                                               ; preds = %57
  %82 = load ptr, ptr %54, align 8, !tbaa !63
  %83 = zext i32 %58 to i64
  %84 = getelementptr inbounds i16, ptr %82, i64 %83
  %85 = load i16, ptr %84, align 2, !tbaa !121
  %86 = zext i16 %85 to i32
  %87 = load i32, ptr %55, align 8
  %88 = icmp sgt i32 %87, %86
  br i1 %88, label %90, label %89

89:                                               ; preds = %81
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %90 unwind label %112

90:                                               ; preds = %81, %89
  %91 = load ptr, ptr %56, align 8, !tbaa !66
  %92 = zext i16 %85 to i64
  %93 = getelementptr inbounds %struct.ImDrawVert, ptr %91, i64 %92
  %94 = icmp sgt i32 %28, %58
  br i1 %94, label %96, label %95

95:                                               ; preds = %90
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %96 unwind label %112

96:                                               ; preds = %90, %95
  %97 = getelementptr inbounds %struct.ImDrawVert, ptr %52, i64 %83
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %97, ptr noundef nonnull align 4 dereferenceable(20) %93, i64 20, i1 false), !tbaa.struct !250
  %98 = add nuw nsw i32 %58, 1
  br label %57, !llvm.loop !251

99:                                               ; preds = %79, %61
  %100 = phi i32 [ %80, %79 ], [ %28, %61 ]
  store i32 0, ptr %27, align 8, !tbaa !64
  %101 = load i32, ptr %4, align 4, !tbaa !247
  %102 = add nsw i32 %101, %100
  store i32 %102, ptr %4, align 4, !tbaa !247
  %103 = load i32, ptr %5, align 4, !tbaa !248
  br label %104

104:                                              ; preds = %18, %99
  %105 = phi i32 [ %19, %18 ], [ %103, %99 ]
  %106 = phi i32 [ %20, %18 ], [ %62, %99 ]
  %107 = phi ptr [ %21, %18 ], [ %65, %99 ]
  %108 = phi i32 [ %22, %18 ], [ %64, %99 ]
  %109 = add nuw nsw i64 %23, 1
  %110 = sext i32 %105 to i64
  %111 = icmp slt i64 %109, %110
  br i1 %111, label %18, label %12, !llvm.loop !252

112:                                              ; preds = %95, %89, %74, %69, %47, %41
  %113 = cleanuppad within none []
  call void @"??1?$ImVector@UImDrawVert@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %2) #39 [ "funclet"(token %113) ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #39
  cleanupret from %113 unwind to caller
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @"??1?$ImVector@UImDrawVert@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #18 comdat align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImVector.7, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !66
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3)
          to label %6 unwind label %7

6:                                                ; preds = %5, %1
  ret void

7:                                                ; preds = %5
  %8 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %8) ]
  unreachable
}

; Function Attrs: uwtable
define dso_local void @"?ScaleClipRects@ImDrawData@@QEAAXAEBUImVec2@@@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(48) %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %1) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.ImDrawData, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !248
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ImDrawData, ptr %0, i64 0, i32 4
  br label %9

8:                                                ; preds = %21, %2
  ret void

9:                                                ; preds = %6, %21
  %10 = phi i32 [ %4, %6 ], [ %22, %21 ]
  %11 = phi i64 [ 0, %6 ], [ %23, %21 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !249
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8, !tbaa !117
  %15 = load i32, ptr %14, align 8, !tbaa !84
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.ImVector.6, ptr %14, i64 0, i32 2
  br label %26

19:                                               ; preds = %26
  %20 = load i32, ptr %3, align 4, !tbaa !248
  br label %21

21:                                               ; preds = %19, %9
  %22 = phi i32 [ %20, %19 ], [ %10, %9 ]
  %23 = add nuw nsw i64 %11, 1
  %24 = sext i32 %22 to i64
  %25 = icmp slt i64 %23, %24
  br i1 %25, label %9, label %8, !llvm.loop !253

26:                                               ; preds = %17, %26
  %27 = phi i64 [ 0, %17 ], [ %34, %26 ]
  %28 = load ptr, ptr %18, align 8, !tbaa !60
  %29 = getelementptr inbounds %struct.ImDrawCmd, ptr %28, i64 %27
  %30 = load <2 x float>, ptr %1, align 4, !tbaa !6
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %32 = load <4 x float>, ptr %29, align 8, !tbaa !6
  %33 = fmul fast <4 x float> %31, %32
  store <4 x float> %33, ptr %29, align 8
  %34 = add nuw nsw i64 %27, 1
  %35 = load i32, ptr %14, align 8, !tbaa !84
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %34, %36
  br i1 %37, label %26, label %19, !llvm.loop !254
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @"?ShadeVertsLinearColorGradientKeepAlpha@ImGui@@YAXPEAUImDrawList@@HHUImVec2@@1II@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i64 %3, i64 %4, i32 noundef %5, i32 noundef %6) local_unnamed_addr #19 {
  %8 = lshr i64 %3, 32
  %9 = lshr i64 %4, 32
  %10 = insertelement <2 x i64> poison, i64 %3, i64 0
  %11 = insertelement <2 x i64> %10, i64 %8, i64 1
  %12 = trunc <2 x i64> %11 to <2 x i32>
  %13 = bitcast <2 x i32> %12 to <2 x float>
  %14 = insertelement <2 x i64> poison, i64 %4, i64 0
  %15 = insertelement <2 x i64> %14, i64 %9, i64 1
  %16 = trunc <2 x i64> %15 to <2 x i32>
  %17 = bitcast <2 x i32> %16 to <2 x float>
  %18 = fsub fast <2 x float> %17, %13
  %19 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 2, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !119
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds %struct.ImDrawVert, ptr %20, i64 %21
  %23 = icmp slt i32 %1, %2
  br i1 %23, label %24, label %147

24:                                               ; preds = %7
  %25 = ptrtoint ptr %20 to i64
  %26 = fmul fast <2 x float> %18, %18
  %27 = fmul fast <2 x float> %18, %18
  %28 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %29 = fadd fast <2 x float> %28, %27
  %30 = extractelement <2 x float> %29, i64 0
  %31 = sext i32 %1 to i64
  %32 = getelementptr inbounds %struct.ImDrawVert, ptr %20, i64 %31
  %33 = lshr i32 %6, 16
  %34 = and i32 %33, 255
  %35 = lshr i32 %5, 16
  %36 = and i32 %35, 255
  %37 = sub nsw i32 %34, %36
  %38 = lshr i32 %6, 8
  %39 = and i32 %38, 255
  %40 = lshr i32 %5, 8
  %41 = and i32 %40, 255
  %42 = sub nsw i32 %39, %41
  %43 = and i32 %6, 255
  %44 = and i32 %5, 255
  %45 = sub nsw i32 %43, %44
  %46 = sitofp i32 %44 to float
  %47 = sitofp i32 %45 to float
  %48 = sitofp i32 %41 to float
  %49 = sitofp i32 %42 to float
  %50 = sitofp i32 %36 to float
  %51 = sitofp i32 %37 to float
  %52 = mul nsw i64 %31, 20
  %53 = add i64 %52, %25
  %54 = add i64 %53, 20
  %55 = mul nsw i64 %21, 20
  %56 = add i64 %55, %25
  %57 = tail call i64 @llvm.umax.i64(i64 %54, i64 %56)
  %58 = add i64 %57, -20
  %59 = sub i64 %58, %25
  %60 = icmp ne i64 %59, %52
  %61 = zext i1 %60 to i64
  %62 = or i64 %52, %61
  %63 = sub i64 %59, %62
  %64 = udiv i64 %63, 20
  %65 = add nuw nsw i64 %64, %61
  %66 = add nuw nsw i64 %65, 1
  %67 = icmp ult i64 %65, 3
  br i1 %67, label %144, label %68

68:                                               ; preds = %24
  %69 = and i64 %66, -4
  %70 = mul i64 %69, 20
  %71 = getelementptr i8, ptr %32, i64 %70
  %72 = shufflevector <2 x float> %13, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %73 = shufflevector <2 x float> %13, <2 x float> poison, <4 x i32> zeroinitializer
  %74 = shufflevector <2 x float> %18, <2 x float> poison, <4 x i32> zeroinitializer
  %75 = shufflevector <2 x float> %18, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %76 = shufflevector <2 x float> %29, <2 x float> undef, <4 x i32> zeroinitializer
  %77 = insertelement <4 x float> poison, float %47, i64 0
  %78 = shufflevector <4 x float> %77, <4 x float> poison, <4 x i32> zeroinitializer
  %79 = insertelement <4 x float> poison, float %46, i64 0
  %80 = shufflevector <4 x float> %79, <4 x float> poison, <4 x i32> zeroinitializer
  %81 = insertelement <4 x float> poison, float %49, i64 0
  %82 = shufflevector <4 x float> %81, <4 x float> poison, <4 x i32> zeroinitializer
  %83 = insertelement <4 x float> poison, float %48, i64 0
  %84 = shufflevector <4 x float> %83, <4 x float> poison, <4 x i32> zeroinitializer
  %85 = insertelement <4 x float> poison, float %51, i64 0
  %86 = shufflevector <4 x float> %85, <4 x float> poison, <4 x i32> zeroinitializer
  %87 = insertelement <4 x float> poison, float %50, i64 0
  %88 = shufflevector <4 x float> %87, <4 x float> poison, <4 x i32> zeroinitializer
  %89 = fdiv fast <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %76
  br label %90

90:                                               ; preds = %90, %68
  %91 = phi i64 [ 0, %68 ], [ %140, %90 ]
  %92 = mul i64 %91, 20
  %93 = getelementptr i8, ptr %32, i64 %92
  %94 = mul i64 %91, 20
  %95 = add i64 %94, 20
  %96 = getelementptr i8, ptr %32, i64 %95
  %97 = mul i64 %91, 20
  %98 = add i64 %97, 40
  %99 = getelementptr i8, ptr %32, i64 %98
  %100 = mul i64 %91, 20
  %101 = add i64 %100, 60
  %102 = getelementptr i8, ptr %32, i64 %101
  %103 = load <20 x float>, ptr %93, align 4, !tbaa !46
  %104 = shufflevector <20 x float> %103, <20 x float> poison, <4 x i32> <i32 0, i32 5, i32 10, i32 15>
  %105 = shufflevector <20 x float> %103, <20 x float> poison, <4 x i32> <i32 1, i32 6, i32 11, i32 16>
  %106 = shufflevector <20 x float> %103, <20 x float> poison, <4 x i32> <i32 4, i32 9, i32 14, i32 19>
  %107 = bitcast <4 x float> %106 to <4 x i32>
  %108 = fsub fast <4 x float> %105, %72
  %109 = fsub fast <4 x float> %104, %73
  %110 = fmul fast <4 x float> %109, %74
  %111 = fmul fast <4 x float> %108, %75
  %112 = fadd fast <4 x float> %111, %110
  %113 = fmul fast <4 x float> %112, %89
  %114 = fcmp fast ogt <4 x float> %113, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %115 = select <4 x i1> %114, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float> %113
  %116 = tail call fast <4 x float> @llvm.maxnum.v4f32(<4 x float> %115, <4 x float> zeroinitializer)
  %117 = fmul fast <4 x float> %116, %78
  %118 = fadd fast <4 x float> %117, %80
  %119 = fptosi <4 x float> %118 to <4 x i32>
  %120 = fmul fast <4 x float> %116, %82
  %121 = fadd fast <4 x float> %120, %84
  %122 = fptosi <4 x float> %121 to <4 x i32>
  %123 = fmul fast <4 x float> %116, %86
  %124 = fadd fast <4 x float> %123, %88
  %125 = fptosi <4 x float> %124 to <4 x i32>
  %126 = shl <4 x i32> %122, <i32 8, i32 8, i32 8, i32 8>
  %127 = shl <4 x i32> %125, <i32 16, i32 16, i32 16, i32 16>
  %128 = getelementptr inbounds %struct.ImDrawVert, ptr %93, i64 0, i32 2
  %129 = getelementptr inbounds %struct.ImDrawVert, ptr %96, i64 0, i32 2
  %130 = getelementptr inbounds %struct.ImDrawVert, ptr %99, i64 0, i32 2
  %131 = getelementptr inbounds %struct.ImDrawVert, ptr %102, i64 0, i32 2
  %132 = and <4 x i32> %107, <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>
  %133 = or <4 x i32> %132, %119
  %134 = or <4 x i32> %133, %126
  %135 = or <4 x i32> %134, %127
  %136 = extractelement <4 x i32> %135, i64 0
  store i32 %136, ptr %128, align 4, !tbaa !123
  %137 = extractelement <4 x i32> %135, i64 1
  store i32 %137, ptr %129, align 4, !tbaa !123
  %138 = extractelement <4 x i32> %135, i64 2
  store i32 %138, ptr %130, align 4, !tbaa !123
  %139 = extractelement <4 x i32> %135, i64 3
  store i32 %139, ptr %131, align 4, !tbaa !123
  %140 = add nuw i64 %91, 4
  %141 = icmp eq i64 %140, %69
  br i1 %141, label %142, label %90, !llvm.loop !255

142:                                              ; preds = %90
  %143 = icmp eq i64 %66, %69
  br i1 %143, label %147, label %144

144:                                              ; preds = %24, %142
  %145 = phi ptr [ %32, %24 ], [ %71, %142 ]
  %146 = fdiv fast float 1.000000e+00, %30
  br label %148

147:                                              ; preds = %148, %142, %7
  ret void

148:                                              ; preds = %144, %148
  %149 = phi ptr [ %177, %148 ], [ %145, %144 ]
  %150 = load <2 x float>, ptr %149, align 4, !tbaa !6
  %151 = fsub fast <2 x float> %150, %13
  %152 = fmul fast <2 x float> %151, %18
  %153 = shufflevector <2 x float> %152, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %154 = fadd fast <2 x float> %153, %152
  %155 = extractelement <2 x float> %154, i64 0
  %156 = fmul fast float %155, %146
  %157 = fcmp fast ogt float %156, 1.000000e+00
  %158 = select fast i1 %157, float 1.000000e+00, float %156
  %159 = tail call fast float @llvm.maxnum.f32(float %158, float 0.000000e+00)
  %160 = fmul fast float %159, %47
  %161 = fadd fast float %160, %46
  %162 = fptosi float %161 to i32
  %163 = fmul fast float %159, %49
  %164 = fadd fast float %163, %48
  %165 = fptosi float %164 to i32
  %166 = fmul fast float %159, %51
  %167 = fadd fast float %166, %50
  %168 = fptosi float %167 to i32
  %169 = shl i32 %165, 8
  %170 = shl i32 %168, 16
  %171 = getelementptr inbounds %struct.ImDrawVert, ptr %149, i64 0, i32 2
  %172 = load i32, ptr %171, align 4, !tbaa !123
  %173 = and i32 %172, -16777216
  %174 = or i32 %173, %162
  %175 = or i32 %174, %169
  %176 = or i32 %175, %170
  store i32 %176, ptr %171, align 4, !tbaa !123
  %177 = getelementptr inbounds %struct.ImDrawVert, ptr %149, i64 1
  %178 = icmp ult ptr %177, %22
  br i1 %178, label %148, label %147, !llvm.loop !256
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local noundef nonnull ptr @"??0ImFontConfig@@QEAA@XZ"(ptr noundef nonnull returned writeonly align 8 dereferenceable(136) %0) unnamed_addr #20 align 2 {
  %2 = getelementptr inbounds %struct.ImFontConfig, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %0, i8 0, i64 136, i1 false)
  store i8 1, ptr %2, align 4, !tbaa !257
  %3 = getelementptr inbounds %struct.ImFontConfig, ptr %0, i64 0, i32 5
  store i32 3, ptr %3, align 8, !tbaa !259
  %4 = getelementptr inbounds %struct.ImFontConfig, ptr %0, i64 0, i32 6
  store i32 1, ptr %4, align 4, !tbaa !260
  %5 = getelementptr inbounds %struct.ImFontConfig, ptr %0, i64 0, i32 12
  store float 0x47EFFFFFE0000000, ptr %5, align 4, !tbaa !261
  %6 = getelementptr inbounds %struct.ImFontConfig, ptr %0, i64 0, i32 15
  store float 1.000000e+00, ptr %6, align 8, !tbaa !262
  %7 = getelementptr inbounds %struct.ImFontConfig, ptr %0, i64 0, i32 16
  store i16 -1, ptr %7, align 4, !tbaa !263
  ret ptr %0
}

; Function Attrs: nofree nosync nounwind memory(write, inaccessiblemem: none) uwtable
define dso_local noundef nonnull ptr @"??0ImFontAtlas@@QEAA@XZ"(ptr noundef nonnull returned writeonly align 8 dereferenceable(1184) %0) unnamed_addr #21 align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1184) %0, i8 0, i64 1184, i1 false)
  store i32 1, ptr %2, align 4, !tbaa !264
  %3 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 21
  store i32 -1, ptr %3, align 8, !tbaa !265
  %4 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 20
  store i32 -1, ptr %4, align 4, !tbaa !266
  ret ptr %0
}

; Function Attrs: nounwind uwtable
define dso_local void @"??1ImFontAtlas@@QEAA@XZ"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0) unnamed_addr #22 align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !267, !range !268, !noundef !269
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1977)
          to label %6 unwind label %29

6:                                                ; preds = %5, %1
  invoke void @"?Clear@ImFontAtlas@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(1184) %0)
          to label %7 unwind label %29

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !270
  %10 = icmp eq ptr %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %9)
          to label %14 unwind label %12

12:                                               ; preds = %11
  %13 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %13) ]
  unreachable

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !271
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %16)
          to label %21 unwind label %19

19:                                               ; preds = %18
  %20 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %20) ]
  unreachable

21:                                               ; preds = %14, %18
  %22 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !272
  %24 = icmp eq ptr %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %23)
          to label %28 unwind label %26

26:                                               ; preds = %25
  %27 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %27) ]
  unreachable

28:                                               ; preds = %21, %25
  ret void

29:                                               ; preds = %6, %5
  %30 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %30) ]
  unreachable
}

declare dso_local void @__std_terminate() local_unnamed_addr

; Function Attrs: mustprogress uwtable
define dso_local void @"?Clear@ImFontAtlas@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0) local_unnamed_addr #7 align 2 {
  tail call void @"?ClearInputData@ImFontAtlas@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(1184) %0)
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !267, !range !268, !noundef !269
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2006)
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !273
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %8)
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %13 = load ptr, ptr %12, align 8, !tbaa !274
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %13)
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 7
  store i8 0, ptr %17, align 1, !tbaa !275
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %18 = load i8, ptr %2, align 8, !tbaa !267, !range !268, !noundef !269
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2019)
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %23 = load i32, ptr %22, align 8, !tbaa !276
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  br label %33

27:                                               ; preds = %42, %21
  %28 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !272
  %30 = icmp eq ptr %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 1
  store i32 0, ptr %32, align 4, !tbaa !277
  store i32 0, ptr %22, align 8, !tbaa !276
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %29)
  store ptr null, ptr %28, align 8, !tbaa !272
  br label %47

33:                                               ; preds = %42, %25
  %34 = phi i32 [ %23, %25 ], [ %43, %42 ]
  %35 = phi i64 [ 0, %25 ], [ %44, %42 ]
  %36 = load ptr, ptr %26, align 8, !tbaa !272
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8, !tbaa !117
  %39 = icmp eq ptr %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %33
  tail call void @"??1ImFont@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(120) %38) #39
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %38)
  %41 = load i32, ptr %22, align 8, !tbaa !276
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %34, %33 ], [ %41, %40 ]
  %44 = add nuw nsw i64 %35, 1
  %45 = sext i32 %43 to i64
  %46 = icmp slt i64 %44, %45
  br i1 %46, label %33, label %27, !llvm.loop !278

47:                                               ; preds = %27, %31
  %48 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 6
  store i8 0, ptr %48, align 8, !tbaa !279
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ClearInputData@ImFontAtlas@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !267, !range !268, !noundef !269
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1983)
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16
  %8 = load i32, ptr %7, align 8, !tbaa !280
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !270
  br label %21

13:                                               ; preds = %56, %6
  %14 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %15 = load i32, ptr %14, align 8, !tbaa !281
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %63

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %19 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %20 = load ptr, ptr %18, align 8, !tbaa !272
  br label %79

21:                                               ; preds = %10, %56
  %22 = phi ptr [ %12, %10 ], [ %57, %56 ]
  %23 = phi i32 [ %8, %10 ], [ %60, %56 ]
  %24 = phi ptr [ %12, %10 ], [ %58, %56 ]
  %25 = phi i64 [ 0, %10 ], [ %59, %56 ]
  %26 = getelementptr inbounds %struct.ImFontConfig, ptr %24, i64 %25
  %27 = load ptr, ptr %26, align 8, !tbaa !282
  %28 = icmp eq ptr %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %21
  %30 = sext i32 %23 to i64
  %31 = icmp slt i64 %25, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %33 = load ptr, ptr %11, align 8, !tbaa !270
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi ptr [ %22, %29 ], [ %33, %32 ]
  %36 = getelementptr inbounds %struct.ImFontConfig, ptr %35, i64 %25, i32 2
  %37 = load i8, ptr %36, align 4, !tbaa !257, !range !268, !noundef !269
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %34
  %40 = load i32, ptr %7, align 8
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %25, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %44 = load ptr, ptr %11, align 8, !tbaa !270
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi ptr [ %35, %39 ], [ %44, %43 ]
  %47 = getelementptr inbounds %struct.ImFontConfig, ptr %46, i64 %25
  %48 = load ptr, ptr %47, align 8, !tbaa !282
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %48)
  %49 = load i32, ptr %7, align 8
  %50 = sext i32 %49 to i64
  %51 = icmp slt i64 %25, %50
  br i1 %51, label %53, label %52

52:                                               ; preds = %45
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %53

53:                                               ; preds = %45, %52
  %54 = load ptr, ptr %11, align 8, !tbaa !270
  %55 = getelementptr inbounds %struct.ImFontConfig, ptr %54, i64 %25
  store ptr null, ptr %55, align 8, !tbaa !282
  br label %56

56:                                               ; preds = %21, %34, %53
  %57 = phi ptr [ %22, %21 ], [ %35, %34 ], [ %54, %53 ]
  %58 = phi ptr [ %24, %21 ], [ %35, %34 ], [ %54, %53 ]
  %59 = add nuw nsw i64 %25, 1
  %60 = load i32, ptr %7, align 8, !tbaa !280
  %61 = sext i32 %60 to i64
  %62 = icmp slt i64 %59, %61
  br i1 %62, label %21, label %13, !llvm.loop !283

63:                                               ; preds = %131, %13
  %64 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %65 = load ptr, ptr %64, align 8, !tbaa !270
  %66 = icmp eq ptr %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 1
  store i32 0, ptr %68, align 4, !tbaa !284
  store i32 0, ptr %7, align 8, !tbaa !285
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %65)
  store ptr null, ptr %64, align 8, !tbaa !270
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !271
  %72 = icmp eq ptr %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %75 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 1
  store i32 0, ptr %75, align 4, !tbaa !286
  store i32 0, ptr %74, align 8, !tbaa !287
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %71)
  store ptr null, ptr %70, align 8, !tbaa !271
  br label %76

76:                                               ; preds = %69, %73
  %77 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 21
  store i32 -1, ptr %77, align 8, !tbaa !265
  %78 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 20
  store i32 -1, ptr %78, align 4, !tbaa !266
  ret void

79:                                               ; preds = %17, %131
  %80 = phi ptr [ %20, %17 ], [ %132, %131 ]
  %81 = phi ptr [ %20, %17 ], [ %133, %131 ]
  %82 = phi i32 [ %15, %17 ], [ %136, %131 ]
  %83 = phi ptr [ %20, %17 ], [ %134, %131 ]
  %84 = phi i64 [ 0, %17 ], [ %135, %131 ]
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  %86 = load ptr, ptr %85, align 8, !tbaa !117
  %87 = getelementptr inbounds %struct.ImFont, ptr %86, i64 0, i32 7
  %88 = load ptr, ptr %87, align 8, !tbaa !288
  %89 = load ptr, ptr %19, align 8, !tbaa !289
  %90 = icmp ult ptr %88, %89
  br i1 %90, label %131, label %91

91:                                               ; preds = %79
  %92 = sext i32 %82 to i64
  %93 = icmp slt i64 %84, %92
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %95 = load ptr, ptr %18, align 8, !tbaa !272
  %96 = load ptr, ptr %19, align 8, !tbaa !289
  br label %97

97:                                               ; preds = %91, %94
  %98 = phi ptr [ %80, %91 ], [ %95, %94 ]
  %99 = phi ptr [ %89, %91 ], [ %96, %94 ]
  %100 = phi ptr [ %81, %91 ], [ %95, %94 ]
  %101 = getelementptr inbounds ptr, ptr %100, i64 %84
  %102 = load ptr, ptr %101, align 8, !tbaa !117
  %103 = getelementptr inbounds %struct.ImFont, ptr %102, i64 0, i32 7
  %104 = load ptr, ptr %103, align 8, !tbaa !288
  %105 = load i32, ptr %7, align 8, !tbaa !280
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %struct.ImFontConfig, ptr %99, i64 %106
  %108 = icmp ult ptr %104, %107
  br i1 %108, label %109, label %131

109:                                              ; preds = %97
  %110 = load i32, ptr %14, align 8
  %111 = sext i32 %110 to i64
  %112 = icmp slt i64 %84, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %114 = load ptr, ptr %18, align 8, !tbaa !272
  %115 = getelementptr inbounds ptr, ptr %114, i64 %84
  %116 = load ptr, ptr %115, align 8, !tbaa !117
  br label %117

117:                                              ; preds = %109, %113
  %118 = phi ptr [ %98, %109 ], [ %114, %113 ]
  %119 = phi ptr [ %102, %109 ], [ %116, %113 ]
  %120 = getelementptr inbounds %struct.ImFont, ptr %119, i64 0, i32 7
  store ptr null, ptr %120, align 8, !tbaa !288
  %121 = load i32, ptr %14, align 8
  %122 = sext i32 %121 to i64
  %123 = icmp slt i64 %84, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %117
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %125 = load ptr, ptr %18, align 8, !tbaa !272
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi ptr [ %118, %117 ], [ %125, %124 ]
  %128 = getelementptr inbounds ptr, ptr %127, i64 %84
  %129 = load ptr, ptr %128, align 8, !tbaa !117
  %130 = getelementptr inbounds %struct.ImFont, ptr %129, i64 0, i32 8
  store i16 0, ptr %130, align 8, !tbaa !290
  br label %131

131:                                              ; preds = %79, %97, %126
  %132 = phi ptr [ %80, %79 ], [ %98, %97 ], [ %127, %126 ]
  %133 = phi ptr [ %81, %79 ], [ %100, %97 ], [ %127, %126 ]
  %134 = phi ptr [ %83, %79 ], [ %100, %97 ], [ %127, %126 ]
  %135 = add nuw nsw i64 %84, 1
  %136 = load i32, ptr %14, align 8, !tbaa !281
  %137 = sext i32 %136 to i64
  %138 = icmp slt i64 %135, %137
  br i1 %138, label %79, label %63, !llvm.loop !291
}

declare dso_local void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress uwtable
define dso_local void @"?ClearTexData@ImFontAtlas@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !267, !range !268, !noundef !269
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2006)
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !273
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %8)
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %13 = load ptr, ptr %12, align 8, !tbaa !274
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %13)
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 7
  store i8 0, ptr %17, align 1, !tbaa !275
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ClearFonts@ImFontAtlas@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !267, !range !268, !noundef !269
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2019)
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %8 = load i32, ptr %7, align 8, !tbaa !276
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  br label %18

12:                                               ; preds = %27, %6
  %13 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !272
  %15 = icmp eq ptr %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 1
  store i32 0, ptr %17, align 4, !tbaa !277
  store i32 0, ptr %7, align 8, !tbaa !276
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %14)
  store ptr null, ptr %13, align 8, !tbaa !272
  br label %32

18:                                               ; preds = %27, %10
  %19 = phi i32 [ %8, %10 ], [ %28, %27 ]
  %20 = phi i64 [ 0, %10 ], [ %29, %27 ]
  %21 = load ptr, ptr %11, align 8, !tbaa !272
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8, !tbaa !117
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  tail call void @"??1ImFont@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(120) %23) #39
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %23)
  %26 = load i32, ptr %7, align 8, !tbaa !276
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %19, %18 ], [ %26, %25 ]
  %29 = add nuw nsw i64 %20, 1
  %30 = sext i32 %28 to i64
  %31 = icmp slt i64 %29, %30
  br i1 %31, label %18, label %12, !llvm.loop !278

32:                                               ; preds = %12, %16
  %33 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 6
  store i8 0, ptr %33, align 8, !tbaa !279
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?GetTexDataAsAlpha8@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr nocapture noundef writeonly %1, ptr noundef writeonly %2, ptr noundef writeonly %3, ptr noundef writeonly %4) local_unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !273
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call noundef zeroext i1 @"?Build@ImFontAtlas@@QEAA_NXZ"(ptr noundef nonnull align 8 dereferenceable(1184) %0)
  %11 = load ptr, ptr %6, align 8, !tbaa !273
  br label %12

12:                                               ; preds = %9, %5
  %13 = phi ptr [ %11, %9 ], [ %7, %5 ]
  store ptr %13, ptr %1, align 8, !tbaa !117
  %14 = icmp eq ptr %2, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %17 = load i32, ptr %16, align 8, !tbaa !292
  store i32 %17, ptr %2, align 4, !tbaa !105
  br label %18

18:                                               ; preds = %15, %12
  %19 = icmp eq ptr %3, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %22 = load i32, ptr %21, align 4, !tbaa !293
  store i32 %22, ptr %3, align 4, !tbaa !105
  br label %23

23:                                               ; preds = %20, %18
  %24 = icmp eq ptr %4, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %23
  store i32 1, ptr %4, align 4, !tbaa !105
  br label %26

26:                                               ; preds = %25, %23
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef zeroext i1 @"?Build@ImFontAtlas@@QEAA_NXZ"(ptr noundef nonnull align 8 dereferenceable(1184) %0) local_unnamed_addr #7 align 2 {
  %2 = alloca %struct.ImFontConfig, align 8
  %3 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %4 = load i8, ptr %3, align 8, !tbaa !267, !range !268, !noundef !269
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2255)
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16
  %9 = load i32, ptr %8, align 8, !tbaa !280
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %2) #39
  %12 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %2, i8 0, i64 136, i1 false)
  store i8 1, ptr %12, align 4, !tbaa !257
  %13 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 5
  %14 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 6
  %15 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 12
  store float 0x47EFFFFFE0000000, ptr %15, align 4, !tbaa !261
  %16 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 15
  store float 1.000000e+00, ptr %16, align 8, !tbaa !262
  %17 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 16
  store i16 -1, ptr %17, align 4, !tbaa !263
  store i32 1, ptr %14, align 4, !tbaa !260
  store i32 1, ptr %13, align 8, !tbaa !259
  %18 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 7
  store i8 1, ptr %18, align 8, !tbaa !294
  %19 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 4
  store float 1.300000e+01, ptr %19, align 4, !tbaa !295
  %20 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 17
  %21 = call noundef i32 (ptr, i64, ptr, ...) @"?ImFormatString@@YAHPEAD_KPEBDZZ"(ptr noundef nonnull %20, i64 noundef 40, ptr noundef nonnull @"??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx?$AA@", i32 noundef 13)
  %22 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 10
  %23 = load ptr, ptr %22, align 8, !tbaa !296
  %24 = load float, ptr %19, align 4, !tbaa !295
  store i16 133, ptr %17, align 4, !tbaa !263
  %25 = fmul fast float %24, 0x3FB3B13B20000000
  %26 = fptosi float %25 to i32
  %27 = sitofp i32 %26 to float
  %28 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 9, i32 1
  store float %27, ptr %28, align 8, !tbaa !297
  %29 = icmp eq ptr %23, null
  %30 = select i1 %29, ptr @"?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB", ptr %23
  %31 = call noundef ptr @"?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef nonnull @proggy_clean_ttf_compressed_data_base85, float noundef %24, ptr noundef nonnull %2, ptr noundef nonnull %30)
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %2) #39
  br label %32

32:                                               ; preds = %11, %7
  %33 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 18
  %34 = load ptr, ptr %33, align 8, !tbaa !298
  %35 = icmp eq ptr %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = load ptr, ptr %34, align 8, !tbaa !299
  br label %39

38:                                               ; preds = %32
  store ptr @"?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z", ptr @"?io@?1??ImFontAtlasGetBuilderForStbTruetype@@YAPEBUImFontBuilderIO@@XZ@4U2@A", align 8, !tbaa !299
  br label %39

39:                                               ; preds = %36, %38
  %40 = phi ptr [ @"?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z", %38 ], [ %37, %36 ]
  %41 = call noundef zeroext i1 %40(ptr noundef nonnull %0)
  ret i1 %41
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?GetTexDataAsRGBA32@ImFontAtlas@@QEAAXPEAPEAEPEAH11@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr nocapture noundef writeonly %1, ptr noundef writeonly %2, ptr noundef writeonly %3, ptr noundef writeonly %4) local_unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %92

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !273
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = tail call noundef zeroext i1 @"?Build@ImFontAtlas@@QEAA_NXZ"(ptr noundef nonnull align 8 dereferenceable(1184) %0)
  %15 = load ptr, ptr %10, align 8, !tbaa !273
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = load ptr, ptr %6, align 8, !tbaa !274
  br label %92

19:                                               ; preds = %9, %13
  %20 = phi ptr [ %15, %13 ], [ %11, %9 ]
  %21 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %22 = load i32, ptr %21, align 8, !tbaa !292
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %25 = load i32, ptr %24, align 4, !tbaa !293
  %26 = sext i32 %25 to i64
  %27 = shl nsw i64 %23, 2
  %28 = mul i64 %27, %26
  %29 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %28)
  store ptr %29, ptr %6, align 8, !tbaa !274
  %30 = load i32, ptr %21, align 8, !tbaa !292
  %31 = load i32, ptr %24, align 4, !tbaa !293
  %32 = mul nsw i32 %31, %30
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %92

34:                                               ; preds = %19
  %35 = add i32 %32, -1
  %36 = zext i32 %35 to i64
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i32 %32, 12
  br i1 %38, label %76, label %39

39:                                               ; preds = %34
  %40 = add i32 %32, -1
  %41 = zext i32 %40 to i64
  %42 = shl nuw nsw i64 %41, 2
  %43 = add nuw nsw i64 %42, 4
  %44 = getelementptr i8, ptr %29, i64 %43
  %45 = add nuw nsw i64 %41, 1
  %46 = getelementptr i8, ptr %20, i64 %45
  %47 = icmp ult ptr %29, %46
  %48 = icmp ult ptr %20, %44
  %49 = and i1 %47, %48
  br i1 %49, label %76, label %50

50:                                               ; preds = %39
  %51 = and i64 %37, -8
  %52 = trunc i64 %51 to i32
  %53 = sub i32 %32, %52
  %54 = shl nuw nsw i64 %51, 2
  %55 = getelementptr i8, ptr %29, i64 %54
  %56 = getelementptr i8, ptr %20, i64 %51
  br label %57

57:                                               ; preds = %57, %50
  %58 = phi i64 [ 0, %50 ], [ %72, %57 ]
  %59 = shl i64 %58, 2
  %60 = getelementptr i8, ptr %29, i64 %59
  %61 = getelementptr i8, ptr %20, i64 %58
  %62 = load <4 x i8>, ptr %61, align 1, !tbaa !46, !alias.scope !301
  %63 = getelementptr i8, ptr %61, i64 4
  %64 = load <4 x i8>, ptr %63, align 1, !tbaa !46, !alias.scope !301
  %65 = zext <4 x i8> %62 to <4 x i32>
  %66 = zext <4 x i8> %64 to <4 x i32>
  %67 = shl nuw <4 x i32> %65, <i32 24, i32 24, i32 24, i32 24>
  %68 = shl nuw <4 x i32> %66, <i32 24, i32 24, i32 24, i32 24>
  %69 = or <4 x i32> %67, <i32 16777215, i32 16777215, i32 16777215, i32 16777215>
  %70 = or <4 x i32> %68, <i32 16777215, i32 16777215, i32 16777215, i32 16777215>
  store <4 x i32> %69, ptr %60, align 4, !tbaa !105, !alias.scope !304, !noalias !301
  %71 = getelementptr i32, ptr %60, i64 4
  store <4 x i32> %70, ptr %71, align 4, !tbaa !105, !alias.scope !304, !noalias !301
  %72 = add nuw i64 %58, 8
  %73 = icmp eq i64 %72, %51
  br i1 %73, label %74, label %57, !llvm.loop !306

74:                                               ; preds = %57
  %75 = icmp eq i64 %37, %51
  br i1 %75, label %92, label %76

76:                                               ; preds = %39, %34, %74
  %77 = phi i32 [ %32, %39 ], [ %32, %34 ], [ %53, %74 ]
  %78 = phi ptr [ %29, %39 ], [ %29, %34 ], [ %55, %74 ]
  %79 = phi ptr [ %20, %39 ], [ %20, %34 ], [ %56, %74 ]
  br label %80

80:                                               ; preds = %76, %80
  %81 = phi i32 [ %90, %80 ], [ %77, %76 ]
  %82 = phi ptr [ %89, %80 ], [ %78, %76 ]
  %83 = phi ptr [ %84, %80 ], [ %79, %76 ]
  %84 = getelementptr inbounds i8, ptr %83, i64 1
  %85 = load i8, ptr %83, align 1, !tbaa !46
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = or i32 %87, 16777215
  %89 = getelementptr inbounds i32, ptr %82, i64 1
  store i32 %88, ptr %82, align 4, !tbaa !105
  %90 = add nsw i32 %81, -1
  %91 = icmp ugt i32 %81, 1
  br i1 %91, label %80, label %92, !llvm.loop !307

92:                                               ; preds = %80, %74, %17, %19, %5
  %93 = phi ptr [ %18, %17 ], [ %29, %19 ], [ %7, %5 ], [ %29, %74 ], [ %29, %80 ]
  store ptr %93, ptr %1, align 8, !tbaa !117
  %94 = icmp eq ptr %2, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %97 = load i32, ptr %96, align 8, !tbaa !292
  store i32 %97, ptr %2, align 4, !tbaa !105
  br label %98

98:                                               ; preds = %95, %92
  %99 = icmp eq ptr %3, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %102 = load i32, ptr %101, align 4, !tbaa !293
  store i32 %102, ptr %3, align 4, !tbaa !105
  br label %103

103:                                              ; preds = %100, %98
  %104 = icmp eq ptr %4, null
  br i1 %104, label %106, label %105

105:                                              ; preds = %103
  store i32 4, ptr %4, align 4, !tbaa !105
  br label %106

106:                                              ; preds = %105, %103
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr nocapture noundef readonly %1) local_unnamed_addr #7 align 2 personality ptr @__CxxFrameHandler3 {
  %3 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %4 = load i8, ptr %3, align 8, !tbaa !267, !range !268, !noundef !269
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2069)
  br label %7

7:                                                ; preds = %6, %2
  %8 = load ptr, ptr %1, align 8, !tbaa !282
  %9 = icmp eq ptr %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !308
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10, %7
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1GM@FAHJAOLI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA_@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2070)
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 4
  %17 = load float, ptr %16, align 4, !tbaa !295
  %18 = fcmp fast ogt float %17, 0.000000e+00
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DI@LEOIHPJH@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?9?$AA?$DO?$AAS?$AAi?$AAz?$AAe?$AAP?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2071)
  br label %20

20:                                               ; preds = %19, %15
  %21 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 13
  %22 = load i8, ptr %21, align 8, !tbaa !309, !range !268, !noundef !269
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %70

24:                                               ; preds = %20
  %25 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 120)
  %26 = getelementptr inbounds %struct.ImFont, ptr %25, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %25, i8 0, i64 56, i1 false)
  store i16 -1, ptr %26, align 2, !tbaa !310
  %27 = getelementptr inbounds %struct.ImFont, ptr %25, i64 0, i32 10
  store i16 -1, ptr %27, align 4, !tbaa !311
  %28 = getelementptr inbounds %struct.ImFont, ptr %25, i64 0, i32 11
  %29 = getelementptr inbounds %struct.ImFont, ptr %25, i64 0, i32 5
  %30 = getelementptr inbounds %struct.ImFont, ptr %25, i64 0, i32 15
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(26) %29, i8 0, i64 26, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(11) %28, i8 0, i64 11, i1 false)
  store float 1.000000e+00, ptr %30, align 4, !tbaa !312
  %31 = getelementptr inbounds %struct.ImFont, ptr %25, i64 0, i32 16
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %31, i8 0, i64 14, i1 false)
  %32 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %33 = load i32, ptr %32, align 8, !tbaa !276
  %34 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 1
  %35 = load i32, ptr %34, align 4, !tbaa !277
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %61

37:                                               ; preds = %24
  %38 = add nsw i32 %33, 1
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = sdiv i32 %33, 2
  %42 = add nsw i32 %41, %33
  br label %43

43:                                               ; preds = %40, %37
  %44 = phi i32 [ %42, %40 ], [ 8, %37 ]
  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 %38)
  %46 = icmp slt i32 %33, %45
  br i1 %46, label %47, label %61

47:                                               ; preds = %43
  %48 = sext i32 %45 to i64
  %49 = shl nsw i64 %48, 3
  %50 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %49)
  %51 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !272
  %53 = icmp eq ptr %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %47
  %55 = load i32, ptr %32, align 8, !tbaa !276
  %56 = sext i32 %55 to i64
  %57 = shl nsw i64 %56, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr nonnull align 8 %52, i64 %57, i1 false)
  %58 = load ptr, ptr %51, align 8, !tbaa !272
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %58)
  br label %59

59:                                               ; preds = %54, %47
  store ptr %50, ptr %51, align 8, !tbaa !272
  store i32 %45, ptr %34, align 4, !tbaa !277
  %60 = load i32, ptr %32, align 8, !tbaa !276
  br label %61

61:                                               ; preds = %24, %43, %59
  %62 = phi i32 [ %60, %59 ], [ %33, %43 ], [ %33, %24 ]
  %63 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !272
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds ptr, ptr %64, i64 %65
  %67 = ptrtoint ptr %25 to i64
  store i64 %67, ptr %66, align 8
  %68 = load i32, ptr %32, align 8, !tbaa !276
  %69 = add nsw i32 %68, 1
  store i32 %69, ptr %32, align 8, !tbaa !276
  br label %75

70:                                               ; preds = %20
  %71 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %72 = load i32, ptr %71, align 8, !tbaa !276
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1HI@KOOOLAEJ@?$AA?$CB?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?4?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAM?$AAe@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2077)
  br label %75

75:                                               ; preds = %70, %74, %61
  %76 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16
  %77 = load i32, ptr %76, align 8, !tbaa !285
  %78 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 1
  %79 = load i32, ptr %78, align 4, !tbaa !284
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %105

81:                                               ; preds = %75
  %82 = add nsw i32 %77, 1
  %83 = icmp eq i32 %77, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = sdiv i32 %77, 2
  %86 = add nsw i32 %85, %77
  br label %87

87:                                               ; preds = %84, %81
  %88 = phi i32 [ %86, %84 ], [ 8, %81 ]
  %89 = tail call i32 @llvm.smax.i32(i32 %88, i32 %82)
  %90 = icmp slt i32 %77, %89
  br i1 %90, label %91, label %105

91:                                               ; preds = %87
  %92 = sext i32 %89 to i64
  %93 = mul nsw i64 %92, 136
  %94 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %93)
  %95 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %96 = load ptr, ptr %95, align 8, !tbaa !270
  %97 = icmp eq ptr %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %91
  %99 = load i32, ptr %76, align 8, !tbaa !285
  %100 = sext i32 %99 to i64
  %101 = mul nsw i64 %100, 136
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %94, ptr nonnull align 8 %96, i64 %101, i1 false)
  %102 = load ptr, ptr %95, align 8, !tbaa !270
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %102)
  br label %103

103:                                              ; preds = %98, %91
  store ptr %94, ptr %95, align 8, !tbaa !270
  store i32 %89, ptr %78, align 4, !tbaa !284
  %104 = load i32, ptr %76, align 8, !tbaa !285
  br label %105

105:                                              ; preds = %75, %87, %103
  %106 = phi i32 [ %104, %103 ], [ %77, %87 ], [ %77, %75 ]
  %107 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !270
  %109 = sext i32 %106 to i64
  %110 = getelementptr inbounds %struct.ImFontConfig, ptr %108, i64 %109
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %110, ptr noundef nonnull align 8 dereferenceable(136) %1, i64 136, i1 false)
  %111 = load i32, ptr %76, align 8, !tbaa !285
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr %76, align 8, !tbaa !285
  %113 = icmp sgt i32 %111, -1
  br i1 %113, label %117, label %114

114:                                              ; preds = %105
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %115 = load i32, ptr %76, align 8, !tbaa !285
  %116 = add nsw i32 %115, -1
  br label %117

117:                                              ; preds = %105, %114
  %118 = phi i32 [ %116, %114 ], [ %111, %105 ]
  %119 = load ptr, ptr %107, align 8, !tbaa !270
  %120 = sext i32 %118 to i64
  %121 = getelementptr inbounds %struct.ImFontConfig, ptr %119, i64 %120
  %122 = getelementptr inbounds %struct.ImFontConfig, ptr %119, i64 %120, i32 18
  %123 = load ptr, ptr %122, align 8, !tbaa !313
  %124 = icmp eq ptr %123, null
  br i1 %124, label %125, label %139

125:                                              ; preds = %117
  %126 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %127 = load i32, ptr %126, align 8, !tbaa !276
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %130 = load i32, ptr %126, align 8, !tbaa !276
  br label %131

131:                                              ; preds = %125, %129
  %132 = phi i32 [ %130, %129 ], [ %127, %125 ]
  %133 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %134 = load ptr, ptr %133, align 8, !tbaa !272
  %135 = add nsw i32 %132, -1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds ptr, ptr %134, i64 %136
  %138 = load ptr, ptr %137, align 8, !tbaa !117
  store ptr %138, ptr %122, align 8, !tbaa !313
  br label %139

139:                                              ; preds = %131, %117
  %140 = phi ptr [ %138, %131 ], [ %123, %117 ]
  %141 = getelementptr inbounds %struct.ImFontConfig, ptr %119, i64 %120, i32 2
  %142 = load i8, ptr %141, align 4, !tbaa !257, !range !268, !noundef !269
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %153

144:                                              ; preds = %139
  %145 = getelementptr inbounds %struct.ImFontConfig, ptr %119, i64 %120, i32 1
  %146 = load i32, ptr %145, align 8, !tbaa !308
  %147 = sext i32 %146 to i64
  %148 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %147)
  store ptr %148, ptr %121, align 8, !tbaa !282
  store i8 1, ptr %141, align 4, !tbaa !257
  %149 = load ptr, ptr %1, align 8, !tbaa !282
  %150 = load i32, ptr %145, align 8, !tbaa !308
  %151 = sext i32 %150 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %148, ptr align 1 %149, i64 %151, i1 false)
  %152 = load ptr, ptr %122, align 8, !tbaa !313
  br label %153

153:                                              ; preds = %144, %139
  %154 = phi ptr [ %152, %144 ], [ %140, %139 ]
  %155 = getelementptr inbounds %struct.ImFont, ptr %154, i64 0, i32 10
  %156 = load i16, ptr %155, align 4, !tbaa !311
  %157 = icmp eq i16 %156, -1
  br i1 %157, label %158, label %161

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 16
  %160 = load i16, ptr %159, align 4, !tbaa !263
  store i16 %160, ptr %155, align 4, !tbaa !311
  br label %161

161:                                              ; preds = %158, %153
  %162 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 6
  store i8 0, ptr %162, align 8, !tbaa !279
  %163 = load i8, ptr %3, align 8, !tbaa !267, !range !268, !noundef !269
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2006)
  br label %166

166:                                              ; preds = %165, %161
  %167 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %168 = load ptr, ptr %167, align 8, !tbaa !273
  %169 = icmp eq ptr %168, null
  br i1 %169, label %171, label %170

170:                                              ; preds = %166
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %168)
  br label %171

171:                                              ; preds = %170, %166
  %172 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %173 = load ptr, ptr %172, align 8, !tbaa !274
  %174 = icmp eq ptr %173, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %171
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %173)
  br label %176

176:                                              ; preds = %171, %175
  %177 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 7
  store i8 0, ptr %177, align 1, !tbaa !275
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %167, i8 0, i64 16, i1 false)
  %178 = load ptr, ptr %122, align 8, !tbaa !313
  ret ptr %178
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local noundef nonnull ptr @"??0ImFont@@QEAA@XZ"(ptr noundef nonnull returned writeonly align 8 dereferenceable(120) %0) unnamed_addr #20 align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, i8 0, i64 56, i1 false)
  store i16 -1, ptr %2, align 2, !tbaa !310
  %3 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 10
  store i16 -1, ptr %3, align 4, !tbaa !311
  %4 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 11
  %5 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %6 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 15
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(26) %5, i8 0, i64 26, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(11) %4, i8 0, i64 11, i1 false)
  store float 1.000000e+00, ptr %6, align 4, !tbaa !312
  %7 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 16
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %7, i8 0, i64 14, i1 false)
  ret ptr %0
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?AddFontDefault@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef readonly %1) local_unnamed_addr #7 align 2 {
  %3 = alloca %struct.ImFontConfig, align 8
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %3) #39
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %3, i8 0, i64 136, i1 false)
  store i8 1, ptr %6, align 4, !tbaa !257
  %7 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 5
  %8 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 6
  %9 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 12
  store float 0x47EFFFFFE0000000, ptr %9, align 4, !tbaa !261
  %10 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 15
  store float 1.000000e+00, ptr %10, align 8, !tbaa !262
  %11 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 16
  store i16 -1, ptr %11, align 4, !tbaa !263
  store i32 1, ptr %8, align 4, !tbaa !260
  store i32 1, ptr %7, align 8, !tbaa !259
  %12 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 7
  store i8 1, ptr %12, align 8, !tbaa !294
  %13 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 4
  br label %19

14:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %3, ptr noundef nonnull align 8 dereferenceable(136) %1, i64 136, i1 false), !tbaa.struct !314
  %15 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 4
  %16 = load float, ptr %15, align 4, !tbaa !295
  %17 = fcmp fast ugt float %16, 0.000000e+00
  %18 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 4
  br i1 %17, label %21, label %19

19:                                               ; preds = %5, %14
  %20 = phi ptr [ %13, %5 ], [ %18, %14 ]
  store float 1.300000e+01, ptr %20, align 4, !tbaa !295
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi ptr [ %20, %19 ], [ %18, %14 ]
  %23 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 17
  %24 = load i8, ptr %23, align 2, !tbaa !46
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load float, ptr %22, align 4, !tbaa !295
  %28 = fptosi float %27 to i32
  %29 = call noundef i32 (ptr, i64, ptr, ...) @"?ImFormatString@@YAHPEAD_KPEBDZZ"(ptr noundef nonnull %23, i64 noundef 40, ptr noundef nonnull @"??_C@_0BG@CONABPA@ProggyClean?4ttf?0?5?$CFdpx?$AA@", i32 noundef %28)
  br label %30

30:                                               ; preds = %26, %21
  %31 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 16
  store i16 133, ptr %31, align 4, !tbaa !263
  %32 = load float, ptr %22, align 4, !tbaa !295
  %33 = fmul fast float %32, 0x3FB3B13B20000000
  %34 = fptosi float %33 to i32
  %35 = sitofp i32 %34 to float
  %36 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 9, i32 1
  store float %35, ptr %36, align 8, !tbaa !297
  %37 = getelementptr inbounds %struct.ImFontConfig, ptr %3, i64 0, i32 10
  %38 = load ptr, ptr %37, align 8, !tbaa !296
  %39 = icmp eq ptr %38, null
  %40 = select i1 %39, ptr @"?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB", ptr %38
  %41 = call noundef ptr @"?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef nonnull @proggy_clean_ttf_compressed_data_base85, float noundef %32, ptr noundef nonnull %3, ptr noundef nonnull %40)
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %3) #39
  ret ptr %41
}

declare dso_local noundef i32 @"?ImFormatString@@YAHPEAD_KPEBDZZ"(ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?AddFontFromMemoryCompressedBase85TTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr nocapture noundef readonly %1, float noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #7 align 2 {
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1)
  %7 = trunc i64 %6 to i32
  %8 = add nsw i32 %7, 4
  %9 = sdiv i32 %8, 5
  %10 = shl nsw i32 %9, 2
  %11 = sext i32 %10 to i64
  %12 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %11)
  %13 = load i8, ptr %1, align 1, !tbaa !46
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %69, label %15

15:                                               ; preds = %5, %15
  %16 = phi i8 [ %67, %15 ], [ %13, %5 ]
  %17 = phi ptr [ %66, %15 ], [ %12, %5 ]
  %18 = phi ptr [ %65, %15 ], [ %1, %5 ]
  %19 = sext i8 %16 to i32
  %20 = icmp sgt i8 %16, 91
  %21 = select i1 %20, i32 -36, i32 -35
  %22 = add nsw i32 %21, %19
  %23 = getelementptr inbounds i8, ptr %18, i64 1
  %24 = load i8, ptr %23, align 1, !tbaa !46
  %25 = sext i8 %24 to i32
  %26 = icmp sgt i8 %24, 91
  %27 = select i1 %26, i32 -36, i32 -35
  %28 = add nsw i32 %27, %25
  %29 = getelementptr inbounds i8, ptr %18, i64 2
  %30 = load i8, ptr %29, align 1, !tbaa !46
  %31 = sext i8 %30 to i32
  %32 = icmp sgt i8 %30, 91
  %33 = select i1 %32, i32 -36, i32 -35
  %34 = add nsw i32 %33, %31
  %35 = getelementptr inbounds i8, ptr %18, i64 3
  %36 = load i8, ptr %35, align 1, !tbaa !46
  %37 = sext i8 %36 to i32
  %38 = icmp sgt i8 %36, 91
  %39 = select i1 %38, i32 -36, i32 -35
  %40 = add nsw i32 %39, %37
  %41 = getelementptr inbounds i8, ptr %18, i64 4
  %42 = load i8, ptr %41, align 1, !tbaa !46
  %43 = sext i8 %42 to i32
  %44 = icmp sgt i8 %42, 91
  %45 = select i1 %44, i32 -36, i32 -35
  %46 = add nsw i32 %45, %43
  %47 = mul nsw i32 %46, 85
  %48 = add nsw i32 %40, %47
  %49 = mul nsw i32 %48, 85
  %50 = add nsw i32 %34, %49
  %51 = mul nsw i32 %50, 85
  %52 = add nsw i32 %28, %51
  %53 = mul i32 %52, 85
  %54 = add i32 %22, %53
  %55 = trunc i32 %54 to i8
  store i8 %55, ptr %17, align 1, !tbaa !46
  %56 = lshr i32 %54, 8
  %57 = trunc i32 %56 to i8
  %58 = getelementptr inbounds i8, ptr %17, i64 1
  store i8 %57, ptr %58, align 1, !tbaa !46
  %59 = lshr i32 %54, 16
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, ptr %17, i64 2
  store i8 %60, ptr %61, align 1, !tbaa !46
  %62 = lshr i32 %54, 24
  %63 = trunc i32 %62 to i8
  %64 = getelementptr inbounds i8, ptr %17, i64 3
  store i8 %63, ptr %64, align 1, !tbaa !46
  %65 = getelementptr inbounds i8, ptr %18, i64 5
  %66 = getelementptr inbounds i8, ptr %17, i64 4
  %67 = load i8, ptr %65, align 1, !tbaa !46
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %15, !llvm.loop !316

69:                                               ; preds = %15, %5
  %70 = tail call noundef ptr @"?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef %12, i32 poison, float noundef %2, ptr noundef %3, ptr noundef %4)
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %12)
  ret ptr %70
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef %1, float noundef %2, ptr noundef readonly %3, ptr noundef %4) local_unnamed_addr #7 align 2 {
  %6 = alloca %struct.ImFontConfig, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.ImFontConfig, align 8
  %9 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %10 = load i8, ptr %9, align 8, !tbaa !267, !range !268, !noundef !269
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2139)
  br label %13

13:                                               ; preds = %12, %5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  store i64 0, ptr %7, align 8, !tbaa !317
  %14 = call noundef ptr @"?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z"(ptr noundef %1, ptr noundef nonnull @"??_C@_02JDPG@rb?$AA@", ptr noundef nonnull %7, i32 noundef 0)
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KCPDJPKE@?$AA?$CI?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?5?$AAf?$AAi?$AAl?$AAe@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2144)
  br label %66

17:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %8) #39
  %18 = icmp eq ptr %3, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %8, i8 0, i64 136, i1 false)
  store i8 1, ptr %20, align 4, !tbaa !257
  %21 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 5
  store i32 3, ptr %21, align 8, !tbaa !259
  %22 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 6
  store i32 1, ptr %22, align 4, !tbaa !260
  %23 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 12
  store float 0x47EFFFFFE0000000, ptr %23, align 4, !tbaa !261
  %24 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 15
  store float 1.000000e+00, ptr %24, align 8, !tbaa !262
  %25 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 16
  store i16 -1, ptr %25, align 4, !tbaa !263
  %26 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 17
  br label %32

27:                                               ; preds = %17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %8, ptr noundef nonnull align 8 dereferenceable(136) %3, i64 136, i1 false), !tbaa.struct !314
  %28 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 17
  %29 = load i8, ptr %28, align 2, !tbaa !46
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %struct.ImFontConfig, ptr %8, i64 0, i32 17
  br i1 %30, label %32, label %45

32:                                               ; preds = %19, %27
  %33 = phi ptr [ %26, %19 ], [ %31, %27 ]
  %34 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1)
  %35 = getelementptr inbounds i8, ptr %1, i64 %34
  br label %36

36:                                               ; preds = %39, %32
  %37 = phi ptr [ %35, %32 ], [ %40, %39 ]
  %38 = icmp ugt ptr %37, %1
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, ptr %37, i64 -1
  %41 = load i8, ptr %40, align 1, !tbaa !46
  switch i8 %41, label %36 [
    i8 47, label %42
    i8 92, label %42
  ], !llvm.loop !319

42:                                               ; preds = %39, %39, %36
  %43 = fpext float %2 to double
  %44 = call noundef i32 (ptr, i64, ptr, ...) @"?ImFormatString@@YAHPEAD_KPEBDZZ"(ptr noundef nonnull %33, i64 noundef 40, ptr noundef nonnull @"??_C@_0L@EPCGLJHG@?$CFs?0?5?$CF?40fpx?$AA@", ptr noundef %37, double noundef %43)
  br label %45

45:                                               ; preds = %42, %27
  %46 = load i64, ptr %7, align 8, !tbaa !317
  %47 = trunc i64 %46 to i32
  %48 = load i8, ptr %9, align 8, !tbaa !267, !range !268, !noundef !269
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2161)
  br label %51

51:                                               ; preds = %50, %45
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %6) #39
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %6, ptr noundef nonnull align 8 dereferenceable(136) %8, i64 136, i1 false), !tbaa.struct !314
  %52 = load ptr, ptr %6, align 8, !tbaa !282
  %53 = icmp eq ptr %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @_wassert(ptr noundef nonnull @"??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2163)
  br label %55

55:                                               ; preds = %54, %51
  store ptr %14, ptr %6, align 8, !tbaa !282
  %56 = getelementptr inbounds %struct.ImFontConfig, ptr %6, i64 0, i32 1
  store i32 %47, ptr %56, align 8, !tbaa !308
  %57 = fcmp fast ogt float %2, 0.000000e+00
  %58 = getelementptr inbounds %struct.ImFontConfig, ptr %6, i64 0, i32 4
  %59 = load float, ptr %58, align 4
  %60 = select fast i1 %57, float %2, float %59
  store float %60, ptr %58, align 4, !tbaa !295
  %61 = icmp eq ptr %4, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.ImFontConfig, ptr %6, i64 0, i32 10
  store ptr %4, ptr %63, align 8, !tbaa !296
  br label %64

64:                                               ; preds = %55, %62
  %65 = call noundef ptr @"?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %6) #39
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %8) #39
  br label %66

66:                                               ; preds = %64, %16
  %67 = phi ptr [ %65, %64 ], [ null, %16 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  ret ptr %67
}

declare dso_local noundef ptr @"?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z"(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?AddFontFromMemoryTTF@ImFontAtlas@@QEAAPEAUImFont@@PEAXHMPEBUImFontConfig@@PEBG@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef %1, i32 noundef %2, float noundef %3, ptr noundef readonly %4, ptr noundef %5) local_unnamed_addr #7 align 2 {
  %7 = alloca %struct.ImFontConfig, align 8
  %8 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %9 = load i8, ptr %8, align 8, !tbaa !267, !range !268, !noundef !269
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2161)
  br label %12

12:                                               ; preds = %11, %6
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %7) #39
  %13 = icmp eq ptr %4, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 2
  %16 = getelementptr inbounds i8, ptr %7, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %16, i8 0, i64 128, i1 false)
  store i8 1, ptr %15, align 4, !tbaa !257
  %17 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 5
  store i32 3, ptr %17, align 8, !tbaa !259
  %18 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 6
  store i32 1, ptr %18, align 4, !tbaa !260
  %19 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 12
  store float 0x47EFFFFFE0000000, ptr %19, align 4, !tbaa !261
  %20 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 15
  store float 1.000000e+00, ptr %20, align 8, !tbaa !262
  %21 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 16
  store i16 -1, ptr %21, align 4, !tbaa !263
  br label %26

22:                                               ; preds = %12
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %7, ptr noundef nonnull align 8 dereferenceable(136) %4, i64 136, i1 false), !tbaa.struct !314
  %23 = load ptr, ptr %7, align 8, !tbaa !282
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2163)
  br label %26

26:                                               ; preds = %14, %25, %22
  store ptr %1, ptr %7, align 8, !tbaa !282
  %27 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 1
  store i32 %2, ptr %27, align 8, !tbaa !308
  %28 = fcmp fast ogt float %3, 0.000000e+00
  %29 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 4
  %30 = load float, ptr %29, align 4
  %31 = select fast i1 %28, float %3, float %30
  store float %31, ptr %29, align 4, !tbaa !295
  %32 = icmp eq ptr %5, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 10
  store ptr %5, ptr %34, align 8, !tbaa !296
  br label %35

35:                                               ; preds = %33, %26
  %36 = call noundef ptr @"?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef nonnull %7)
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %7) #39
  ret ptr %36
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?AddFontFromMemoryCompressedTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBXHMPEBUImFontConfig@@PEBG@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef %1, i32 %2, float noundef %3, ptr noundef readonly %4, ptr noundef %5) local_unnamed_addr #7 align 2 {
  %7 = alloca %struct.ImFontConfig, align 8
  %8 = alloca [11 x i8], align 1
  %9 = alloca [36 x i8], align 8
  %10 = alloca [50 x i8], align 2
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  %12 = load i8, ptr %11, align 1, !tbaa !46
  %13 = zext i8 %12 to i32
  %14 = shl nuw i32 %13, 24
  %15 = getelementptr inbounds i8, ptr %1, i64 9
  %16 = load i8, ptr %15, align 1, !tbaa !46
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 16
  %19 = or i32 %18, %14
  %20 = getelementptr inbounds i8, ptr %1, i64 10
  %21 = load i8, ptr %20, align 1, !tbaa !46
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 8
  %24 = or i32 %19, %23
  %25 = getelementptr inbounds i8, ptr %1, i64 11
  %26 = load i8, ptr %25, align 1, !tbaa !46
  %27 = zext i8 %26 to i32
  %28 = or i32 %24, %27
  %29 = zext i32 %28 to i64
  %30 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %29)
  %31 = load i8, ptr %1, align 1, !tbaa !46
  %32 = zext i8 %31 to i32
  %33 = shl nuw i32 %32, 24
  %34 = getelementptr inbounds i8, ptr %1, i64 1
  %35 = load i8, ptr %34, align 1, !tbaa !46
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 16
  %38 = getelementptr inbounds i8, ptr %1, i64 2
  %39 = load i8, ptr %38, align 1, !tbaa !46
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = getelementptr inbounds i8, ptr %1, i64 3
  %43 = load i8, ptr %42, align 1, !tbaa !46
  %44 = zext i8 %43 to i32
  %45 = or i32 %37, %33
  %46 = or i32 %45, %44
  %47 = or i32 %46, %41
  %48 = icmp eq i32 %47, 1471938560
  br i1 %48, label %49, label %1099

49:                                               ; preds = %6
  %50 = getelementptr inbounds i8, ptr %1, i64 4
  %51 = load i8, ptr %50, align 1, !tbaa !46
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds i8, ptr %1, i64 5
  %55 = load i8, ptr %54, align 1, !tbaa !46
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = getelementptr inbounds i8, ptr %1, i64 6
  %59 = load i8, ptr %58, align 1, !tbaa !46
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 8
  %62 = getelementptr inbounds i8, ptr %1, i64 7
  %63 = load i8, ptr %62, align 1, !tbaa !46
  %64 = zext i8 %63 to i32
  %65 = or i32 %57, %53
  %66 = or i32 %65, %64
  %67 = or i32 %66, %61
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %1099

69:                                               ; preds = %49
  %70 = load i8, ptr %11, align 1, !tbaa !46
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 24
  %73 = load i8, ptr %15, align 1, !tbaa !46
  %74 = zext i8 %73 to i64
  %75 = shl nuw nsw i64 %74, 16
  %76 = or i64 %75, %72
  %77 = load i8, ptr %20, align 1, !tbaa !46
  %78 = zext i8 %77 to i64
  %79 = shl nuw nsw i64 %78, 8
  %80 = or i64 %76, %79
  %81 = load i8, ptr %25, align 1, !tbaa !46
  %82 = zext i8 %81 to i64
  %83 = or i64 %80, %82
  store ptr %1, ptr @stb__barrier_in_b, align 8, !tbaa !117
  %84 = getelementptr inbounds i8, ptr %30, i64 %83
  store ptr %84, ptr @stb__barrier_out_e, align 8, !tbaa !117
  store ptr %30, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %85 = getelementptr inbounds i8, ptr %1, i64 16
  store ptr %30, ptr @stb__dout, align 8, !tbaa !117
  br label %86

86:                                               ; preds = %1096, %69
  %87 = phi ptr [ %30, %69 ], [ %1097, %1096 ]
  %88 = phi ptr [ %85, %69 ], [ %1092, %1096 ]
  %89 = ptrtoint ptr %87 to i64
  %90 = load i8, ptr %88, align 1, !tbaa !46
  %91 = zext i8 %90 to i32
  %92 = icmp ugt i8 %90, 31
  br i1 %92, label %93, label %401

93:                                               ; preds = %86
  %94 = icmp slt i8 %90, 0
  br i1 %94, label %95, label %210

95:                                               ; preds = %93
  %96 = add nsw i32 %91, -127
  %97 = getelementptr inbounds i8, ptr %88, i64 1
  %98 = load i8, ptr %97, align 1, !tbaa !46
  %99 = zext i8 %98 to i64
  %100 = sub nsw i64 0, %99
  %101 = getelementptr i8, ptr %87, i64 -1
  %102 = getelementptr i8, ptr %101, i64 %100
  %103 = zext i32 %96 to i64
  %104 = getelementptr inbounds i8, ptr %87, i64 %103
  %105 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %106 = icmp ugt ptr %104, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %95
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3971)
  %108 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %109 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %110

110:                                              ; preds = %107, %95
  %111 = phi ptr [ %108, %107 ], [ %87, %95 ]
  %112 = phi ptr [ %109, %107 ], [ %105, %95 ]
  %113 = ptrtoint ptr %111 to i64
  %114 = getelementptr inbounds i8, ptr %111, i64 %103
  %115 = icmp ugt ptr %114, %112
  br i1 %115, label %205, label %116

116:                                              ; preds = %110
  %117 = load ptr, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %118 = icmp ugt ptr %117, %102
  br i1 %118, label %173, label %119

119:                                              ; preds = %116
  %120 = icmp eq i32 %96, 0
  br i1 %120, label %207, label %121

121:                                              ; preds = %119
  %122 = add nsw i32 %91, -128
  %123 = zext i32 %122 to i64
  %124 = add nuw nsw i64 %123, 1
  %125 = icmp ult i32 %122, 31
  br i1 %125, label %149, label %126

126:                                              ; preds = %121
  %127 = xor i64 %99, -1
  %128 = add i64 %127, %89
  %129 = sub i64 %113, %128
  %130 = icmp ult i64 %129, 32
  br i1 %130, label %149, label %131

131:                                              ; preds = %126
  %132 = and i64 %124, -32
  %133 = getelementptr i8, ptr %102, i64 %132
  %134 = trunc i64 %132 to i32
  %135 = sub i32 %96, %134
  %136 = getelementptr i8, ptr %111, i64 %132
  br label %137

137:                                              ; preds = %137, %131
  %138 = phi i64 [ 0, %131 ], [ %145, %137 ]
  %139 = getelementptr i8, ptr %102, i64 %138
  %140 = getelementptr i8, ptr %111, i64 %138
  %141 = load <16 x i8>, ptr %139, align 1, !tbaa !46
  %142 = getelementptr i8, ptr %139, i64 16
  %143 = load <16 x i8>, ptr %142, align 1, !tbaa !46
  store <16 x i8> %141, ptr %140, align 1, !tbaa !46
  %144 = getelementptr i8, ptr %140, i64 16
  store <16 x i8> %143, ptr %144, align 1, !tbaa !46
  %145 = add nuw i64 %138, 32
  %146 = icmp eq i64 %145, %132
  br i1 %146, label %147, label %137, !llvm.loop !320

147:                                              ; preds = %137
  %148 = icmp eq i64 %124, %132
  br i1 %148, label %205, label %149

149:                                              ; preds = %126, %121, %147
  %150 = phi ptr [ %102, %126 ], [ %102, %121 ], [ %133, %147 ]
  %151 = phi i32 [ %96, %126 ], [ %96, %121 ], [ %135, %147 ]
  %152 = phi ptr [ %111, %126 ], [ %111, %121 ], [ %136, %147 ]
  %153 = add i32 %151, -1
  %154 = and i32 %151, 7
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %149, %156
  %157 = phi ptr [ %162, %156 ], [ %150, %149 ]
  %158 = phi i32 [ %161, %156 ], [ %151, %149 ]
  %159 = phi ptr [ %164, %156 ], [ %152, %149 ]
  %160 = phi i32 [ %165, %156 ], [ 0, %149 ]
  %161 = add i32 %158, -1
  %162 = getelementptr inbounds i8, ptr %157, i64 1
  %163 = load i8, ptr %157, align 1, !tbaa !46
  %164 = getelementptr inbounds i8, ptr %159, i64 1
  store i8 %163, ptr %159, align 1, !tbaa !46
  %165 = add i32 %160, 1
  %166 = icmp eq i32 %165, %154
  br i1 %166, label %167, label %156, !llvm.loop !321

167:                                              ; preds = %156, %149
  %168 = phi ptr [ undef, %149 ], [ %164, %156 ]
  %169 = phi ptr [ %150, %149 ], [ %162, %156 ]
  %170 = phi i32 [ %151, %149 ], [ %161, %156 ]
  %171 = phi ptr [ %152, %149 ], [ %164, %156 ]
  %172 = icmp ult i32 %153, 7
  br i1 %172, label %205, label %175

173:                                              ; preds = %116
  %174 = getelementptr inbounds i8, ptr %112, i64 1
  br label %205

175:                                              ; preds = %167, %175
  %176 = phi ptr [ %201, %175 ], [ %169, %167 ]
  %177 = phi i32 [ %200, %175 ], [ %170, %167 ]
  %178 = phi ptr [ %203, %175 ], [ %171, %167 ]
  %179 = getelementptr inbounds i8, ptr %176, i64 1
  %180 = load i8, ptr %176, align 1, !tbaa !46
  %181 = getelementptr inbounds i8, ptr %178, i64 1
  store i8 %180, ptr %178, align 1, !tbaa !46
  %182 = getelementptr inbounds i8, ptr %176, i64 2
  %183 = load i8, ptr %179, align 1, !tbaa !46
  %184 = getelementptr inbounds i8, ptr %178, i64 2
  store i8 %183, ptr %181, align 1, !tbaa !46
  %185 = getelementptr inbounds i8, ptr %176, i64 3
  %186 = load i8, ptr %182, align 1, !tbaa !46
  %187 = getelementptr inbounds i8, ptr %178, i64 3
  store i8 %186, ptr %184, align 1, !tbaa !46
  %188 = getelementptr inbounds i8, ptr %176, i64 4
  %189 = load i8, ptr %185, align 1, !tbaa !46
  %190 = getelementptr inbounds i8, ptr %178, i64 4
  store i8 %189, ptr %187, align 1, !tbaa !46
  %191 = getelementptr inbounds i8, ptr %176, i64 5
  %192 = load i8, ptr %188, align 1, !tbaa !46
  %193 = getelementptr inbounds i8, ptr %178, i64 5
  store i8 %192, ptr %190, align 1, !tbaa !46
  %194 = getelementptr inbounds i8, ptr %176, i64 6
  %195 = load i8, ptr %191, align 1, !tbaa !46
  %196 = getelementptr inbounds i8, ptr %178, i64 6
  store i8 %195, ptr %193, align 1, !tbaa !46
  %197 = getelementptr inbounds i8, ptr %176, i64 7
  %198 = load i8, ptr %194, align 1, !tbaa !46
  %199 = getelementptr inbounds i8, ptr %178, i64 7
  store i8 %198, ptr %196, align 1, !tbaa !46
  %200 = add i32 %177, -8
  %201 = getelementptr inbounds i8, ptr %176, i64 8
  %202 = load i8, ptr %197, align 1, !tbaa !46
  %203 = getelementptr inbounds i8, ptr %178, i64 8
  store i8 %202, ptr %199, align 1, !tbaa !46
  %204 = icmp eq i32 %200, 0
  br i1 %204, label %205, label %175, !llvm.loop !322

205:                                              ; preds = %167, %175, %147, %173, %110
  %206 = phi ptr [ %174, %173 ], [ %114, %110 ], [ %136, %147 ], [ %168, %167 ], [ %203, %175 ]
  store ptr %206, ptr @stb__dout, align 8, !tbaa !117
  br label %207

207:                                              ; preds = %205, %119
  %208 = phi ptr [ %206, %205 ], [ %111, %119 ]
  %209 = getelementptr inbounds i8, ptr %88, i64 2
  br label %1090

210:                                              ; preds = %93
  %211 = icmp ugt i8 %90, 63
  br i1 %211, label %212, label %375

212:                                              ; preds = %210
  %213 = getelementptr inbounds i8, ptr %88, i64 2
  %214 = load i8, ptr %213, align 1, !tbaa !46
  %215 = zext i8 %214 to i32
  %216 = add nuw nsw i32 %215, 1
  %217 = shl nuw nsw i32 %91, 8
  %218 = getelementptr inbounds i8, ptr %88, i64 1
  %219 = load i8, ptr %218, align 1, !tbaa !46
  %220 = zext i8 %219 to i32
  %221 = or i32 %217, %220
  %222 = add nsw i32 %221, -16383
  %223 = zext i32 %222 to i64
  %224 = sub nsw i64 0, %223
  %225 = getelementptr i8, ptr %87, i64 %224
  %226 = zext i32 %216 to i64
  %227 = getelementptr inbounds i8, ptr %87, i64 %226
  %228 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %229 = icmp ugt ptr %227, %228
  br i1 %229, label %230, label %233

230:                                              ; preds = %212
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3971)
  %231 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %232 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %233

233:                                              ; preds = %230, %212
  %234 = phi ptr [ %232, %230 ], [ %228, %212 ]
  %235 = phi ptr [ %231, %230 ], [ %87, %212 ]
  %236 = ptrtoint ptr %235 to i64
  %237 = getelementptr inbounds i8, ptr %235, i64 %226
  %238 = icmp ugt ptr %237, %234
  br i1 %238, label %372, label %239

239:                                              ; preds = %233
  %240 = load ptr, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %241 = icmp ugt ptr %240, %225
  br i1 %241, label %340, label %242

242:                                              ; preds = %239
  %243 = icmp ult i8 %214, 31
  br i1 %243, label %316, label %244

244:                                              ; preds = %242
  %245 = sub i64 %223, %89
  %246 = add i64 %245, %236
  %247 = icmp ult i64 %246, 32
  br i1 %247, label %316, label %248

248:                                              ; preds = %244
  %249 = and i64 %226, 480
  %250 = getelementptr i8, ptr %225, i64 %249
  %251 = trunc i64 %249 to i32
  %252 = sub nsw i32 %216, %251
  %253 = getelementptr i8, ptr %235, i64 %249
  %254 = load <16 x i8>, ptr %225, align 1, !tbaa !46
  %255 = getelementptr i8, ptr %225, i64 16
  %256 = load <16 x i8>, ptr %255, align 1, !tbaa !46
  store <16 x i8> %254, ptr %235, align 1, !tbaa !46
  %257 = getelementptr i8, ptr %235, i64 16
  store <16 x i8> %256, ptr %257, align 1, !tbaa !46
  %258 = icmp eq i64 %249, 32
  br i1 %258, label %314, label %259, !llvm.loop !323

259:                                              ; preds = %248
  %260 = getelementptr i8, ptr %225, i64 32
  %261 = getelementptr i8, ptr %235, i64 32
  %262 = load <16 x i8>, ptr %260, align 1, !tbaa !46
  %263 = getelementptr i8, ptr %260, i64 16
  %264 = load <16 x i8>, ptr %263, align 1, !tbaa !46
  store <16 x i8> %262, ptr %261, align 1, !tbaa !46
  %265 = getelementptr i8, ptr %235, i64 48
  store <16 x i8> %264, ptr %265, align 1, !tbaa !46
  %266 = icmp eq i64 %249, 64
  br i1 %266, label %314, label %267, !llvm.loop !323

267:                                              ; preds = %259
  %268 = getelementptr i8, ptr %225, i64 64
  %269 = getelementptr i8, ptr %235, i64 64
  %270 = load <16 x i8>, ptr %268, align 1, !tbaa !46
  %271 = getelementptr i8, ptr %268, i64 16
  %272 = load <16 x i8>, ptr %271, align 1, !tbaa !46
  store <16 x i8> %270, ptr %269, align 1, !tbaa !46
  %273 = getelementptr i8, ptr %235, i64 80
  store <16 x i8> %272, ptr %273, align 1, !tbaa !46
  %274 = icmp eq i64 %249, 96
  br i1 %274, label %314, label %275, !llvm.loop !323

275:                                              ; preds = %267
  %276 = getelementptr i8, ptr %225, i64 96
  %277 = getelementptr i8, ptr %235, i64 96
  %278 = load <16 x i8>, ptr %276, align 1, !tbaa !46
  %279 = getelementptr i8, ptr %276, i64 16
  %280 = load <16 x i8>, ptr %279, align 1, !tbaa !46
  store <16 x i8> %278, ptr %277, align 1, !tbaa !46
  %281 = getelementptr i8, ptr %235, i64 112
  store <16 x i8> %280, ptr %281, align 1, !tbaa !46
  %282 = icmp eq i64 %249, 128
  br i1 %282, label %314, label %283, !llvm.loop !323

283:                                              ; preds = %275
  %284 = getelementptr i8, ptr %225, i64 128
  %285 = getelementptr i8, ptr %235, i64 128
  %286 = load <16 x i8>, ptr %284, align 1, !tbaa !46
  %287 = getelementptr i8, ptr %284, i64 16
  %288 = load <16 x i8>, ptr %287, align 1, !tbaa !46
  store <16 x i8> %286, ptr %285, align 1, !tbaa !46
  %289 = getelementptr i8, ptr %235, i64 144
  store <16 x i8> %288, ptr %289, align 1, !tbaa !46
  %290 = icmp eq i64 %249, 160
  br i1 %290, label %314, label %291, !llvm.loop !323

291:                                              ; preds = %283
  %292 = getelementptr i8, ptr %225, i64 160
  %293 = getelementptr i8, ptr %235, i64 160
  %294 = load <16 x i8>, ptr %292, align 1, !tbaa !46
  %295 = getelementptr i8, ptr %292, i64 16
  %296 = load <16 x i8>, ptr %295, align 1, !tbaa !46
  store <16 x i8> %294, ptr %293, align 1, !tbaa !46
  %297 = getelementptr i8, ptr %235, i64 176
  store <16 x i8> %296, ptr %297, align 1, !tbaa !46
  %298 = icmp eq i64 %249, 192
  br i1 %298, label %314, label %299, !llvm.loop !323

299:                                              ; preds = %291
  %300 = getelementptr i8, ptr %225, i64 192
  %301 = getelementptr i8, ptr %235, i64 192
  %302 = load <16 x i8>, ptr %300, align 1, !tbaa !46
  %303 = getelementptr i8, ptr %300, i64 16
  %304 = load <16 x i8>, ptr %303, align 1, !tbaa !46
  store <16 x i8> %302, ptr %301, align 1, !tbaa !46
  %305 = getelementptr i8, ptr %235, i64 208
  store <16 x i8> %304, ptr %305, align 1, !tbaa !46
  %306 = icmp eq i64 %249, 224
  br i1 %306, label %314, label %307, !llvm.loop !323

307:                                              ; preds = %299
  %308 = getelementptr i8, ptr %225, i64 224
  %309 = getelementptr i8, ptr %235, i64 224
  %310 = load <16 x i8>, ptr %308, align 1, !tbaa !46
  %311 = getelementptr i8, ptr %308, i64 16
  %312 = load <16 x i8>, ptr %311, align 1, !tbaa !46
  store <16 x i8> %310, ptr %309, align 1, !tbaa !46
  %313 = getelementptr i8, ptr %235, i64 240
  store <16 x i8> %312, ptr %313, align 1, !tbaa !46
  br label %314

314:                                              ; preds = %307, %299, %291, %283, %275, %267, %259, %248
  %315 = icmp eq i64 %249, %226
  br i1 %315, label %372, label %316

316:                                              ; preds = %244, %242, %314
  %317 = phi ptr [ %225, %244 ], [ %225, %242 ], [ %250, %314 ]
  %318 = phi i32 [ %216, %244 ], [ %216, %242 ], [ %252, %314 ]
  %319 = phi ptr [ %235, %244 ], [ %235, %242 ], [ %253, %314 ]
  %320 = add nsw i32 %318, -1
  %321 = and i32 %318, 7
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %334, label %323

323:                                              ; preds = %316, %323
  %324 = phi ptr [ %329, %323 ], [ %317, %316 ]
  %325 = phi i32 [ %328, %323 ], [ %318, %316 ]
  %326 = phi ptr [ %331, %323 ], [ %319, %316 ]
  %327 = phi i32 [ %332, %323 ], [ 0, %316 ]
  %328 = add nsw i32 %325, -1
  %329 = getelementptr inbounds i8, ptr %324, i64 1
  %330 = load i8, ptr %324, align 1, !tbaa !46
  %331 = getelementptr inbounds i8, ptr %326, i64 1
  store i8 %330, ptr %326, align 1, !tbaa !46
  %332 = add i32 %327, 1
  %333 = icmp eq i32 %332, %321
  br i1 %333, label %334, label %323, !llvm.loop !324

334:                                              ; preds = %323, %316
  %335 = phi ptr [ undef, %316 ], [ %331, %323 ]
  %336 = phi ptr [ %317, %316 ], [ %329, %323 ]
  %337 = phi i32 [ %318, %316 ], [ %328, %323 ]
  %338 = phi ptr [ %319, %316 ], [ %331, %323 ]
  %339 = icmp ult i32 %320, 7
  br i1 %339, label %372, label %342

340:                                              ; preds = %239
  %341 = getelementptr inbounds i8, ptr %234, i64 1
  br label %372

342:                                              ; preds = %334, %342
  %343 = phi ptr [ %368, %342 ], [ %336, %334 ]
  %344 = phi i32 [ %367, %342 ], [ %337, %334 ]
  %345 = phi ptr [ %370, %342 ], [ %338, %334 ]
  %346 = getelementptr inbounds i8, ptr %343, i64 1
  %347 = load i8, ptr %343, align 1, !tbaa !46
  %348 = getelementptr inbounds i8, ptr %345, i64 1
  store i8 %347, ptr %345, align 1, !tbaa !46
  %349 = getelementptr inbounds i8, ptr %343, i64 2
  %350 = load i8, ptr %346, align 1, !tbaa !46
  %351 = getelementptr inbounds i8, ptr %345, i64 2
  store i8 %350, ptr %348, align 1, !tbaa !46
  %352 = getelementptr inbounds i8, ptr %343, i64 3
  %353 = load i8, ptr %349, align 1, !tbaa !46
  %354 = getelementptr inbounds i8, ptr %345, i64 3
  store i8 %353, ptr %351, align 1, !tbaa !46
  %355 = getelementptr inbounds i8, ptr %343, i64 4
  %356 = load i8, ptr %352, align 1, !tbaa !46
  %357 = getelementptr inbounds i8, ptr %345, i64 4
  store i8 %356, ptr %354, align 1, !tbaa !46
  %358 = getelementptr inbounds i8, ptr %343, i64 5
  %359 = load i8, ptr %355, align 1, !tbaa !46
  %360 = getelementptr inbounds i8, ptr %345, i64 5
  store i8 %359, ptr %357, align 1, !tbaa !46
  %361 = getelementptr inbounds i8, ptr %343, i64 6
  %362 = load i8, ptr %358, align 1, !tbaa !46
  %363 = getelementptr inbounds i8, ptr %345, i64 6
  store i8 %362, ptr %360, align 1, !tbaa !46
  %364 = getelementptr inbounds i8, ptr %343, i64 7
  %365 = load i8, ptr %361, align 1, !tbaa !46
  %366 = getelementptr inbounds i8, ptr %345, i64 7
  store i8 %365, ptr %363, align 1, !tbaa !46
  %367 = add nsw i32 %344, -8
  %368 = getelementptr inbounds i8, ptr %343, i64 8
  %369 = load i8, ptr %364, align 1, !tbaa !46
  %370 = getelementptr inbounds i8, ptr %345, i64 8
  store i8 %369, ptr %366, align 1, !tbaa !46
  %371 = icmp eq i32 %367, 0
  br i1 %371, label %372, label %342, !llvm.loop !325

372:                                              ; preds = %334, %342, %314, %340, %233
  %373 = phi ptr [ %341, %340 ], [ %237, %233 ], [ %253, %314 ], [ %335, %334 ], [ %370, %342 ]
  store ptr %373, ptr @stb__dout, align 8, !tbaa !117
  %374 = getelementptr inbounds i8, ptr %88, i64 3
  br label %1090

375:                                              ; preds = %210
  %376 = add nsw i32 %91, -31
  %377 = getelementptr inbounds i8, ptr %88, i64 1
  %378 = zext i32 %376 to i64
  %379 = getelementptr inbounds i8, ptr %87, i64 %378
  %380 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %381 = icmp ugt ptr %379, %380
  br i1 %381, label %382, label %385

382:                                              ; preds = %375
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3979)
  %383 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %384 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %385

385:                                              ; preds = %382, %375
  %386 = phi ptr [ %384, %382 ], [ %380, %375 ]
  %387 = phi ptr [ %383, %382 ], [ %87, %375 ]
  %388 = getelementptr inbounds i8, ptr %387, i64 %378
  %389 = icmp ugt ptr %388, %386
  br i1 %389, label %396, label %390

390:                                              ; preds = %385
  %391 = load ptr, ptr @stb__barrier_in_b, align 8, !tbaa !117
  %392 = icmp ugt ptr %391, %377
  br i1 %392, label %393, label %395

393:                                              ; preds = %390
  %394 = getelementptr inbounds i8, ptr %386, i64 1
  br label %396

395:                                              ; preds = %390
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %387, ptr nonnull align 1 %377, i64 %378, i1 false)
  br label %396

396:                                              ; preds = %395, %393, %385
  %397 = phi ptr [ %388, %395 ], [ %394, %393 ], [ %388, %385 ]
  store ptr %397, ptr @stb__dout, align 8, !tbaa !117
  %398 = load i8, ptr %88, align 1, !tbaa !46
  %399 = zext i8 %398 to i64
  %400 = add nsw i64 %399, -30
  br label %1072

401:                                              ; preds = %86
  %402 = icmp ugt i8 %90, 23
  br i1 %402, label %403, label %571

403:                                              ; preds = %401
  %404 = getelementptr inbounds i8, ptr %88, i64 3
  %405 = load i8, ptr %404, align 1, !tbaa !46
  %406 = zext i8 %405 to i32
  %407 = add nuw nsw i32 %406, 1
  %408 = shl nuw nsw i32 %91, 16
  %409 = getelementptr inbounds i8, ptr %88, i64 1
  %410 = load i8, ptr %409, align 1, !tbaa !46
  %411 = zext i8 %410 to i32
  %412 = shl nuw nsw i32 %411, 8
  %413 = getelementptr inbounds i8, ptr %88, i64 2
  %414 = load i8, ptr %413, align 1, !tbaa !46
  %415 = zext i8 %414 to i32
  %416 = or i32 %408, %415
  %417 = or i32 %416, %412
  %418 = add nsw i32 %417, -1572863
  %419 = zext i32 %418 to i64
  %420 = sub nsw i64 0, %419
  %421 = getelementptr i8, ptr %87, i64 %420
  %422 = zext i32 %407 to i64
  %423 = getelementptr inbounds i8, ptr %87, i64 %422
  %424 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %425 = icmp ugt ptr %423, %424
  br i1 %425, label %426, label %429

426:                                              ; preds = %403
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3971)
  %427 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %428 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %429

429:                                              ; preds = %426, %403
  %430 = phi ptr [ %428, %426 ], [ %424, %403 ]
  %431 = phi ptr [ %427, %426 ], [ %87, %403 ]
  %432 = ptrtoint ptr %431 to i64
  %433 = getelementptr inbounds i8, ptr %431, i64 %422
  %434 = icmp ugt ptr %433, %430
  br i1 %434, label %568, label %435

435:                                              ; preds = %429
  %436 = load ptr, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %437 = icmp ugt ptr %436, %421
  br i1 %437, label %536, label %438

438:                                              ; preds = %435
  %439 = icmp ult i8 %405, 31
  br i1 %439, label %512, label %440

440:                                              ; preds = %438
  %441 = sub i64 %419, %89
  %442 = add i64 %441, %432
  %443 = icmp ult i64 %442, 32
  br i1 %443, label %512, label %444

444:                                              ; preds = %440
  %445 = and i64 %422, 480
  %446 = getelementptr i8, ptr %421, i64 %445
  %447 = trunc i64 %445 to i32
  %448 = sub nsw i32 %407, %447
  %449 = getelementptr i8, ptr %431, i64 %445
  %450 = load <16 x i8>, ptr %421, align 1, !tbaa !46
  %451 = getelementptr i8, ptr %421, i64 16
  %452 = load <16 x i8>, ptr %451, align 1, !tbaa !46
  store <16 x i8> %450, ptr %431, align 1, !tbaa !46
  %453 = getelementptr i8, ptr %431, i64 16
  store <16 x i8> %452, ptr %453, align 1, !tbaa !46
  %454 = icmp eq i64 %445, 32
  br i1 %454, label %510, label %455, !llvm.loop !326

455:                                              ; preds = %444
  %456 = getelementptr i8, ptr %421, i64 32
  %457 = getelementptr i8, ptr %431, i64 32
  %458 = load <16 x i8>, ptr %456, align 1, !tbaa !46
  %459 = getelementptr i8, ptr %456, i64 16
  %460 = load <16 x i8>, ptr %459, align 1, !tbaa !46
  store <16 x i8> %458, ptr %457, align 1, !tbaa !46
  %461 = getelementptr i8, ptr %431, i64 48
  store <16 x i8> %460, ptr %461, align 1, !tbaa !46
  %462 = icmp eq i64 %445, 64
  br i1 %462, label %510, label %463, !llvm.loop !326

463:                                              ; preds = %455
  %464 = getelementptr i8, ptr %421, i64 64
  %465 = getelementptr i8, ptr %431, i64 64
  %466 = load <16 x i8>, ptr %464, align 1, !tbaa !46
  %467 = getelementptr i8, ptr %464, i64 16
  %468 = load <16 x i8>, ptr %467, align 1, !tbaa !46
  store <16 x i8> %466, ptr %465, align 1, !tbaa !46
  %469 = getelementptr i8, ptr %431, i64 80
  store <16 x i8> %468, ptr %469, align 1, !tbaa !46
  %470 = icmp eq i64 %445, 96
  br i1 %470, label %510, label %471, !llvm.loop !326

471:                                              ; preds = %463
  %472 = getelementptr i8, ptr %421, i64 96
  %473 = getelementptr i8, ptr %431, i64 96
  %474 = load <16 x i8>, ptr %472, align 1, !tbaa !46
  %475 = getelementptr i8, ptr %472, i64 16
  %476 = load <16 x i8>, ptr %475, align 1, !tbaa !46
  store <16 x i8> %474, ptr %473, align 1, !tbaa !46
  %477 = getelementptr i8, ptr %431, i64 112
  store <16 x i8> %476, ptr %477, align 1, !tbaa !46
  %478 = icmp eq i64 %445, 128
  br i1 %478, label %510, label %479, !llvm.loop !326

479:                                              ; preds = %471
  %480 = getelementptr i8, ptr %421, i64 128
  %481 = getelementptr i8, ptr %431, i64 128
  %482 = load <16 x i8>, ptr %480, align 1, !tbaa !46
  %483 = getelementptr i8, ptr %480, i64 16
  %484 = load <16 x i8>, ptr %483, align 1, !tbaa !46
  store <16 x i8> %482, ptr %481, align 1, !tbaa !46
  %485 = getelementptr i8, ptr %431, i64 144
  store <16 x i8> %484, ptr %485, align 1, !tbaa !46
  %486 = icmp eq i64 %445, 160
  br i1 %486, label %510, label %487, !llvm.loop !326

487:                                              ; preds = %479
  %488 = getelementptr i8, ptr %421, i64 160
  %489 = getelementptr i8, ptr %431, i64 160
  %490 = load <16 x i8>, ptr %488, align 1, !tbaa !46
  %491 = getelementptr i8, ptr %488, i64 16
  %492 = load <16 x i8>, ptr %491, align 1, !tbaa !46
  store <16 x i8> %490, ptr %489, align 1, !tbaa !46
  %493 = getelementptr i8, ptr %431, i64 176
  store <16 x i8> %492, ptr %493, align 1, !tbaa !46
  %494 = icmp eq i64 %445, 192
  br i1 %494, label %510, label %495, !llvm.loop !326

495:                                              ; preds = %487
  %496 = getelementptr i8, ptr %421, i64 192
  %497 = getelementptr i8, ptr %431, i64 192
  %498 = load <16 x i8>, ptr %496, align 1, !tbaa !46
  %499 = getelementptr i8, ptr %496, i64 16
  %500 = load <16 x i8>, ptr %499, align 1, !tbaa !46
  store <16 x i8> %498, ptr %497, align 1, !tbaa !46
  %501 = getelementptr i8, ptr %431, i64 208
  store <16 x i8> %500, ptr %501, align 1, !tbaa !46
  %502 = icmp eq i64 %445, 224
  br i1 %502, label %510, label %503, !llvm.loop !326

503:                                              ; preds = %495
  %504 = getelementptr i8, ptr %421, i64 224
  %505 = getelementptr i8, ptr %431, i64 224
  %506 = load <16 x i8>, ptr %504, align 1, !tbaa !46
  %507 = getelementptr i8, ptr %504, i64 16
  %508 = load <16 x i8>, ptr %507, align 1, !tbaa !46
  store <16 x i8> %506, ptr %505, align 1, !tbaa !46
  %509 = getelementptr i8, ptr %431, i64 240
  store <16 x i8> %508, ptr %509, align 1, !tbaa !46
  br label %510

510:                                              ; preds = %503, %495, %487, %479, %471, %463, %455, %444
  %511 = icmp eq i64 %445, %422
  br i1 %511, label %568, label %512

512:                                              ; preds = %440, %438, %510
  %513 = phi ptr [ %421, %440 ], [ %421, %438 ], [ %446, %510 ]
  %514 = phi i32 [ %407, %440 ], [ %407, %438 ], [ %448, %510 ]
  %515 = phi ptr [ %431, %440 ], [ %431, %438 ], [ %449, %510 ]
  %516 = add nsw i32 %514, -1
  %517 = and i32 %514, 7
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %530, label %519

519:                                              ; preds = %512, %519
  %520 = phi ptr [ %525, %519 ], [ %513, %512 ]
  %521 = phi i32 [ %524, %519 ], [ %514, %512 ]
  %522 = phi ptr [ %527, %519 ], [ %515, %512 ]
  %523 = phi i32 [ %528, %519 ], [ 0, %512 ]
  %524 = add nsw i32 %521, -1
  %525 = getelementptr inbounds i8, ptr %520, i64 1
  %526 = load i8, ptr %520, align 1, !tbaa !46
  %527 = getelementptr inbounds i8, ptr %522, i64 1
  store i8 %526, ptr %522, align 1, !tbaa !46
  %528 = add i32 %523, 1
  %529 = icmp eq i32 %528, %517
  br i1 %529, label %530, label %519, !llvm.loop !327

530:                                              ; preds = %519, %512
  %531 = phi ptr [ undef, %512 ], [ %527, %519 ]
  %532 = phi ptr [ %513, %512 ], [ %525, %519 ]
  %533 = phi i32 [ %514, %512 ], [ %524, %519 ]
  %534 = phi ptr [ %515, %512 ], [ %527, %519 ]
  %535 = icmp ult i32 %516, 7
  br i1 %535, label %568, label %538

536:                                              ; preds = %435
  %537 = getelementptr inbounds i8, ptr %430, i64 1
  br label %568

538:                                              ; preds = %530, %538
  %539 = phi ptr [ %564, %538 ], [ %532, %530 ]
  %540 = phi i32 [ %563, %538 ], [ %533, %530 ]
  %541 = phi ptr [ %566, %538 ], [ %534, %530 ]
  %542 = getelementptr inbounds i8, ptr %539, i64 1
  %543 = load i8, ptr %539, align 1, !tbaa !46
  %544 = getelementptr inbounds i8, ptr %541, i64 1
  store i8 %543, ptr %541, align 1, !tbaa !46
  %545 = getelementptr inbounds i8, ptr %539, i64 2
  %546 = load i8, ptr %542, align 1, !tbaa !46
  %547 = getelementptr inbounds i8, ptr %541, i64 2
  store i8 %546, ptr %544, align 1, !tbaa !46
  %548 = getelementptr inbounds i8, ptr %539, i64 3
  %549 = load i8, ptr %545, align 1, !tbaa !46
  %550 = getelementptr inbounds i8, ptr %541, i64 3
  store i8 %549, ptr %547, align 1, !tbaa !46
  %551 = getelementptr inbounds i8, ptr %539, i64 4
  %552 = load i8, ptr %548, align 1, !tbaa !46
  %553 = getelementptr inbounds i8, ptr %541, i64 4
  store i8 %552, ptr %550, align 1, !tbaa !46
  %554 = getelementptr inbounds i8, ptr %539, i64 5
  %555 = load i8, ptr %551, align 1, !tbaa !46
  %556 = getelementptr inbounds i8, ptr %541, i64 5
  store i8 %555, ptr %553, align 1, !tbaa !46
  %557 = getelementptr inbounds i8, ptr %539, i64 6
  %558 = load i8, ptr %554, align 1, !tbaa !46
  %559 = getelementptr inbounds i8, ptr %541, i64 6
  store i8 %558, ptr %556, align 1, !tbaa !46
  %560 = getelementptr inbounds i8, ptr %539, i64 7
  %561 = load i8, ptr %557, align 1, !tbaa !46
  %562 = getelementptr inbounds i8, ptr %541, i64 7
  store i8 %561, ptr %559, align 1, !tbaa !46
  %563 = add nsw i32 %540, -8
  %564 = getelementptr inbounds i8, ptr %539, i64 8
  %565 = load i8, ptr %560, align 1, !tbaa !46
  %566 = getelementptr inbounds i8, ptr %541, i64 8
  store i8 %565, ptr %562, align 1, !tbaa !46
  %567 = icmp eq i32 %563, 0
  br i1 %567, label %568, label %538, !llvm.loop !328

568:                                              ; preds = %530, %538, %510, %536, %429
  %569 = phi ptr [ %537, %536 ], [ %433, %429 ], [ %449, %510 ], [ %531, %530 ], [ %566, %538 ]
  store ptr %569, ptr @stb__dout, align 8, !tbaa !117
  %570 = getelementptr inbounds i8, ptr %88, i64 4
  br label %1090

571:                                              ; preds = %401
  %572 = icmp ugt i8 %90, 15
  br i1 %572, label %573, label %698

573:                                              ; preds = %571
  %574 = getelementptr inbounds i8, ptr %88, i64 3
  %575 = load i8, ptr %574, align 1, !tbaa !46
  %576 = zext i8 %575 to i32
  %577 = shl nuw nsw i32 %576, 8
  %578 = getelementptr inbounds i8, ptr %88, i64 4
  %579 = load i8, ptr %578, align 1, !tbaa !46
  %580 = zext i8 %579 to i32
  %581 = or i32 %577, %580
  %582 = add nuw nsw i32 %581, 1
  %583 = shl nuw nsw i32 %91, 16
  %584 = getelementptr inbounds i8, ptr %88, i64 1
  %585 = load i8, ptr %584, align 1, !tbaa !46
  %586 = zext i8 %585 to i32
  %587 = shl nuw nsw i32 %586, 8
  %588 = getelementptr inbounds i8, ptr %88, i64 2
  %589 = load i8, ptr %588, align 1, !tbaa !46
  %590 = zext i8 %589 to i32
  %591 = or i32 %583, %590
  %592 = or i32 %591, %587
  %593 = add nsw i32 %592, -1048575
  %594 = zext i32 %593 to i64
  %595 = sub nsw i64 0, %594
  %596 = getelementptr i8, ptr %87, i64 %595
  %597 = zext i32 %582 to i64
  %598 = getelementptr inbounds i8, ptr %87, i64 %597
  %599 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %600 = icmp ugt ptr %598, %599
  br i1 %600, label %601, label %604

601:                                              ; preds = %573
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3971)
  %602 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %603 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %604

604:                                              ; preds = %601, %573
  %605 = phi ptr [ %603, %601 ], [ %599, %573 ]
  %606 = phi ptr [ %602, %601 ], [ %87, %573 ]
  %607 = ptrtoint ptr %606 to i64
  %608 = getelementptr inbounds i8, ptr %606, i64 %597
  %609 = icmp ugt ptr %608, %605
  br i1 %609, label %695, label %610

610:                                              ; preds = %604
  %611 = load ptr, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %612 = icmp ugt ptr %611, %596
  br i1 %612, label %663, label %613

613:                                              ; preds = %610
  %614 = add nuw nsw i32 %581, 1
  %615 = zext i32 %614 to i64
  %616 = icmp ult i32 %581, 31
  br i1 %616, label %639, label %617

617:                                              ; preds = %613
  %618 = sub i64 %594, %89
  %619 = add i64 %618, %607
  %620 = icmp ult i64 %619, 32
  br i1 %620, label %639, label %621

621:                                              ; preds = %617
  %622 = and i64 %615, 131040
  %623 = getelementptr i8, ptr %596, i64 %622
  %624 = trunc i64 %622 to i32
  %625 = sub nsw i32 %582, %624
  %626 = getelementptr i8, ptr %606, i64 %622
  br label %627

627:                                              ; preds = %627, %621
  %628 = phi i64 [ 0, %621 ], [ %635, %627 ]
  %629 = getelementptr i8, ptr %596, i64 %628
  %630 = getelementptr i8, ptr %606, i64 %628
  %631 = load <16 x i8>, ptr %629, align 1, !tbaa !46
  %632 = getelementptr i8, ptr %629, i64 16
  %633 = load <16 x i8>, ptr %632, align 1, !tbaa !46
  store <16 x i8> %631, ptr %630, align 1, !tbaa !46
  %634 = getelementptr i8, ptr %630, i64 16
  store <16 x i8> %633, ptr %634, align 1, !tbaa !46
  %635 = add nuw i64 %628, 32
  %636 = icmp eq i64 %635, %622
  br i1 %636, label %637, label %627, !llvm.loop !329

637:                                              ; preds = %627
  %638 = icmp eq i64 %622, %615
  br i1 %638, label %695, label %639

639:                                              ; preds = %617, %613, %637
  %640 = phi ptr [ %596, %617 ], [ %596, %613 ], [ %623, %637 ]
  %641 = phi i32 [ %582, %617 ], [ %582, %613 ], [ %625, %637 ]
  %642 = phi ptr [ %606, %617 ], [ %606, %613 ], [ %626, %637 ]
  %643 = add nsw i32 %641, -1
  %644 = and i32 %641, 7
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %657, label %646

646:                                              ; preds = %639, %646
  %647 = phi ptr [ %652, %646 ], [ %640, %639 ]
  %648 = phi i32 [ %651, %646 ], [ %641, %639 ]
  %649 = phi ptr [ %654, %646 ], [ %642, %639 ]
  %650 = phi i32 [ %655, %646 ], [ 0, %639 ]
  %651 = add i32 %648, -1
  %652 = getelementptr inbounds i8, ptr %647, i64 1
  %653 = load i8, ptr %647, align 1, !tbaa !46
  %654 = getelementptr inbounds i8, ptr %649, i64 1
  store i8 %653, ptr %649, align 1, !tbaa !46
  %655 = add i32 %650, 1
  %656 = icmp eq i32 %655, %644
  br i1 %656, label %657, label %646, !llvm.loop !330

657:                                              ; preds = %646, %639
  %658 = phi ptr [ undef, %639 ], [ %654, %646 ]
  %659 = phi ptr [ %640, %639 ], [ %652, %646 ]
  %660 = phi i32 [ %641, %639 ], [ %651, %646 ]
  %661 = phi ptr [ %642, %639 ], [ %654, %646 ]
  %662 = icmp ult i32 %643, 7
  br i1 %662, label %695, label %665

663:                                              ; preds = %610
  %664 = getelementptr inbounds i8, ptr %605, i64 1
  br label %695

665:                                              ; preds = %657, %665
  %666 = phi ptr [ %691, %665 ], [ %659, %657 ]
  %667 = phi i32 [ %690, %665 ], [ %660, %657 ]
  %668 = phi ptr [ %693, %665 ], [ %661, %657 ]
  %669 = getelementptr inbounds i8, ptr %666, i64 1
  %670 = load i8, ptr %666, align 1, !tbaa !46
  %671 = getelementptr inbounds i8, ptr %668, i64 1
  store i8 %670, ptr %668, align 1, !tbaa !46
  %672 = getelementptr inbounds i8, ptr %666, i64 2
  %673 = load i8, ptr %669, align 1, !tbaa !46
  %674 = getelementptr inbounds i8, ptr %668, i64 2
  store i8 %673, ptr %671, align 1, !tbaa !46
  %675 = getelementptr inbounds i8, ptr %666, i64 3
  %676 = load i8, ptr %672, align 1, !tbaa !46
  %677 = getelementptr inbounds i8, ptr %668, i64 3
  store i8 %676, ptr %674, align 1, !tbaa !46
  %678 = getelementptr inbounds i8, ptr %666, i64 4
  %679 = load i8, ptr %675, align 1, !tbaa !46
  %680 = getelementptr inbounds i8, ptr %668, i64 4
  store i8 %679, ptr %677, align 1, !tbaa !46
  %681 = getelementptr inbounds i8, ptr %666, i64 5
  %682 = load i8, ptr %678, align 1, !tbaa !46
  %683 = getelementptr inbounds i8, ptr %668, i64 5
  store i8 %682, ptr %680, align 1, !tbaa !46
  %684 = getelementptr inbounds i8, ptr %666, i64 6
  %685 = load i8, ptr %681, align 1, !tbaa !46
  %686 = getelementptr inbounds i8, ptr %668, i64 6
  store i8 %685, ptr %683, align 1, !tbaa !46
  %687 = getelementptr inbounds i8, ptr %666, i64 7
  %688 = load i8, ptr %684, align 1, !tbaa !46
  %689 = getelementptr inbounds i8, ptr %668, i64 7
  store i8 %688, ptr %686, align 1, !tbaa !46
  %690 = add i32 %667, -8
  %691 = getelementptr inbounds i8, ptr %666, i64 8
  %692 = load i8, ptr %687, align 1, !tbaa !46
  %693 = getelementptr inbounds i8, ptr %668, i64 8
  store i8 %692, ptr %689, align 1, !tbaa !46
  %694 = icmp eq i32 %690, 0
  br i1 %694, label %695, label %665, !llvm.loop !331

695:                                              ; preds = %657, %665, %637, %663, %604
  %696 = phi ptr [ %664, %663 ], [ %608, %604 ], [ %626, %637 ], [ %658, %657 ], [ %693, %665 ]
  store ptr %696, ptr @stb__dout, align 8, !tbaa !117
  %697 = getelementptr inbounds i8, ptr %88, i64 5
  br label %1090

698:                                              ; preds = %571
  %699 = icmp ugt i8 %90, 7
  br i1 %699, label %700, label %736

700:                                              ; preds = %698
  %701 = shl nuw nsw i32 %91, 8
  %702 = getelementptr inbounds i8, ptr %88, i64 1
  %703 = load i8, ptr %702, align 1, !tbaa !46
  %704 = zext i8 %703 to i32
  %705 = or i32 %701, %704
  %706 = add nsw i32 %705, -2047
  %707 = getelementptr inbounds i8, ptr %88, i64 2
  %708 = zext i32 %706 to i64
  %709 = getelementptr inbounds i8, ptr %87, i64 %708
  %710 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %711 = icmp ugt ptr %709, %710
  br i1 %711, label %712, label %715

712:                                              ; preds = %700
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3979)
  %713 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %714 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %715

715:                                              ; preds = %712, %700
  %716 = phi ptr [ %714, %712 ], [ %710, %700 ]
  %717 = phi ptr [ %713, %712 ], [ %87, %700 ]
  %718 = getelementptr inbounds i8, ptr %717, i64 %708
  %719 = icmp ugt ptr %718, %716
  br i1 %719, label %726, label %720

720:                                              ; preds = %715
  %721 = load ptr, ptr @stb__barrier_in_b, align 8, !tbaa !117
  %722 = icmp ugt ptr %721, %707
  br i1 %722, label %723, label %725

723:                                              ; preds = %720
  %724 = getelementptr inbounds i8, ptr %716, i64 1
  br label %726

725:                                              ; preds = %720
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %717, ptr nonnull align 1 %707, i64 %708, i1 false)
  br label %726

726:                                              ; preds = %725, %723, %715
  %727 = phi ptr [ %718, %725 ], [ %724, %723 ], [ %718, %715 ]
  store ptr %727, ptr @stb__dout, align 8, !tbaa !117
  %728 = load i8, ptr %88, align 1, !tbaa !46
  %729 = zext i8 %728 to i32
  %730 = shl nuw nsw i32 %729, 8
  %731 = load i8, ptr %702, align 1, !tbaa !46
  %732 = zext i8 %731 to i32
  %733 = or i32 %730, %732
  %734 = add nsw i32 %733, -2045
  %735 = sext i32 %734 to i64
  br label %1072

736:                                              ; preds = %698
  switch i8 %90, label %1078 [
    i8 7, label %737
    i8 6, label %775
    i8 4, label %945
  ]

737:                                              ; preds = %736
  %738 = getelementptr inbounds i8, ptr %88, i64 1
  %739 = load i8, ptr %738, align 1, !tbaa !46
  %740 = zext i8 %739 to i64
  %741 = shl nuw nsw i64 %740, 8
  %742 = getelementptr inbounds i8, ptr %88, i64 2
  %743 = load i8, ptr %742, align 1, !tbaa !46
  %744 = zext i8 %743 to i64
  %745 = or i64 %741, %744
  %746 = add nuw nsw i64 %745, 1
  %747 = getelementptr inbounds i8, ptr %88, i64 3
  %748 = getelementptr inbounds i8, ptr %87, i64 %746
  %749 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %750 = icmp ugt ptr %748, %749
  br i1 %750, label %751, label %754

751:                                              ; preds = %737
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3979)
  %752 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %753 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %754

754:                                              ; preds = %751, %737
  %755 = phi ptr [ %753, %751 ], [ %749, %737 ]
  %756 = phi ptr [ %752, %751 ], [ %87, %737 ]
  %757 = getelementptr inbounds i8, ptr %756, i64 %746
  %758 = icmp ugt ptr %757, %755
  br i1 %758, label %765, label %759

759:                                              ; preds = %754
  %760 = load ptr, ptr @stb__barrier_in_b, align 8, !tbaa !117
  %761 = icmp ugt ptr %760, %747
  br i1 %761, label %762, label %764

762:                                              ; preds = %759
  %763 = getelementptr inbounds i8, ptr %755, i64 1
  br label %765

764:                                              ; preds = %759
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %756, ptr noundef nonnull align 1 dereferenceable(1) %747, i64 %746, i1 false)
  br label %765

765:                                              ; preds = %754, %762, %764
  %766 = phi ptr [ %757, %764 ], [ %763, %762 ], [ %757, %754 ]
  store ptr %766, ptr @stb__dout, align 8, !tbaa !117
  %767 = load i8, ptr %738, align 1, !tbaa !46
  %768 = zext i8 %767 to i64
  %769 = shl nuw nsw i64 %768, 8
  %770 = load i8, ptr %742, align 1, !tbaa !46
  %771 = zext i8 %770 to i64
  %772 = or i64 %769, %771
  %773 = add nuw nsw i64 %772, 4
  %774 = getelementptr inbounds i8, ptr %88, i64 %773
  br label %1090

775:                                              ; preds = %736
  %776 = getelementptr inbounds i8, ptr %88, i64 4
  %777 = load i8, ptr %776, align 1, !tbaa !46
  %778 = zext i8 %777 to i32
  %779 = add nuw nsw i32 %778, 1
  %780 = getelementptr inbounds i8, ptr %88, i64 1
  %781 = load i8, ptr %780, align 1, !tbaa !46
  %782 = zext i8 %781 to i64
  %783 = shl nuw nsw i64 %782, 16
  %784 = getelementptr inbounds i8, ptr %88, i64 2
  %785 = load i8, ptr %784, align 1, !tbaa !46
  %786 = zext i8 %785 to i64
  %787 = shl nuw nsw i64 %786, 8
  %788 = getelementptr inbounds i8, ptr %88, i64 3
  %789 = load i8, ptr %788, align 1, !tbaa !46
  %790 = zext i8 %789 to i64
  %791 = or i64 %783, %790
  %792 = or i64 %791, %787
  %793 = xor i64 %792, -1
  %794 = getelementptr i8, ptr %87, i64 %793
  %795 = zext i32 %779 to i64
  %796 = getelementptr inbounds i8, ptr %87, i64 %795
  %797 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %798 = icmp ugt ptr %796, %797
  br i1 %798, label %799, label %802

799:                                              ; preds = %775
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3971)
  %800 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %801 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %802

802:                                              ; preds = %799, %775
  %803 = phi ptr [ %801, %799 ], [ %797, %775 ]
  %804 = phi ptr [ %800, %799 ], [ %87, %775 ]
  %805 = ptrtoint ptr %804 to i64
  %806 = getelementptr inbounds i8, ptr %804, i64 %795
  %807 = icmp ugt ptr %806, %803
  br i1 %807, label %942, label %808

808:                                              ; preds = %802
  %809 = load ptr, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %810 = icmp ugt ptr %809, %794
  br i1 %810, label %910, label %811

811:                                              ; preds = %808
  %812 = icmp ult i8 %777, 31
  br i1 %812, label %886, label %813

813:                                              ; preds = %811
  %814 = xor i64 %792, -1
  %815 = add i64 %814, %89
  %816 = sub i64 %805, %815
  %817 = icmp ult i64 %816, 32
  br i1 %817, label %886, label %818

818:                                              ; preds = %813
  %819 = and i64 %795, 480
  %820 = getelementptr i8, ptr %794, i64 %819
  %821 = trunc i64 %819 to i32
  %822 = sub nsw i32 %779, %821
  %823 = getelementptr i8, ptr %804, i64 %819
  %824 = load <16 x i8>, ptr %794, align 1, !tbaa !46
  %825 = getelementptr i8, ptr %794, i64 16
  %826 = load <16 x i8>, ptr %825, align 1, !tbaa !46
  store <16 x i8> %824, ptr %804, align 1, !tbaa !46
  %827 = getelementptr i8, ptr %804, i64 16
  store <16 x i8> %826, ptr %827, align 1, !tbaa !46
  %828 = icmp eq i64 %819, 32
  br i1 %828, label %884, label %829, !llvm.loop !332

829:                                              ; preds = %818
  %830 = getelementptr i8, ptr %794, i64 32
  %831 = getelementptr i8, ptr %804, i64 32
  %832 = load <16 x i8>, ptr %830, align 1, !tbaa !46
  %833 = getelementptr i8, ptr %830, i64 16
  %834 = load <16 x i8>, ptr %833, align 1, !tbaa !46
  store <16 x i8> %832, ptr %831, align 1, !tbaa !46
  %835 = getelementptr i8, ptr %804, i64 48
  store <16 x i8> %834, ptr %835, align 1, !tbaa !46
  %836 = icmp eq i64 %819, 64
  br i1 %836, label %884, label %837, !llvm.loop !332

837:                                              ; preds = %829
  %838 = getelementptr i8, ptr %794, i64 64
  %839 = getelementptr i8, ptr %804, i64 64
  %840 = load <16 x i8>, ptr %838, align 1, !tbaa !46
  %841 = getelementptr i8, ptr %838, i64 16
  %842 = load <16 x i8>, ptr %841, align 1, !tbaa !46
  store <16 x i8> %840, ptr %839, align 1, !tbaa !46
  %843 = getelementptr i8, ptr %804, i64 80
  store <16 x i8> %842, ptr %843, align 1, !tbaa !46
  %844 = icmp eq i64 %819, 96
  br i1 %844, label %884, label %845, !llvm.loop !332

845:                                              ; preds = %837
  %846 = getelementptr i8, ptr %794, i64 96
  %847 = getelementptr i8, ptr %804, i64 96
  %848 = load <16 x i8>, ptr %846, align 1, !tbaa !46
  %849 = getelementptr i8, ptr %846, i64 16
  %850 = load <16 x i8>, ptr %849, align 1, !tbaa !46
  store <16 x i8> %848, ptr %847, align 1, !tbaa !46
  %851 = getelementptr i8, ptr %804, i64 112
  store <16 x i8> %850, ptr %851, align 1, !tbaa !46
  %852 = icmp eq i64 %819, 128
  br i1 %852, label %884, label %853, !llvm.loop !332

853:                                              ; preds = %845
  %854 = getelementptr i8, ptr %794, i64 128
  %855 = getelementptr i8, ptr %804, i64 128
  %856 = load <16 x i8>, ptr %854, align 1, !tbaa !46
  %857 = getelementptr i8, ptr %854, i64 16
  %858 = load <16 x i8>, ptr %857, align 1, !tbaa !46
  store <16 x i8> %856, ptr %855, align 1, !tbaa !46
  %859 = getelementptr i8, ptr %804, i64 144
  store <16 x i8> %858, ptr %859, align 1, !tbaa !46
  %860 = icmp eq i64 %819, 160
  br i1 %860, label %884, label %861, !llvm.loop !332

861:                                              ; preds = %853
  %862 = getelementptr i8, ptr %794, i64 160
  %863 = getelementptr i8, ptr %804, i64 160
  %864 = load <16 x i8>, ptr %862, align 1, !tbaa !46
  %865 = getelementptr i8, ptr %862, i64 16
  %866 = load <16 x i8>, ptr %865, align 1, !tbaa !46
  store <16 x i8> %864, ptr %863, align 1, !tbaa !46
  %867 = getelementptr i8, ptr %804, i64 176
  store <16 x i8> %866, ptr %867, align 1, !tbaa !46
  %868 = icmp eq i64 %819, 192
  br i1 %868, label %884, label %869, !llvm.loop !332

869:                                              ; preds = %861
  %870 = getelementptr i8, ptr %794, i64 192
  %871 = getelementptr i8, ptr %804, i64 192
  %872 = load <16 x i8>, ptr %870, align 1, !tbaa !46
  %873 = getelementptr i8, ptr %870, i64 16
  %874 = load <16 x i8>, ptr %873, align 1, !tbaa !46
  store <16 x i8> %872, ptr %871, align 1, !tbaa !46
  %875 = getelementptr i8, ptr %804, i64 208
  store <16 x i8> %874, ptr %875, align 1, !tbaa !46
  %876 = icmp eq i64 %819, 224
  br i1 %876, label %884, label %877, !llvm.loop !332

877:                                              ; preds = %869
  %878 = getelementptr i8, ptr %794, i64 224
  %879 = getelementptr i8, ptr %804, i64 224
  %880 = load <16 x i8>, ptr %878, align 1, !tbaa !46
  %881 = getelementptr i8, ptr %878, i64 16
  %882 = load <16 x i8>, ptr %881, align 1, !tbaa !46
  store <16 x i8> %880, ptr %879, align 1, !tbaa !46
  %883 = getelementptr i8, ptr %804, i64 240
  store <16 x i8> %882, ptr %883, align 1, !tbaa !46
  br label %884

884:                                              ; preds = %877, %869, %861, %853, %845, %837, %829, %818
  %885 = icmp eq i64 %819, %795
  br i1 %885, label %942, label %886

886:                                              ; preds = %813, %811, %884
  %887 = phi ptr [ %794, %813 ], [ %794, %811 ], [ %820, %884 ]
  %888 = phi i32 [ %779, %813 ], [ %779, %811 ], [ %822, %884 ]
  %889 = phi ptr [ %804, %813 ], [ %804, %811 ], [ %823, %884 ]
  %890 = add nsw i32 %888, -1
  %891 = and i32 %888, 7
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %904, label %893

893:                                              ; preds = %886, %893
  %894 = phi ptr [ %899, %893 ], [ %887, %886 ]
  %895 = phi i32 [ %898, %893 ], [ %888, %886 ]
  %896 = phi ptr [ %901, %893 ], [ %889, %886 ]
  %897 = phi i32 [ %902, %893 ], [ 0, %886 ]
  %898 = add nsw i32 %895, -1
  %899 = getelementptr inbounds i8, ptr %894, i64 1
  %900 = load i8, ptr %894, align 1, !tbaa !46
  %901 = getelementptr inbounds i8, ptr %896, i64 1
  store i8 %900, ptr %896, align 1, !tbaa !46
  %902 = add i32 %897, 1
  %903 = icmp eq i32 %902, %891
  br i1 %903, label %904, label %893, !llvm.loop !333

904:                                              ; preds = %893, %886
  %905 = phi ptr [ undef, %886 ], [ %901, %893 ]
  %906 = phi ptr [ %887, %886 ], [ %899, %893 ]
  %907 = phi i32 [ %888, %886 ], [ %898, %893 ]
  %908 = phi ptr [ %889, %886 ], [ %901, %893 ]
  %909 = icmp ult i32 %890, 7
  br i1 %909, label %942, label %912

910:                                              ; preds = %808
  %911 = getelementptr inbounds i8, ptr %803, i64 1
  br label %942

912:                                              ; preds = %904, %912
  %913 = phi ptr [ %938, %912 ], [ %906, %904 ]
  %914 = phi i32 [ %937, %912 ], [ %907, %904 ]
  %915 = phi ptr [ %940, %912 ], [ %908, %904 ]
  %916 = getelementptr inbounds i8, ptr %913, i64 1
  %917 = load i8, ptr %913, align 1, !tbaa !46
  %918 = getelementptr inbounds i8, ptr %915, i64 1
  store i8 %917, ptr %915, align 1, !tbaa !46
  %919 = getelementptr inbounds i8, ptr %913, i64 2
  %920 = load i8, ptr %916, align 1, !tbaa !46
  %921 = getelementptr inbounds i8, ptr %915, i64 2
  store i8 %920, ptr %918, align 1, !tbaa !46
  %922 = getelementptr inbounds i8, ptr %913, i64 3
  %923 = load i8, ptr %919, align 1, !tbaa !46
  %924 = getelementptr inbounds i8, ptr %915, i64 3
  store i8 %923, ptr %921, align 1, !tbaa !46
  %925 = getelementptr inbounds i8, ptr %913, i64 4
  %926 = load i8, ptr %922, align 1, !tbaa !46
  %927 = getelementptr inbounds i8, ptr %915, i64 4
  store i8 %926, ptr %924, align 1, !tbaa !46
  %928 = getelementptr inbounds i8, ptr %913, i64 5
  %929 = load i8, ptr %925, align 1, !tbaa !46
  %930 = getelementptr inbounds i8, ptr %915, i64 5
  store i8 %929, ptr %927, align 1, !tbaa !46
  %931 = getelementptr inbounds i8, ptr %913, i64 6
  %932 = load i8, ptr %928, align 1, !tbaa !46
  %933 = getelementptr inbounds i8, ptr %915, i64 6
  store i8 %932, ptr %930, align 1, !tbaa !46
  %934 = getelementptr inbounds i8, ptr %913, i64 7
  %935 = load i8, ptr %931, align 1, !tbaa !46
  %936 = getelementptr inbounds i8, ptr %915, i64 7
  store i8 %935, ptr %933, align 1, !tbaa !46
  %937 = add nsw i32 %914, -8
  %938 = getelementptr inbounds i8, ptr %913, i64 8
  %939 = load i8, ptr %934, align 1, !tbaa !46
  %940 = getelementptr inbounds i8, ptr %915, i64 8
  store i8 %939, ptr %936, align 1, !tbaa !46
  %941 = icmp eq i32 %937, 0
  br i1 %941, label %942, label %912, !llvm.loop !334

942:                                              ; preds = %904, %912, %884, %910, %802
  %943 = phi ptr [ %911, %910 ], [ %806, %802 ], [ %823, %884 ], [ %905, %904 ], [ %940, %912 ]
  store ptr %943, ptr @stb__dout, align 8, !tbaa !117
  %944 = getelementptr inbounds i8, ptr %88, i64 5
  br label %1090

945:                                              ; preds = %736
  %946 = getelementptr inbounds i8, ptr %88, i64 4
  %947 = load i8, ptr %946, align 1, !tbaa !46
  %948 = zext i8 %947 to i32
  %949 = shl nuw nsw i32 %948, 8
  %950 = getelementptr inbounds i8, ptr %88, i64 5
  %951 = load i8, ptr %950, align 1, !tbaa !46
  %952 = zext i8 %951 to i32
  %953 = or i32 %949, %952
  %954 = add nuw nsw i32 %953, 1
  %955 = getelementptr inbounds i8, ptr %88, i64 1
  %956 = load i8, ptr %955, align 1, !tbaa !46
  %957 = zext i8 %956 to i64
  %958 = shl nuw nsw i64 %957, 16
  %959 = getelementptr inbounds i8, ptr %88, i64 2
  %960 = load i8, ptr %959, align 1, !tbaa !46
  %961 = zext i8 %960 to i64
  %962 = shl nuw nsw i64 %961, 8
  %963 = getelementptr inbounds i8, ptr %88, i64 3
  %964 = load i8, ptr %963, align 1, !tbaa !46
  %965 = zext i8 %964 to i64
  %966 = or i64 %958, %965
  %967 = or i64 %966, %962
  %968 = xor i64 %967, -1
  %969 = getelementptr i8, ptr %87, i64 %968
  %970 = zext i32 %954 to i64
  %971 = getelementptr inbounds i8, ptr %87, i64 %970
  %972 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  %973 = icmp ugt ptr %971, %972
  br i1 %973, label %974, label %977

974:                                              ; preds = %945
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FC@IADGHEAH@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAt?$AAb?$AA_?$AA_?$AAb?$AAa?$AAr?$AAr?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3971)
  %975 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  %976 = load ptr, ptr @stb__barrier_out_e, align 8, !tbaa !117
  br label %977

977:                                              ; preds = %974, %945
  %978 = phi ptr [ %976, %974 ], [ %972, %945 ]
  %979 = phi ptr [ %975, %974 ], [ %87, %945 ]
  %980 = ptrtoint ptr %979 to i64
  %981 = getelementptr inbounds i8, ptr %979, i64 %970
  %982 = icmp ugt ptr %981, %978
  br i1 %982, label %1069, label %983

983:                                              ; preds = %977
  %984 = load ptr, ptr @stb__barrier_out_b, align 8, !tbaa !117
  %985 = icmp ugt ptr %984, %969
  br i1 %985, label %1037, label %986

986:                                              ; preds = %983
  %987 = add nuw nsw i32 %953, 1
  %988 = zext i32 %987 to i64
  %989 = icmp ult i32 %953, 31
  br i1 %989, label %1013, label %990

990:                                              ; preds = %986
  %991 = xor i64 %967, -1
  %992 = add i64 %991, %89
  %993 = sub i64 %980, %992
  %994 = icmp ult i64 %993, 32
  br i1 %994, label %1013, label %995

995:                                              ; preds = %990
  %996 = and i64 %988, 131040
  %997 = getelementptr i8, ptr %969, i64 %996
  %998 = trunc i64 %996 to i32
  %999 = sub nsw i32 %954, %998
  %1000 = getelementptr i8, ptr %979, i64 %996
  br label %1001

1001:                                             ; preds = %1001, %995
  %1002 = phi i64 [ 0, %995 ], [ %1009, %1001 ]
  %1003 = getelementptr i8, ptr %969, i64 %1002
  %1004 = getelementptr i8, ptr %979, i64 %1002
  %1005 = load <16 x i8>, ptr %1003, align 1, !tbaa !46
  %1006 = getelementptr i8, ptr %1003, i64 16
  %1007 = load <16 x i8>, ptr %1006, align 1, !tbaa !46
  store <16 x i8> %1005, ptr %1004, align 1, !tbaa !46
  %1008 = getelementptr i8, ptr %1004, i64 16
  store <16 x i8> %1007, ptr %1008, align 1, !tbaa !46
  %1009 = add nuw i64 %1002, 32
  %1010 = icmp eq i64 %1009, %996
  br i1 %1010, label %1011, label %1001, !llvm.loop !335

1011:                                             ; preds = %1001
  %1012 = icmp eq i64 %996, %988
  br i1 %1012, label %1069, label %1013

1013:                                             ; preds = %990, %986, %1011
  %1014 = phi ptr [ %969, %990 ], [ %969, %986 ], [ %997, %1011 ]
  %1015 = phi i32 [ %954, %990 ], [ %954, %986 ], [ %999, %1011 ]
  %1016 = phi ptr [ %979, %990 ], [ %979, %986 ], [ %1000, %1011 ]
  %1017 = add nsw i32 %1015, -1
  %1018 = and i32 %1015, 7
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1031, label %1020

1020:                                             ; preds = %1013, %1020
  %1021 = phi ptr [ %1026, %1020 ], [ %1014, %1013 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1015, %1013 ]
  %1023 = phi ptr [ %1028, %1020 ], [ %1016, %1013 ]
  %1024 = phi i32 [ %1029, %1020 ], [ 0, %1013 ]
  %1025 = add i32 %1022, -1
  %1026 = getelementptr inbounds i8, ptr %1021, i64 1
  %1027 = load i8, ptr %1021, align 1, !tbaa !46
  %1028 = getelementptr inbounds i8, ptr %1023, i64 1
  store i8 %1027, ptr %1023, align 1, !tbaa !46
  %1029 = add i32 %1024, 1
  %1030 = icmp eq i32 %1029, %1018
  br i1 %1030, label %1031, label %1020, !llvm.loop !336

1031:                                             ; preds = %1020, %1013
  %1032 = phi ptr [ undef, %1013 ], [ %1028, %1020 ]
  %1033 = phi ptr [ %1014, %1013 ], [ %1026, %1020 ]
  %1034 = phi i32 [ %1015, %1013 ], [ %1025, %1020 ]
  %1035 = phi ptr [ %1016, %1013 ], [ %1028, %1020 ]
  %1036 = icmp ult i32 %1017, 7
  br i1 %1036, label %1069, label %1039

1037:                                             ; preds = %983
  %1038 = getelementptr inbounds i8, ptr %978, i64 1
  br label %1069

1039:                                             ; preds = %1031, %1039
  %1040 = phi ptr [ %1065, %1039 ], [ %1033, %1031 ]
  %1041 = phi i32 [ %1064, %1039 ], [ %1034, %1031 ]
  %1042 = phi ptr [ %1067, %1039 ], [ %1035, %1031 ]
  %1043 = getelementptr inbounds i8, ptr %1040, i64 1
  %1044 = load i8, ptr %1040, align 1, !tbaa !46
  %1045 = getelementptr inbounds i8, ptr %1042, i64 1
  store i8 %1044, ptr %1042, align 1, !tbaa !46
  %1046 = getelementptr inbounds i8, ptr %1040, i64 2
  %1047 = load i8, ptr %1043, align 1, !tbaa !46
  %1048 = getelementptr inbounds i8, ptr %1042, i64 2
  store i8 %1047, ptr %1045, align 1, !tbaa !46
  %1049 = getelementptr inbounds i8, ptr %1040, i64 3
  %1050 = load i8, ptr %1046, align 1, !tbaa !46
  %1051 = getelementptr inbounds i8, ptr %1042, i64 3
  store i8 %1050, ptr %1048, align 1, !tbaa !46
  %1052 = getelementptr inbounds i8, ptr %1040, i64 4
  %1053 = load i8, ptr %1049, align 1, !tbaa !46
  %1054 = getelementptr inbounds i8, ptr %1042, i64 4
  store i8 %1053, ptr %1051, align 1, !tbaa !46
  %1055 = getelementptr inbounds i8, ptr %1040, i64 5
  %1056 = load i8, ptr %1052, align 1, !tbaa !46
  %1057 = getelementptr inbounds i8, ptr %1042, i64 5
  store i8 %1056, ptr %1054, align 1, !tbaa !46
  %1058 = getelementptr inbounds i8, ptr %1040, i64 6
  %1059 = load i8, ptr %1055, align 1, !tbaa !46
  %1060 = getelementptr inbounds i8, ptr %1042, i64 6
  store i8 %1059, ptr %1057, align 1, !tbaa !46
  %1061 = getelementptr inbounds i8, ptr %1040, i64 7
  %1062 = load i8, ptr %1058, align 1, !tbaa !46
  %1063 = getelementptr inbounds i8, ptr %1042, i64 7
  store i8 %1062, ptr %1060, align 1, !tbaa !46
  %1064 = add i32 %1041, -8
  %1065 = getelementptr inbounds i8, ptr %1040, i64 8
  %1066 = load i8, ptr %1061, align 1, !tbaa !46
  %1067 = getelementptr inbounds i8, ptr %1042, i64 8
  store i8 %1066, ptr %1063, align 1, !tbaa !46
  %1068 = icmp eq i32 %1064, 0
  br i1 %1068, label %1069, label %1039, !llvm.loop !337

1069:                                             ; preds = %1031, %1039, %1011, %1037, %977
  %1070 = phi ptr [ %1038, %1037 ], [ %981, %977 ], [ %1000, %1011 ], [ %1032, %1031 ], [ %1067, %1039 ]
  store ptr %1070, ptr @stb__dout, align 8, !tbaa !117
  %1071 = getelementptr inbounds i8, ptr %88, i64 6
  br label %1090

1072:                                             ; preds = %726, %396
  %1073 = phi i8 [ %398, %396 ], [ %728, %726 ]
  %1074 = phi i64 [ %400, %396 ], [ %735, %726 ]
  %1075 = phi ptr [ %397, %396 ], [ %727, %726 ]
  %1076 = getelementptr inbounds i8, ptr %88, i64 %1074
  %1077 = icmp eq i64 %1074, 0
  br i1 %1077, label %1078, label %1090

1078:                                             ; preds = %736, %1072
  %1079 = phi ptr [ %1075, %1072 ], [ %87, %736 ]
  %1080 = phi i8 [ %1073, %1072 ], [ %90, %736 ]
  %1081 = icmp eq i8 %1080, 5
  br i1 %1081, label %1082, label %1089

1082:                                             ; preds = %1078
  %1083 = getelementptr inbounds i8, ptr %88, i64 1
  %1084 = load i8, ptr %1083, align 1, !tbaa !46
  %1085 = icmp eq i8 %1084, -6
  br i1 %1085, label %1086, label %1089

1086:                                             ; preds = %1082
  %1087 = icmp eq ptr %1079, %84
  br i1 %1087, label %1099, label %1088

1088:                                             ; preds = %1086
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DG@GCANDLHA@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAo?$AAl?$AAe?$AAn?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 4054)
  br label %1099

1089:                                             ; preds = %1082, %1078
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 4060)
  br label %1099

1090:                                             ; preds = %765, %1072, %1069, %942, %695, %568, %372, %207
  %1091 = phi ptr [ %1075, %1072 ], [ %1070, %1069 ], [ %943, %942 ], [ %696, %695 ], [ %569, %568 ], [ %373, %372 ], [ %208, %207 ], [ %766, %765 ]
  %1092 = phi ptr [ %1076, %1072 ], [ %1071, %1069 ], [ %944, %942 ], [ %697, %695 ], [ %570, %568 ], [ %374, %372 ], [ %209, %207 ], [ %774, %765 ]
  %1093 = icmp ugt ptr %1091, %84
  br i1 %1093, label %1094, label %1096

1094:                                             ; preds = %1090
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DG@EGIPGKEG@?$AAs?$AAt?$AAb?$AA_?$AA_?$AAd?$AAo?$AAu?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AA?$CL?$AA?5?$AAo?$AAl?$AAe?$AAn?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 4064)
  %1095 = load ptr, ptr @stb__dout, align 8, !tbaa !117
  br label %1096

1096:                                             ; preds = %1094, %1090
  %1097 = phi ptr [ %1091, %1090 ], [ %1095, %1094 ]
  %1098 = icmp ugt ptr %1097, %84
  br i1 %1098, label %1099, label %86, !llvm.loop !338

1099:                                             ; preds = %1096, %1086, %1088, %6, %49, %1089
  call void @llvm.lifetime.start.p0(i64 11, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %9)
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %10)
  %1100 = icmp eq ptr %4, null
  br i1 %1100, label %1101, label %1102

1101:                                             ; preds = %1099
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %8, i8 0, i64 11, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %9, i8 0, i64 36, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(50) %10, i8 0, i64 50, i1 false)
  br label %1119

1102:                                             ; preds = %1099
  %1103 = load ptr, ptr %4, align 8, !tbaa.struct !314
  %1104 = getelementptr inbounds i8, ptr %4, i64 13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %8, ptr noundef nonnull align 1 dereferenceable(11) %1104, i64 11, i1 false), !tbaa.struct !339
  %1105 = getelementptr inbounds i8, ptr %4, i64 24
  %1106 = load <2 x i32>, ptr %1105, align 8
  %1107 = getelementptr inbounds i8, ptr %4, i64 32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %9, ptr noundef nonnull align 8 dereferenceable(36) %1107, i64 36, i1 false), !tbaa.struct !340
  %1108 = getelementptr inbounds i8, ptr %4, i64 68
  %1109 = load float, ptr %1108, align 4, !tbaa.struct !341
  %1110 = getelementptr inbounds i8, ptr %4, i64 72
  %1111 = load i64, ptr %1110, align 8
  %1112 = getelementptr inbounds i8, ptr %4, i64 80
  %1113 = load float, ptr %1112, align 8, !tbaa.struct !342
  %1114 = getelementptr inbounds i8, ptr %4, i64 84
  %1115 = load i16, ptr %1114, align 4, !tbaa.struct !343
  %1116 = getelementptr inbounds i8, ptr %4, i64 86
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(50) %10, ptr noundef nonnull align 2 dereferenceable(50) %1116, i64 50, i1 false), !tbaa.struct !344
  %1117 = icmp eq ptr %1103, null
  br i1 %1117, label %1119, label %1118

1118:                                             ; preds = %1102
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2179)
  br label %1119

1119:                                             ; preds = %1101, %1118, %1102
  %1120 = phi i64 [ 0, %1101 ], [ %1111, %1102 ], [ %1111, %1118 ]
  %1121 = phi i1 [ true, %1101 ], [ true, %1102 ], [ false, %1118 ]
  %1122 = phi i16 [ -1, %1101 ], [ %1115, %1102 ], [ %1115, %1118 ]
  %1123 = phi float [ 1.000000e+00, %1101 ], [ %1113, %1102 ], [ %1113, %1118 ]
  %1124 = phi float [ 0x47EFFFFFE0000000, %1101 ], [ %1109, %1102 ], [ %1109, %1118 ]
  %1125 = phi <2 x i32> [ <i32 3, i32 1>, %1101 ], [ %1106, %1102 ], [ %1106, %1118 ]
  %1126 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  %1127 = load i8, ptr %1126, align 8, !tbaa !267, !range !268, !noundef !269
  %1128 = icmp eq i8 %1127, 0
  br i1 %1128, label %1130, label %1129

1129:                                             ; preds = %1119
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2161)
  br label %1130

1130:                                             ; preds = %1129, %1119
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %7) #39
  %1131 = getelementptr inbounds i8, ptr %7, i64 8
  %1132 = getelementptr inbounds i8, ptr %7, i64 12
  store i8 1, ptr %1132, align 4, !tbaa.struct !345
  %1133 = getelementptr inbounds i8, ptr %7, i64 13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %1133, ptr noundef nonnull align 1 dereferenceable(11) %8, i64 11, i1 false), !tbaa.struct !339
  %1134 = getelementptr inbounds i8, ptr %7, i64 24
  store <2 x i32> %1125, ptr %1134, align 8
  %1135 = getelementptr inbounds i8, ptr %7, i64 32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %1135, ptr noundef nonnull align 8 dereferenceable(36) %9, i64 36, i1 false), !tbaa.struct !340
  %1136 = getelementptr inbounds i8, ptr %7, i64 68
  store float %1124, ptr %1136, align 4, !tbaa.struct !341
  %1137 = getelementptr inbounds i8, ptr %7, i64 72
  store i64 %1120, ptr %1137, align 8
  %1138 = getelementptr inbounds i8, ptr %7, i64 80
  store float %1123, ptr %1138, align 8, !tbaa.struct !342
  %1139 = getelementptr inbounds i8, ptr %7, i64 84
  store i16 %1122, ptr %1139, align 4, !tbaa.struct !343
  %1140 = getelementptr inbounds i8, ptr %7, i64 86
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(50) %1140, ptr noundef nonnull align 2 dereferenceable(50) %10, i64 50, i1 false), !tbaa.struct !344
  br i1 %1121, label %1142, label %1141

1141:                                             ; preds = %1130
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CO@ODFMNMML@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAc?$AAf?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2163)
  br label %1142

1142:                                             ; preds = %1141, %1130
  store ptr %30, ptr %7, align 8, !tbaa !282
  store i32 %28, ptr %1131, align 8, !tbaa !308
  %1143 = fcmp fast ogt float %3, 0.000000e+00
  %1144 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 4
  %1145 = load float, ptr %1144, align 4
  %1146 = select fast i1 %1143, float %3, float %1145
  store float %1146, ptr %1144, align 4, !tbaa !295
  %1147 = icmp eq ptr %5, null
  br i1 %1147, label %1150, label %1148

1148:                                             ; preds = %1142
  %1149 = getelementptr inbounds %struct.ImFontConfig, ptr %7, i64 0, i32 10
  store ptr %5, ptr %1149, align 8, !tbaa !296
  br label %1150

1150:                                             ; preds = %1142, %1148
  %1151 = call noundef ptr @"?AddFont@ImFontAtlas@@QEAAPEAUImFont@@PEBUImFontConfig@@@Z"(ptr noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef nonnull %7)
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 11, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %9)
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %10)
  ret ptr %1151
}

; Function Attrs: uwtable
define dso_local noundef i32 @"?AddCustomRectRegular@ImFontAtlas@@QEAAHHH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 align 2 {
  %4 = add i32 %1, -1
  %5 = icmp ult i32 %4, 65535
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2196)
  br label %7

7:                                                ; preds = %3, %6
  %8 = add i32 %2, -1
  %9 = icmp ult i32 %8, 65535
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2197)
  br label %11

11:                                               ; preds = %7, %10
  %12 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %13 = load i32, ptr %12, align 8, !tbaa !287
  %14 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !286
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %41

17:                                               ; preds = %11
  %18 = add nsw i32 %13, 1
  %19 = icmp eq i32 %13, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = sdiv i32 %13, 2
  %22 = add nsw i32 %21, %13
  br label %23

23:                                               ; preds = %20, %17
  %24 = phi i32 [ %22, %20 ], [ 8, %17 ]
  %25 = tail call i32 @llvm.smax.i32(i32 %24, i32 %18)
  %26 = icmp slt i32 %13, %25
  br i1 %26, label %27, label %41

27:                                               ; preds = %23
  %28 = sext i32 %25 to i64
  %29 = shl nsw i64 %28, 5
  %30 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %29)
  %31 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !271
  %33 = icmp eq ptr %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = load i32, ptr %12, align 8, !tbaa !287
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr nonnull align 8 %32, i64 %37, i1 false)
  %38 = load ptr, ptr %31, align 8, !tbaa !271
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %38)
  br label %39

39:                                               ; preds = %34, %27
  store ptr %30, ptr %31, align 8, !tbaa !271
  store i32 %25, ptr %14, align 4, !tbaa !286
  %40 = load i32, ptr %12, align 8, !tbaa !287
  br label %41

41:                                               ; preds = %11, %23, %39
  %42 = phi i32 [ %40, %39 ], [ %13, %23 ], [ %13, %11 ]
  %43 = trunc i32 %2 to i16
  %44 = trunc i32 %1 to i16
  %45 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !271
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %46, i64 %47
  store i16 %44, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 2
  store i16 %43, ptr %49, align 2
  %50 = getelementptr inbounds i8, ptr %48, i64 4
  store i16 -1, ptr %50, align 4
  %51 = getelementptr inbounds i8, ptr %48, i64 6
  store i16 -1, ptr %51, align 2
  %52 = getelementptr inbounds i8, ptr %48, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %52, i8 0, i64 24, i1 false)
  %53 = load i32, ptr %12, align 8, !tbaa !287
  %54 = add nsw i32 %53, 1
  store i32 %54, ptr %12, align 8, !tbaa !287
  ret i32 %53
}

; Function Attrs: uwtable
define dso_local noundef i32 @"?AddCustomRectFontGlyph@ImFontAtlas@@QEAAHPEAUImFont@@GHHMAEBUImVec2@@@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(1184) %0, ptr noundef %1, i16 noundef %2, i32 noundef %3, i32 noundef %4, float noundef %5, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %6) local_unnamed_addr #0 align 2 {
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BE@PBFICKNN@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2210)
  br label %10

10:                                               ; preds = %9, %7
  %11 = add i32 %3, -1
  %12 = icmp ult i32 %11, 65535
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DK@GHLOFHKF@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2211)
  br label %14

14:                                               ; preds = %10, %13
  %15 = add i32 %4, -1
  %16 = icmp ult i32 %15, 65535
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DO@CAIIJEKF@?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAh?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2212)
  br label %18

18:                                               ; preds = %14, %17
  %19 = load i64, ptr %6, align 4
  %20 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %21 = load i32, ptr %20, align 8, !tbaa !287
  %22 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 1
  %23 = load i32, ptr %22, align 4, !tbaa !286
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  %26 = add nsw i32 %21, 1
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = sdiv i32 %21, 2
  %30 = add nsw i32 %29, %21
  br label %31

31:                                               ; preds = %28, %25
  %32 = phi i32 [ %30, %28 ], [ 8, %25 ]
  %33 = tail call i32 @llvm.smax.i32(i32 %32, i32 %26)
  %34 = icmp slt i32 %21, %33
  br i1 %34, label %35, label %49

35:                                               ; preds = %31
  %36 = sext i32 %33 to i64
  %37 = shl nsw i64 %36, 5
  %38 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %37)
  %39 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !271
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = load i32, ptr %20, align 8, !tbaa !287
  %44 = sext i32 %43 to i64
  %45 = shl nsw i64 %44, 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr nonnull align 8 %40, i64 %45, i1 false)
  %46 = load ptr, ptr %39, align 8, !tbaa !271
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %46)
  br label %47

47:                                               ; preds = %42, %35
  store ptr %38, ptr %39, align 8, !tbaa !271
  store i32 %33, ptr %22, align 4, !tbaa !286
  %48 = load i32, ptr %20, align 8, !tbaa !287
  br label %49

49:                                               ; preds = %18, %31, %47
  %50 = phi i32 [ %48, %47 ], [ %21, %31 ], [ %21, %18 ]
  %51 = zext i16 %2 to i32
  %52 = trunc i32 %4 to i16
  %53 = trunc i32 %3 to i16
  %54 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !271
  %56 = sext i32 %50 to i64
  %57 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %55, i64 %56
  store i16 %53, ptr %57, align 8
  %58 = getelementptr inbounds i8, ptr %57, i64 2
  store i16 %52, ptr %58, align 2
  %59 = getelementptr inbounds i8, ptr %57, i64 4
  store i16 -1, ptr %59, align 4
  %60 = getelementptr inbounds i8, ptr %57, i64 6
  store i16 -1, ptr %60, align 2
  %61 = getelementptr inbounds i8, ptr %57, i64 8
  store i32 %51, ptr %61, align 8
  %62 = getelementptr inbounds i8, ptr %57, i64 12
  store float %5, ptr %62, align 4
  %63 = getelementptr inbounds i8, ptr %57, i64 16
  store i64 %19, ptr %63, align 8
  %64 = getelementptr inbounds i8, ptr %57, i64 24
  store ptr %1, ptr %64, align 8
  %65 = load i32, ptr %20, align 8, !tbaa !287
  %66 = add nsw i32 %65, 1
  store i32 %66, ptr %20, align 8, !tbaa !287
  ret i32 %65
}

; Function Attrs: uwtable
define dso_local void @"?CalcCustomRectUV@ImFontAtlas@@QEBAXPEBUImFontAtlasCustomRect@@PEAUImVec2@@1@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1184) %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %6 = load i32, ptr %5, align 8, !tbaa !292
  %7 = icmp sgt i32 %6, 0
  %8 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %9 = load i32, ptr %8, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = select i1 %7, i1 %10, i1 false
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2226)
  br label %13

13:                                               ; preds = %4, %12
  %14 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %1, i64 0, i32 2
  %15 = load i16, ptr %14, align 4, !tbaa !346
  %16 = icmp eq i16 %15, -1
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2227)
  %18 = load i16, ptr %14, align 4, !tbaa !346
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi i16 [ %18, %17 ], [ %15, %13 ]
  %21 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %1, i64 0, i32 3
  %22 = load i16, ptr %21, align 2, !tbaa !348
  %23 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 12
  %24 = insertelement <2 x i16> poison, i16 %20, i64 0
  %25 = insertelement <2 x i16> %24, i16 %22, i64 1
  %26 = uitofp <2 x i16> %25 to <2 x float>
  %27 = load <2 x float>, ptr %23, align 8, !tbaa !6
  %28 = fmul fast <2 x float> %27, %26
  store <2 x float> %28, ptr %2, align 4
  %29 = load <2 x i16>, ptr %14, align 4, !tbaa !121
  %30 = zext <2 x i16> %29 to <2 x i32>
  %31 = load <2 x i16>, ptr %1, align 8, !tbaa !121
  %32 = zext <2 x i16> %31 to <2 x i32>
  %33 = add nuw nsw <2 x i32> %32, %30
  %34 = sitofp <2 x i32> %33 to <2 x float>
  %35 = load <2 x float>, ptr %23, align 8, !tbaa !6
  %36 = fmul fast <2 x float> %35, %34
  store <2 x float> %36, ptr %3, align 4
  ret void
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @"?GetMouseCursorTexData@ImFontAtlas@@QEAA_NHPEAUImVec2@@0QEAU2@1@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1184) %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef writeonly %3, ptr nocapture noundef writeonly %4, ptr nocapture noundef writeonly %5) local_unnamed_addr #0 align 2 {
  %7 = icmp ugt i32 %1, 8
  br i1 %7, label %64, label %8

8:                                                ; preds = %6
  %9 = load i32, ptr %0, align 8, !tbaa !349
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %64

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 20
  %14 = load i32, ptr %13, align 4, !tbaa !266
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DC@JHOLDEIK@?$AAP?$AAa?$AAc?$AAk?$AAI?$AAd?$AAM?$AAo?$AAu?$AAs?$AAe?$AAC?$AAu?$AAr?$AAs?$AAo?$AAr?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2239)
  %17 = load i32, ptr %13, align 4, !tbaa !266
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i32 [ %17, %16 ], [ %14, %12 ]
  %20 = icmp sgt i32 %19, -1
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BG@HMJJDGFN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2856)
  %22 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  br label %27

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %25 = load i32, ptr %24, align 8
  %26 = icmp sgt i32 %25, %19
  br i1 %26, label %29, label %27

27:                                               ; preds = %23, %21
  %28 = phi ptr [ %22, %21 ], [ %24, %23 ]
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi ptr [ %24, %23 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.ImVector.3, ptr %30, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !271
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %32, i64 %33, i32 2
  %35 = zext i32 %1 to i64
  %36 = getelementptr inbounds [9 x [3 x %struct.ImVec2]], ptr @FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA, i64 0, i64 %35
  %37 = getelementptr inbounds [9 x [3 x %struct.ImVec2]], ptr @FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA, i64 0, i64 %35, i64 1
  %38 = load i64, ptr %37, align 8
  %39 = getelementptr inbounds [9 x [3 x %struct.ImVec2]], ptr @FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA, i64 0, i64 %35, i64 2
  %40 = load i64, ptr %39, align 8
  %41 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 12
  %42 = load <2 x i16>, ptr %34, align 4, !tbaa !121
  %43 = uitofp <2 x i16> %42 to <2 x float>
  %44 = load <2 x float>, ptr %36, align 8, !tbaa !6
  %45 = fadd fast <2 x float> %44, %43
  store i64 %38, ptr %3, align 4
  store i64 %40, ptr %2, align 4
  %46 = load <2 x float>, ptr %41, align 8, !tbaa !6
  %47 = fmul fast <2 x float> %46, %45
  store <2 x float> %47, ptr %4, align 4
  %48 = getelementptr inbounds %struct.ImVec2, ptr %4, i64 1
  %49 = load <2 x float>, ptr %37, align 8
  %50 = fadd fast <2 x float> %49, %45
  %51 = load <2 x float>, ptr %41, align 8, !tbaa !6
  %52 = fmul fast <2 x float> %51, %50
  store <2 x float> %52, ptr %48, align 4
  %53 = extractelement <2 x float> %45, i64 0
  %54 = fadd fast float %53, 1.230000e+02
  %55 = load <2 x float>, ptr %41, align 8, !tbaa !6
  %56 = insertelement <2 x float> %45, float %54, i64 0
  %57 = fmul fast <2 x float> %55, %56
  store <2 x float> %57, ptr %5, align 4
  %58 = extractelement <2 x float> %49, i64 0
  %59 = fadd fast float %58, %54
  %60 = getelementptr inbounds %struct.ImVec2, ptr %5, i64 1
  %61 = load <2 x float>, ptr %41, align 8, !tbaa !6
  %62 = insertelement <2 x float> %50, float %59, i64 0
  %63 = fmul fast <2 x float> %61, %62
  store <2 x float> %63, ptr %60, align 4
  br label %64

64:                                               ; preds = %8, %6, %29
  %65 = phi i1 [ true, %29 ], [ false, %6 ], [ false, %8 ]
  ret i1 %65
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local noundef nonnull ptr @"?ImFontAtlasGetBuilderForStbTruetype@@YAPEBUImFontBuilderIO@@XZ"() local_unnamed_addr #24 {
  store ptr @"?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z", ptr @"?io@?1??ImFontAtlasGetBuilderForStbTruetype@@YAPEBUImFontBuilderIO@@XZ@4U2@A", align 8, !tbaa !299
  ret ptr @"?io@?1??ImFontAtlasGetBuilderForStbTruetype@@YAPEBUImFontBuilderIO@@XZ@4U2@A"
}

; Function Attrs: mustprogress nofree nosync nounwind memory(argmem: write) uwtable
define dso_local void @"?ImFontAtlasBuildMultiplyCalcLookupTable@@YAXQEAEM@Z"(ptr nocapture noundef writeonly %0, float noundef %1) local_unnamed_addr #25 {
  %3 = insertelement <16 x float> poison, float %1, i64 0
  %4 = shufflevector <16 x float> %3, <16 x float> poison, <16 x i32> zeroinitializer
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi i64 [ 0, %2 ], [ %14, %5 ]
  %7 = phi <16 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %2 ], [ %15, %5 ]
  %8 = uitofp <16 x i32> %7 to <16 x float>
  %9 = fmul fast <16 x float> %4, %8
  %10 = fptoui <16 x float> %9 to <16 x i32>
  %11 = tail call <16 x i32> @llvm.umin.v16i32(<16 x i32> %10, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>)
  %12 = trunc <16 x i32> %11 to <16 x i8>
  %13 = getelementptr inbounds i8, ptr %0, i64 %6
  store <16 x i8> %12, ptr %13, align 1, !tbaa !46
  %14 = add nuw i64 %6, 16
  %15 = add <16 x i32> %7, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %16 = icmp eq i64 %14, 256
  br i1 %16, label %17, label %5, !llvm.loop !350

17:                                               ; preds = %5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @"?ImFontAtlasBuildMultiplyRectAlpha8@@YAXQEBEPEAEHHHHH@Z"(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) local_unnamed_addr #26 {
  %8 = icmp sgt i32 %5, 0
  br i1 %8, label %9, label %71

9:                                                ; preds = %7
  %10 = icmp sgt i32 %4, 0
  %11 = sub nsw i32 %6, %4
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %71

13:                                               ; preds = %9
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds i8, ptr %1, i64 %14
  %16 = mul nsw i32 %6, %3
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, ptr %15, i64 %17
  %19 = and i32 %4, 3
  %20 = icmp eq i32 %19, 0
  %21 = icmp ult i32 %4, 4
  br label %22

22:                                               ; preds = %13, %66
  %23 = phi i32 [ %68, %66 ], [ %5, %13 ]
  %24 = phi ptr [ %69, %66 ], [ %18, %13 ]
  br i1 %20, label %37, label %25

25:                                               ; preds = %22, %25
  %26 = phi i32 [ %33, %25 ], [ %4, %22 ]
  %27 = phi ptr [ %34, %25 ], [ %24, %22 ]
  %28 = phi i32 [ %35, %25 ], [ 0, %22 ]
  %29 = load i8, ptr %27, align 1, !tbaa !46
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds i8, ptr %0, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !46
  store i8 %32, ptr %27, align 1, !tbaa !46
  %33 = add nsw i32 %26, -1
  %34 = getelementptr inbounds i8, ptr %27, i64 1
  %35 = add i32 %28, 1
  %36 = icmp eq i32 %35, %19
  br i1 %36, label %37, label %25, !llvm.loop !351

37:                                               ; preds = %25, %22
  %38 = phi i32 [ %4, %22 ], [ %33, %25 ]
  %39 = phi ptr [ %24, %22 ], [ %34, %25 ]
  %40 = phi ptr [ undef, %22 ], [ %34, %25 ]
  br i1 %21, label %66, label %41

41:                                               ; preds = %37, %41
  %42 = phi i32 [ %63, %41 ], [ %38, %37 ]
  %43 = phi ptr [ %64, %41 ], [ %39, %37 ]
  %44 = load i8, ptr %43, align 1, !tbaa !46
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds i8, ptr %0, i64 %45
  %47 = load i8, ptr %46, align 1, !tbaa !46
  store i8 %47, ptr %43, align 1, !tbaa !46
  %48 = getelementptr inbounds i8, ptr %43, i64 1
  %49 = load i8, ptr %48, align 1, !tbaa !46
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds i8, ptr %0, i64 %50
  %52 = load i8, ptr %51, align 1, !tbaa !46
  store i8 %52, ptr %48, align 1, !tbaa !46
  %53 = getelementptr inbounds i8, ptr %43, i64 2
  %54 = load i8, ptr %53, align 1, !tbaa !46
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds i8, ptr %0, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !46
  store i8 %57, ptr %53, align 1, !tbaa !46
  %58 = getelementptr inbounds i8, ptr %43, i64 3
  %59 = load i8, ptr %58, align 1, !tbaa !46
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds i8, ptr %0, i64 %60
  %62 = load i8, ptr %61, align 1, !tbaa !46
  store i8 %62, ptr %58, align 1, !tbaa !46
  %63 = add nsw i32 %42, -4
  %64 = getelementptr inbounds i8, ptr %43, i64 4
  %65 = icmp sgt i32 %42, 4
  br i1 %65, label %41, label %66, !llvm.loop !352

66:                                               ; preds = %41, %37
  %67 = phi ptr [ %40, %37 ], [ %64, %41 ]
  %68 = add nsw i32 %23, -1
  %69 = getelementptr inbounds i8, ptr %67, i64 %12
  %70 = icmp sgt i32 %23, 1
  br i1 %70, label %22, label %71, !llvm.loop !353

71:                                               ; preds = %66, %9, %7
  ret void
}

; Function Attrs: uwtable
define internal noundef zeroext i1 @"?ImFontAtlasBuildWithStbTruetype@@YA_NPEAUImFontAtlas@@@Z"(ptr noundef %0) #0 personality ptr @__CxxFrameHandler3 {
  %2 = alloca %struct.stbtt__csctx, align 8
  %3 = alloca %struct.stbtt__csctx, align 8
  %4 = alloca [8 x i8], align 8
  %5 = alloca [8 x i8], align 8
  %6 = alloca ptr, align 8
  %7 = alloca [129 x float], align 16
  %8 = alloca { float, float, i32 }, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca %struct.stbtt__csctx, align 8
  %12 = alloca %struct.stbtt__buf, align 8
  %13 = alloca %struct.stbtt__buf, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.stbtt__buf, align 8
  %19 = alloca %struct.stbtt__buf, align 8
  %20 = alloca %struct.stbtt__buf, align 8
  %21 = alloca %struct.stbtt__buf, align 8
  %22 = alloca %struct.stbtt__buf, align 8
  %23 = alloca %struct.stbtt__buf, align 8
  %24 = alloca %struct.stbtt__buf, align 8
  %25 = alloca %struct.stbtt__buf, align 8
  %26 = alloca %struct.stbtt__buf, align 8
  %27 = alloca %struct.ImVector.11, align 8
  %28 = alloca %struct.ImVector.16, align 8
  %29 = alloca [256 x i8], align 16
  %30 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16
  %31 = load i32, ptr %30, align 8, !tbaa !280
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %1
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DG@BBHAKCJP@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAD?$AAa?$AAt?$AAa?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2340)
  br label %34

34:                                               ; preds = %33, %1
  tail call void @"?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z"(ptr noundef nonnull %0)
  %35 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 1
  store ptr null, ptr %35, align 8, !tbaa !176
  %36 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %37 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %38 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 12
  %39 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %37, i8 0, i64 24, i1 false)
  %40 = load i8, ptr %39, align 8, !tbaa !267, !range !268, !noundef !269
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1LE@PGHOGCJ@?$AA?$CB?$AAL?$AAo?$AAc?$AAk?$AAe?$AAd?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAo?$AAd?$AAi?$AAf?$AAy?$AA?5?$AAa?$AA?5?$AAl?$AAo?$AAc?$AAk@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2006)
  br label %43

43:                                               ; preds = %42, %34
  %44 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %45 = load ptr, ptr %44, align 8, !tbaa !273
  %46 = icmp eq ptr %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %45)
  br label %48

48:                                               ; preds = %47, %43
  %49 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %50 = load ptr, ptr %49, align 8, !tbaa !274
  %51 = icmp eq ptr %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %50)
  br label %53

53:                                               ; preds = %48, %52
  %54 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 7
  store i8 0, ptr %54, align 1, !tbaa !275
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %44, i8 0, i64 16, i1 false)
  %55 = load i32, ptr %30, align 8, !tbaa !280
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = tail call i32 @llvm.smax.i32(i32 %55, i32 8)
  %59 = zext i32 %58 to i64
  %60 = mul nuw nsw i64 %59, 272
  %61 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %60)
          to label %62 unwind label %4032

62:                                               ; preds = %53, %57
  %63 = phi ptr [ null, %53 ], [ %61, %57 ]
  %64 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %65 = load i32, ptr %64, align 8, !tbaa !281
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = tail call i32 @llvm.smax.i32(i32 %65, i32 8)
  %69 = zext i32 %68 to i64
  %70 = shl nuw nsw i64 %69, 5
  %71 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %70)
          to label %72 unwind label %4032

72:                                               ; preds = %62, %67
  %73 = phi ptr [ null, %62 ], [ %71, %67 ]
  %74 = mul nsw i32 %55, 272
  %75 = sext i32 %74 to i64
  tail call void @llvm.memset.p0.i64(ptr align 8 %63, i8 0, i64 %75, i1 false)
  %76 = shl nsw i32 %65, 5
  %77 = sext i32 %76 to i64
  tail call void @llvm.memset.p0.i64(ptr align 8 %73, i8 0, i64 %77, i1 false)
  %78 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 16, i32 2
  %79 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  %80 = getelementptr inbounds %struct.stbtt__buf, ptr %12, i64 0, i32 1
  %81 = getelementptr inbounds %struct.stbtt__buf, ptr %12, i64 0, i32 2
  br label %82

82:                                               ; preds = %1046, %72
  %83 = phi i32 [ 0, %72 ], [ %1053, %1046 ]
  %84 = load i32, ptr %30, align 8, !tbaa !280
  %85 = icmp sge i32 %83, %84
  br i1 %85, label %1054, label %86

86:                                               ; preds = %82
  %87 = icmp sgt i32 %55, %83
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %89 unwind label %4032

89:                                               ; preds = %88
  %90 = load i32, ptr %30, align 8
  br label %91

91:                                               ; preds = %89, %86
  %92 = phi i32 [ %90, %89 ], [ %84, %86 ]
  %93 = zext i32 %83 to i64
  %94 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %93
  %95 = icmp sgt i32 %92, %83
  br i1 %95, label %97, label %96

96:                                               ; preds = %91
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %97 unwind label %4032

97:                                               ; preds = %91, %96
  %98 = load ptr, ptr %78, align 8, !tbaa !270
  %99 = getelementptr inbounds %struct.ImFontConfig, ptr %98, i64 %93
  %100 = getelementptr inbounds %struct.ImFontConfig, ptr %98, i64 %93, i32 18
  %101 = load ptr, ptr %100, align 8, !tbaa !313
  %102 = icmp eq ptr %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %struct.ImFont, ptr %101, i64 0, i32 6
  %105 = load ptr, ptr %104, align 8, !tbaa !171
  %106 = icmp eq ptr %105, null
  %107 = icmp eq ptr %105, %0
  %108 = or i1 %106, %107
  br i1 %108, label %110, label %109

109:                                              ; preds = %103, %97
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1KE@NPGLPIC@?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CI?$AA?$CB?$AAc?$AAf?$AAg?$AA?4?$AAD?$AAs?$AAt?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2364)
          to label %110 unwind label %4032

110:                                              ; preds = %109, %103
  %111 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %93, i32 5
  store i32 -1, ptr %111, align 8, !tbaa !354
  %112 = load i32, ptr %64, align 8, !tbaa !281
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %132

114:                                              ; preds = %110
  %115 = load ptr, ptr %100, align 8, !tbaa !313
  %116 = load ptr, ptr %79, align 8, !tbaa !272
  %117 = zext i32 %112 to i64
  br label %119

118:                                              ; preds = %126
  br i1 %130, label %132, label %133

119:                                              ; preds = %114, %126
  %120 = phi i64 [ 0, %114 ], [ %128, %126 ]
  %121 = getelementptr inbounds ptr, ptr %116, i64 %120
  %122 = load ptr, ptr %121, align 8, !tbaa !117
  %123 = icmp eq ptr %115, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = trunc i64 %120 to i32
  store i32 %125, ptr %111, align 8, !tbaa !354
  br label %126

126:                                              ; preds = %119, %124
  %127 = phi i32 [ -1, %119 ], [ %125, %124 ]
  %128 = add nuw nsw i64 %120, 1
  %129 = icmp ult i64 %128, %117
  %130 = icmp eq i32 %127, -1
  %131 = select i1 %129, i1 %130, i1 false
  br i1 %131, label %119, label %118, !llvm.loop !362

132:                                              ; preds = %110, %118
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CO@NKKOCLPN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAD?$AAs?$AAt?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2373)
          to label %4021 unwind label %4032

133:                                              ; preds = %118
  %134 = getelementptr inbounds %struct.ImFontConfig, ptr %98, i64 %93, i32 3
  %135 = load i32, ptr %134, align 8, !tbaa !363
  %136 = load ptr, ptr %99, align 8, !tbaa !282
  %137 = load i8, ptr %136, align 1, !tbaa !46
  switch i8 %137, label %268 [
    i8 49, label %138
    i8 116, label %150
    i8 79, label %161
    i8 0, label %173
  ]

138:                                              ; preds = %133
  %139 = getelementptr inbounds i8, ptr %136, i64 1
  %140 = load i8, ptr %139, align 1, !tbaa !46
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %268

142:                                              ; preds = %138
  %143 = getelementptr inbounds i8, ptr %136, i64 2
  %144 = load i8, ptr %143, align 1, !tbaa !46
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %268

146:                                              ; preds = %142
  %147 = getelementptr inbounds i8, ptr %136, i64 3
  %148 = load i8, ptr %147, align 1, !tbaa !46
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %193, label %268

150:                                              ; preds = %133
  %151 = getelementptr inbounds i8, ptr %136, i64 1
  %152 = load i8, ptr %151, align 1, !tbaa !46
  switch i8 %152, label %268 [
    i8 121, label %153
    i8 114, label %185
    i8 116, label %196
  ]

153:                                              ; preds = %150
  %154 = getelementptr inbounds i8, ptr %136, i64 2
  %155 = load i8, ptr %154, align 1, !tbaa !46
  %156 = icmp eq i8 %155, 112
  br i1 %156, label %157, label %268

157:                                              ; preds = %153
  %158 = getelementptr inbounds i8, ptr %136, i64 3
  %159 = load i8, ptr %158, align 1, !tbaa !46
  %160 = icmp eq i8 %159, 49
  br i1 %160, label %193, label %268

161:                                              ; preds = %133
  %162 = getelementptr inbounds i8, ptr %136, i64 1
  %163 = load i8, ptr %162, align 1, !tbaa !46
  %164 = icmp eq i8 %163, 84
  br i1 %164, label %165, label %268

165:                                              ; preds = %161
  %166 = getelementptr inbounds i8, ptr %136, i64 2
  %167 = load i8, ptr %166, align 1, !tbaa !46
  %168 = icmp eq i8 %167, 84
  br i1 %168, label %169, label %268

169:                                              ; preds = %165
  %170 = getelementptr inbounds i8, ptr %136, i64 3
  %171 = load i8, ptr %170, align 1, !tbaa !46
  %172 = icmp eq i8 %171, 79
  br i1 %172, label %193, label %268

173:                                              ; preds = %133
  %174 = getelementptr inbounds i8, ptr %136, i64 1
  %175 = load i8, ptr %174, align 1, !tbaa !46
  %176 = icmp eq i8 %175, 1
  br i1 %176, label %177, label %268

177:                                              ; preds = %173
  %178 = getelementptr inbounds i8, ptr %136, i64 2
  %179 = load i8, ptr %178, align 1, !tbaa !46
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %268

181:                                              ; preds = %177
  %182 = getelementptr inbounds i8, ptr %136, i64 3
  %183 = load i8, ptr %182, align 1, !tbaa !46
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %193, label %268

185:                                              ; preds = %150
  %186 = getelementptr inbounds i8, ptr %136, i64 2
  %187 = load i8, ptr %186, align 1, !tbaa !46
  %188 = icmp eq i8 %187, 117
  br i1 %188, label %189, label %268

189:                                              ; preds = %185
  %190 = getelementptr inbounds i8, ptr %136, i64 3
  %191 = load i8, ptr %190, align 1, !tbaa !46
  %192 = icmp eq i8 %191, 101
  br i1 %192, label %193, label %268

193:                                              ; preds = %189, %181, %169, %157, %146
  %194 = icmp ne i32 %135, 0
  %195 = sext i1 %194 to i32
  br label %265

196:                                              ; preds = %150
  %197 = getelementptr inbounds i8, ptr %136, i64 2
  %198 = load i8, ptr %197, align 1, !tbaa !46
  %199 = icmp eq i8 %198, 99
  br i1 %199, label %200, label %268

200:                                              ; preds = %196
  %201 = getelementptr inbounds i8, ptr %136, i64 3
  %202 = load i8, ptr %201, align 1, !tbaa !46
  %203 = icmp eq i8 %202, 102
  br i1 %203, label %204, label %268

204:                                              ; preds = %200
  %205 = getelementptr inbounds i8, ptr %136, i64 4
  %206 = load i8, ptr %205, align 1, !tbaa !46
  %207 = zext i8 %206 to i32
  %208 = shl nuw i32 %207, 24
  %209 = getelementptr inbounds i8, ptr %136, i64 5
  %210 = load i8, ptr %209, align 1, !tbaa !46
  %211 = zext i8 %210 to i32
  %212 = shl nuw nsw i32 %211, 16
  %213 = or i32 %212, %208
  %214 = getelementptr inbounds i8, ptr %136, i64 6
  %215 = load i8, ptr %214, align 1, !tbaa !46
  %216 = zext i8 %215 to i32
  %217 = shl nuw nsw i32 %216, 8
  %218 = or i32 %213, %217
  %219 = getelementptr inbounds i8, ptr %136, i64 7
  %220 = load i8, ptr %219, align 1, !tbaa !46
  %221 = zext i8 %220 to i32
  %222 = or i32 %218, %221
  switch i32 %222, label %268 [
    i32 65536, label %223
    i32 131072, label %223
  ]

223:                                              ; preds = %204, %204
  %224 = getelementptr inbounds i8, ptr %136, i64 8
  %225 = load i8, ptr %224, align 1, !tbaa !46
  %226 = zext i8 %225 to i32
  %227 = shl nuw i32 %226, 24
  %228 = getelementptr inbounds i8, ptr %136, i64 9
  %229 = load i8, ptr %228, align 1, !tbaa !46
  %230 = zext i8 %229 to i32
  %231 = shl nuw nsw i32 %230, 16
  %232 = or i32 %231, %227
  %233 = getelementptr inbounds i8, ptr %136, i64 10
  %234 = load i8, ptr %233, align 1, !tbaa !46
  %235 = zext i8 %234 to i32
  %236 = shl nuw nsw i32 %235, 8
  %237 = or i32 %232, %236
  %238 = getelementptr inbounds i8, ptr %136, i64 11
  %239 = load i8, ptr %238, align 1, !tbaa !46
  %240 = zext i8 %239 to i32
  %241 = or i32 %237, %240
  %242 = icmp sgt i32 %241, %135
  br i1 %242, label %243, label %268

243:                                              ; preds = %223
  %244 = getelementptr inbounds i8, ptr %136, i64 12
  %245 = shl nsw i32 %135, 2
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, ptr %244, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !46
  %249 = zext i8 %248 to i32
  %250 = shl nuw i32 %249, 24
  %251 = getelementptr inbounds i8, ptr %247, i64 1
  %252 = load i8, ptr %251, align 1, !tbaa !46
  %253 = zext i8 %252 to i32
  %254 = shl nuw nsw i32 %253, 16
  %255 = or i32 %254, %250
  %256 = getelementptr inbounds i8, ptr %247, i64 2
  %257 = load i8, ptr %256, align 1, !tbaa !46
  %258 = zext i8 %257 to i32
  %259 = shl nuw nsw i32 %258, 8
  %260 = or i32 %255, %259
  %261 = getelementptr inbounds i8, ptr %247, i64 3
  %262 = load i8, ptr %261, align 1, !tbaa !46
  %263 = zext i8 %262 to i32
  %264 = or i32 %260, %263
  br label %265

265:                                              ; preds = %243, %193
  %266 = phi i32 [ %195, %193 ], [ %264, %243 ]
  %267 = icmp sgt i32 %266, -1
  br i1 %267, label %272, label %268

268:                                              ; preds = %150, %189, %185, %157, %153, %204, %133, %138, %142, %146, %161, %165, %169, %173, %177, %181, %196, %200, %223, %265
  %269 = phi i32 [ %266, %265 ], [ -1, %223 ], [ -1, %200 ], [ -1, %196 ], [ -1, %181 ], [ -1, %177 ], [ -1, %173 ], [ -1, %169 ], [ -1, %165 ], [ -1, %161 ], [ -1, %146 ], [ -1, %142 ], [ -1, %138 ], [ -1, %133 ], [ -1, %204 ], [ -1, %153 ], [ -1, %157 ], [ -1, %185 ], [ -1, %189 ], [ -1, %150 ]
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1JA@MENENCJI@?$AAf?$AAo?$AAn?$AAt?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAF?$AAo?$AAn?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAi?$AAs@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2378)
          to label %270 unwind label %4032

270:                                              ; preds = %268
  %271 = load ptr, ptr %99, align 8, !tbaa !282
  br label %272

272:                                              ; preds = %270, %265
  %273 = phi ptr [ %271, %270 ], [ %136, %265 ]
  %274 = phi i32 [ %269, %270 ], [ %266, %265 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %19)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %23)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %24)
  %275 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 1
  store ptr %273, ptr %275, align 8, !tbaa !364
  %276 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 2
  store i32 %274, ptr %276, align 8, !tbaa !365
  %277 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 14
  %278 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 14, i32 1
  %279 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 14, i32 2
  %280 = zext i32 %274 to i64
  %281 = getelementptr inbounds i8, ptr %273, i64 4
  %282 = getelementptr inbounds i8, ptr %281, i64 %280
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %277, i8 0, i64 16, i1 false)
  %283 = load i8, ptr %282, align 1, !tbaa !46
  %284 = getelementptr i8, ptr %282, i64 1
  %285 = load i8, ptr %284, align 1, !tbaa !46
  %286 = zext i8 %283 to i32
  %287 = shl nuw nsw i32 %286, 8
  %288 = zext i8 %285 to i32
  %289 = or i32 %287, %288
  %290 = add i32 %274, 12
  %291 = icmp eq i32 %289, 0
  br i1 %291, label %382, label %292

292:                                              ; preds = %272
  %293 = zext i32 %289 to i64
  br label %294

294:                                              ; preds = %334, %292
  %295 = phi i64 [ 0, %292 ], [ %335, %334 ]
  %296 = trunc i64 %295 to i32
  %297 = shl i32 %296, 4
  %298 = add i32 %297, %290
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds i8, ptr %273, i64 %299
  %301 = load i8, ptr %300, align 1, !tbaa !46
  %302 = icmp eq i8 %301, 99
  br i1 %302, label %303, label %334

303:                                              ; preds = %294
  %304 = getelementptr inbounds i8, ptr %300, i64 1
  %305 = load i8, ptr %304, align 1, !tbaa !46
  %306 = icmp eq i8 %305, 109
  br i1 %306, label %307, label %334

307:                                              ; preds = %303
  %308 = getelementptr inbounds i8, ptr %300, i64 2
  %309 = load i8, ptr %308, align 1, !tbaa !46
  %310 = icmp eq i8 %309, 97
  br i1 %310, label %311, label %334

311:                                              ; preds = %307
  %312 = getelementptr inbounds i8, ptr %300, i64 3
  %313 = load i8, ptr %312, align 1, !tbaa !46
  %314 = icmp eq i8 %313, 112
  br i1 %314, label %315, label %334

315:                                              ; preds = %311
  %316 = getelementptr inbounds i8, ptr %300, i64 8
  %317 = load i8, ptr %316, align 1, !tbaa !46
  %318 = zext i8 %317 to i32
  %319 = shl nuw i32 %318, 24
  %320 = getelementptr inbounds i8, ptr %316, i64 1
  %321 = load i8, ptr %320, align 1, !tbaa !46
  %322 = zext i8 %321 to i32
  %323 = shl nuw nsw i32 %322, 16
  %324 = or i32 %323, %319
  %325 = getelementptr inbounds i8, ptr %316, i64 2
  %326 = load i8, ptr %325, align 1, !tbaa !46
  %327 = zext i8 %326 to i32
  %328 = shl nuw nsw i32 %327, 8
  %329 = or i32 %324, %328
  %330 = getelementptr inbounds i8, ptr %316, i64 3
  %331 = load i8, ptr %330, align 1, !tbaa !46
  %332 = zext i8 %331 to i32
  %333 = or i32 %329, %332
  br label %337

334:                                              ; preds = %311, %307, %303, %294
  %335 = add nuw nsw i64 %295, 1
  %336 = icmp eq i64 %335, %293
  br i1 %336, label %337, label %294, !llvm.loop !366

337:                                              ; preds = %334, %315
  %338 = phi i32 [ %333, %315 ], [ 0, %334 ]
  br label %339

339:                                              ; preds = %379, %337
  %340 = phi i64 [ 0, %337 ], [ %380, %379 ]
  %341 = trunc i64 %340 to i32
  %342 = shl i32 %341, 4
  %343 = add i32 %342, %290
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds i8, ptr %273, i64 %344
  %346 = load i8, ptr %345, align 1, !tbaa !46
  %347 = icmp eq i8 %346, 108
  br i1 %347, label %348, label %379

348:                                              ; preds = %339
  %349 = getelementptr inbounds i8, ptr %345, i64 1
  %350 = load i8, ptr %349, align 1, !tbaa !46
  %351 = icmp eq i8 %350, 111
  br i1 %351, label %352, label %379

352:                                              ; preds = %348
  %353 = getelementptr inbounds i8, ptr %345, i64 2
  %354 = load i8, ptr %353, align 1, !tbaa !46
  %355 = icmp eq i8 %354, 99
  br i1 %355, label %356, label %379

356:                                              ; preds = %352
  %357 = getelementptr inbounds i8, ptr %345, i64 3
  %358 = load i8, ptr %357, align 1, !tbaa !46
  %359 = icmp eq i8 %358, 97
  br i1 %359, label %360, label %379

360:                                              ; preds = %356
  %361 = getelementptr inbounds i8, ptr %345, i64 8
  %362 = load i8, ptr %361, align 1, !tbaa !46
  %363 = zext i8 %362 to i32
  %364 = shl nuw i32 %363, 24
  %365 = getelementptr inbounds i8, ptr %361, i64 1
  %366 = load i8, ptr %365, align 1, !tbaa !46
  %367 = zext i8 %366 to i32
  %368 = shl nuw nsw i32 %367, 16
  %369 = or i32 %368, %364
  %370 = getelementptr inbounds i8, ptr %361, i64 2
  %371 = load i8, ptr %370, align 1, !tbaa !46
  %372 = zext i8 %371 to i32
  %373 = shl nuw nsw i32 %372, 8
  %374 = or i32 %369, %373
  %375 = getelementptr inbounds i8, ptr %361, i64 3
  %376 = load i8, ptr %375, align 1, !tbaa !46
  %377 = zext i8 %376 to i32
  %378 = or i32 %374, %377
  br label %382

379:                                              ; preds = %356, %352, %348, %339
  %380 = add nuw nsw i64 %340, 1
  %381 = icmp eq i64 %380, %293
  br i1 %381, label %382, label %339, !llvm.loop !366

382:                                              ; preds = %379, %360, %272
  %383 = phi i32 [ %338, %360 ], [ 0, %272 ], [ %338, %379 ]
  %384 = phi i32 [ %378, %360 ], [ 0, %272 ], [ 0, %379 ]
  %385 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 4
  store i32 %384, ptr %385, align 8, !tbaa !367
  %386 = load i8, ptr %282, align 1, !tbaa !46
  %387 = load i8, ptr %284, align 1, !tbaa !46
  %388 = zext i8 %386 to i32
  %389 = shl nuw nsw i32 %388, 8
  %390 = zext i8 %387 to i32
  %391 = or i32 %389, %390
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %438, label %393

393:                                              ; preds = %382
  %394 = zext i32 %391 to i64
  br label %395

395:                                              ; preds = %435, %393
  %396 = phi i64 [ 0, %393 ], [ %436, %435 ]
  %397 = trunc i64 %396 to i32
  %398 = shl i32 %397, 4
  %399 = add i32 %398, %290
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds i8, ptr %273, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !46
  %403 = icmp eq i8 %402, 104
  br i1 %403, label %404, label %435

404:                                              ; preds = %395
  %405 = getelementptr inbounds i8, ptr %401, i64 1
  %406 = load i8, ptr %405, align 1, !tbaa !46
  %407 = icmp eq i8 %406, 101
  br i1 %407, label %408, label %435

408:                                              ; preds = %404
  %409 = getelementptr inbounds i8, ptr %401, i64 2
  %410 = load i8, ptr %409, align 1, !tbaa !46
  %411 = icmp eq i8 %410, 97
  br i1 %411, label %412, label %435

412:                                              ; preds = %408
  %413 = getelementptr inbounds i8, ptr %401, i64 3
  %414 = load i8, ptr %413, align 1, !tbaa !46
  %415 = icmp eq i8 %414, 100
  br i1 %415, label %416, label %435

416:                                              ; preds = %412
  %417 = getelementptr inbounds i8, ptr %401, i64 8
  %418 = load i8, ptr %417, align 1, !tbaa !46
  %419 = zext i8 %418 to i32
  %420 = shl nuw i32 %419, 24
  %421 = getelementptr inbounds i8, ptr %417, i64 1
  %422 = load i8, ptr %421, align 1, !tbaa !46
  %423 = zext i8 %422 to i32
  %424 = shl nuw nsw i32 %423, 16
  %425 = or i32 %424, %420
  %426 = getelementptr inbounds i8, ptr %417, i64 2
  %427 = load i8, ptr %426, align 1, !tbaa !46
  %428 = zext i8 %427 to i32
  %429 = shl nuw nsw i32 %428, 8
  %430 = or i32 %425, %429
  %431 = getelementptr inbounds i8, ptr %417, i64 3
  %432 = load i8, ptr %431, align 1, !tbaa !46
  %433 = zext i8 %432 to i32
  %434 = or i32 %430, %433
  br label %438

435:                                              ; preds = %412, %408, %404, %395
  %436 = add nuw nsw i64 %396, 1
  %437 = icmp eq i64 %436, %394
  br i1 %437, label %438, label %395, !llvm.loop !366

438:                                              ; preds = %435, %416, %382
  %439 = phi i32 [ %434, %416 ], [ 0, %382 ], [ 0, %435 ]
  %440 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 5
  store i32 %439, ptr %440, align 4, !tbaa !368
  %441 = load i8, ptr %282, align 1, !tbaa !46
  %442 = load i8, ptr %284, align 1, !tbaa !46
  %443 = zext i8 %441 to i32
  %444 = shl nuw nsw i32 %443, 8
  %445 = zext i8 %442 to i32
  %446 = or i32 %444, %445
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %493, label %448

448:                                              ; preds = %438
  %449 = zext i32 %446 to i64
  br label %450

450:                                              ; preds = %490, %448
  %451 = phi i64 [ 0, %448 ], [ %491, %490 ]
  %452 = trunc i64 %451 to i32
  %453 = shl i32 %452, 4
  %454 = add i32 %453, %290
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds i8, ptr %273, i64 %455
  %457 = load i8, ptr %456, align 1, !tbaa !46
  %458 = icmp eq i8 %457, 103
  br i1 %458, label %459, label %490

459:                                              ; preds = %450
  %460 = getelementptr inbounds i8, ptr %456, i64 1
  %461 = load i8, ptr %460, align 1, !tbaa !46
  %462 = icmp eq i8 %461, 108
  br i1 %462, label %463, label %490

463:                                              ; preds = %459
  %464 = getelementptr inbounds i8, ptr %456, i64 2
  %465 = load i8, ptr %464, align 1, !tbaa !46
  %466 = icmp eq i8 %465, 121
  br i1 %466, label %467, label %490

467:                                              ; preds = %463
  %468 = getelementptr inbounds i8, ptr %456, i64 3
  %469 = load i8, ptr %468, align 1, !tbaa !46
  %470 = icmp eq i8 %469, 102
  br i1 %470, label %471, label %490

471:                                              ; preds = %467
  %472 = getelementptr inbounds i8, ptr %456, i64 8
  %473 = load i8, ptr %472, align 1, !tbaa !46
  %474 = zext i8 %473 to i32
  %475 = shl nuw i32 %474, 24
  %476 = getelementptr inbounds i8, ptr %472, i64 1
  %477 = load i8, ptr %476, align 1, !tbaa !46
  %478 = zext i8 %477 to i32
  %479 = shl nuw nsw i32 %478, 16
  %480 = or i32 %479, %475
  %481 = getelementptr inbounds i8, ptr %472, i64 2
  %482 = load i8, ptr %481, align 1, !tbaa !46
  %483 = zext i8 %482 to i32
  %484 = shl nuw nsw i32 %483, 8
  %485 = or i32 %480, %484
  %486 = getelementptr inbounds i8, ptr %472, i64 3
  %487 = load i8, ptr %486, align 1, !tbaa !46
  %488 = zext i8 %487 to i32
  %489 = or i32 %485, %488
  br label %493

490:                                              ; preds = %467, %463, %459, %450
  %491 = add nuw nsw i64 %451, 1
  %492 = icmp eq i64 %491, %449
  br i1 %492, label %493, label %450, !llvm.loop !366

493:                                              ; preds = %490, %471, %438
  %494 = phi i32 [ %489, %471 ], [ 0, %438 ], [ 0, %490 ]
  %495 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 6
  store i32 %494, ptr %495, align 8, !tbaa !369
  %496 = load i8, ptr %282, align 1, !tbaa !46
  %497 = load i8, ptr %284, align 1, !tbaa !46
  %498 = zext i8 %496 to i32
  %499 = shl nuw nsw i32 %498, 8
  %500 = zext i8 %497 to i32
  %501 = or i32 %499, %500
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %548, label %503

503:                                              ; preds = %493
  %504 = zext i32 %501 to i64
  br label %505

505:                                              ; preds = %545, %503
  %506 = phi i64 [ 0, %503 ], [ %546, %545 ]
  %507 = trunc i64 %506 to i32
  %508 = shl i32 %507, 4
  %509 = add i32 %508, %290
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds i8, ptr %273, i64 %510
  %512 = load i8, ptr %511, align 1, !tbaa !46
  %513 = icmp eq i8 %512, 104
  br i1 %513, label %514, label %545

514:                                              ; preds = %505
  %515 = getelementptr inbounds i8, ptr %511, i64 1
  %516 = load i8, ptr %515, align 1, !tbaa !46
  %517 = icmp eq i8 %516, 104
  br i1 %517, label %518, label %545

518:                                              ; preds = %514
  %519 = getelementptr inbounds i8, ptr %511, i64 2
  %520 = load i8, ptr %519, align 1, !tbaa !46
  %521 = icmp eq i8 %520, 101
  br i1 %521, label %522, label %545

522:                                              ; preds = %518
  %523 = getelementptr inbounds i8, ptr %511, i64 3
  %524 = load i8, ptr %523, align 1, !tbaa !46
  %525 = icmp eq i8 %524, 97
  br i1 %525, label %526, label %545

526:                                              ; preds = %522
  %527 = getelementptr inbounds i8, ptr %511, i64 8
  %528 = load i8, ptr %527, align 1, !tbaa !46
  %529 = zext i8 %528 to i32
  %530 = shl nuw i32 %529, 24
  %531 = getelementptr inbounds i8, ptr %527, i64 1
  %532 = load i8, ptr %531, align 1, !tbaa !46
  %533 = zext i8 %532 to i32
  %534 = shl nuw nsw i32 %533, 16
  %535 = or i32 %534, %530
  %536 = getelementptr inbounds i8, ptr %527, i64 2
  %537 = load i8, ptr %536, align 1, !tbaa !46
  %538 = zext i8 %537 to i32
  %539 = shl nuw nsw i32 %538, 8
  %540 = or i32 %535, %539
  %541 = getelementptr inbounds i8, ptr %527, i64 3
  %542 = load i8, ptr %541, align 1, !tbaa !46
  %543 = zext i8 %542 to i32
  %544 = or i32 %540, %543
  br label %548

545:                                              ; preds = %522, %518, %514, %505
  %546 = add nuw nsw i64 %506, 1
  %547 = icmp eq i64 %546, %504
  br i1 %547, label %548, label %505, !llvm.loop !366

548:                                              ; preds = %545, %526, %493
  %549 = phi i32 [ %544, %526 ], [ 0, %493 ], [ 0, %545 ]
  %550 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 7
  store i32 %549, ptr %550, align 4, !tbaa !370
  %551 = load i8, ptr %282, align 1, !tbaa !46
  %552 = load i8, ptr %284, align 1, !tbaa !46
  %553 = zext i8 %551 to i32
  %554 = shl nuw nsw i32 %553, 8
  %555 = zext i8 %552 to i32
  %556 = or i32 %554, %555
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %603, label %558

558:                                              ; preds = %548
  %559 = zext i32 %556 to i64
  br label %560

560:                                              ; preds = %600, %558
  %561 = phi i64 [ 0, %558 ], [ %601, %600 ]
  %562 = trunc i64 %561 to i32
  %563 = shl i32 %562, 4
  %564 = add i32 %563, %290
  %565 = zext i32 %564 to i64
  %566 = getelementptr inbounds i8, ptr %273, i64 %565
  %567 = load i8, ptr %566, align 1, !tbaa !46
  %568 = icmp eq i8 %567, 104
  br i1 %568, label %569, label %600

569:                                              ; preds = %560
  %570 = getelementptr inbounds i8, ptr %566, i64 1
  %571 = load i8, ptr %570, align 1, !tbaa !46
  %572 = icmp eq i8 %571, 109
  br i1 %572, label %573, label %600

573:                                              ; preds = %569
  %574 = getelementptr inbounds i8, ptr %566, i64 2
  %575 = load i8, ptr %574, align 1, !tbaa !46
  %576 = icmp eq i8 %575, 116
  br i1 %576, label %577, label %600

577:                                              ; preds = %573
  %578 = getelementptr inbounds i8, ptr %566, i64 3
  %579 = load i8, ptr %578, align 1, !tbaa !46
  %580 = icmp eq i8 %579, 120
  br i1 %580, label %581, label %600

581:                                              ; preds = %577
  %582 = getelementptr inbounds i8, ptr %566, i64 8
  %583 = load i8, ptr %582, align 1, !tbaa !46
  %584 = zext i8 %583 to i32
  %585 = shl nuw i32 %584, 24
  %586 = getelementptr inbounds i8, ptr %582, i64 1
  %587 = load i8, ptr %586, align 1, !tbaa !46
  %588 = zext i8 %587 to i32
  %589 = shl nuw nsw i32 %588, 16
  %590 = or i32 %589, %585
  %591 = getelementptr inbounds i8, ptr %582, i64 2
  %592 = load i8, ptr %591, align 1, !tbaa !46
  %593 = zext i8 %592 to i32
  %594 = shl nuw nsw i32 %593, 8
  %595 = or i32 %590, %594
  %596 = getelementptr inbounds i8, ptr %582, i64 3
  %597 = load i8, ptr %596, align 1, !tbaa !46
  %598 = zext i8 %597 to i32
  %599 = or i32 %595, %598
  br label %603

600:                                              ; preds = %577, %573, %569, %560
  %601 = add nuw nsw i64 %561, 1
  %602 = icmp eq i64 %601, %559
  br i1 %602, label %603, label %560, !llvm.loop !366

603:                                              ; preds = %600, %581, %548
  %604 = phi i32 [ %599, %581 ], [ 0, %548 ], [ 0, %600 ]
  %605 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 8
  store i32 %604, ptr %605, align 8, !tbaa !371
  %606 = load i8, ptr %282, align 1, !tbaa !46
  %607 = load i8, ptr %284, align 1, !tbaa !46
  %608 = zext i8 %606 to i32
  %609 = shl nuw nsw i32 %608, 8
  %610 = zext i8 %607 to i32
  %611 = or i32 %609, %610
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %658, label %613

613:                                              ; preds = %603
  %614 = zext i32 %611 to i64
  br label %615

615:                                              ; preds = %655, %613
  %616 = phi i64 [ 0, %613 ], [ %656, %655 ]
  %617 = trunc i64 %616 to i32
  %618 = shl i32 %617, 4
  %619 = add i32 %618, %290
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds i8, ptr %273, i64 %620
  %622 = load i8, ptr %621, align 1, !tbaa !46
  %623 = icmp eq i8 %622, 107
  br i1 %623, label %624, label %655

624:                                              ; preds = %615
  %625 = getelementptr inbounds i8, ptr %621, i64 1
  %626 = load i8, ptr %625, align 1, !tbaa !46
  %627 = icmp eq i8 %626, 101
  br i1 %627, label %628, label %655

628:                                              ; preds = %624
  %629 = getelementptr inbounds i8, ptr %621, i64 2
  %630 = load i8, ptr %629, align 1, !tbaa !46
  %631 = icmp eq i8 %630, 114
  br i1 %631, label %632, label %655

632:                                              ; preds = %628
  %633 = getelementptr inbounds i8, ptr %621, i64 3
  %634 = load i8, ptr %633, align 1, !tbaa !46
  %635 = icmp eq i8 %634, 110
  br i1 %635, label %636, label %655

636:                                              ; preds = %632
  %637 = getelementptr inbounds i8, ptr %621, i64 8
  %638 = load i8, ptr %637, align 1, !tbaa !46
  %639 = zext i8 %638 to i32
  %640 = shl nuw i32 %639, 24
  %641 = getelementptr inbounds i8, ptr %637, i64 1
  %642 = load i8, ptr %641, align 1, !tbaa !46
  %643 = zext i8 %642 to i32
  %644 = shl nuw nsw i32 %643, 16
  %645 = or i32 %644, %640
  %646 = getelementptr inbounds i8, ptr %637, i64 2
  %647 = load i8, ptr %646, align 1, !tbaa !46
  %648 = zext i8 %647 to i32
  %649 = shl nuw nsw i32 %648, 8
  %650 = or i32 %645, %649
  %651 = getelementptr inbounds i8, ptr %637, i64 3
  %652 = load i8, ptr %651, align 1, !tbaa !46
  %653 = zext i8 %652 to i32
  %654 = or i32 %650, %653
  br label %658

655:                                              ; preds = %632, %628, %624, %615
  %656 = add nuw nsw i64 %616, 1
  %657 = icmp eq i64 %656, %614
  br i1 %657, label %658, label %615, !llvm.loop !366

658:                                              ; preds = %655, %636, %603
  %659 = phi i32 [ %654, %636 ], [ 0, %603 ], [ 0, %655 ]
  %660 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 9
  store i32 %659, ptr %660, align 4, !tbaa !372
  %661 = load i8, ptr %282, align 1, !tbaa !46
  %662 = load i8, ptr %284, align 1, !tbaa !46
  %663 = zext i8 %661 to i32
  %664 = shl nuw nsw i32 %663, 8
  %665 = zext i8 %662 to i32
  %666 = or i32 %664, %665
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %713, label %668

668:                                              ; preds = %658
  %669 = zext i32 %666 to i64
  br label %670

670:                                              ; preds = %710, %668
  %671 = phi i64 [ 0, %668 ], [ %711, %710 ]
  %672 = trunc i64 %671 to i32
  %673 = shl i32 %672, 4
  %674 = add i32 %673, %290
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds i8, ptr %273, i64 %675
  %677 = load i8, ptr %676, align 1, !tbaa !46
  %678 = icmp eq i8 %677, 71
  br i1 %678, label %679, label %710

679:                                              ; preds = %670
  %680 = getelementptr inbounds i8, ptr %676, i64 1
  %681 = load i8, ptr %680, align 1, !tbaa !46
  %682 = icmp eq i8 %681, 80
  br i1 %682, label %683, label %710

683:                                              ; preds = %679
  %684 = getelementptr inbounds i8, ptr %676, i64 2
  %685 = load i8, ptr %684, align 1, !tbaa !46
  %686 = icmp eq i8 %685, 79
  br i1 %686, label %687, label %710

687:                                              ; preds = %683
  %688 = getelementptr inbounds i8, ptr %676, i64 3
  %689 = load i8, ptr %688, align 1, !tbaa !46
  %690 = icmp eq i8 %689, 83
  br i1 %690, label %691, label %710

691:                                              ; preds = %687
  %692 = getelementptr inbounds i8, ptr %676, i64 8
  %693 = load i8, ptr %692, align 1, !tbaa !46
  %694 = zext i8 %693 to i32
  %695 = shl nuw i32 %694, 24
  %696 = getelementptr inbounds i8, ptr %692, i64 1
  %697 = load i8, ptr %696, align 1, !tbaa !46
  %698 = zext i8 %697 to i32
  %699 = shl nuw nsw i32 %698, 16
  %700 = or i32 %699, %695
  %701 = getelementptr inbounds i8, ptr %692, i64 2
  %702 = load i8, ptr %701, align 1, !tbaa !46
  %703 = zext i8 %702 to i32
  %704 = shl nuw nsw i32 %703, 8
  %705 = or i32 %700, %704
  %706 = getelementptr inbounds i8, ptr %692, i64 3
  %707 = load i8, ptr %706, align 1, !tbaa !46
  %708 = zext i8 %707 to i32
  %709 = or i32 %705, %708
  br label %713

710:                                              ; preds = %687, %683, %679, %670
  %711 = add nuw nsw i64 %671, 1
  %712 = icmp eq i64 %711, %669
  br i1 %712, label %713, label %670, !llvm.loop !366

713:                                              ; preds = %710, %691, %658
  %714 = phi i32 [ %709, %691 ], [ 0, %658 ], [ 0, %710 ]
  %715 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 10
  store i32 %714, ptr %715, align 8, !tbaa !373
  %716 = icmp eq i32 %383, 0
  %717 = icmp eq i32 %439, 0
  %718 = select i1 %716, i1 true, i1 %717
  %719 = icmp eq i32 %549, 0
  %720 = select i1 %718, i1 true, i1 %719
  %721 = icmp eq i32 %604, 0
  %722 = select i1 %720, i1 true, i1 %721
  br i1 %722, label %999, label %723

723:                                              ; preds = %713
  %724 = icmp eq i32 %494, 0
  br i1 %724, label %727, label %725

725:                                              ; preds = %723
  %726 = icmp eq i32 %384, 0
  br i1 %726, label %999, label %865

727:                                              ; preds = %723
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #39
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #39
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #39
  store i32 2, ptr %14, align 4, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #39
  store i32 0, ptr %15, align 4, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #39
  store i32 0, ptr %16, align 4, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #39
  store i32 0, ptr %17, align 4, !tbaa !105
  %728 = load i8, ptr %282, align 1, !tbaa !46
  %729 = load i8, ptr %284, align 1, !tbaa !46
  %730 = zext i8 %728 to i32
  %731 = shl nuw nsw i32 %730, 8
  %732 = zext i8 %729 to i32
  %733 = or i32 %731, %732
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %864, label %735

735:                                              ; preds = %727
  %736 = zext i32 %733 to i64
  br label %737

737:                                              ; preds = %758, %735
  %738 = phi i64 [ 0, %735 ], [ %759, %758 ]
  %739 = trunc i64 %738 to i32
  %740 = shl i32 %739, 4
  %741 = add i32 %740, %290
  %742 = zext i32 %741 to i64
  %743 = getelementptr inbounds i8, ptr %273, i64 %742
  %744 = load i8, ptr %743, align 1, !tbaa !46
  %745 = icmp eq i8 %744, 67
  br i1 %745, label %746, label %758

746:                                              ; preds = %737
  %747 = getelementptr inbounds i8, ptr %743, i64 1
  %748 = load i8, ptr %747, align 1, !tbaa !46
  %749 = icmp eq i8 %748, 70
  br i1 %749, label %750, label %758

750:                                              ; preds = %746
  %751 = getelementptr inbounds i8, ptr %743, i64 2
  %752 = load i8, ptr %751, align 1, !tbaa !46
  %753 = icmp eq i8 %752, 70
  br i1 %753, label %754, label %758

754:                                              ; preds = %750
  %755 = getelementptr inbounds i8, ptr %743, i64 3
  %756 = load i8, ptr %755, align 1, !tbaa !46
  %757 = icmp eq i8 %756, 32
  br i1 %757, label %761, label %758

758:                                              ; preds = %754, %750, %746, %737
  %759 = add nuw nsw i64 %738, 1
  %760 = icmp eq i64 %759, %736
  br i1 %760, label %864, label %737, !llvm.loop !366

761:                                              ; preds = %754
  %762 = getelementptr inbounds i8, ptr %743, i64 8
  %763 = load i8, ptr %762, align 1, !tbaa !46
  %764 = zext i8 %763 to i32
  %765 = shl nuw i32 %764, 24
  %766 = getelementptr inbounds i8, ptr %762, i64 1
  %767 = load i8, ptr %766, align 1, !tbaa !46
  %768 = zext i8 %767 to i32
  %769 = shl nuw nsw i32 %768, 16
  %770 = or i32 %769, %765
  %771 = getelementptr inbounds i8, ptr %762, i64 2
  %772 = load i8, ptr %771, align 1, !tbaa !46
  %773 = zext i8 %772 to i32
  %774 = shl nuw nsw i32 %773, 8
  %775 = or i32 %770, %774
  %776 = getelementptr inbounds i8, ptr %762, i64 3
  %777 = load i8, ptr %776, align 1, !tbaa !46
  %778 = zext i8 %777 to i32
  %779 = or i32 %775, %778
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %864, label %781

781:                                              ; preds = %761
  %782 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 18
  %783 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 19
  %784 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 19, i32 1
  %785 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 19, i32 2
  %786 = zext i32 %779 to i64
  %787 = getelementptr inbounds i8, ptr %273, i64 %786
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %782, i8 0, i64 32, i1 false)
  store ptr %787, ptr %277, align 8, !tbaa.struct !374
  store i32 0, ptr %278, align 8, !tbaa.struct !375
  store i32 536870912, ptr %279, align 4, !tbaa.struct !376
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %277, i64 16, i1 false), !tbaa.struct !374
  %788 = load i32, ptr %80, align 8, !tbaa !377
  %789 = add nsw i32 %788, 2
  %790 = load i32, ptr %81, align 4, !tbaa !378
  %791 = icmp slt i32 %790, %789
  %792 = icmp slt i32 %788, -2
  %793 = or i1 %792, %791
  br i1 %793, label %794, label %795

794:                                              ; preds = %781
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
          to label %803 unwind label %4032

795:                                              ; preds = %781
  %796 = icmp slt i32 %789, %790
  br i1 %796, label %797, label %803

797:                                              ; preds = %795
  %798 = load ptr, ptr %12, align 8, !tbaa !379
  %799 = zext i32 %789 to i64
  %800 = getelementptr inbounds i8, ptr %798, i64 %799
  %801 = load i8, ptr %800, align 1, !tbaa !46
  %802 = zext i8 %801 to i32
  br label %803

803:                                              ; preds = %794, %797, %795
  %804 = phi i32 [ %802, %797 ], [ 0, %795 ], [ 0, %794 ]
  %805 = icmp slt i32 %790, %804
  br i1 %805, label %806, label %807

806:                                              ; preds = %803
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
          to label %807 unwind label %4032

807:                                              ; preds = %806, %803
  %808 = tail call i32 @llvm.smin.i32(i32 %790, i32 %804)
  store i32 %808, ptr %80, align 8, !tbaa !377
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %18) #39
  invoke fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nonnull align 8 %18, ptr noundef nonnull %12)
          to label %809 unwind label %4032

809:                                              ; preds = %807
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %18) #39
  invoke fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nonnull align 8 %19, ptr noundef nonnull %12)
          to label %810 unwind label %4032

810:                                              ; preds = %809
  invoke fastcc void @"?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z"(ptr noalias nonnull align 8 %13, ptr noundef nonnull %19, i32 noundef 0)
          to label %811 unwind label %4032

811:                                              ; preds = %810
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %20) #39
  invoke fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nonnull align 8 %20, ptr noundef nonnull %12)
          to label %812 unwind label %4032

812:                                              ; preds = %811
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %20) #39
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %21) #39
  invoke fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nonnull align 8 %21, ptr noundef nonnull %12)
          to label %813 unwind label %4032

813:                                              ; preds = %812
  %814 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %814, ptr noundef nonnull align 8 dereferenceable(16) %21, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %21) #39
  invoke fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr noundef nonnull %13, i32 noundef 17, i32 noundef 1, ptr noundef nonnull %15)
          to label %815 unwind label %4032

815:                                              ; preds = %813
  invoke fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr noundef nonnull %13, i32 noundef 262, i32 noundef 1, ptr noundef nonnull %14)
          to label %816 unwind label %4032

816:                                              ; preds = %815
  invoke fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr noundef nonnull %13, i32 noundef 292, i32 noundef 1, ptr noundef nonnull %16)
          to label %817 unwind label %4032

817:                                              ; preds = %816
  invoke fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr noundef nonnull %13, i32 noundef 293, i32 noundef 1, ptr noundef nonnull %17)
          to label %818 unwind label %4032

818:                                              ; preds = %817
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %22) #39
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %24, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false), !tbaa.struct !374
  invoke fastcc void @"?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z"(ptr noalias nonnull align 8 %22, ptr noundef nonnull %24, ptr noundef nonnull %23)
          to label %819 unwind label %4032

819:                                              ; preds = %818
  %820 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %820, ptr noundef nonnull align 8 dereferenceable(16) %22, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %22) #39
  %821 = load i32, ptr %14, align 4, !tbaa !105
  %822 = icmp ne i32 %821, 2
  %823 = load i32, ptr %15, align 4
  %824 = icmp eq i32 %823, 0
  %825 = select i1 %822, i1 true, i1 %824
  br i1 %825, label %864, label %826

826:                                              ; preds = %819
  %827 = load i32, ptr %16, align 4, !tbaa !105
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %829, label %831

829:                                              ; preds = %826
  %830 = load i32, ptr %81, align 4, !tbaa !378
  br label %854

831:                                              ; preds = %826
  %832 = load i32, ptr %17, align 4, !tbaa !105
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %864, label %834

834:                                              ; preds = %831
  %835 = load i32, ptr %81, align 4, !tbaa !378
  %836 = icmp slt i32 %835, %827
  %837 = icmp slt i32 %827, 0
  %838 = or i1 %837, %836
  br i1 %838, label %839, label %840

839:                                              ; preds = %834
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
          to label %840 unwind label %4032

840:                                              ; preds = %839, %834
  %841 = phi i32 [ %827, %834 ], [ %835, %839 ]
  store i32 %841, ptr %80, align 8, !tbaa !377
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %25) #39
  invoke fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nonnull align 8 %25, ptr noundef nonnull %12)
          to label %842 unwind label %4032

842:                                              ; preds = %840
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %782, ptr noundef nonnull align 8 dereferenceable(16) %25, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %25) #39
  %843 = load i32, ptr %81, align 4, !tbaa !378
  %844 = sub i32 %843, %832
  %845 = or i32 %844, %832
  %846 = icmp slt i32 %845, 0
  %847 = icmp slt i32 %843, %832
  %848 = select i1 %846, i1 true, i1 %847
  %849 = load ptr, ptr %12, align 8
  %850 = zext i32 %832 to i64
  %851 = getelementptr inbounds i8, ptr %849, i64 %850
  %852 = select i1 %848, ptr null, ptr %851
  %853 = select i1 %848, i32 0, i32 %844
  store ptr %852, ptr %783, align 8, !tbaa.struct !374
  store i32 0, ptr %784, align 8, !tbaa.struct !375
  store i32 %853, ptr %785, align 4, !tbaa.struct !376
  br label %854

854:                                              ; preds = %842, %829
  %855 = phi i32 [ %830, %829 ], [ %843, %842 ]
  %856 = icmp slt i32 %855, %823
  %857 = icmp slt i32 %823, 0
  %858 = or i1 %857, %856
  br i1 %858, label %859, label %860

859:                                              ; preds = %854
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
          to label %860 unwind label %4032

860:                                              ; preds = %859, %854
  %861 = phi i32 [ %823, %854 ], [ %855, %859 ]
  store i32 %861, ptr %80, align 8, !tbaa !377
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %26) #39
  invoke fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nonnull align 8 %26, ptr noundef nonnull %12)
          to label %862 unwind label %4032

862:                                              ; preds = %860
  %863 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 15
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %863, ptr noundef nonnull align 8 dereferenceable(16) %26, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %26) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #39
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #39
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #39
  br label %865

864:                                              ; preds = %831, %819, %761, %727, %758
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #39
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #39
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #39
  br label %999

865:                                              ; preds = %862, %725
  %866 = load i8, ptr %282, align 1, !tbaa !46
  %867 = load i8, ptr %284, align 1, !tbaa !46
  %868 = zext i8 %866 to i32
  %869 = shl nuw nsw i32 %868, 8
  %870 = zext i8 %867 to i32
  %871 = or i32 %869, %870
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %930, label %873

873:                                              ; preds = %865
  %874 = zext i32 %871 to i64
  br label %875

875:                                              ; preds = %896, %873
  %876 = phi i64 [ 0, %873 ], [ %897, %896 ]
  %877 = trunc i64 %876 to i32
  %878 = shl i32 %877, 4
  %879 = add i32 %878, %290
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds i8, ptr %273, i64 %880
  %882 = load i8, ptr %881, align 1, !tbaa !46
  %883 = icmp eq i8 %882, 109
  br i1 %883, label %884, label %896

884:                                              ; preds = %875
  %885 = getelementptr inbounds i8, ptr %881, i64 1
  %886 = load i8, ptr %885, align 1, !tbaa !46
  %887 = icmp eq i8 %886, 97
  br i1 %887, label %888, label %896

888:                                              ; preds = %884
  %889 = getelementptr inbounds i8, ptr %881, i64 2
  %890 = load i8, ptr %889, align 1, !tbaa !46
  %891 = icmp eq i8 %890, 120
  br i1 %891, label %892, label %896

892:                                              ; preds = %888
  %893 = getelementptr inbounds i8, ptr %881, i64 3
  %894 = load i8, ptr %893, align 1, !tbaa !46
  %895 = icmp eq i8 %894, 112
  br i1 %895, label %899, label %896

896:                                              ; preds = %892, %888, %884, %875
  %897 = add nuw nsw i64 %876, 1
  %898 = icmp eq i64 %897, %874
  br i1 %898, label %930, label %875, !llvm.loop !366

899:                                              ; preds = %892
  %900 = getelementptr inbounds i8, ptr %881, i64 8
  %901 = load i8, ptr %900, align 1, !tbaa !46
  %902 = zext i8 %901 to i32
  %903 = shl nuw i32 %902, 24
  %904 = getelementptr inbounds i8, ptr %900, i64 1
  %905 = load i8, ptr %904, align 1, !tbaa !46
  %906 = zext i8 %905 to i32
  %907 = shl nuw nsw i32 %906, 16
  %908 = or i32 %907, %903
  %909 = getelementptr inbounds i8, ptr %900, i64 2
  %910 = load i8, ptr %909, align 1, !tbaa !46
  %911 = zext i8 %910 to i32
  %912 = shl nuw nsw i32 %911, 8
  %913 = or i32 %908, %912
  %914 = getelementptr inbounds i8, ptr %900, i64 3
  %915 = load i8, ptr %914, align 1, !tbaa !46
  %916 = zext i8 %915 to i32
  %917 = or i32 %913, %916
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %930, label %919

919:                                              ; preds = %899
  %920 = zext i32 %917 to i64
  %921 = getelementptr inbounds i8, ptr %273, i64 4
  %922 = getelementptr inbounds i8, ptr %921, i64 %920
  %923 = load i8, ptr %922, align 1, !tbaa !46
  %924 = getelementptr i8, ptr %922, i64 1
  %925 = load i8, ptr %924, align 1, !tbaa !46
  %926 = zext i8 %923 to i32
  %927 = shl nuw nsw i32 %926, 8
  %928 = zext i8 %925 to i32
  %929 = or i32 %927, %928
  br label %930

930:                                              ; preds = %896, %919, %899, %865
  %931 = phi i32 [ %929, %919 ], [ 65535, %865 ], [ 65535, %899 ], [ 65535, %896 ]
  %932 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 3
  store i32 %931, ptr %932, align 4, !tbaa !380
  %933 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 11
  store i32 -1, ptr %933, align 4, !tbaa !381
  %934 = zext i32 %383 to i64
  %935 = getelementptr inbounds i8, ptr %273, i64 2
  %936 = getelementptr inbounds i8, ptr %935, i64 %934
  %937 = load i8, ptr %936, align 1, !tbaa !46
  %938 = getelementptr i8, ptr %936, i64 1
  %939 = load i8, ptr %938, align 1, !tbaa !46
  %940 = zext i8 %937 to i32
  %941 = shl nuw nsw i32 %940, 8
  %942 = zext i8 %939 to i32
  %943 = or i32 %941, %942
  %944 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 12
  store i32 0, ptr %944, align 8, !tbaa !382
  %945 = icmp eq i32 %943, 0
  br i1 %945, label %999, label %946

946:                                              ; preds = %930
  %947 = add i32 %383, 4
  %948 = zext i32 %943 to i64
  br label %949

949:                                              ; preds = %993, %946
  %950 = phi i32 [ 0, %946 ], [ %994, %993 ]
  %951 = phi i64 [ 0, %946 ], [ %995, %993 ]
  %952 = trunc i64 %951 to i32
  %953 = shl i32 %952, 3
  %954 = add i32 %947, %953
  %955 = zext i32 %954 to i64
  %956 = getelementptr inbounds i8, ptr %273, i64 %955
  %957 = load i8, ptr %956, align 1, !tbaa !46
  %958 = getelementptr i8, ptr %956, i64 1
  %959 = load i8, ptr %958, align 1, !tbaa !46
  %960 = zext i8 %957 to i16
  %961 = shl nuw i16 %960, 8
  %962 = zext i8 %959 to i16
  %963 = or i16 %961, %962
  switch i16 %963, label %993 [
    i16 3, label %964
    i16 0, label %973
  ]

964:                                              ; preds = %949
  %965 = getelementptr inbounds i8, ptr %956, i64 2
  %966 = load i8, ptr %965, align 1, !tbaa !46
  %967 = getelementptr i8, ptr %965, i64 1
  %968 = load i8, ptr %967, align 1, !tbaa !46
  %969 = zext i8 %966 to i16
  %970 = shl nuw i16 %969, 8
  %971 = zext i8 %968 to i16
  %972 = or i16 %970, %971
  switch i16 %972, label %993 [
    i16 1, label %973
    i16 10, label %973
  ]

973:                                              ; preds = %964, %964, %949
  %974 = getelementptr inbounds i8, ptr %956, i64 4
  %975 = load i8, ptr %974, align 1, !tbaa !46
  %976 = zext i8 %975 to i32
  %977 = shl nuw i32 %976, 24
  %978 = getelementptr inbounds i8, ptr %974, i64 1
  %979 = load i8, ptr %978, align 1, !tbaa !46
  %980 = zext i8 %979 to i32
  %981 = shl nuw nsw i32 %980, 16
  %982 = or i32 %981, %977
  %983 = getelementptr inbounds i8, ptr %974, i64 2
  %984 = load i8, ptr %983, align 1, !tbaa !46
  %985 = zext i8 %984 to i32
  %986 = shl nuw nsw i32 %985, 8
  %987 = or i32 %982, %986
  %988 = getelementptr inbounds i8, ptr %974, i64 3
  %989 = load i8, ptr %988, align 1, !tbaa !46
  %990 = zext i8 %989 to i32
  %991 = or i32 %987, %990
  %992 = add i32 %991, %383
  store i32 %992, ptr %944, align 8, !tbaa !382
  br label %993

993:                                              ; preds = %973, %964, %949
  %994 = phi i32 [ %950, %964 ], [ %950, %949 ], [ %992, %973 ]
  %995 = add nuw nsw i64 %951, 1
  %996 = icmp eq i64 %995, %948
  br i1 %996, label %997, label %949, !llvm.loop !383

997:                                              ; preds = %993
  %998 = icmp eq i32 %994, 0
  br i1 %998, label %999, label %1000

999:                                              ; preds = %713, %725, %997, %930, %864
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %19)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %23)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %24)
  br label %4021

1000:                                             ; preds = %997
  %1001 = load i32, ptr %440, align 4, !tbaa !368
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr i8, ptr %273, i64 50
  %1004 = getelementptr i8, ptr %1003, i64 %1002
  %1005 = load i8, ptr %1004, align 1, !tbaa !46
  %1006 = getelementptr i8, ptr %1004, i64 1
  %1007 = load i8, ptr %1006, align 1, !tbaa !46
  %1008 = zext i8 %1005 to i32
  %1009 = shl nuw nsw i32 %1008, 8
  %1010 = zext i8 %1007 to i32
  %1011 = or i32 %1009, %1010
  %1012 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %94, i64 0, i32 13
  store i32 %1011, ptr %1012, align 4, !tbaa !384
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %19)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %23)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %24)
  %1013 = load i32, ptr %111, align 8, !tbaa !354
  %1014 = icmp sgt i32 %1013, -1
  %1015 = icmp sgt i32 %65, %1013
  %1016 = select i1 %1014, i1 %1015, i1 false
  br i1 %1016, label %1018, label %1017

1017:                                             ; preds = %1000
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %1018 unwind label %4032

1018:                                             ; preds = %1000, %1017
  %1019 = sext i32 %1013 to i64
  %1020 = getelementptr inbounds %struct.ImFontBuildDstData, ptr %73, i64 %1019
  %1021 = getelementptr inbounds %struct.ImFontConfig, ptr %98, i64 %93, i32 10
  %1022 = load ptr, ptr %1021, align 8, !tbaa !296
  %1023 = icmp eq ptr %1022, null
  %1024 = select i1 %1023, ptr @"?ranges@?1??GetGlyphRangesDefault@ImFontAtlas@@QEAAPEBGXZ@4QBGB", ptr %1022
  %1025 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %93, i32 4
  store ptr %1024, ptr %1025, align 8, !tbaa !385
  %1026 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %93, i32 6
  br label %1027

1027:                                             ; preds = %1040, %1018
  %1028 = phi ptr [ %1024, %1018 ], [ %1045, %1040 ]
  %1029 = load i16, ptr %1028, align 2, !tbaa !121
  %1030 = icmp eq i16 %1029, 0
  br i1 %1030, label %1046, label %1031

1031:                                             ; preds = %1027
  %1032 = getelementptr inbounds i16, ptr %1028, i64 1
  %1033 = load i16, ptr %1032, align 2, !tbaa !121
  %1034 = icmp eq i16 %1033, 0
  br i1 %1034, label %1046, label %1035

1035:                                             ; preds = %1031
  %1036 = icmp ugt i16 %1029, %1033
  br i1 %1036, label %1037, label %1040

1037:                                             ; preds = %1035
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DK@BFJIBNBB@?$AAs?$AAr?$AAc?$AA_?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAs?$AAr?$AAc?$AA_?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$FL?$AA1?$AA?$FN?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2389)
          to label %1038 unwind label %4032

1038:                                             ; preds = %1037
  %1039 = load i16, ptr %1032, align 2, !tbaa !121
  br label %1040

1040:                                             ; preds = %1038, %1035
  %1041 = phi i16 [ %1039, %1038 ], [ %1033, %1035 ]
  %1042 = zext i16 %1041 to i32
  %1043 = load i32, ptr %1026, align 4, !tbaa !386
  %1044 = tail call i32 @llvm.smax.i32(i32 %1043, i32 %1042)
  store i32 %1044, ptr %1026, align 4, !tbaa !386
  %1045 = getelementptr inbounds i16, ptr %1028, i64 2
  br label %1027, !llvm.loop !387

1046:                                             ; preds = %1027, %1031
  %1047 = load i32, ptr %1020, align 8, !tbaa !388
  %1048 = add nsw i32 %1047, 1
  store i32 %1048, ptr %1020, align 8, !tbaa !388
  %1049 = load i32, ptr %1026, align 4, !tbaa !386
  %1050 = getelementptr inbounds %struct.ImFontBuildDstData, ptr %73, i64 %1019, i32 1
  %1051 = load i32, ptr %1050, align 4, !tbaa !390
  %1052 = tail call i32 @llvm.smax.i32(i32 %1051, i32 %1049)
  store i32 %1052, ptr %1050, align 4, !tbaa !390
  %1053 = add nuw nsw i32 %83, 1
  br label %82, !llvm.loop !391

1054:                                             ; preds = %82, %1161
  %1055 = phi i32 [ %1162, %1161 ], [ 0, %82 ]
  %1056 = phi i32 [ %1154, %1161 ], [ 0, %82 ]
  %1057 = icmp slt i32 %1055, %55
  br i1 %1057, label %1058, label %1222

1058:                                             ; preds = %1054
  %1059 = zext i32 %1055 to i64
  %1060 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1059
  %1061 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1059, i32 5
  %1062 = load i32, ptr %1061, align 8, !tbaa !354
  %1063 = icmp sgt i32 %1062, -1
  %1064 = icmp sgt i32 %65, %1062
  %1065 = select i1 %1063, i1 %1064, i1 false
  br i1 %1065, label %1067, label %1066

1066:                                             ; preds = %1058
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %1067 unwind label %4032

1067:                                             ; preds = %1058, %1066
  %1068 = sext i32 %1062 to i64
  %1069 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1059, i32 8
  %1070 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1059, i32 6
  %1071 = load i32, ptr %1070, align 4, !tbaa !386
  %1072 = add nsw i32 %1071, 32
  %1073 = ashr i32 %1072, 5
  %1074 = getelementptr inbounds %struct.ImVector.12, ptr %1069, i64 0, i32 1
  %1075 = load i32, ptr %1074, align 4, !tbaa !392
  %1076 = icmp slt i32 %1075, %1073
  br i1 %1076, label %1077, label %1100

1077:                                             ; preds = %1067
  %1078 = icmp eq i32 %1075, 0
  br i1 %1078, label %1082, label %1079

1079:                                             ; preds = %1077
  %1080 = sdiv i32 %1075, 2
  %1081 = add nsw i32 %1080, %1075
  br label %1082

1082:                                             ; preds = %1079, %1077
  %1083 = phi i32 [ %1081, %1079 ], [ 8, %1077 ]
  %1084 = tail call i32 @llvm.smax.i32(i32 %1083, i32 %1073)
  %1085 = icmp slt i32 %1075, %1084
  br i1 %1085, label %1086, label %1100

1086:                                             ; preds = %1082
  %1087 = sext i32 %1084 to i64
  %1088 = shl nsw i64 %1087, 2
  %1089 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1088)
          to label %1090 unwind label %4032

1090:                                             ; preds = %1086
  %1091 = getelementptr inbounds %struct.ImVector.12, ptr %1069, i64 0, i32 2
  %1092 = load ptr, ptr %1091, align 8, !tbaa !393
  %1093 = icmp eq ptr %1092, null
  br i1 %1093, label %1099, label %1094

1094:                                             ; preds = %1090
  %1095 = load i32, ptr %1069, align 8, !tbaa !394
  %1096 = sext i32 %1095 to i64
  %1097 = shl nsw i64 %1096, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1089, ptr nonnull align 4 %1092, i64 %1097, i1 false)
  %1098 = load ptr, ptr %1091, align 8, !tbaa !393
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %1098)
          to label %1099 unwind label %4032

1099:                                             ; preds = %1094, %1090
  store ptr %1089, ptr %1091, align 8, !tbaa !393
  store i32 %1084, ptr %1074, align 4, !tbaa !392
  br label %1100

1100:                                             ; preds = %1099, %1082, %1067
  store i32 %1073, ptr %1069, align 8, !tbaa !394
  %1101 = getelementptr inbounds %struct.ImVector.12, ptr %1069, i64 0, i32 2
  %1102 = load ptr, ptr %1101, align 8, !tbaa !395
  %1103 = sext i32 %1073 to i64
  %1104 = shl nsw i64 %1103, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %1102, i8 0, i64 %1104, i1 false)
  %1105 = getelementptr inbounds %struct.ImFontBuildDstData, ptr %73, i64 %1068, i32 3
  %1106 = load i32, ptr %1105, align 8, !tbaa !394
  %1107 = icmp eq i32 %1106, 0
  br i1 %1107, label %1108, label %1144

1108:                                             ; preds = %1100
  %1109 = getelementptr inbounds %struct.ImFontBuildDstData, ptr %73, i64 %1068, i32 1
  %1110 = load i32, ptr %1109, align 4, !tbaa !390
  %1111 = add nsw i32 %1110, 32
  %1112 = ashr i32 %1111, 5
  %1113 = getelementptr inbounds %struct.ImVector.12, ptr %1105, i64 0, i32 1
  %1114 = load i32, ptr %1113, align 4, !tbaa !392
  %1115 = icmp slt i32 %1114, %1112
  br i1 %1115, label %1116, label %1139

1116:                                             ; preds = %1108
  %1117 = icmp eq i32 %1114, 0
  br i1 %1117, label %1121, label %1118

1118:                                             ; preds = %1116
  %1119 = sdiv i32 %1114, 2
  %1120 = add nsw i32 %1119, %1114
  br label %1121

1121:                                             ; preds = %1118, %1116
  %1122 = phi i32 [ %1120, %1118 ], [ 8, %1116 ]
  %1123 = tail call i32 @llvm.smax.i32(i32 %1122, i32 %1112)
  %1124 = icmp slt i32 %1114, %1123
  br i1 %1124, label %1125, label %1139

1125:                                             ; preds = %1121
  %1126 = sext i32 %1123 to i64
  %1127 = shl nsw i64 %1126, 2
  %1128 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1127)
          to label %1129 unwind label %4032

1129:                                             ; preds = %1125
  %1130 = getelementptr inbounds %struct.ImVector.12, ptr %1105, i64 0, i32 2
  %1131 = load ptr, ptr %1130, align 8, !tbaa !393
  %1132 = icmp eq ptr %1131, null
  br i1 %1132, label %1138, label %1133

1133:                                             ; preds = %1129
  %1134 = load i32, ptr %1105, align 8, !tbaa !394
  %1135 = sext i32 %1134 to i64
  %1136 = shl nsw i64 %1135, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1128, ptr nonnull align 4 %1131, i64 %1136, i1 false)
  %1137 = load ptr, ptr %1130, align 8, !tbaa !393
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %1137)
          to label %1138 unwind label %4032

1138:                                             ; preds = %1133, %1129
  store ptr %1128, ptr %1130, align 8, !tbaa !393
  store i32 %1123, ptr %1113, align 4, !tbaa !392
  br label %1139

1139:                                             ; preds = %1108, %1121, %1138
  store i32 %1112, ptr %1105, align 8, !tbaa !394
  %1140 = getelementptr inbounds %struct.ImVector.12, ptr %1105, i64 0, i32 2
  %1141 = load ptr, ptr %1140, align 8, !tbaa !395
  %1142 = sext i32 %1112 to i64
  %1143 = shl nsw i64 %1142, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %1141, i8 0, i64 %1143, i1 false)
  br label %1144

1144:                                             ; preds = %1139, %1100
  %1145 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1059, i32 4
  %1146 = load ptr, ptr %1145, align 8, !tbaa !385
  %1147 = getelementptr inbounds %struct.ImVector.12, ptr %1105, i64 0, i32 2
  %1148 = getelementptr i8, ptr %1060, i64 8
  %1149 = getelementptr i8, ptr %1060, i64 56
  %1150 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1059, i32 7
  %1151 = getelementptr inbounds %struct.ImFontBuildDstData, ptr %73, i64 %1068, i32 2
  br label %1152

1152:                                             ; preds = %1171, %1144
  %1153 = phi ptr [ %1146, %1144 ], [ %1172, %1171 ]
  %1154 = phi i32 [ %1056, %1144 ], [ %1168, %1171 ]
  %1155 = load i16, ptr %1153, align 2, !tbaa !121
  %1156 = icmp eq i16 %1155, 0
  br i1 %1156, label %1161, label %1157

1157:                                             ; preds = %1152
  %1158 = getelementptr inbounds i16, ptr %1153, i64 1
  %1159 = load i16, ptr %1158, align 2, !tbaa !121
  %1160 = icmp eq i16 %1159, 0
  br i1 %1160, label %1161, label %1163

1161:                                             ; preds = %1152, %1157
  %1162 = add nuw nsw i32 %1055, 1
  br label %1054, !llvm.loop !396

1163:                                             ; preds = %1157
  %1164 = zext i16 %1155 to i32
  br label %1165

1165:                                             ; preds = %1218, %1163
  %1166 = phi i16 [ %1159, %1163 ], [ %1221, %1218 ]
  %1167 = phi i32 [ %1164, %1163 ], [ %1220, %1218 ]
  %1168 = phi i32 [ %1154, %1163 ], [ %1219, %1218 ]
  %1169 = zext i16 %1166 to i32
  %1170 = icmp ugt i32 %1167, %1169
  br i1 %1170, label %1171, label %1173

1171:                                             ; preds = %1165
  %1172 = getelementptr inbounds i16, ptr %1153, i64 2
  br label %1152, !llvm.loop !397

1173:                                             ; preds = %1165
  %1174 = load i32, ptr %1105, align 8, !tbaa !398
  %1175 = shl i32 %1174, 5
  %1176 = icmp sgt i32 %1175, %1167
  br i1 %1176, label %1178, label %1177

1177:                                             ; preds = %1173
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DM?$AA?5?$AA5?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@IDACNBHO@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 586)
          to label %1178 unwind label %4032

1178:                                             ; preds = %1173, %1177
  %1179 = load ptr, ptr %1147, align 8, !tbaa !395
  %1180 = ashr i32 %1167, 5
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds i32, ptr %1179, i64 %1181
  %1183 = load i32, ptr %1182, align 4, !tbaa !105
  %1184 = and i32 %1167, 31
  %1185 = shl nuw i32 1, %1184
  %1186 = and i32 %1183, %1185
  %1187 = icmp eq i32 %1186, 0
  br i1 %1187, label %1188, label %1218

1188:                                             ; preds = %1178
  %1189 = load ptr, ptr %1148, align 8, !tbaa !364
  %1190 = load i32, ptr %1149, align 8, !tbaa !382
  %1191 = invoke fastcc noundef i32 @"?stbtt_FindGlyphIndex@@YAHPEBUstbtt_fontinfo@@H@Z"(ptr %1189, i32 %1190, i32 noundef %1167)
          to label %1192 unwind label %4032

1192:                                             ; preds = %1188
  %1193 = icmp eq i32 %1191, 0
  br i1 %1193, label %1218, label %1194

1194:                                             ; preds = %1192
  %1195 = load i32, ptr %1150, align 8, !tbaa !399
  %1196 = add nsw i32 %1195, 1
  store i32 %1196, ptr %1150, align 8, !tbaa !399
  %1197 = load i32, ptr %1151, align 8, !tbaa !400
  %1198 = add nsw i32 %1197, 1
  store i32 %1198, ptr %1151, align 8, !tbaa !400
  %1199 = load i32, ptr %1069, align 8, !tbaa !398
  %1200 = shl i32 %1199, 5
  %1201 = icmp sgt i32 %1200, %1167
  br i1 %1201, label %1203, label %1202

1202:                                             ; preds = %1194
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DM?$AA?5?$AA5?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@IDACNBHO@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 587)
          to label %1203 unwind label %4032

1203:                                             ; preds = %1194, %1202
  %1204 = load ptr, ptr %1101, align 8, !tbaa !395
  %1205 = getelementptr inbounds i32, ptr %1204, i64 %1181
  %1206 = load i32, ptr %1205, align 4, !tbaa !105
  %1207 = or i32 %1206, %1185
  store i32 %1207, ptr %1205, align 4, !tbaa !105
  %1208 = load i32, ptr %1105, align 8, !tbaa !398
  %1209 = shl i32 %1208, 5
  %1210 = icmp sgt i32 %1209, %1167
  br i1 %1210, label %1212, label %1211

1211:                                             ; preds = %1203
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DA@HCNHOFJN@?$AAn?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAS?$AAt?$AAo?$AAr?$AAa?$AAg?$AAe?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DM?$AA?5?$AA5?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@IDACNBHO@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 587)
          to label %1212 unwind label %4032

1212:                                             ; preds = %1203, %1211
  %1213 = load ptr, ptr %1147, align 8, !tbaa !395
  %1214 = getelementptr inbounds i32, ptr %1213, i64 %1181
  %1215 = load i32, ptr %1214, align 4, !tbaa !105
  %1216 = or i32 %1215, %1185
  store i32 %1216, ptr %1214, align 4, !tbaa !105
  %1217 = add nsw i32 %1168, 1
  br label %1218

1218:                                             ; preds = %1192, %1178, %1212
  %1219 = phi i32 [ %1168, %1178 ], [ %1217, %1212 ], [ %1168, %1192 ]
  %1220 = add i32 %1167, 1
  %1221 = load i16, ptr %1158, align 2, !tbaa !121
  br label %1165, !llvm.loop !401

1222:                                             ; preds = %1054, %1327
  %1223 = phi i32 [ %1328, %1327 ], [ 0, %1054 ]
  %1224 = icmp slt i32 %1223, %55
  br i1 %1224, label %1225, label %1329

1225:                                             ; preds = %1222
  %1226 = zext i32 %1223 to i64
  %1227 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1226, i32 9
  %1228 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1226, i32 7
  %1229 = load i32, ptr %1228, align 8, !tbaa !399
  %1230 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1226, i32 9, i32 1
  %1231 = load i32, ptr %1230, align 4, !tbaa !402
  %1232 = icmp slt i32 %1231, %1229
  br i1 %1232, label %1233, label %1247

1233:                                             ; preds = %1225
  %1234 = sext i32 %1229 to i64
  %1235 = shl nsw i64 %1234, 2
  %1236 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1235)
          to label %1237 unwind label %4032

1237:                                             ; preds = %1233
  %1238 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1226, i32 9, i32 2
  %1239 = load ptr, ptr %1238, align 8, !tbaa !403
  %1240 = icmp eq ptr %1239, null
  br i1 %1240, label %1246, label %1241

1241:                                             ; preds = %1237
  %1242 = load i32, ptr %1227, align 8, !tbaa !404
  %1243 = sext i32 %1242 to i64
  %1244 = shl nsw i64 %1243, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1236, ptr nonnull align 4 %1239, i64 %1244, i1 false)
  %1245 = load ptr, ptr %1238, align 8, !tbaa !403
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %1245)
          to label %1246 unwind label %4032

1246:                                             ; preds = %1241, %1237
  store ptr %1236, ptr %1238, align 8, !tbaa !403
  store i32 %1229, ptr %1230, align 4, !tbaa !402
  br label %1247

1247:                                             ; preds = %1246, %1225
  %1248 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1226, i32 8
  %1249 = load i32, ptr %1248, align 8, !tbaa !394
  %1250 = getelementptr i8, ptr %1248, i64 8
  %1251 = load ptr, ptr %1250, align 8, !tbaa !393
  %1252 = sext i32 %1249 to i64
  %1253 = getelementptr inbounds i32, ptr %1251, i64 %1252
  %1254 = icmp sgt i32 %1249, 0
  br i1 %1254, label %1255, label %1316

1255:                                             ; preds = %1247
  %1256 = ptrtoint ptr %1251 to i64
  %1257 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1226, i32 9, i32 2
  br label %1258

1258:                                             ; preds = %1311, %1255
  %1259 = phi ptr [ %1251, %1255 ], [ %1312, %1311 ]
  %1260 = load i32, ptr %1259, align 4, !tbaa !105
  %1261 = icmp eq i32 %1260, 0
  br i1 %1261, label %1311, label %1262

1262:                                             ; preds = %1258
  %1263 = ptrtoint ptr %1259 to i64
  %1264 = sub i64 %1263, %1256
  %1265 = trunc i64 %1264 to i32
  %1266 = shl i32 %1265, 3
  br label %1267

1267:                                             ; preds = %1308, %1262
  %1268 = phi i32 [ 0, %1262 ], [ %1309, %1308 ]
  %1269 = shl nuw i32 1, %1268
  %1270 = and i32 %1269, %1260
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1308, label %1272

1272:                                             ; preds = %1267
  %1273 = add nuw nsw i32 %1268, %1266
  %1274 = load i32, ptr %1227, align 8, !tbaa !404
  %1275 = load i32, ptr %1230, align 4, !tbaa !402
  %1276 = icmp eq i32 %1274, %1275
  br i1 %1276, label %1277, label %1301

1277:                                             ; preds = %1272
  %1278 = add nsw i32 %1274, 1
  %1279 = icmp eq i32 %1274, 0
  br i1 %1279, label %1283, label %1280

1280:                                             ; preds = %1277
  %1281 = sdiv i32 %1274, 2
  %1282 = add nsw i32 %1281, %1274
  br label %1283

1283:                                             ; preds = %1280, %1277
  %1284 = phi i32 [ %1282, %1280 ], [ 8, %1277 ]
  %1285 = tail call i32 @llvm.smax.i32(i32 %1284, i32 %1278)
  %1286 = icmp slt i32 %1274, %1285
  br i1 %1286, label %1287, label %1301

1287:                                             ; preds = %1283
  %1288 = sext i32 %1285 to i64
  %1289 = shl nsw i64 %1288, 2
  %1290 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1289)
          to label %1291 unwind label %4032

1291:                                             ; preds = %1287
  %1292 = load ptr, ptr %1257, align 8, !tbaa !403
  %1293 = icmp eq ptr %1292, null
  br i1 %1293, label %1299, label %1294

1294:                                             ; preds = %1291
  %1295 = load i32, ptr %1227, align 8, !tbaa !404
  %1296 = sext i32 %1295 to i64
  %1297 = shl nsw i64 %1296, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1290, ptr nonnull align 4 %1292, i64 %1297, i1 false)
  %1298 = load ptr, ptr %1257, align 8, !tbaa !403
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %1298)
          to label %1299 unwind label %4032

1299:                                             ; preds = %1294, %1291
  store ptr %1290, ptr %1257, align 8, !tbaa !403
  store i32 %1285, ptr %1230, align 4, !tbaa !402
  %1300 = load i32, ptr %1227, align 8, !tbaa !404
  br label %1301

1301:                                             ; preds = %1299, %1283, %1272
  %1302 = phi i32 [ %1300, %1299 ], [ %1274, %1283 ], [ %1274, %1272 ]
  %1303 = load ptr, ptr %1257, align 8, !tbaa !403
  %1304 = sext i32 %1302 to i64
  %1305 = getelementptr inbounds i32, ptr %1303, i64 %1304
  store i32 %1273, ptr %1305, align 4
  %1306 = load i32, ptr %1227, align 8, !tbaa !404
  %1307 = add nsw i32 %1306, 1
  store i32 %1307, ptr %1227, align 8, !tbaa !404
  br label %1308

1308:                                             ; preds = %1301, %1267
  %1309 = add nuw nsw i32 %1268, 1
  %1310 = icmp eq i32 %1309, 32
  br i1 %1310, label %1311, label %1267, !llvm.loop !405

1311:                                             ; preds = %1308, %1258
  %1312 = getelementptr inbounds i32, ptr %1259, i64 1
  %1313 = icmp ult ptr %1312, %1253
  br i1 %1313, label %1258, label %1314, !llvm.loop !406

1314:                                             ; preds = %1311
  %1315 = load ptr, ptr %1250, align 8, !tbaa !393
  br label %1316

1316:                                             ; preds = %1314, %1247
  %1317 = phi ptr [ %1315, %1314 ], [ %1251, %1247 ]
  %1318 = icmp eq ptr %1317, null
  br i1 %1318, label %1322, label %1319

1319:                                             ; preds = %1316
  %1320 = getelementptr inbounds %struct.ImVector.12, ptr %1248, i64 0, i32 1
  store i32 0, ptr %1320, align 4, !tbaa !392
  store i32 0, ptr %1248, align 8, !tbaa !394
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %1317)
          to label %1321 unwind label %4032

1321:                                             ; preds = %1319
  store ptr null, ptr %1250, align 8, !tbaa !393
  br label %1322

1322:                                             ; preds = %1321, %1316
  %1323 = load i32, ptr %1227, align 8, !tbaa !407
  %1324 = load i32, ptr %1228, align 8, !tbaa !399
  %1325 = icmp eq i32 %1323, %1324
  br i1 %1325, label %1327, label %1326

1326:                                             ; preds = %1322
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1FO@GJGKHCEN@?$AAs?$AAr?$AAc?$AA_?$AAt?$AAm?$AAp?$AA?4?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AAL?$AAi?$AAs?$AAt?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAr?$AAc?$AA_?$AAt@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2430)
          to label %1327 unwind label %4032

1327:                                             ; preds = %1326, %1322
  %1328 = add nuw nsw i32 %1223, 1
  br label %1222, !llvm.loop !408

1329:                                             ; preds = %1222, %1344
  %1330 = phi i32 [ %1345, %1344 ], [ 0, %1222 ]
  %1331 = icmp slt i32 %1330, %65
  br i1 %1331, label %1335, label %1332

1332:                                             ; preds = %1329
  %1333 = icmp eq ptr %73, null
  br i1 %1333, label %1346, label %1334

1334:                                             ; preds = %1332
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %73)
          to label %1346 unwind label %4032

1335:                                             ; preds = %1329
  %1336 = zext i32 %1330 to i64
  %1337 = getelementptr inbounds %struct.ImFontBuildDstData, ptr %73, i64 %1336, i32 3
  %1338 = getelementptr inbounds %struct.ImVector.12, ptr %1337, i64 0, i32 2
  %1339 = load ptr, ptr %1338, align 8, !tbaa !393
  %1340 = icmp eq ptr %1339, null
  br i1 %1340, label %1344, label %1341

1341:                                             ; preds = %1335
  %1342 = getelementptr inbounds %struct.ImVector.12, ptr %1337, i64 0, i32 1
  store i32 0, ptr %1342, align 4, !tbaa !392
  store i32 0, ptr %1337, align 8, !tbaa !394
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %1339)
          to label %1343 unwind label %4032

1343:                                             ; preds = %1341
  store ptr null, ptr %1338, align 8, !tbaa !393
  br label %1344

1344:                                             ; preds = %1343, %1335
  %1345 = add nuw nsw i32 %1330, 1
  br label %1329, !llvm.loop !409

1346:                                             ; preds = %1332, %1334
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %27) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %27, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %28) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, i8 0, i64 16, i1 false)
  %1347 = getelementptr inbounds %struct.ImVector.11, ptr %27, i64 0, i32 1
  %1348 = icmp sgt i32 %1056, 0
  br i1 %1348, label %1349, label %1354

1349:                                             ; preds = %1346
  %1350 = tail call i32 @llvm.smax.i32(i32 %1056, i32 8)
  %1351 = zext i32 %1350 to i64
  %1352 = mul nuw nsw i64 %1351, 24
  %1353 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1352)
          to label %1355 unwind label %4018

1354:                                             ; preds = %1346
  store i32 %1056, ptr %27, align 8, !tbaa !410
  br label %1364

1355:                                             ; preds = %1349
  %1356 = getelementptr inbounds %struct.ImVector.11, ptr %27, i64 0, i32 2
  store ptr %1353, ptr %1356, align 8, !tbaa !412
  store i32 %1350, ptr %1347, align 4, !tbaa !413
  store i32 %1056, ptr %27, align 8, !tbaa !410
  %1357 = tail call i32 @llvm.smax.i32(i32 %1056, i32 8)
  %1358 = zext i32 %1357 to i64
  %1359 = mul nuw nsw i64 %1358, 28
  %1360 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1359)
          to label %1361 unwind label %4018

1361:                                             ; preds = %1355
  %1362 = getelementptr inbounds %struct.ImVector.16, ptr %28, i64 0, i32 1
  %1363 = getelementptr inbounds %struct.ImVector.16, ptr %28, i64 0, i32 2
  store ptr %1360, ptr %1363, align 8, !tbaa !414
  store i32 %1357, ptr %1362, align 4, !tbaa !416
  br label %1364

1364:                                             ; preds = %1354, %1361
  %1365 = phi ptr [ %1353, %1361 ], [ null, %1354 ]
  %1366 = phi ptr [ %1360, %1361 ], [ null, %1354 ]
  store i32 %1056, ptr %28, align 8, !tbaa !417
  %1367 = getelementptr inbounds %struct.ImVector.11, ptr %27, i64 0, i32 2
  %1368 = mul nsw i32 %1056, 24
  %1369 = sext i32 %1368 to i64
  tail call void @llvm.memset.p0.i64(ptr align 4 %1365, i8 0, i64 %1369, i1 false)
  %1370 = getelementptr inbounds %struct.ImVector.16, ptr %28, i64 0, i32 2
  %1371 = mul nsw i32 %1056, 28
  %1372 = sext i32 %1371 to i64
  tail call void @llvm.memset.p0.i64(ptr align 4 %1366, i8 0, i64 %1372, i1 false)
  %1373 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 3
  %1374 = getelementptr inbounds %struct.stbtt__csctx, ptr %11, i64 0, i32 6
  %1375 = getelementptr inbounds %struct.stbtt__csctx, ptr %11, i64 0, i32 8
  %1376 = getelementptr inbounds %struct.stbtt__csctx, ptr %11, i64 0, i32 7
  %1377 = getelementptr inbounds %struct.stbtt__csctx, ptr %11, i64 0, i32 9
  br label %1378

1378:                                             ; preds = %1716, %1364
  %1379 = phi i32 [ 0, %1364 ], [ %1720, %1716 ]
  %1380 = phi i32 [ 0, %1364 ], [ %1717, %1716 ]
  %1381 = phi i32 [ 0, %1364 ], [ %1718, %1716 ]
  %1382 = phi i32 [ 0, %1364 ], [ %1719, %1716 ]
  %1383 = icmp slt i32 %1379, %55
  br i1 %1383, label %1388, label %1384

1384:                                             ; preds = %1378
  store i32 0, ptr %36, align 4, !tbaa !293
  %1385 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 2
  %1386 = load i32, ptr %1385, align 8, !tbaa !418
  %1387 = icmp sgt i32 %1386, 0
  br i1 %1387, label %1731, label %1721

1388:                                             ; preds = %1378
  %1389 = zext i32 %1379 to i64
  %1390 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389
  %1391 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 7
  %1392 = load i32, ptr %1391, align 8, !tbaa !399
  %1393 = icmp eq i32 %1392, 0
  br i1 %1393, label %1716, label %1394

1394:                                             ; preds = %1388
  %1395 = icmp sgt i32 %1381, -1
  %1396 = load i32, ptr %27, align 8
  %1397 = icmp sgt i32 %1396, %1381
  %1398 = select i1 %1395, i1 %1397, i1 false
  br i1 %1398, label %1400, label %1399

1399:                                             ; preds = %1394
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %1400 unwind label %4018

1400:                                             ; preds = %1394, %1399
  %1401 = sext i32 %1381 to i64
  %1402 = getelementptr inbounds %struct.stbrp_rect, ptr %1365, i64 %1401
  %1403 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 2
  store ptr %1402, ptr %1403, align 8, !tbaa !419
  %1404 = icmp sgt i32 %1380, -1
  %1405 = load i32, ptr %28, align 8
  %1406 = icmp sgt i32 %1405, %1380
  %1407 = select i1 %1404, i1 %1406, i1 false
  br i1 %1407, label %1409, label %1408

1408:                                             ; preds = %1400
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %1409 unwind label %4018

1409:                                             ; preds = %1400, %1408
  %1410 = sext i32 %1380 to i64
  %1411 = getelementptr inbounds %struct.stbtt_packedchar, ptr %1366, i64 %1410
  %1412 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 3
  store ptr %1411, ptr %1412, align 8, !tbaa !420
  %1413 = load i32, ptr %1391, align 8, !tbaa !399
  %1414 = add nsw i32 %1413, %1381
  %1415 = add nsw i32 %1413, %1380
  %1416 = load i32, ptr %30, align 8
  %1417 = icmp sgt i32 %1416, %1379
  br i1 %1417, label %1421, label %1418

1418:                                             ; preds = %1409
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %1419 unwind label %4018

1419:                                             ; preds = %1418
  %1420 = load ptr, ptr %1412, align 8, !tbaa !420
  br label %1421

1421:                                             ; preds = %1419, %1409
  %1422 = phi ptr [ %1420, %1419 ], [ %1411, %1409 ]
  %1423 = load ptr, ptr %78, align 8, !tbaa !270
  %1424 = getelementptr inbounds %struct.ImFontConfig, ptr %1423, i64 %1389, i32 4
  %1425 = load float, ptr %1424, align 4, !tbaa !295
  %1426 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1
  store float %1425, ptr %1426, align 8, !tbaa !421
  %1427 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1, i32 1
  store i32 0, ptr %1427, align 4, !tbaa !422
  %1428 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 9
  %1429 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 9, i32 2
  %1430 = load ptr, ptr %1429, align 8, !tbaa !423
  %1431 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1, i32 2
  store ptr %1430, ptr %1431, align 8, !tbaa !424
  %1432 = load i32, ptr %1428, align 8, !tbaa !407
  %1433 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1, i32 3
  store i32 %1432, ptr %1433, align 8, !tbaa !425
  %1434 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1, i32 4
  store ptr %1422, ptr %1434, align 8, !tbaa !426
  %1435 = getelementptr inbounds %struct.ImFontConfig, ptr %1423, i64 %1389, i32 5
  %1436 = load i32, ptr %1435, align 8, !tbaa !259
  %1437 = trunc i32 %1436 to i8
  %1438 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1, i32 5
  store i8 %1437, ptr %1438, align 8, !tbaa !427
  %1439 = getelementptr inbounds %struct.ImFontConfig, ptr %1423, i64 %1389, i32 6
  %1440 = load i32, ptr %1439, align 4, !tbaa !260
  %1441 = trunc i32 %1440 to i8
  %1442 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1389, i32 1, i32 6
  store i8 %1441, ptr %1442, align 1, !tbaa !428
  %1443 = fcmp fast ogt float %1425, 0.000000e+00
  br i1 %1443, label %1444, label %1472

1444:                                             ; preds = %1421
  %1445 = getelementptr i8, ptr %1390, i64 8
  %1446 = load ptr, ptr %1445, align 8, !tbaa !364
  %1447 = getelementptr i8, ptr %1390, i64 36
  %1448 = load i32, ptr %1447, align 4, !tbaa !370
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds i8, ptr %1446, i64 %1449
  %1451 = getelementptr inbounds i8, ptr %1450, i64 4
  %1452 = load i8, ptr %1451, align 1, !tbaa !46
  %1453 = getelementptr i8, ptr %1451, i64 1
  %1454 = load i8, ptr %1453, align 1, !tbaa !46
  %1455 = zext i8 %1452 to i16
  %1456 = shl nuw i16 %1455, 8
  %1457 = zext i8 %1454 to i16
  %1458 = or i16 %1456, %1457
  %1459 = sext i16 %1458 to i32
  %1460 = getelementptr inbounds i8, ptr %1450, i64 6
  %1461 = load i8, ptr %1460, align 1, !tbaa !46
  %1462 = getelementptr i8, ptr %1460, i64 1
  %1463 = load i8, ptr %1462, align 1, !tbaa !46
  %1464 = zext i8 %1461 to i16
  %1465 = shl nuw i16 %1464, 8
  %1466 = zext i8 %1463 to i16
  %1467 = or i16 %1465, %1466
  %1468 = sext i16 %1467 to i32
  %1469 = sub nsw i32 %1459, %1468
  %1470 = sitofp i32 %1469 to float
  %1471 = fdiv fast float %1425, %1470
  br label %1490

1472:                                             ; preds = %1421
  %1473 = fneg fast float %1425
  %1474 = getelementptr i8, ptr %1390, i64 8
  %1475 = load ptr, ptr %1474, align 8, !tbaa !364
  %1476 = getelementptr i8, ptr %1390, i64 28
  %1477 = load i32, ptr %1476, align 4, !tbaa !368
  %1478 = sext i32 %1477 to i64
  %1479 = getelementptr i8, ptr %1475, i64 18
  %1480 = getelementptr i8, ptr %1479, i64 %1478
  %1481 = load i8, ptr %1480, align 1, !tbaa !46
  %1482 = getelementptr i8, ptr %1480, i64 1
  %1483 = load i8, ptr %1482, align 1, !tbaa !46
  %1484 = zext i8 %1481 to i16
  %1485 = shl nuw i16 %1484, 8
  %1486 = zext i8 %1483 to i16
  %1487 = or i16 %1485, %1486
  %1488 = uitofp i16 %1487 to float
  %1489 = fdiv fast float %1473, %1488
  br label %1490

1490:                                             ; preds = %1472, %1444
  %1491 = phi fast float [ %1471, %1444 ], [ %1489, %1472 ]
  %1492 = load i32, ptr %1373, align 4, !tbaa !264
  %1493 = getelementptr i8, ptr %1390, i64 8
  %1494 = getelementptr i8, ptr %1390, i64 56
  %1495 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1390, i64 0, i32 14, i32 2
  %1496 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1390, i64 0, i32 3
  %1497 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1390, i64 0, i32 13
  %1498 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1390, i64 0, i32 6
  %1499 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1390, i64 0, i32 4
  %1500 = add i32 %1492, -1
  %1501 = insertelement <2 x float> poison, float %1491, i64 0
  %1502 = shufflevector <2 x float> %1501, <2 x float> poison, <2 x i32> zeroinitializer
  %1503 = insertelement <2 x i32> poison, i32 %1500, i64 0
  %1504 = insertelement <2 x i32> %1503, i32 %1492, i64 1
  br label %1505

1505:                                             ; preds = %1693, %1490
  %1506 = phi i32 [ %1432, %1490 ], [ %1715, %1693 ]
  %1507 = phi i32 [ 0, %1490 ], [ %1714, %1693 ]
  %1508 = phi i32 [ %1382, %1490 ], [ %1713, %1693 ]
  %1509 = icmp slt i32 %1507, %1506
  br i1 %1509, label %1510, label %1716

1510:                                             ; preds = %1505
  %1511 = load ptr, ptr %1429, align 8, !tbaa !403
  %1512 = zext i32 %1507 to i64
  %1513 = getelementptr inbounds i32, ptr %1511, i64 %1512
  %1514 = load i32, ptr %1513, align 4, !tbaa !105
  %1515 = load ptr, ptr %1493, align 8, !tbaa !364
  %1516 = load i32, ptr %1494, align 8, !tbaa !382
  %1517 = invoke fastcc noundef i32 @"?stbtt_FindGlyphIndex@@YAHPEBUstbtt_fontinfo@@H@Z"(ptr %1515, i32 %1516, i32 noundef %1514)
          to label %1518 unwind label %4018

1518:                                             ; preds = %1510
  %1519 = icmp eq i32 %1517, 0
  br i1 %1519, label %1520, label %1521

1520:                                             ; preds = %1518
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DC@ENBGOGEF@?$AAg?$AAl?$AAy?$AAp?$AAh?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA_?$AAi?$AAn?$AA_?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2477)
          to label %1521 unwind label %4018

1521:                                             ; preds = %1520, %1518
  %1522 = load <2 x i32>, ptr %1435, align 8, !tbaa !105
  %1523 = sitofp <2 x i32> %1522 to <2 x float>
  %1524 = fmul fast <2 x float> %1502, %1523
  %1525 = shufflevector <2 x float> %1524, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %1526 = load i32, ptr %1495, align 4, !tbaa !429
  %1527 = icmp eq i32 %1526, 0
  br i1 %1527, label %1541, label %1528

1528:                                             ; preds = %1521
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %11) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %11, i8 0, i64 56, i1 false)
  store i32 1, ptr %11, align 8
  %1529 = invoke fastcc noundef i32 @"?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z"(ptr noundef nonnull %1390, i32 noundef %1517, ptr noundef nonnull %11)
          to label %1530 unwind label %4018

1530:                                             ; preds = %1528
  %1531 = icmp eq i32 %1529, 0
  %1532 = load i32, ptr %1374, align 8
  %1533 = select i1 %1531, i32 0, i32 %1532
  %1534 = load i32, ptr %1375, align 8
  %1535 = select i1 %1531, i32 0, i32 %1534
  %1536 = load i32, ptr %1376, align 4
  %1537 = select i1 %1531, i32 0, i32 %1536
  %1538 = load i32, ptr %1377, align 4
  %1539 = select i1 %1531, i32 0, i32 %1538
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %11) #39
  %1540 = load <2 x i32>, ptr %1435, align 8, !tbaa !105
  br label %1660

1541:                                             ; preds = %1521
  %1542 = load i32, ptr %1496, align 4, !tbaa !380
  %1543 = icmp sgt i32 %1542, %1517
  br i1 %1543, label %1544, label %1693

1544:                                             ; preds = %1541
  %1545 = load i32, ptr %1497, align 4, !tbaa !384
  %1546 = icmp sgt i32 %1545, 1
  br i1 %1546, label %1693, label %1547

1547:                                             ; preds = %1544
  %1548 = icmp eq i32 %1545, 0
  %1549 = load i32, ptr %1498, align 8, !tbaa !369
  %1550 = load ptr, ptr %1493, align 8, !tbaa !364
  %1551 = load i32, ptr %1499, align 8, !tbaa !367
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds i8, ptr %1550, i64 %1552
  br i1 %1548, label %1554, label %1575

1554:                                             ; preds = %1547
  %1555 = shl nsw i32 %1517, 1
  %1556 = sext i32 %1555 to i64
  %1557 = getelementptr inbounds i8, ptr %1553, i64 %1556
  %1558 = load i8, ptr %1557, align 1, !tbaa !46
  %1559 = getelementptr i8, ptr %1557, i64 1
  %1560 = load i8, ptr %1559, align 1, !tbaa !46
  %1561 = zext i8 %1558 to i32
  %1562 = zext i8 %1560 to i32
  %1563 = shl nuw nsw i32 %1561, 9
  %1564 = shl nuw nsw i32 %1562, 1
  %1565 = or i32 %1564, %1563
  %1566 = getelementptr inbounds i8, ptr %1557, i64 2
  %1567 = load i8, ptr %1566, align 1, !tbaa !46
  %1568 = getelementptr i8, ptr %1566, i64 1
  %1569 = load i8, ptr %1568, align 1, !tbaa !46
  %1570 = zext i8 %1567 to i32
  %1571 = zext i8 %1569 to i32
  %1572 = shl nuw nsw i32 %1570, 9
  %1573 = shl nuw nsw i32 %1571, 1
  %1574 = or i32 %1573, %1572
  br label %1614

1575:                                             ; preds = %1547
  %1576 = shl nsw i32 %1517, 2
  %1577 = sext i32 %1576 to i64
  %1578 = getelementptr inbounds i8, ptr %1553, i64 %1577
  %1579 = load i8, ptr %1578, align 1, !tbaa !46
  %1580 = zext i8 %1579 to i32
  %1581 = shl nuw i32 %1580, 24
  %1582 = getelementptr inbounds i8, ptr %1578, i64 1
  %1583 = load i8, ptr %1582, align 1, !tbaa !46
  %1584 = zext i8 %1583 to i32
  %1585 = shl nuw nsw i32 %1584, 16
  %1586 = or i32 %1585, %1581
  %1587 = getelementptr inbounds i8, ptr %1578, i64 2
  %1588 = load i8, ptr %1587, align 1, !tbaa !46
  %1589 = zext i8 %1588 to i32
  %1590 = shl nuw nsw i32 %1589, 8
  %1591 = or i32 %1586, %1590
  %1592 = getelementptr inbounds i8, ptr %1578, i64 3
  %1593 = load i8, ptr %1592, align 1, !tbaa !46
  %1594 = zext i8 %1593 to i32
  %1595 = or i32 %1591, %1594
  %1596 = getelementptr inbounds i8, ptr %1578, i64 4
  %1597 = load i8, ptr %1596, align 1, !tbaa !46
  %1598 = zext i8 %1597 to i32
  %1599 = shl nuw i32 %1598, 24
  %1600 = getelementptr inbounds i8, ptr %1596, i64 1
  %1601 = load i8, ptr %1600, align 1, !tbaa !46
  %1602 = zext i8 %1601 to i32
  %1603 = shl nuw nsw i32 %1602, 16
  %1604 = or i32 %1603, %1599
  %1605 = getelementptr inbounds i8, ptr %1596, i64 2
  %1606 = load i8, ptr %1605, align 1, !tbaa !46
  %1607 = zext i8 %1606 to i32
  %1608 = shl nuw nsw i32 %1607, 8
  %1609 = or i32 %1604, %1608
  %1610 = getelementptr inbounds i8, ptr %1596, i64 3
  %1611 = load i8, ptr %1610, align 1, !tbaa !46
  %1612 = zext i8 %1611 to i32
  %1613 = or i32 %1609, %1612
  br label %1614

1614:                                             ; preds = %1575, %1554
  %1615 = phi i32 [ %1613, %1575 ], [ %1574, %1554 ]
  %1616 = phi i32 [ %1595, %1575 ], [ %1565, %1554 ]
  %1617 = add i32 %1616, %1549
  %1618 = icmp eq i32 %1616, %1615
  %1619 = icmp slt i32 %1617, 0
  %1620 = select i1 %1618, i1 true, i1 %1619
  br i1 %1620, label %1693, label %1621

1621:                                             ; preds = %1614
  %1622 = zext i32 %1617 to i64
  %1623 = getelementptr inbounds i8, ptr %1550, i64 %1622
  %1624 = getelementptr inbounds i8, ptr %1623, i64 2
  %1625 = load i8, ptr %1624, align 1, !tbaa !46
  %1626 = getelementptr i8, ptr %1624, i64 1
  %1627 = load i8, ptr %1626, align 1, !tbaa !46
  %1628 = zext i8 %1625 to i16
  %1629 = shl nuw i16 %1628, 8
  %1630 = zext i8 %1627 to i16
  %1631 = or i16 %1629, %1630
  %1632 = sext i16 %1631 to i32
  %1633 = getelementptr inbounds i8, ptr %1623, i64 4
  %1634 = load i8, ptr %1633, align 1, !tbaa !46
  %1635 = getelementptr i8, ptr %1633, i64 1
  %1636 = load i8, ptr %1635, align 1, !tbaa !46
  %1637 = zext i8 %1634 to i16
  %1638 = shl nuw i16 %1637, 8
  %1639 = zext i8 %1636 to i16
  %1640 = or i16 %1638, %1639
  %1641 = sext i16 %1640 to i32
  %1642 = getelementptr inbounds i8, ptr %1623, i64 6
  %1643 = load i8, ptr %1642, align 1, !tbaa !46
  %1644 = getelementptr i8, ptr %1642, i64 1
  %1645 = load i8, ptr %1644, align 1, !tbaa !46
  %1646 = zext i8 %1643 to i16
  %1647 = shl nuw i16 %1646, 8
  %1648 = zext i8 %1645 to i16
  %1649 = or i16 %1647, %1648
  %1650 = sext i16 %1649 to i32
  %1651 = getelementptr inbounds i8, ptr %1623, i64 8
  %1652 = load i8, ptr %1651, align 1, !tbaa !46
  %1653 = getelementptr i8, ptr %1651, i64 1
  %1654 = load i8, ptr %1653, align 1, !tbaa !46
  %1655 = zext i8 %1652 to i16
  %1656 = shl nuw i16 %1655, 8
  %1657 = zext i8 %1654 to i16
  %1658 = or i16 %1656, %1657
  %1659 = sext i16 %1658 to i32
  br label %1660

1660:                                             ; preds = %1621, %1530
  %1661 = phi i32 [ %1533, %1530 ], [ %1632, %1621 ]
  %1662 = phi i32 [ %1535, %1530 ], [ %1641, %1621 ]
  %1663 = phi i32 [ %1537, %1530 ], [ %1650, %1621 ]
  %1664 = phi i32 [ %1539, %1530 ], [ %1659, %1621 ]
  %1665 = phi <2 x i32> [ %1540, %1530 ], [ %1522, %1621 ]
  %1666 = sub nsw i32 0, %1664
  %1667 = insertelement <2 x i32> poison, i32 %1666, i64 0
  %1668 = insertelement <2 x i32> %1667, i32 %1661, i64 1
  %1669 = sitofp <2 x i32> %1668 to <2 x float>
  %1670 = fmul fast <2 x float> %1525, %1669
  %1671 = fcmp fast ult <2 x float> %1670, zeroinitializer
  %1672 = fptosi <2 x float> %1670 to <2 x i32>
  %1673 = sitofp <2 x i32> %1672 to <2 x float>
  %1674 = fcmp fast une <2 x float> %1670, %1673
  %1675 = select <2 x i1> %1671, <2 x i1> %1674, <2 x i1> zeroinitializer
  %1676 = sext <2 x i1> %1675 to <2 x i32>
  %1677 = add nsw <2 x i32> %1676, %1672
  %1678 = sitofp <2 x i32> %1677 to <2 x float>
  %1679 = sitofp i32 %1663 to float
  %1680 = extractelement <2 x float> %1524, i64 0
  %1681 = fmul fast float %1680, %1679
  %1682 = call fast float @llvm.ceil.f32(float %1681)
  %1683 = sub nsw i32 0, %1662
  %1684 = sitofp i32 %1683 to float
  %1685 = extractelement <2 x float> %1524, i64 1
  %1686 = fmul fast float %1685, %1684
  %1687 = call fast float @llvm.ceil.f32(float %1686)
  %1688 = insertelement <4 x float> poison, float %1682, i64 0
  %1689 = shufflevector <2 x float> %1678, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %1690 = shufflevector <4 x float> %1688, <4 x float> %1689, <4 x i32> <i32 0, i32 4, i32 5, i32 undef>
  %1691 = insertelement <4 x float> %1690, float %1687, i64 3
  %1692 = fptosi <4 x float> %1691 to <4 x i32>
  br label %1693

1693:                                             ; preds = %1614, %1544, %1541, %1660
  %1694 = phi <4 x i32> [ %1692, %1660 ], [ zeroinitializer, %1541 ], [ zeroinitializer, %1544 ], [ zeroinitializer, %1614 ]
  %1695 = phi <2 x i32> [ %1665, %1660 ], [ %1522, %1541 ], [ %1522, %1544 ], [ %1522, %1614 ]
  %1696 = extractelement <4 x i32> %1694, i64 0
  %1697 = load ptr, ptr %1403, align 8, !tbaa !419
  %1698 = getelementptr inbounds %struct.stbrp_rect, ptr %1697, i64 %1512, i32 1
  %1699 = extractelement <4 x i32> %1694, i64 1
  %1700 = xor i32 %1699, -1
  %1701 = insertelement <2 x i32> poison, i32 %1696, i64 0
  %1702 = insertelement <2 x i32> %1701, i32 %1700, i64 1
  %1703 = add <2 x i32> %1504, %1702
  %1704 = shufflevector <4 x i32> %1694, <4 x i32> undef, <2 x i32> <i32 2, i32 3>
  %1705 = add <2 x i32> %1703, %1704
  %1706 = sub <2 x i32> %1703, %1704
  %1707 = shufflevector <2 x i32> %1706, <2 x i32> %1705, <2 x i32> <i32 0, i32 3>
  %1708 = add <2 x i32> %1707, %1695
  %1709 = extractelement <2 x i32> %1708, i64 0
  store i32 %1709, ptr %1698, align 4, !tbaa !430
  %1710 = getelementptr inbounds %struct.stbrp_rect, ptr %1697, i64 %1512, i32 2
  %1711 = extractelement <2 x i32> %1708, i64 1
  store i32 %1711, ptr %1710, align 4, !tbaa !432
  %1712 = mul nsw i32 %1711, %1709
  %1713 = add nsw i32 %1712, %1508
  %1714 = add nuw nsw i32 %1507, 1
  %1715 = load i32, ptr %1428, align 8, !tbaa !407
  br label %1505, !llvm.loop !433

1716:                                             ; preds = %1505, %1388
  %1717 = phi i32 [ %1380, %1388 ], [ %1415, %1505 ]
  %1718 = phi i32 [ %1381, %1388 ], [ %1414, %1505 ]
  %1719 = phi i32 [ %1382, %1388 ], [ %1508, %1505 ]
  %1720 = add nuw nsw i32 %1379, 1
  br label %1378, !llvm.loop !434

1721:                                             ; preds = %1384
  %1722 = sitofp i32 %1382 to float
  %1723 = call fast float @llvm.sqrt.f32(float %1722)
  %1724 = fptosi float %1723 to i32
  %1725 = icmp sgt i32 %1724, 2866
  br i1 %1725, label %1731, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp sgt i32 %1724, 1432
  br i1 %1727, label %1731, label %1728

1728:                                             ; preds = %1726
  %1729 = icmp sgt i32 %1724, 715
  %1730 = select i1 %1729, i32 1024, i32 512
  br label %1731

1731:                                             ; preds = %1721, %1726, %1728, %1384
  %1732 = phi i32 [ %1386, %1384 ], [ 4096, %1721 ], [ %1730, %1728 ], [ 2048, %1726 ]
  store i32 %1732, ptr %37, align 8, !tbaa !292
  %1733 = load i32, ptr %1373, align 4, !tbaa !264
  %1734 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 72)
          to label %1735 unwind label %4018

1735:                                             ; preds = %1731
  %1736 = sub nsw i32 %1732, %1733
  %1737 = sext i32 %1736 to i64
  %1738 = shl nsw i64 %1737, 4
  %1739 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1738)
          to label %1740 unwind label %4018

1740:                                             ; preds = %1735
  %1741 = icmp eq ptr %1734, null
  %1742 = icmp eq ptr %1739, null
  %1743 = or i1 %1741, %1742
  br i1 %1743, label %1744, label %1748

1744:                                             ; preds = %1740
  br i1 %1741, label %1746, label %1745

1745:                                             ; preds = %1744
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %1734)
          to label %1746 unwind label %4018

1746:                                             ; preds = %1745, %1744
  br i1 %1742, label %1805, label %1747

1747:                                             ; preds = %1746
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %1739)
          to label %1805 unwind label %4018

1748:                                             ; preds = %1740
  %1749 = sub nsw i32 32768, %1733
  %1750 = add nsw i32 %1736, -1
  %1751 = icmp sgt i32 %1736, 1
  br i1 %1751, label %1752, label %1787

1752:                                             ; preds = %1748
  %1753 = zext i32 %1750 to i64
  %1754 = add nsw i64 %1753, -1
  %1755 = and i64 %1753, 3
  %1756 = icmp ult i64 %1754, 3
  br i1 %1756, label %1776, label %1757

1757:                                             ; preds = %1752
  %1758 = and i64 %1753, 4294967292
  br label %1759

1759:                                             ; preds = %1759, %1757
  %1760 = phi i64 [ 0, %1757 ], [ %1771, %1759 ]
  %1761 = phi i64 [ 0, %1757 ], [ %1774, %1759 ]
  %1762 = or i64 %1760, 1
  %1763 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1762
  %1764 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1760, i32 2
  store ptr %1763, ptr %1764, align 8, !tbaa !435
  %1765 = or i64 %1760, 2
  %1766 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1765
  %1767 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1762, i32 2
  store ptr %1766, ptr %1767, align 8, !tbaa !435
  %1768 = or i64 %1760, 3
  %1769 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1768
  %1770 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1765, i32 2
  store ptr %1769, ptr %1770, align 8, !tbaa !435
  %1771 = add nuw nsw i64 %1760, 4
  %1772 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1771
  %1773 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1768, i32 2
  store ptr %1772, ptr %1773, align 8, !tbaa !435
  %1774 = add i64 %1761, 4
  %1775 = icmp eq i64 %1774, %1758
  br i1 %1775, label %1776, label %1759, !llvm.loop !437

1776:                                             ; preds = %1759, %1752
  %1777 = phi i64 [ 0, %1752 ], [ %1771, %1759 ]
  %1778 = icmp eq i64 %1755, 0
  br i1 %1778, label %1787, label %1779

1779:                                             ; preds = %1776, %1779
  %1780 = phi i64 [ %1782, %1779 ], [ %1777, %1776 ]
  %1781 = phi i64 [ %1785, %1779 ], [ 0, %1776 ]
  %1782 = add nuw nsw i64 %1780, 1
  %1783 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1782
  %1784 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1780, i32 2
  store ptr %1783, ptr %1784, align 8, !tbaa !435
  %1785 = add i64 %1781, 1
  %1786 = icmp eq i64 %1785, %1755
  br i1 %1786, label %1787, label %1779, !llvm.loop !438

1787:                                             ; preds = %1776, %1779, %1748
  %1788 = phi i64 [ 0, %1748 ], [ %1753, %1779 ], [ %1753, %1776 ]
  %1789 = getelementptr inbounds %struct.stbrp_node, ptr %1739, i64 %1788, i32 2
  store ptr null, ptr %1789, align 8, !tbaa !435
  %1790 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 3
  store i32 1, ptr %1790, align 4, !tbaa !439
  %1791 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 4
  store i32 0, ptr %1791, align 8, !tbaa !441
  %1792 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 7
  store ptr %1739, ptr %1792, align 8, !tbaa !442
  %1793 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 8
  %1794 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 6
  store ptr %1793, ptr %1794, align 8, !tbaa !443
  store i32 %1736, ptr %1734, align 8, !tbaa !444
  %1795 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 1
  store i32 %1749, ptr %1795, align 4, !tbaa !445
  %1796 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 5
  store i32 %1736, ptr %1796, align 4, !tbaa !446
  %1797 = add i32 %1750, %1736
  %1798 = sdiv i32 %1797, %1736
  %1799 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 2
  store i32 %1798, ptr %1799, align 8, !tbaa !447
  store i32 0, ptr %1793, align 8, !tbaa !448
  %1800 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 8, i64 0, i32 1
  store i32 0, ptr %1800, align 4, !tbaa !449
  %1801 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 8, i64 1
  %1802 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 8, i64 0, i32 2
  store ptr %1801, ptr %1802, align 8, !tbaa !435
  store i32 %1736, ptr %1801, align 8, !tbaa !448
  %1803 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 8, i64 1, i32 1
  store i32 1073741824, ptr %1803, align 4, !tbaa !449
  %1804 = getelementptr inbounds %struct.stbrp_context, ptr %1734, i64 0, i32 8, i64 1, i32 2
  store ptr null, ptr %1804, align 8, !tbaa !435
  br label %1805

1805:                                             ; preds = %1787, %1746, %1747
  %1806 = phi ptr [ null, %1746 ], [ %1739, %1787 ], [ null, %1747 ]
  %1807 = phi i32 [ 0, %1746 ], [ %1733, %1787 ], [ 0, %1747 ]
  %1808 = phi i32 [ 0, %1746 ], [ %1732, %1787 ], [ 0, %1747 ]
  %1809 = phi ptr [ null, %1746 ], [ %1734, %1787 ], [ null, %1747 ]
  invoke void @"?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z"(ptr noundef nonnull %0, ptr noundef %1809)
          to label %1810 unwind label %4018

1810:                                             ; preds = %1805, %1848
  %1811 = phi i32 [ %1849, %1848 ], [ 0, %1805 ]
  %1812 = icmp slt i32 %1811, %55
  br i1 %1812, label %1818, label %1813

1813:                                             ; preds = %1810
  %1814 = load i32, ptr %0, align 8, !tbaa !349
  %1815 = and i32 %1814, 1
  %1816 = icmp eq i32 %1815, 0
  %1817 = load i32, ptr %36, align 4, !tbaa !293
  br i1 %1816, label %1850, label %1862

1818:                                             ; preds = %1810
  %1819 = zext i32 %1811 to i64
  %1820 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1819, i32 7
  %1821 = load i32, ptr %1820, align 8, !tbaa !399
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %1848, label %1823

1823:                                             ; preds = %1818
  %1824 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1819, i32 2
  %1825 = load ptr, ptr %1824, align 8, !tbaa !419
  invoke fastcc void @"?stbrp_pack_rects@@YAHPEAUstbrp_context@@PEAUstbrp_rect@@H@Z"(ptr noundef %1809, ptr noundef %1825, i32 noundef %1821)
          to label %1826 unwind label %4018

1826:                                             ; preds = %1823
  %1827 = load i32, ptr %1820, align 8, !tbaa !399
  %1828 = icmp sgt i32 %1827, 0
  br i1 %1828, label %1829, label %1848

1829:                                             ; preds = %1826
  %1830 = load ptr, ptr %1824, align 8, !tbaa !419
  %1831 = zext i32 %1827 to i64
  br label %1832

1832:                                             ; preds = %1829, %1845
  %1833 = phi i64 [ 0, %1829 ], [ %1846, %1845 ]
  %1834 = getelementptr inbounds %struct.stbrp_rect, ptr %1830, i64 %1833, i32 5
  %1835 = load i32, ptr %1834, align 4, !tbaa !450
  %1836 = icmp eq i32 %1835, 0
  br i1 %1836, label %1845, label %1837

1837:                                             ; preds = %1832
  %1838 = getelementptr inbounds %struct.stbrp_rect, ptr %1830, i64 %1833, i32 4
  %1839 = load i32, ptr %1838, align 4, !tbaa !451
  %1840 = getelementptr inbounds %struct.stbrp_rect, ptr %1830, i64 %1833, i32 2
  %1841 = load i32, ptr %1840, align 4, !tbaa !432
  %1842 = add nsw i32 %1841, %1839
  %1843 = load i32, ptr %36, align 4, !tbaa !293
  %1844 = call i32 @llvm.smax.i32(i32 %1843, i32 %1842)
  store i32 %1844, ptr %36, align 4, !tbaa !293
  br label %1845

1845:                                             ; preds = %1832, %1837
  %1846 = add nuw nsw i64 %1833, 1
  %1847 = icmp eq i64 %1846, %1831
  br i1 %1847, label %1848, label %1832, !llvm.loop !452

1848:                                             ; preds = %1845, %1826, %1818
  %1849 = add nuw nsw i32 %1811, 1
  br label %1810, !llvm.loop !453

1850:                                             ; preds = %1813
  %1851 = add nsw i32 %1817, -1
  %1852 = ashr i32 %1851, 1
  %1853 = or i32 %1852, %1851
  %1854 = ashr i32 %1853, 2
  %1855 = or i32 %1854, %1853
  %1856 = ashr i32 %1855, 4
  %1857 = or i32 %1856, %1855
  %1858 = ashr i32 %1857, 8
  %1859 = or i32 %1858, %1857
  %1860 = ashr i32 %1859, 16
  %1861 = or i32 %1860, %1859
  br label %1862

1862:                                             ; preds = %1813, %1850
  %1863 = phi i32 [ %1861, %1850 ], [ %1817, %1813 ]
  %1864 = add nsw i32 %1863, 1
  store i32 %1864, ptr %36, align 4, !tbaa !293
  %1865 = load i32, ptr %37, align 8, !tbaa !292
  %1866 = insertelement <2 x i32> poison, i32 %1865, i64 0
  %1867 = insertelement <2 x i32> %1866, i32 %1864, i64 1
  %1868 = sitofp <2 x i32> %1867 to <2 x float>
  %1869 = fdiv fast <2 x float> <float 1.000000e+00, float 1.000000e+00>, %1868
  store <2 x float> %1869, ptr %38, align 8
  %1870 = mul nsw i32 %1865, %1864
  %1871 = sext i32 %1870 to i64
  %1872 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %1871)
          to label %1873 unwind label %4018

1873:                                             ; preds = %1862
  store ptr %1872, ptr %44, align 8, !tbaa !273
  %1874 = load i32, ptr %37, align 8, !tbaa !292
  %1875 = load i32, ptr %36, align 4, !tbaa !293
  %1876 = mul nsw i32 %1875, %1874
  %1877 = sext i32 %1876 to i64
  call void @llvm.memset.p0.i64(ptr align 1 %1872, i8 0, i64 %1877, i1 false)
  %1878 = load ptr, ptr %44, align 8, !tbaa !273
  %1879 = getelementptr inbounds %struct.stbtt__csctx, ptr %3, i64 0, i32 6
  %1880 = getelementptr inbounds %struct.stbtt__csctx, ptr %3, i64 0, i32 9
  %1881 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 6
  %1882 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 9
  %1883 = sext i32 %1808 to i64
  br label %1884

1884:                                             ; preds = %3801, %1873
  %1885 = phi i32 [ 0, %1873 ], [ %3802, %3801 ]
  %1886 = icmp slt i32 %1885, %55
  br i1 %1886, label %1889, label %1887

1887:                                             ; preds = %1884
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %1806)
          to label %1888 unwind label %4018

1888:                                             ; preds = %1887
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %1809)
          to label %3803 unwind label %4018

1889:                                             ; preds = %1884
  %1890 = load i32, ptr %30, align 8
  %1891 = icmp sgt i32 %1890, %1885
  br i1 %1891, label %1892, label %1896

1892:                                             ; preds = %1889
  %1893 = load ptr, ptr %78, align 8, !tbaa !270
  %1894 = zext i32 %1885 to i64
  %1895 = getelementptr inbounds %struct.ImFontConfig, ptr %1893, i64 %1894
  br label %1901

1896:                                             ; preds = %1889
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %1897 unwind label %4018

1897:                                             ; preds = %1896
  %1898 = load ptr, ptr %78, align 8, !tbaa !270
  %1899 = zext i32 %1885 to i64
  %1900 = getelementptr inbounds %struct.ImFontConfig, ptr %1898, i64 %1899
  br label %1901

1901:                                             ; preds = %1897, %1892
  %1902 = phi ptr [ %1895, %1892 ], [ %1900, %1897 ]
  %1903 = phi i64 [ %1894, %1892 ], [ %1899, %1897 ]
  %1904 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903
  %1905 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 7
  %1906 = load i32, ptr %1905, align 8, !tbaa !399
  %1907 = icmp eq i32 %1906, 0
  br i1 %1907, label %3801, label %1908

1908:                                             ; preds = %1901
  %1909 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 2
  %1910 = load ptr, ptr %1909, align 8, !tbaa !419
  %1911 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 1
  %1912 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 1, i32 5
  %1913 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 1, i32 3
  %1914 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 1, i32 4
  %1915 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 1, i32 2
  %1916 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %1903, i32 1, i32 1
  %1917 = getelementptr i8, ptr %1904, i64 8
  %1918 = getelementptr i8, ptr %1904, i64 56
  %1919 = getelementptr %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 7
  %1920 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 8
  %1921 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 14, i32 2
  %1922 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 3
  %1923 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 13
  %1924 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 6
  %1925 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %1904, i64 0, i32 4
  %1926 = load float, ptr %1911, align 8, !tbaa !454
  %1927 = fcmp fast ogt float %1926, 0.000000e+00
  br i1 %1927, label %1928, label %1954

1928:                                             ; preds = %1908
  %1929 = load ptr, ptr %1917, align 8, !tbaa !364
  %1930 = load i32, ptr %1919, align 4, !tbaa !370
  %1931 = sext i32 %1930 to i64
  %1932 = getelementptr inbounds i8, ptr %1929, i64 %1931
  %1933 = getelementptr inbounds i8, ptr %1932, i64 4
  %1934 = load i8, ptr %1933, align 1, !tbaa !46
  %1935 = getelementptr i8, ptr %1933, i64 1
  %1936 = load i8, ptr %1935, align 1, !tbaa !46
  %1937 = zext i8 %1934 to i16
  %1938 = shl nuw i16 %1937, 8
  %1939 = zext i8 %1936 to i16
  %1940 = or i16 %1938, %1939
  %1941 = sext i16 %1940 to i32
  %1942 = getelementptr inbounds i8, ptr %1932, i64 6
  %1943 = load i8, ptr %1942, align 1, !tbaa !46
  %1944 = getelementptr i8, ptr %1942, i64 1
  %1945 = load i8, ptr %1944, align 1, !tbaa !46
  %1946 = zext i8 %1943 to i16
  %1947 = shl nuw i16 %1946, 8
  %1948 = zext i8 %1945 to i16
  %1949 = or i16 %1947, %1948
  %1950 = sext i16 %1949 to i32
  %1951 = sub nsw i32 %1941, %1950
  %1952 = sitofp i32 %1951 to float
  %1953 = fdiv fast float %1926, %1952
  br label %1971

1954:                                             ; preds = %1908
  %1955 = getelementptr i8, ptr %1904, i64 28
  %1956 = fneg fast float %1926
  %1957 = load ptr, ptr %1917, align 8, !tbaa !364
  %1958 = load i32, ptr %1955, align 4, !tbaa !368
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr i8, ptr %1957, i64 18
  %1961 = getelementptr i8, ptr %1960, i64 %1959
  %1962 = load i8, ptr %1961, align 1, !tbaa !46
  %1963 = getelementptr i8, ptr %1961, i64 1
  %1964 = load i8, ptr %1963, align 1, !tbaa !46
  %1965 = zext i8 %1962 to i16
  %1966 = shl nuw i16 %1965, 8
  %1967 = zext i8 %1964 to i16
  %1968 = or i16 %1966, %1967
  %1969 = uitofp i16 %1968 to float
  %1970 = fdiv fast float %1956, %1969
  br label %1971

1971:                                             ; preds = %1954, %1928
  %1972 = phi fast float [ %1953, %1928 ], [ %1970, %1954 ]
  %1973 = load <2 x i8>, ptr %1912, align 8, !tbaa !46
  %1974 = uitofp <2 x i8> %1973 to <2 x float>
  %1975 = extractelement <2 x float> %1974, i64 0
  %1976 = fdiv fast float 1.000000e+00, %1975
  %1977 = extractelement <2 x float> %1974, i64 1
  %1978 = fdiv fast float 1.000000e+00, %1977
  %1979 = load i32, ptr %1913, align 8, !tbaa !455
  %1980 = icmp sgt i32 %1979, 0
  br i1 %1980, label %1981, label %3687

1981:                                             ; preds = %1971
  %1982 = icmp eq <2 x i8> %1973, zeroinitializer
  %1983 = zext <2 x i8> %1973 to <2 x i32>
  %1984 = sub nsw <2 x i32> <i32 1, i32 1>, %1983
  %1985 = sitofp <2 x i32> %1984 to <2 x float>
  %1986 = fmul fast <2 x float> %1974, <float 2.000000e+00, float 2.000000e+00>
  %1987 = fdiv fast <2 x float> %1985, %1986
  %1988 = select <2 x i1> %1982, <2 x float> zeroinitializer, <2 x float> %1987
  %1989 = insertelement <2 x float> poison, float %1972, i64 0
  %1990 = shufflevector <2 x float> %1989, <2 x float> poison, <2 x i32> zeroinitializer
  %1991 = fmul fast <2 x float> %1990, %1974
  %1992 = extractelement <2 x float> %1991, i64 0
  %1993 = extractelement <2 x float> %1991, i64 1
  %1994 = fcmp fast ogt float %1992, %1993
  %1995 = select fast i1 %1994, float %1993, float %1992
  %1996 = fdiv fast float 0x3FD6666660000000, %1995
  %1997 = fmul fast float %1996, %1996
  %1998 = fneg fast float %1993
  %1999 = extractelement <2 x i8> %1973, i64 0
  %2000 = icmp ugt i8 %1999, 1
  %2001 = zext i8 %1999 to i64
  %2002 = extractelement <2 x i8> %1973, i64 1
  %2003 = icmp ugt i8 %2002, 1
  %2004 = zext i8 %2002 to i64
  %2005 = shufflevector <2 x float> %1988, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %2006 = extractelement <2 x float> %1988, i64 1
  %2007 = extractelement <2 x i32> %1984, i64 0
  %2008 = extractelement <2 x i32> %1984, i64 1
  %2009 = extractelement <2 x i32> %1983, i64 0
  %2010 = extractelement <2 x i32> %1983, i64 1
  %2011 = fmul fast <2 x float> %1989, %1974
  %2012 = shufflevector <2 x float> %2011, <2 x float> poison, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %2013 = insertelement <4 x float> %2012, float %1998, i64 1
  %2014 = shufflevector <4 x float> %2013, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  br label %2015

2015:                                             ; preds = %1981, %3681
  %2016 = phi i64 [ %3683, %3681 ], [ 0, %1981 ]
  %2017 = phi i32 [ %3682, %3681 ], [ -1, %1981 ]
  %2018 = getelementptr inbounds %struct.stbrp_rect, ptr %1910, i64 %2016, i32 5
  %2019 = load i32, ptr %2018, align 4, !tbaa !450
  %2020 = icmp eq i32 %2019, 0
  br i1 %2020, label %3681, label %2021

2021:                                             ; preds = %2015
  %2022 = getelementptr inbounds %struct.stbrp_rect, ptr %1910, i64 %2016, i32 1
  %2023 = load i32, ptr %2022, align 4, !tbaa !430
  %2024 = icmp eq i32 %2023, 0
  %2025 = getelementptr inbounds %struct.stbrp_rect, ptr %1910, i64 %2016, i32 2
  %2026 = load i32, ptr %2025, align 4, !tbaa !432
  %2027 = icmp eq i32 %2026, 0
  br i1 %2024, label %3673, label %2028

2028:                                             ; preds = %2021
  br i1 %2027, label %3681, label %2029

2029:                                             ; preds = %2028
  %2030 = load ptr, ptr %1914, align 8, !tbaa !456
  %2031 = getelementptr inbounds %struct.stbtt_packedchar, ptr %2030, i64 %2016
  %2032 = load ptr, ptr %1915, align 8, !tbaa !457
  %2033 = icmp eq ptr %2032, null
  br i1 %2033, label %2034, label %2038

2034:                                             ; preds = %2029
  %2035 = load i32, ptr %1916, align 4, !tbaa !458
  %2036 = trunc i64 %2016 to i32
  %2037 = add nsw i32 %2035, %2036
  br label %2041

2038:                                             ; preds = %2029
  %2039 = getelementptr inbounds i32, ptr %2032, i64 %2016
  %2040 = load i32, ptr %2039, align 4, !tbaa !105
  br label %2041

2041:                                             ; preds = %2038, %2034
  %2042 = phi i32 [ %2037, %2034 ], [ %2040, %2038 ]
  %2043 = load ptr, ptr %1917, align 8, !tbaa !364
  %2044 = load i32, ptr %1918, align 8, !tbaa !382
  %2045 = invoke fastcc noundef i32 @"?stbtt_FindGlyphIndex@@YAHPEBUstbtt_fontinfo@@H@Z"(ptr %2043, i32 %2044, i32 noundef %2042)
          to label %2046 unwind label %4018

2046:                                             ; preds = %2041
  %2047 = getelementptr inbounds %struct.stbrp_rect, ptr %1910, i64 %2016, i32 3
  %2048 = load i32, ptr %2047, align 4, !tbaa !459
  %2049 = add nsw i32 %2048, %1807
  store i32 %2049, ptr %2047, align 4, !tbaa !459
  %2050 = getelementptr inbounds %struct.stbrp_rect, ptr %1910, i64 %2016, i32 4
  %2051 = load i32, ptr %2050, align 4, !tbaa !451
  %2052 = add nsw i32 %2051, %1807
  store i32 %2052, ptr %2050, align 4, !tbaa !451
  %2053 = load i32, ptr %2022, align 4, !tbaa !430
  %2054 = sub nsw i32 %2053, %1807
  store i32 %2054, ptr %2022, align 4, !tbaa !430
  %2055 = load i32, ptr %2025, align 4, !tbaa !432
  %2056 = sub nsw i32 %2055, %1807
  store i32 %2056, ptr %2025, align 4, !tbaa !432
  %2057 = load ptr, ptr %1917, align 8, !tbaa !364
  %2058 = load i32, ptr %1919, align 4, !tbaa !370
  %2059 = sext i32 %2058 to i64
  %2060 = getelementptr i8, ptr %2057, i64 34
  %2061 = getelementptr i8, ptr %2060, i64 %2059
  %2062 = load i8, ptr %2061, align 1, !tbaa !46
  %2063 = getelementptr i8, ptr %2061, i64 1
  %2064 = load i8, ptr %2063, align 1, !tbaa !46
  %2065 = zext i8 %2062 to i32
  %2066 = shl nuw nsw i32 %2065, 8
  %2067 = zext i8 %2064 to i32
  %2068 = or i32 %2066, %2067
  %2069 = icmp sgt i32 %2068, %2045
  %2070 = load i32, ptr %1920, align 8, !tbaa !371
  %2071 = sext i32 %2070 to i64
  %2072 = getelementptr inbounds i8, ptr %2057, i64 %2071
  %2073 = shl nsw i32 %2045, 2
  %2074 = shl nuw nsw i32 %2068, 2
  %2075 = add nsw i32 %2074, -4
  %2076 = select i1 %2069, i32 %2073, i32 %2075
  %2077 = sext i32 %2076 to i64
  %2078 = getelementptr inbounds i8, ptr %2072, i64 %2077
  %2079 = load i8, ptr %2078, align 1, !tbaa !46
  %2080 = getelementptr i8, ptr %2078, i64 1
  %2081 = load i8, ptr %2080, align 1, !tbaa !46
  %2082 = zext i8 %2079 to i16
  %2083 = shl nuw i16 %2082, 8
  %2084 = zext i8 %2081 to i16
  %2085 = or i16 %2083, %2084
  %2086 = load i32, ptr %1921, align 4, !tbaa !429
  %2087 = icmp eq i32 %2086, 0
  br i1 %2087, label %2100, label %2088

2088:                                             ; preds = %2046
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %3) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %3, i8 0, i64 56, i1 false)
  store i32 1, ptr %3, align 8
  %2089 = invoke fastcc noundef i32 @"?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z"(ptr noundef nonnull %1904, i32 noundef %2045, ptr noundef nonnull %3)
          to label %2090 unwind label %4018

2090:                                             ; preds = %2088
  %2091 = icmp eq i32 %2089, 0
  %2092 = load i32, ptr %1879, align 8
  %2093 = select i1 %2091, i32 0, i32 %2092
  %2094 = load i32, ptr %1880, align 4
  %2095 = select i1 %2091, i32 0, i32 %2094
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %3) #39
  %2096 = load i32, ptr %2025, align 4, !tbaa !432
  %2097 = load i32, ptr %2022, align 4, !tbaa !430
  %2098 = load i32, ptr %2047, align 4, !tbaa !459
  %2099 = load i32, ptr %2050, align 4, !tbaa !451
  br label %2199

2100:                                             ; preds = %2046
  %2101 = load i32, ptr %1922, align 4, !tbaa !380
  %2102 = icmp sgt i32 %2101, %2045
  br i1 %2102, label %2103, label %2220

2103:                                             ; preds = %2100
  %2104 = load i32, ptr %1923, align 4, !tbaa !384
  %2105 = icmp sgt i32 %2104, 1
  br i1 %2105, label %2220, label %2106

2106:                                             ; preds = %2103
  %2107 = icmp eq i32 %2104, 0
  %2108 = load i32, ptr %1924, align 8, !tbaa !369
  %2109 = load i32, ptr %1925, align 8, !tbaa !367
  %2110 = sext i32 %2109 to i64
  %2111 = getelementptr inbounds i8, ptr %2057, i64 %2110
  br i1 %2107, label %2112, label %2133

2112:                                             ; preds = %2106
  %2113 = shl nsw i32 %2045, 1
  %2114 = sext i32 %2113 to i64
  %2115 = getelementptr inbounds i8, ptr %2111, i64 %2114
  %2116 = load i8, ptr %2115, align 1, !tbaa !46
  %2117 = getelementptr i8, ptr %2115, i64 1
  %2118 = load i8, ptr %2117, align 1, !tbaa !46
  %2119 = zext i8 %2116 to i32
  %2120 = zext i8 %2118 to i32
  %2121 = shl nuw nsw i32 %2119, 9
  %2122 = shl nuw nsw i32 %2120, 1
  %2123 = or i32 %2122, %2121
  %2124 = getelementptr inbounds i8, ptr %2115, i64 2
  %2125 = load i8, ptr %2124, align 1, !tbaa !46
  %2126 = getelementptr i8, ptr %2124, i64 1
  %2127 = load i8, ptr %2126, align 1, !tbaa !46
  %2128 = zext i8 %2125 to i32
  %2129 = zext i8 %2127 to i32
  %2130 = shl nuw nsw i32 %2128, 9
  %2131 = shl nuw nsw i32 %2129, 1
  %2132 = or i32 %2131, %2130
  br label %2171

2133:                                             ; preds = %2106
  %2134 = sext i32 %2073 to i64
  %2135 = getelementptr inbounds i8, ptr %2111, i64 %2134
  %2136 = load i8, ptr %2135, align 1, !tbaa !46
  %2137 = zext i8 %2136 to i32
  %2138 = shl nuw i32 %2137, 24
  %2139 = getelementptr inbounds i8, ptr %2135, i64 1
  %2140 = load i8, ptr %2139, align 1, !tbaa !46
  %2141 = zext i8 %2140 to i32
  %2142 = shl nuw nsw i32 %2141, 16
  %2143 = or i32 %2142, %2138
  %2144 = getelementptr inbounds i8, ptr %2135, i64 2
  %2145 = load i8, ptr %2144, align 1, !tbaa !46
  %2146 = zext i8 %2145 to i32
  %2147 = shl nuw nsw i32 %2146, 8
  %2148 = or i32 %2143, %2147
  %2149 = getelementptr inbounds i8, ptr %2135, i64 3
  %2150 = load i8, ptr %2149, align 1, !tbaa !46
  %2151 = zext i8 %2150 to i32
  %2152 = or i32 %2148, %2151
  %2153 = getelementptr inbounds i8, ptr %2135, i64 4
  %2154 = load i8, ptr %2153, align 1, !tbaa !46
  %2155 = zext i8 %2154 to i32
  %2156 = shl nuw i32 %2155, 24
  %2157 = getelementptr inbounds i8, ptr %2153, i64 1
  %2158 = load i8, ptr %2157, align 1, !tbaa !46
  %2159 = zext i8 %2158 to i32
  %2160 = shl nuw nsw i32 %2159, 16
  %2161 = or i32 %2160, %2156
  %2162 = getelementptr inbounds i8, ptr %2153, i64 2
  %2163 = load i8, ptr %2162, align 1, !tbaa !46
  %2164 = zext i8 %2163 to i32
  %2165 = shl nuw nsw i32 %2164, 8
  %2166 = or i32 %2161, %2165
  %2167 = getelementptr inbounds i8, ptr %2153, i64 3
  %2168 = load i8, ptr %2167, align 1, !tbaa !46
  %2169 = zext i8 %2168 to i32
  %2170 = or i32 %2166, %2169
  br label %2171

2171:                                             ; preds = %2133, %2112
  %2172 = phi i32 [ %2170, %2133 ], [ %2132, %2112 ]
  %2173 = phi i32 [ %2152, %2133 ], [ %2123, %2112 ]
  %2174 = add i32 %2173, %2108
  %2175 = icmp eq i32 %2173, %2172
  %2176 = icmp slt i32 %2174, 0
  %2177 = select i1 %2175, i1 true, i1 %2176
  br i1 %2177, label %2220, label %2178

2178:                                             ; preds = %2171
  %2179 = zext i32 %2174 to i64
  %2180 = getelementptr inbounds i8, ptr %2057, i64 %2179
  %2181 = getelementptr inbounds i8, ptr %2180, i64 2
  %2182 = load i8, ptr %2181, align 1, !tbaa !46
  %2183 = getelementptr i8, ptr %2181, i64 1
  %2184 = load i8, ptr %2183, align 1, !tbaa !46
  %2185 = zext i8 %2182 to i16
  %2186 = shl nuw i16 %2185, 8
  %2187 = zext i8 %2184 to i16
  %2188 = or i16 %2186, %2187
  %2189 = sext i16 %2188 to i32
  %2190 = getelementptr inbounds i8, ptr %2180, i64 8
  %2191 = load i8, ptr %2190, align 1, !tbaa !46
  %2192 = getelementptr i8, ptr %2190, i64 1
  %2193 = load i8, ptr %2192, align 1, !tbaa !46
  %2194 = zext i8 %2191 to i16
  %2195 = shl nuw i16 %2194, 8
  %2196 = zext i8 %2193 to i16
  %2197 = or i16 %2195, %2196
  %2198 = sext i16 %2197 to i32
  br label %2199

2199:                                             ; preds = %2178, %2090
  %2200 = phi i32 [ %2052, %2178 ], [ %2099, %2090 ]
  %2201 = phi i32 [ %2049, %2178 ], [ %2098, %2090 ]
  %2202 = phi i32 [ %2054, %2178 ], [ %2097, %2090 ]
  %2203 = phi i32 [ %2056, %2178 ], [ %2096, %2090 ]
  %2204 = phi i32 [ %2189, %2178 ], [ %2093, %2090 ]
  %2205 = phi i32 [ %2198, %2178 ], [ %2095, %2090 ]
  %2206 = sub nsw i32 0, %2205
  %2207 = insertelement <2 x i32> poison, i32 %2204, i64 0
  %2208 = insertelement <2 x i32> %2207, i32 %2206, i64 1
  %2209 = sitofp <2 x i32> %2208 to <2 x float>
  %2210 = fmul fast <2 x float> %1991, %2209
  %2211 = fcmp fast ult <2 x float> %2210, zeroinitializer
  %2212 = fptosi <2 x float> %2210 to <2 x i32>
  %2213 = sitofp <2 x i32> %2212 to <2 x float>
  %2214 = fcmp fast une <2 x float> %2210, %2213
  %2215 = select <2 x i1> %2211, <2 x i1> %2214, <2 x i1> zeroinitializer
  %2216 = sext <2 x i1> %2215 to <2 x i32>
  %2217 = add nsw <2 x i32> %2216, %2212
  %2218 = sitofp <2 x i32> %2217 to <2 x float>
  %2219 = fptosi <2 x float> %2218 to <2 x i32>
  br label %2220

2220:                                             ; preds = %2199, %2171, %2103, %2100
  %2221 = phi i32 [ %2052, %2171 ], [ %2052, %2103 ], [ %2052, %2100 ], [ %2200, %2199 ]
  %2222 = phi i32 [ %2049, %2171 ], [ %2049, %2103 ], [ %2049, %2100 ], [ %2201, %2199 ]
  %2223 = phi i32 [ %2054, %2171 ], [ %2054, %2103 ], [ %2054, %2100 ], [ %2202, %2199 ]
  %2224 = phi i32 [ %2056, %2171 ], [ %2056, %2103 ], [ %2056, %2100 ], [ %2203, %2199 ]
  %2225 = phi <2 x i32> [ zeroinitializer, %2171 ], [ zeroinitializer, %2103 ], [ zeroinitializer, %2100 ], [ %2219, %2199 ]
  %2226 = sub i32 %2224, %2010
  %2227 = add i32 %2226, 1
  %2228 = sub i32 %2223, %2009
  %2229 = add i32 %2228, 1
  %2230 = sext i32 %2222 to i64
  %2231 = getelementptr inbounds i8, ptr %1878, i64 %2230
  %2232 = mul nsw i32 %2221, %1808
  %2233 = sext i32 %2232 to i64
  %2234 = getelementptr inbounds i8, ptr %2231, i64 %2233
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %2235 = invoke fastcc noundef i32 @"?stbtt_GetGlyphShape@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z"(ptr noundef nonnull %1904, i32 noundef %2045, ptr noundef nonnull %10)
          to label %2236 unwind label %4018

2236:                                             ; preds = %2220
  %2237 = load i32, ptr %1921, align 4, !tbaa !429
  %2238 = icmp eq i32 %2237, 0
  br i1 %2238, label %2247, label %2239

2239:                                             ; preds = %2236
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %2) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2, i8 0, i64 56, i1 false)
  store i32 1, ptr %2, align 8
  %2240 = invoke fastcc noundef i32 @"?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z"(ptr noundef nonnull %1904, i32 noundef %2045, ptr noundef nonnull %2)
          to label %2241 unwind label %4018

2241:                                             ; preds = %2239
  %2242 = icmp eq i32 %2240, 0
  %2243 = load i32, ptr %1881, align 8
  %2244 = select i1 %2242, i32 0, i32 %2243
  %2245 = load i32, ptr %1882, align 4
  %2246 = select i1 %2242, i32 0, i32 %2245
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %2) #39
  br label %2347

2247:                                             ; preds = %2236
  %2248 = load i32, ptr %1922, align 4, !tbaa !380
  %2249 = icmp sgt i32 %2248, %2045
  br i1 %2249, label %2250, label %2364

2250:                                             ; preds = %2247
  %2251 = load i32, ptr %1923, align 4, !tbaa !384
  %2252 = icmp sgt i32 %2251, 1
  br i1 %2252, label %2364, label %2253

2253:                                             ; preds = %2250
  %2254 = icmp eq i32 %2251, 0
  %2255 = load i32, ptr %1924, align 8, !tbaa !369
  %2256 = load ptr, ptr %1917, align 8, !tbaa !364
  %2257 = load i32, ptr %1925, align 8, !tbaa !367
  %2258 = sext i32 %2257 to i64
  %2259 = getelementptr inbounds i8, ptr %2256, i64 %2258
  br i1 %2254, label %2260, label %2281

2260:                                             ; preds = %2253
  %2261 = shl nsw i32 %2045, 1
  %2262 = sext i32 %2261 to i64
  %2263 = getelementptr inbounds i8, ptr %2259, i64 %2262
  %2264 = load i8, ptr %2263, align 1, !tbaa !46
  %2265 = getelementptr i8, ptr %2263, i64 1
  %2266 = load i8, ptr %2265, align 1, !tbaa !46
  %2267 = zext i8 %2264 to i32
  %2268 = zext i8 %2266 to i32
  %2269 = shl nuw nsw i32 %2267, 9
  %2270 = shl nuw nsw i32 %2268, 1
  %2271 = or i32 %2270, %2269
  %2272 = getelementptr inbounds i8, ptr %2263, i64 2
  %2273 = load i8, ptr %2272, align 1, !tbaa !46
  %2274 = getelementptr i8, ptr %2272, i64 1
  %2275 = load i8, ptr %2274, align 1, !tbaa !46
  %2276 = zext i8 %2273 to i32
  %2277 = zext i8 %2275 to i32
  %2278 = shl nuw nsw i32 %2276, 9
  %2279 = shl nuw nsw i32 %2277, 1
  %2280 = or i32 %2279, %2278
  br label %2319

2281:                                             ; preds = %2253
  %2282 = sext i32 %2073 to i64
  %2283 = getelementptr inbounds i8, ptr %2259, i64 %2282
  %2284 = load i8, ptr %2283, align 1, !tbaa !46
  %2285 = zext i8 %2284 to i32
  %2286 = shl nuw i32 %2285, 24
  %2287 = getelementptr inbounds i8, ptr %2283, i64 1
  %2288 = load i8, ptr %2287, align 1, !tbaa !46
  %2289 = zext i8 %2288 to i32
  %2290 = shl nuw nsw i32 %2289, 16
  %2291 = or i32 %2290, %2286
  %2292 = getelementptr inbounds i8, ptr %2283, i64 2
  %2293 = load i8, ptr %2292, align 1, !tbaa !46
  %2294 = zext i8 %2293 to i32
  %2295 = shl nuw nsw i32 %2294, 8
  %2296 = or i32 %2291, %2295
  %2297 = getelementptr inbounds i8, ptr %2283, i64 3
  %2298 = load i8, ptr %2297, align 1, !tbaa !46
  %2299 = zext i8 %2298 to i32
  %2300 = or i32 %2296, %2299
  %2301 = getelementptr inbounds i8, ptr %2283, i64 4
  %2302 = load i8, ptr %2301, align 1, !tbaa !46
  %2303 = zext i8 %2302 to i32
  %2304 = shl nuw i32 %2303, 24
  %2305 = getelementptr inbounds i8, ptr %2301, i64 1
  %2306 = load i8, ptr %2305, align 1, !tbaa !46
  %2307 = zext i8 %2306 to i32
  %2308 = shl nuw nsw i32 %2307, 16
  %2309 = or i32 %2308, %2304
  %2310 = getelementptr inbounds i8, ptr %2301, i64 2
  %2311 = load i8, ptr %2310, align 1, !tbaa !46
  %2312 = zext i8 %2311 to i32
  %2313 = shl nuw nsw i32 %2312, 8
  %2314 = or i32 %2309, %2313
  %2315 = getelementptr inbounds i8, ptr %2301, i64 3
  %2316 = load i8, ptr %2315, align 1, !tbaa !46
  %2317 = zext i8 %2316 to i32
  %2318 = or i32 %2314, %2317
  br label %2319

2319:                                             ; preds = %2281, %2260
  %2320 = phi i32 [ %2318, %2281 ], [ %2280, %2260 ]
  %2321 = phi i32 [ %2300, %2281 ], [ %2271, %2260 ]
  %2322 = add i32 %2321, %2255
  %2323 = icmp eq i32 %2321, %2320
  %2324 = icmp slt i32 %2322, 0
  %2325 = select i1 %2323, i1 true, i1 %2324
  br i1 %2325, label %2364, label %2326

2326:                                             ; preds = %2319
  %2327 = zext i32 %2322 to i64
  %2328 = getelementptr inbounds i8, ptr %2256, i64 %2327
  %2329 = getelementptr inbounds i8, ptr %2328, i64 2
  %2330 = load i8, ptr %2329, align 1, !tbaa !46
  %2331 = getelementptr i8, ptr %2329, i64 1
  %2332 = load i8, ptr %2331, align 1, !tbaa !46
  %2333 = zext i8 %2330 to i16
  %2334 = shl nuw i16 %2333, 8
  %2335 = zext i8 %2332 to i16
  %2336 = or i16 %2334, %2335
  %2337 = sext i16 %2336 to i32
  %2338 = getelementptr inbounds i8, ptr %2328, i64 8
  %2339 = load i8, ptr %2338, align 1, !tbaa !46
  %2340 = getelementptr i8, ptr %2338, i64 1
  %2341 = load i8, ptr %2340, align 1, !tbaa !46
  %2342 = zext i8 %2339 to i16
  %2343 = shl nuw i16 %2342, 8
  %2344 = zext i8 %2341 to i16
  %2345 = or i16 %2343, %2344
  %2346 = sext i16 %2345 to i32
  br label %2347

2347:                                             ; preds = %2326, %2241
  %2348 = phi i32 [ %2244, %2241 ], [ %2337, %2326 ]
  %2349 = phi i32 [ %2246, %2241 ], [ %2346, %2326 ]
  %2350 = sub nsw i32 0, %2349
  %2351 = insertelement <2 x i32> poison, i32 %2348, i64 0
  %2352 = insertelement <2 x i32> %2351, i32 %2350, i64 1
  %2353 = sitofp <2 x i32> %2352 to <2 x float>
  %2354 = fmul fast <2 x float> %1991, %2353
  %2355 = fcmp fast ult <2 x float> %2354, zeroinitializer
  %2356 = fptosi <2 x float> %2354 to <2 x i32>
  %2357 = sitofp <2 x i32> %2356 to <2 x float>
  %2358 = fcmp fast une <2 x float> %2354, %2357
  %2359 = select <2 x i1> %2355, <2 x i1> %2358, <2 x i1> zeroinitializer
  %2360 = sext <2 x i1> %2359 to <2 x i32>
  %2361 = add nsw <2 x i32> %2360, %2356
  %2362 = sitofp <2 x i32> %2361 to <2 x float>
  %2363 = fptosi <2 x float> %2362 to <2 x i32>
  br label %2364

2364:                                             ; preds = %2347, %2319, %2250, %2247
  %2365 = phi <2 x i32> [ %2363, %2347 ], [ zeroinitializer, %2247 ], [ zeroinitializer, %2250 ], [ zeroinitializer, %2319 ]
  %2366 = icmp ne i32 %2229, 0
  %2367 = icmp ne i32 %2227, 0
  %2368 = and i1 %2366, %2367
  br i1 %2368, label %2369, label %3239

2369:                                             ; preds = %2364
  %2370 = load ptr, ptr %10, align 8, !tbaa !117
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #39
  %2371 = icmp sgt i32 %2235, 0
  br i1 %2371, label %2372, label %2599

2372:                                             ; preds = %2369
  %2373 = zext i32 %2235 to i64
  %2374 = icmp ult i32 %2235, 8
  br i1 %2374, label %2424, label %2375

2375:                                             ; preds = %2372
  %2376 = and i64 %2373, 4294967288
  br label %2377

2377:                                             ; preds = %2377, %2375
  %2378 = phi i64 [ 0, %2375 ], [ %2418, %2377 ]
  %2379 = phi <4 x i32> [ zeroinitializer, %2375 ], [ %2416, %2377 ]
  %2380 = phi <4 x i32> [ zeroinitializer, %2375 ], [ %2417, %2377 ]
  %2381 = or i64 %2378, 1
  %2382 = or i64 %2378, 2
  %2383 = or i64 %2378, 3
  %2384 = or i64 %2378, 4
  %2385 = or i64 %2378, 5
  %2386 = or i64 %2378, 6
  %2387 = or i64 %2378, 7
  %2388 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2378, i32 6
  %2389 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2381, i32 6
  %2390 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2382, i32 6
  %2391 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2383, i32 6
  %2392 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2384, i32 6
  %2393 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2385, i32 6
  %2394 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2386, i32 6
  %2395 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2387, i32 6
  %2396 = load i8, ptr %2388, align 2, !tbaa !460
  %2397 = load i8, ptr %2389, align 2, !tbaa !460
  %2398 = load i8, ptr %2390, align 2, !tbaa !460
  %2399 = load i8, ptr %2391, align 2, !tbaa !460
  %2400 = insertelement <4 x i8> poison, i8 %2396, i64 0
  %2401 = insertelement <4 x i8> %2400, i8 %2397, i64 1
  %2402 = insertelement <4 x i8> %2401, i8 %2398, i64 2
  %2403 = insertelement <4 x i8> %2402, i8 %2399, i64 3
  %2404 = load i8, ptr %2392, align 2, !tbaa !460
  %2405 = load i8, ptr %2393, align 2, !tbaa !460
  %2406 = load i8, ptr %2394, align 2, !tbaa !460
  %2407 = load i8, ptr %2395, align 2, !tbaa !460
  %2408 = insertelement <4 x i8> poison, i8 %2404, i64 0
  %2409 = insertelement <4 x i8> %2408, i8 %2405, i64 1
  %2410 = insertelement <4 x i8> %2409, i8 %2406, i64 2
  %2411 = insertelement <4 x i8> %2410, i8 %2407, i64 3
  %2412 = icmp eq <4 x i8> %2403, <i8 1, i8 1, i8 1, i8 1>
  %2413 = icmp eq <4 x i8> %2411, <i8 1, i8 1, i8 1, i8 1>
  %2414 = zext <4 x i1> %2412 to <4 x i32>
  %2415 = zext <4 x i1> %2413 to <4 x i32>
  %2416 = add <4 x i32> %2379, %2414
  %2417 = add <4 x i32> %2380, %2415
  %2418 = add nuw i64 %2378, 8
  %2419 = icmp eq i64 %2418, %2376
  br i1 %2419, label %2420, label %2377, !llvm.loop !462

2420:                                             ; preds = %2377
  %2421 = add <4 x i32> %2417, %2416
  %2422 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %2421)
  %2423 = icmp eq i64 %2376, %2373
  br i1 %2423, label %2437, label %2424

2424:                                             ; preds = %2372, %2420
  %2425 = phi i64 [ 0, %2372 ], [ %2376, %2420 ]
  %2426 = phi i32 [ 0, %2372 ], [ %2422, %2420 ]
  br label %2427

2427:                                             ; preds = %2424, %2427
  %2428 = phi i64 [ %2435, %2427 ], [ %2425, %2424 ]
  %2429 = phi i32 [ %2434, %2427 ], [ %2426, %2424 ]
  %2430 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2428, i32 6
  %2431 = load i8, ptr %2430, align 2, !tbaa !460
  %2432 = icmp eq i8 %2431, 1
  %2433 = zext i1 %2432 to i32
  %2434 = add nuw nsw i32 %2429, %2433
  %2435 = add nuw nsw i64 %2428, 1
  %2436 = icmp eq i64 %2435, %2373
  br i1 %2436, label %2437, label %2427, !llvm.loop !463

2437:                                             ; preds = %2427, %2420
  %2438 = phi i32 [ %2422, %2420 ], [ %2434, %2427 ]
  %2439 = icmp eq i32 %2438, 0
  br i1 %2439, label %2599, label %2440

2440:                                             ; preds = %2437
  %2441 = zext i32 %2438 to i64
  %2442 = shl nuw nsw i64 %2441, 2
  %2443 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %2442)
          to label %2444 unwind label %4018

2444:                                             ; preds = %2440
  %2445 = icmp eq ptr %2443, null
  br i1 %2445, label %2599, label %2446

2446:                                             ; preds = %2444
  store i32 0, ptr %9, align 4, !tbaa !105
  br label %2447

2447:                                             ; preds = %2505, %2446
  %2448 = phi i64 [ 0, %2446 ], [ %2509, %2505 ]
  %2449 = phi i32 [ 0, %2446 ], [ %2507, %2505 ]
  %2450 = phi i32 [ -1, %2446 ], [ %2506, %2505 ]
  %2451 = phi <2 x float> [ zeroinitializer, %2446 ], [ %2508, %2505 ]
  %2452 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448
  %2453 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 6
  %2454 = load i8, ptr %2453, align 2, !tbaa !460
  switch i8 %2454, label %2505 [
    i8 1, label %2492
    i8 2, label %2487
    i8 3, label %2474
    i8 4, label %2455
  ]

2455:                                             ; preds = %2447
  %2456 = load <2 x i16>, ptr %2452, align 2, !tbaa !121
  %2457 = sitofp <2 x i16> %2456 to <2 x float>
  %2458 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 5
  %2459 = load i16, ptr %2458, align 2, !tbaa !464
  %2460 = sitofp i16 %2459 to float
  %2461 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 4
  %2462 = load i16, ptr %2461, align 2, !tbaa !465
  %2463 = sitofp i16 %2462 to float
  %2464 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 3
  %2465 = load i16, ptr %2464, align 2, !tbaa !466
  %2466 = sitofp i16 %2465 to float
  %2467 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 2
  %2468 = load i16, ptr %2467, align 2, !tbaa !467
  %2469 = sitofp i16 %2468 to float
  %2470 = extractelement <2 x float> %2451, i64 0
  %2471 = extractelement <2 x float> %2451, i64 1
  %2472 = extractelement <2 x float> %2457, i64 0
  %2473 = extractelement <2 x float> %2457, i64 1
  call fastcc void @"?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z"(ptr noundef null, ptr noundef nonnull %9, float noundef %2470, float noundef %2471, float noundef %2469, float noundef %2466, float noundef %2463, float noundef %2460, float noundef %2472, float noundef %2473, float noundef %1997, i32 noundef 0)
  br label %2505

2474:                                             ; preds = %2447
  %2475 = load <2 x i16>, ptr %2452, align 2, !tbaa !121
  %2476 = sitofp <2 x i16> %2475 to <2 x float>
  %2477 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 3
  %2478 = load i16, ptr %2477, align 2, !tbaa !466
  %2479 = sitofp i16 %2478 to float
  %2480 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2448, i32 2
  %2481 = load i16, ptr %2480, align 2, !tbaa !467
  %2482 = sitofp i16 %2481 to float
  %2483 = extractelement <2 x float> %2451, i64 0
  %2484 = extractelement <2 x float> %2451, i64 1
  %2485 = extractelement <2 x float> %2476, i64 0
  %2486 = extractelement <2 x float> %2476, i64 1
  call fastcc void @"?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z"(ptr noundef null, ptr noundef nonnull %9, float noundef %2483, float noundef %2484, float noundef %2482, float noundef %2479, float noundef %2485, float noundef %2486, float noundef %1997, i32 noundef 0)
  br label %2505

2487:                                             ; preds = %2447
  %2488 = load <2 x i16>, ptr %2452, align 2, !tbaa !121
  %2489 = sitofp <2 x i16> %2488 to <2 x float>
  %2490 = load i32, ptr %9, align 4, !tbaa !105
  %2491 = add nsw i32 %2490, 1
  store i32 %2491, ptr %9, align 4, !tbaa !105
  br label %2505

2492:                                             ; preds = %2447
  %2493 = icmp sgt i32 %2450, -1
  br i1 %2493, label %2494, label %2499

2494:                                             ; preds = %2492
  %2495 = load i32, ptr %9, align 4, !tbaa !105
  %2496 = sub nsw i32 %2495, %2449
  %2497 = zext i32 %2450 to i64
  %2498 = getelementptr inbounds i32, ptr %2443, i64 %2497
  store i32 %2496, ptr %2498, align 4, !tbaa !105
  br label %2499

2499:                                             ; preds = %2494, %2492
  %2500 = add nsw i32 %2450, 1
  %2501 = load i32, ptr %9, align 4, !tbaa !105
  %2502 = load <2 x i16>, ptr %2452, align 2, !tbaa !121
  %2503 = sitofp <2 x i16> %2502 to <2 x float>
  %2504 = add nsw i32 %2501, 1
  store i32 %2504, ptr %9, align 4, !tbaa !105
  br label %2505

2505:                                             ; preds = %2499, %2487, %2474, %2455, %2447
  %2506 = phi i32 [ %2450, %2447 ], [ %2450, %2455 ], [ %2450, %2474 ], [ %2500, %2499 ], [ %2450, %2487 ]
  %2507 = phi i32 [ %2449, %2447 ], [ %2449, %2455 ], [ %2449, %2474 ], [ %2501, %2499 ], [ %2449, %2487 ]
  %2508 = phi <2 x float> [ %2451, %2447 ], [ %2457, %2455 ], [ %2476, %2474 ], [ %2503, %2499 ], [ %2489, %2487 ]
  %2509 = add nuw nsw i64 %2448, 1
  %2510 = icmp eq i64 %2509, %2373
  br i1 %2510, label %2511, label %2447, !llvm.loop !468

2511:                                             ; preds = %2505
  %2512 = load i32, ptr %9, align 4, !tbaa !105
  %2513 = sub nsw i32 %2512, %2507
  %2514 = sext i32 %2506 to i64
  %2515 = getelementptr inbounds i32, ptr %2443, i64 %2514
  store i32 %2513, ptr %2515, align 4, !tbaa !105
  %2516 = load i32, ptr %9, align 4, !tbaa !105
  %2517 = sext i32 %2516 to i64
  %2518 = shl nsw i64 %2517, 3
  %2519 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %2518)
          to label %2520 unwind label %4018

2520:                                             ; preds = %2511
  %2521 = icmp eq ptr %2519, null
  br i1 %2521, label %2597, label %2522

2522:                                             ; preds = %2520
  store i32 0, ptr %9, align 4, !tbaa !105
  br label %2523

2523:                                             ; preds = %2591, %2522
  %2524 = phi i64 [ 0, %2522 ], [ %2595, %2591 ]
  %2525 = phi i32 [ %2507, %2522 ], [ %2593, %2591 ]
  %2526 = phi i32 [ -1, %2522 ], [ %2592, %2591 ]
  %2527 = phi <2 x float> [ zeroinitializer, %2522 ], [ %2594, %2591 ]
  %2528 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524
  %2529 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 6
  %2530 = load i8, ptr %2529, align 2, !tbaa !460
  switch i8 %2530, label %2591 [
    i8 1, label %2576
    i8 2, label %2569
    i8 3, label %2553
    i8 4, label %2531
  ]

2531:                                             ; preds = %2523
  %2532 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 1
  %2533 = load i16, ptr %2532, align 2, !tbaa !469
  %2534 = sitofp i16 %2533 to float
  %2535 = load i16, ptr %2528, align 2, !tbaa !470
  %2536 = sitofp i16 %2535 to float
  %2537 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 5
  %2538 = load i16, ptr %2537, align 2, !tbaa !464
  %2539 = sitofp i16 %2538 to float
  %2540 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 4
  %2541 = load i16, ptr %2540, align 2, !tbaa !465
  %2542 = sitofp i16 %2541 to float
  %2543 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 3
  %2544 = load i16, ptr %2543, align 2, !tbaa !466
  %2545 = sitofp i16 %2544 to float
  %2546 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 2
  %2547 = load i16, ptr %2546, align 2, !tbaa !467
  %2548 = sitofp i16 %2547 to float
  %2549 = extractelement <2 x float> %2527, i64 0
  %2550 = extractelement <2 x float> %2527, i64 1
  call fastcc void @"?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z"(ptr noundef nonnull %2519, ptr noundef nonnull %9, float noundef %2549, float noundef %2550, float noundef %2548, float noundef %2545, float noundef %2542, float noundef %2539, float noundef %2536, float noundef %2534, float noundef %1997, i32 noundef 0)
  %2551 = load <2 x i16>, ptr %2528, align 2, !tbaa !121
  %2552 = sitofp <2 x i16> %2551 to <2 x float>
  br label %2591

2553:                                             ; preds = %2523
  %2554 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 1
  %2555 = load i16, ptr %2554, align 2, !tbaa !469
  %2556 = sitofp i16 %2555 to float
  %2557 = load i16, ptr %2528, align 2, !tbaa !470
  %2558 = sitofp i16 %2557 to float
  %2559 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 3
  %2560 = load i16, ptr %2559, align 2, !tbaa !466
  %2561 = sitofp i16 %2560 to float
  %2562 = getelementptr inbounds %struct.stbtt_vertex, ptr %2370, i64 %2524, i32 2
  %2563 = load i16, ptr %2562, align 2, !tbaa !467
  %2564 = sitofp i16 %2563 to float
  %2565 = extractelement <2 x float> %2527, i64 0
  %2566 = extractelement <2 x float> %2527, i64 1
  call fastcc void @"?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z"(ptr noundef nonnull %2519, ptr noundef nonnull %9, float noundef %2565, float noundef %2566, float noundef %2564, float noundef %2561, float noundef %2558, float noundef %2556, float noundef %1997, i32 noundef 0)
  %2567 = load <2 x i16>, ptr %2528, align 2, !tbaa !121
  %2568 = sitofp <2 x i16> %2567 to <2 x float>
  br label %2591

2569:                                             ; preds = %2523
  %2570 = load <2 x i16>, ptr %2528, align 2, !tbaa !121
  %2571 = sitofp <2 x i16> %2570 to <2 x float>
  %2572 = load i32, ptr %9, align 4, !tbaa !105
  %2573 = add nsw i32 %2572, 1
  store i32 %2573, ptr %9, align 4, !tbaa !105
  %2574 = sext i32 %2572 to i64
  %2575 = getelementptr inbounds %struct.stbtt__point, ptr %2519, i64 %2574
  store <2 x float> %2571, ptr %2575, align 4, !tbaa !6
  br label %2591

2576:                                             ; preds = %2523
  %2577 = icmp sgt i32 %2526, -1
  br i1 %2577, label %2578, label %2583

2578:                                             ; preds = %2576
  %2579 = load i32, ptr %9, align 4, !tbaa !105
  %2580 = sub nsw i32 %2579, %2525
  %2581 = zext i32 %2526 to i64
  %2582 = getelementptr inbounds i32, ptr %2443, i64 %2581
  store i32 %2580, ptr %2582, align 4, !tbaa !105
  br label %2583

2583:                                             ; preds = %2578, %2576
  %2584 = add nsw i32 %2526, 1
  %2585 = load i32, ptr %9, align 4, !tbaa !105
  %2586 = load <2 x i16>, ptr %2528, align 2, !tbaa !121
  %2587 = sitofp <2 x i16> %2586 to <2 x float>
  %2588 = add nsw i32 %2585, 1
  store i32 %2588, ptr %9, align 4, !tbaa !105
  %2589 = sext i32 %2585 to i64
  %2590 = getelementptr inbounds %struct.stbtt__point, ptr %2519, i64 %2589
  store <2 x float> %2587, ptr %2590, align 4, !tbaa !6
  br label %2591

2591:                                             ; preds = %2583, %2569, %2553, %2531, %2523
  %2592 = phi i32 [ %2526, %2523 ], [ %2526, %2531 ], [ %2526, %2553 ], [ %2584, %2583 ], [ %2526, %2569 ]
  %2593 = phi i32 [ %2525, %2523 ], [ %2525, %2531 ], [ %2525, %2553 ], [ %2585, %2583 ], [ %2525, %2569 ]
  %2594 = phi <2 x float> [ %2527, %2523 ], [ %2552, %2531 ], [ %2568, %2553 ], [ %2587, %2583 ], [ %2571, %2569 ]
  %2595 = add nuw nsw i64 %2524, 1
  %2596 = icmp eq i64 %2595, %2373
  br i1 %2596, label %2600, label %2523, !llvm.loop !468

2597:                                             ; preds = %2520
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef null)
          to label %2598 unwind label %4018

2598:                                             ; preds = %2597
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %2443)
          to label %2599 unwind label %4018

2599:                                             ; preds = %2598, %2444, %2437, %2369
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #39
  br label %3239

2600:                                             ; preds = %2591
  %2601 = load i32, ptr %9, align 4, !tbaa !105
  %2602 = sub nsw i32 %2601, %2593
  %2603 = sext i32 %2592 to i64
  %2604 = getelementptr inbounds i32, ptr %2443, i64 %2603
  store i32 %2602, ptr %2604, align 4, !tbaa !105
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #39
  %2605 = icmp ult i32 %2438, 8
  br i1 %2605, label %2624, label %2606

2606:                                             ; preds = %2600
  %2607 = and i64 %2441, 4294967288
  br label %2608

2608:                                             ; preds = %2608, %2606
  %2609 = phi i64 [ 0, %2606 ], [ %2618, %2608 ]
  %2610 = phi <4 x i32> [ zeroinitializer, %2606 ], [ %2616, %2608 ]
  %2611 = phi <4 x i32> [ zeroinitializer, %2606 ], [ %2617, %2608 ]
  %2612 = getelementptr inbounds i32, ptr %2443, i64 %2609
  %2613 = load <4 x i32>, ptr %2612, align 4, !tbaa !105
  %2614 = getelementptr inbounds i32, ptr %2612, i64 4
  %2615 = load <4 x i32>, ptr %2614, align 4, !tbaa !105
  %2616 = add <4 x i32> %2613, %2610
  %2617 = add <4 x i32> %2615, %2611
  %2618 = add nuw i64 %2609, 8
  %2619 = icmp eq i64 %2618, %2607
  br i1 %2619, label %2620, label %2608, !llvm.loop !471

2620:                                             ; preds = %2608
  %2621 = add <4 x i32> %2617, %2616
  %2622 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %2621)
  %2623 = icmp eq i64 %2607, %2441
  br i1 %2623, label %2635, label %2624

2624:                                             ; preds = %2600, %2620
  %2625 = phi i64 [ 0, %2600 ], [ %2607, %2620 ]
  %2626 = phi i32 [ 0, %2600 ], [ %2622, %2620 ]
  br label %2627

2627:                                             ; preds = %2624, %2627
  %2628 = phi i64 [ %2633, %2627 ], [ %2625, %2624 ]
  %2629 = phi i32 [ %2632, %2627 ], [ %2626, %2624 ]
  %2630 = getelementptr inbounds i32, ptr %2443, i64 %2628
  %2631 = load i32, ptr %2630, align 4, !tbaa !105
  %2632 = add nsw i32 %2631, %2629
  %2633 = add nuw nsw i64 %2628, 1
  %2634 = icmp eq i64 %2633, %2441
  br i1 %2634, label %2635, label %2627, !llvm.loop !472

2635:                                             ; preds = %2627, %2620
  %2636 = phi i32 [ %2622, %2620 ], [ %2632, %2627 ]
  %2637 = add nsw i32 %2636, 1
  %2638 = sext i32 %2637 to i64
  %2639 = mul nsw i64 %2638, 20
  %2640 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %2639)
          to label %2641 unwind label %4018

2641:                                             ; preds = %2635
  %2642 = icmp eq ptr %2640, null
  br i1 %2642, label %3237, label %2643

2643:                                             ; preds = %2641, %2696
  %2644 = phi i64 [ %2698, %2696 ], [ 0, %2641 ]
  %2645 = phi i32 [ %2697, %2696 ], [ 0, %2641 ]
  %2646 = phi i32 [ %2651, %2696 ], [ 0, %2641 ]
  %2647 = sext i32 %2646 to i64
  %2648 = getelementptr inbounds %struct.stbtt__point, ptr %2519, i64 %2647
  %2649 = getelementptr inbounds i32, ptr %2443, i64 %2644
  %2650 = load i32, ptr %2649, align 4, !tbaa !105
  %2651 = add nsw i32 %2650, %2646
  %2652 = icmp sgt i32 %2650, 0
  br i1 %2652, label %2653, label %2696

2653:                                             ; preds = %2643
  %2654 = add nsw i32 %2650, -1
  br label %2655

2655:                                             ; preds = %2689, %2653
  %2656 = phi i32 [ %2650, %2653 ], [ %2691, %2689 ]
  %2657 = phi i64 [ 0, %2653 ], [ %2693, %2689 ]
  %2658 = phi i32 [ %2645, %2653 ], [ %2692, %2689 ]
  %2659 = phi i32 [ %2654, %2653 ], [ %2690, %2689 ]
  %2660 = sext i32 %2659 to i64
  %2661 = getelementptr inbounds %struct.stbtt__point, ptr %2648, i64 %2660
  %2662 = getelementptr inbounds %struct.stbtt__point, ptr %2661, i64 0, i32 1
  %2663 = load float, ptr %2662, align 4, !tbaa !473
  %2664 = getelementptr inbounds %struct.stbtt__point, ptr %2648, i64 %2657
  %2665 = getelementptr inbounds %struct.stbtt__point, ptr %2664, i64 0, i32 1
  %2666 = load float, ptr %2665, align 4, !tbaa !473
  %2667 = fcmp fast oeq float %2663, %2666
  br i1 %2667, label %2668, label %2670

2668:                                             ; preds = %2655
  %2669 = trunc i64 %2657 to i32
  br label %2689

2670:                                             ; preds = %2655
  %2671 = sext i32 %2658 to i64
  %2672 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2671
  %2673 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2671, i32 4
  %2674 = fcmp fast ogt float %2663, %2666
  %2675 = zext i1 %2674 to i32
  %2676 = trunc i64 %2657 to i32
  %2677 = select i1 %2674, i32 %2659, i32 %2676
  %2678 = select i1 %2674, i32 %2676, i32 %2659
  store i32 %2675, ptr %2673, align 4, !tbaa !475
  %2679 = sext i32 %2677 to i64
  %2680 = getelementptr inbounds %struct.stbtt__point, ptr %2648, i64 %2679
  %2681 = sext i32 %2678 to i64
  %2682 = getelementptr inbounds %struct.stbtt__point, ptr %2648, i64 %2681
  %2683 = load <2 x float>, ptr %2680, align 4, !tbaa !6
  %2684 = load <2 x float>, ptr %2682, align 4, !tbaa !6
  %2685 = shufflevector <2 x float> %2683, <2 x float> %2684, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2686 = fmul fast <4 x float> %2685, %2014
  store <4 x float> %2686, ptr %2672, align 4, !tbaa !6
  %2687 = add nsw i32 %2658, 1
  %2688 = load i32, ptr %2649, align 4, !tbaa !105
  br label %2689

2689:                                             ; preds = %2670, %2668
  %2690 = phi i32 [ %2669, %2668 ], [ %2676, %2670 ]
  %2691 = phi i32 [ %2656, %2668 ], [ %2688, %2670 ]
  %2692 = phi i32 [ %2658, %2668 ], [ %2687, %2670 ]
  %2693 = add nuw nsw i64 %2657, 1
  %2694 = sext i32 %2691 to i64
  %2695 = icmp slt i64 %2693, %2694
  br i1 %2695, label %2655, label %2696, !llvm.loop !477

2696:                                             ; preds = %2689, %2643
  %2697 = phi i32 [ %2645, %2643 ], [ %2692, %2689 ]
  %2698 = add nuw nsw i64 %2644, 1
  %2699 = icmp eq i64 %2698, %2441
  br i1 %2699, label %2700, label %2643, !llvm.loop !478

2700:                                             ; preds = %2696
  call fastcc void @"?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z"(ptr noundef nonnull %2640, i32 noundef %2697)
  %2701 = icmp sgt i32 %2697, 1
  br i1 %2701, label %2702, label %2734

2702:                                             ; preds = %2700
  %2703 = zext i32 %2697 to i64
  br label %2704

2704:                                             ; preds = %2731, %2702
  %2705 = phi i64 [ 1, %2702 ], [ %2732, %2731 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8)
  %2706 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2705
  %2707 = load <2 x float>, ptr %2706, align 4
  %2708 = getelementptr inbounds i8, ptr %2706, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %8, ptr noundef nonnull align 4 dereferenceable(12) %2708, i64 12, i1 false), !tbaa.struct !479
  %2709 = extractelement <2 x float> %2707, i64 1
  br label %2710

2710:                                             ; preds = %2717, %2704
  %2711 = phi i64 [ %2705, %2704 ], [ %2712, %2717 ]
  %2712 = add nsw i64 %2711, -1
  %2713 = and i64 %2712, 4294967295
  %2714 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2713, i32 1
  %2715 = load float, ptr %2714, align 4, !tbaa !480
  %2716 = fcmp fast olt float %2709, %2715
  br i1 %2716, label %2717, label %2721

2717:                                             ; preds = %2710
  %2718 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2713
  %2719 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2711
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2719, ptr noundef nonnull align 4 dereferenceable(20) %2718, i64 20, i1 false), !tbaa.struct !250
  %2720 = icmp sgt i64 %2711, 1
  br i1 %2720, label %2710, label %2723

2721:                                             ; preds = %2710
  %2722 = trunc i64 %2711 to i32
  br label %2723

2723:                                             ; preds = %2717, %2721
  %2724 = phi i32 [ %2722, %2721 ], [ 0, %2717 ]
  %2725 = zext i32 %2724 to i64
  %2726 = icmp eq i64 %2705, %2725
  br i1 %2726, label %2731, label %2727

2727:                                             ; preds = %2723
  %2728 = sext i32 %2724 to i64
  %2729 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2728
  store <2 x float> %2707, ptr %2729, align 4
  %2730 = getelementptr inbounds i8, ptr %2729, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %2730, ptr noundef nonnull align 8 dereferenceable(12) %8, i64 12, i1 false), !tbaa.struct !479
  br label %2731

2731:                                             ; preds = %2727, %2723
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8)
  %2732 = add nuw nsw i64 %2705, 1
  %2733 = icmp eq i64 %2732, %2703
  br i1 %2733, label %2734, label %2704, !llvm.loop !481

2734:                                             ; preds = %2731, %2700
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store ptr null, ptr %6, align 8, !tbaa !117
  call void @llvm.lifetime.start.p0(i64 516, ptr nonnull %7) #39
  %2735 = icmp sgt i32 %2229, 64
  br i1 %2735, label %2736, label %2742

2736:                                             ; preds = %2734
  %2737 = shl nuw nsw i32 %2229, 1
  %2738 = or i32 %2737, 1
  %2739 = sext i32 %2738 to i64
  %2740 = shl nsw i64 %2739, 2
  %2741 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %2740)
          to label %2742 unwind label %4018

2742:                                             ; preds = %2736, %2734
  %2743 = phi ptr [ %7, %2734 ], [ %2741, %2736 ]
  %2744 = sext i32 %2229 to i64
  %2745 = getelementptr inbounds float, ptr %2743, i64 %2744
  %2746 = extractelement <2 x i32> %2365, i64 1
  %2747 = add nsw i32 %2746, %2227
  %2748 = sitofp i32 %2747 to float
  %2749 = fadd fast float %2748, 1.000000e+00
  %2750 = sext i32 %2697 to i64
  %2751 = getelementptr inbounds %struct.stbtt__edge, ptr %2640, i64 %2750, i32 1
  store float %2749, ptr %2751, align 4, !tbaa !480
  %2752 = icmp ult i32 %2226, 2147483647
  br i1 %2752, label %2753, label %3233

2753:                                             ; preds = %2742
  %2754 = extractelement <2 x i32> %2365, i64 0
  %2755 = sitofp i32 %2754 to float
  %2756 = icmp ne i32 %2746, 0
  %2757 = getelementptr inbounds float, ptr %2745, i64 1
  %2758 = getelementptr inbounds float, ptr %2757, i64 -1
  %2759 = shl nsw i64 %2744, 2
  %2760 = add i32 %2228, 2
  %2761 = sext i32 %2760 to i64
  %2762 = shl nsw i64 %2761, 2
  %2763 = sitofp i32 %2229 to float
  %2764 = icmp ult i32 %2228, 2147483647
  br label %2765

2765:                                             ; preds = %3222, %2753
  %2766 = phi ptr [ null, %2753 ], [ %3190, %3222 ]
  %2767 = phi ptr [ %2640, %2753 ], [ %2889, %3222 ]
  %2768 = phi i32 [ %2746, %2753 ], [ %3223, %3222 ]
  %2769 = phi i32 [ 0, %2753 ], [ %3224, %3222 ]
  %2770 = phi ptr [ null, %2753 ], [ %2888, %3222 ]
  %2771 = phi i32 [ 0, %2753 ], [ %2887, %3222 ]
  %2772 = phi ptr [ null, %2753 ], [ %2886, %3222 ]
  %2773 = sitofp i32 %2768 to float
  %2774 = fadd fast float %2773, 1.000000e+00
  call void @llvm.memset.p0.i64(ptr align 4 %2743, i8 0, i64 %2759, i1 false)
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %2745, i8 0, i64 %2762, i1 false)
  %2775 = icmp eq ptr %2766, null
  br i1 %2775, label %2776, label %2784

2776:                                             ; preds = %2798, %2765
  %2777 = phi ptr [ %2772, %2765 ], [ %2799, %2798 ]
  %2778 = getelementptr inbounds %struct.stbtt__edge, ptr %2767, i64 0, i32 1
  %2779 = load float, ptr %2778, align 4, !tbaa !480
  %2780 = fcmp fast ugt float %2779, %2774
  br i1 %2780, label %2885, label %2781

2781:                                             ; preds = %2776
  %2782 = icmp eq i32 %2769, 0
  %2783 = and i1 %2756, %2782
  br label %2803

2784:                                             ; preds = %2765, %2798
  %2785 = phi ptr [ %2801, %2798 ], [ %2766, %2765 ]
  %2786 = phi ptr [ %2800, %2798 ], [ %6, %2765 ]
  %2787 = phi ptr [ %2799, %2798 ], [ %2772, %2765 ]
  %2788 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2785, i64 0, i32 6
  %2789 = load float, ptr %2788, align 4, !tbaa !482
  %2790 = fcmp fast ugt float %2789, %2773
  br i1 %2790, label %2798, label %2791

2791:                                             ; preds = %2784
  %2792 = load ptr, ptr %2785, align 8, !tbaa !484
  store ptr %2792, ptr %2786, align 8, !tbaa !117
  %2793 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2785, i64 0, i32 4
  %2794 = load float, ptr %2793, align 4, !tbaa !485
  %2795 = fcmp fast une float %2794, 0.000000e+00
  br i1 %2795, label %2797, label %2796

2796:                                             ; preds = %2791
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1BK@LMAHJHLI@?$AAz?$AA?9?$AA?$DO?$AAd?$AAi?$AAr?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3339)
          to label %2797 unwind label %4018

2797:                                             ; preds = %2796, %2791
  store float 0.000000e+00, ptr %2793, align 4, !tbaa !485
  store ptr %2787, ptr %2785, align 8, !tbaa !117
  br label %2798

2798:                                             ; preds = %2797, %2784
  %2799 = phi ptr [ %2787, %2784 ], [ %2785, %2797 ]
  %2800 = phi ptr [ %2785, %2784 ], [ %2786, %2797 ]
  %2801 = load ptr, ptr %2800, align 8, !tbaa !117
  %2802 = icmp eq ptr %2801, null
  br i1 %2802, label %2776, label %2784, !llvm.loop !486

2803:                                             ; preds = %2877, %2781
  %2804 = phi float [ %2779, %2781 ], [ %2883, %2877 ]
  %2805 = phi ptr [ %2778, %2781 ], [ %2882, %2877 ]
  %2806 = phi ptr [ %2767, %2781 ], [ %2881, %2877 ]
  %2807 = phi ptr [ %2770, %2781 ], [ %2880, %2877 ]
  %2808 = phi i32 [ %2771, %2781 ], [ %2879, %2877 ]
  %2809 = phi ptr [ %2777, %2781 ], [ %2878, %2877 ]
  %2810 = getelementptr inbounds %struct.stbtt__edge, ptr %2806, i64 0, i32 3
  %2811 = load float, ptr %2810, align 4, !tbaa !487
  %2812 = fcmp fast une float %2804, %2811
  br i1 %2812, label %2813, label %2877

2813:                                             ; preds = %2803
  %2814 = icmp eq ptr %2809, null
  br i1 %2814, label %2817, label %2815

2815:                                             ; preds = %2813
  %2816 = load ptr, ptr %2809, align 8, !tbaa !117
  br label %2838

2817:                                             ; preds = %2813
  %2818 = icmp eq i32 %2808, 0
  br i1 %2818, label %2821, label %2819

2819:                                             ; preds = %2817
  %2820 = add nsw i32 %2808, -1
  br label %2828

2821:                                             ; preds = %2817
  %2822 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef 25608)
          to label %2823 unwind label %4018

2823:                                             ; preds = %2821
  %2824 = icmp eq ptr %2822, null
  br i1 %2824, label %2837, label %2825

2825:                                             ; preds = %2823
  store ptr %2807, ptr %2822, align 8, !tbaa !488
  %2826 = load float, ptr %2810, align 4, !tbaa !487
  %2827 = load float, ptr %2805, align 4, !tbaa !480
  br label %2828

2828:                                             ; preds = %2825, %2819
  %2829 = phi float [ %2827, %2825 ], [ %2804, %2819 ]
  %2830 = phi float [ %2826, %2825 ], [ %2811, %2819 ]
  %2831 = phi ptr [ %2822, %2825 ], [ %2807, %2819 ]
  %2832 = phi i32 [ 799, %2825 ], [ %2820, %2819 ]
  %2833 = getelementptr inbounds i8, ptr %2831, i64 8
  %2834 = sext i32 %2832 to i64
  %2835 = shl nsw i64 %2834, 5
  %2836 = getelementptr inbounds i8, ptr %2833, i64 %2835
  br label %2838

2837:                                             ; preds = %2823
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1O@EHPNOHML@?$AAz?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 2866)
          to label %2877 unwind label %4018

2838:                                             ; preds = %2828, %2815
  %2839 = phi float [ %2829, %2828 ], [ %2804, %2815 ]
  %2840 = phi float [ %2830, %2828 ], [ %2811, %2815 ]
  %2841 = phi ptr [ null, %2828 ], [ %2816, %2815 ]
  %2842 = phi i32 [ %2832, %2828 ], [ %2808, %2815 ]
  %2843 = phi ptr [ %2831, %2828 ], [ %2807, %2815 ]
  %2844 = phi ptr [ %2836, %2828 ], [ %2809, %2815 ]
  %2845 = getelementptr inbounds %struct.stbtt__edge, ptr %2806, i64 0, i32 2
  %2846 = load float, ptr %2845, align 4, !tbaa !490
  %2847 = load float, ptr %2806, align 4, !tbaa !491
  %2848 = fsub fast float %2846, %2847
  %2849 = fsub fast float %2840, %2839
  %2850 = fdiv fast float %2848, %2849
  %2851 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2844, i64 0, i32 2
  store float %2850, ptr %2851, align 4, !tbaa !492
  %2852 = fcmp fast une float %2850, 0.000000e+00
  %2853 = fdiv fast float 1.000000e+00, %2850
  %2854 = select fast i1 %2852, float %2853, float 0.000000e+00
  %2855 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2844, i64 0, i32 3
  store float %2854, ptr %2855, align 8, !tbaa !493
  %2856 = fsub fast float %2773, %2839
  %2857 = fmul fast float %2850, %2856
  %2858 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2844, i64 0, i32 1
  %2859 = fsub fast float %2847, %2755
  %2860 = fadd fast float %2859, %2857
  store float %2860, ptr %2858, align 8, !tbaa !494
  %2861 = getelementptr inbounds %struct.stbtt__edge, ptr %2806, i64 0, i32 4
  %2862 = load i32, ptr %2861, align 4, !tbaa !475
  %2863 = icmp eq i32 %2862, 0
  %2864 = select fast i1 %2863, float -1.000000e+00, float 1.000000e+00
  %2865 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2844, i64 0, i32 4
  store float %2864, ptr %2865, align 4, !tbaa !485
  %2866 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2844, i64 0, i32 5
  store float %2839, ptr %2866, align 8, !tbaa !495
  %2867 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2844, i64 0, i32 6
  store float %2840, ptr %2867, align 4, !tbaa !482
  store ptr null, ptr %2844, align 8, !tbaa !484
  %2868 = fcmp fast olt float %2840, %2773
  %2869 = select i1 %2783, i1 %2868, i1 false
  br i1 %2869, label %2870, label %2871

2870:                                             ; preds = %2838
  store float %2773, ptr %2867, align 4, !tbaa !482
  br label %2871

2871:                                             ; preds = %2870, %2838
  %2872 = phi float [ %2840, %2838 ], [ %2773, %2870 ]
  %2873 = fcmp fast ult float %2872, %2773
  br i1 %2873, label %2874, label %2875

2874:                                             ; preds = %2871
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CI@PMJHELI@?$AAz?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAc?$AAa?$AAn?$AA_?$AAy?$AA_?$AAt?$AAo?$AAp?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3358)
          to label %2875 unwind label %4018

2875:                                             ; preds = %2874, %2871
  %2876 = load ptr, ptr %6, align 8, !tbaa !117
  store ptr %2876, ptr %2844, align 8, !tbaa !484
  store ptr %2844, ptr %6, align 8, !tbaa !117
  br label %2877

2877:                                             ; preds = %2837, %2875, %2803
  %2878 = phi ptr [ %2841, %2875 ], [ %2809, %2803 ], [ null, %2837 ]
  %2879 = phi i32 [ %2842, %2875 ], [ %2808, %2803 ], [ 0, %2837 ]
  %2880 = phi ptr [ %2843, %2875 ], [ %2807, %2803 ], [ %2807, %2837 ]
  %2881 = getelementptr inbounds %struct.stbtt__edge, ptr %2806, i64 1
  %2882 = getelementptr inbounds %struct.stbtt__edge, ptr %2806, i64 1, i32 1
  %2883 = load float, ptr %2882, align 4, !tbaa !480
  %2884 = fcmp fast ugt float %2883, %2774
  br i1 %2884, label %2885, label %2803, !llvm.loop !496

2885:                                             ; preds = %2877, %2776
  %2886 = phi ptr [ %2777, %2776 ], [ %2878, %2877 ]
  %2887 = phi i32 [ %2771, %2776 ], [ %2879, %2877 ]
  %2888 = phi ptr [ %2770, %2776 ], [ %2880, %2877 ]
  %2889 = phi ptr [ %2767, %2776 ], [ %2881, %2877 ]
  %2890 = load ptr, ptr %6, align 8, !tbaa !117
  %2891 = icmp eq ptr %2890, null
  br i1 %2891, label %3186, label %2892

2892:                                             ; preds = %2885
  %2893 = fadd fast float %2774, %2773
  br label %2894

2894:                                             ; preds = %3183, %2892
  %2895 = phi ptr [ %2890, %2892 ], [ %3184, %3183 ]
  %2896 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 6
  %2897 = load float, ptr %2896, align 4, !tbaa !482
  %2898 = fcmp fast ult float %2897, %2773
  br i1 %2898, label %2899, label %2900

2899:                                             ; preds = %2894
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1BO@MDBOACOJ@?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_?$AAt?$AAo?$AAp?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3095)
          to label %2900 unwind label %4018

2900:                                             ; preds = %2899, %2894
  %2901 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 2
  %2902 = load float, ptr %2901, align 4, !tbaa !492
  %2903 = fcmp fast oeq float %2902, 0.000000e+00
  %2904 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 1
  %2905 = load float, ptr %2904, align 8, !tbaa !494
  br i1 %2903, label %2906, label %2915

2906:                                             ; preds = %2900
  %2907 = fcmp fast olt float %2905, %2763
  br i1 %2907, label %2908, label %3183

2908:                                             ; preds = %2906
  %2909 = fcmp fast ult float %2905, 0.000000e+00
  br i1 %2909, label %2914, label %2910

2910:                                             ; preds = %2908
  %2911 = fptosi float %2905 to i32
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %2911, ptr noundef nonnull %2895, float noundef %2905, float noundef %2773, float noundef %2905, float noundef %2774)
          to label %2912 unwind label %4018

2912:                                             ; preds = %2910
  %2913 = add nsw i32 %2911, 1
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef nonnull %2758, i32 noundef %2913, ptr noundef nonnull %2895, float noundef %2905, float noundef %2773, float noundef %2905, float noundef %2774)
          to label %3183 unwind label %4018

2914:                                             ; preds = %2908
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef nonnull %2758, i32 noundef 0, ptr noundef nonnull %2895, float noundef %2905, float noundef %2773, float noundef %2905, float noundef %2774)
          to label %3183 unwind label %4018

2915:                                             ; preds = %2900
  %2916 = fadd fast float %2905, %2902
  %2917 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 3
  %2918 = load float, ptr %2917, align 8, !tbaa !493
  %2919 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 5
  %2920 = load float, ptr %2919, align 8, !tbaa !495
  %2921 = fcmp fast ugt float %2920, %2774
  br i1 %2921, label %2925, label %2922

2922:                                             ; preds = %2915
  %2923 = load float, ptr %2896, align 4, !tbaa !482
  %2924 = fcmp fast ult float %2923, %2773
  br i1 %2924, label %2925, label %2929

2925:                                             ; preds = %2922, %2915
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1EI@KOIFPDFH@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAy?$AA_?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAy?$AA_@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3114)
          to label %2926 unwind label %4018

2926:                                             ; preds = %2925
  %2927 = load float, ptr %2919, align 8, !tbaa !495
  %2928 = load float, ptr %2896, align 4, !tbaa !482
  br label %2929

2929:                                             ; preds = %2926, %2922
  %2930 = phi float [ %2928, %2926 ], [ %2923, %2922 ]
  %2931 = phi float [ %2927, %2926 ], [ %2920, %2922 ]
  %2932 = fcmp fast ogt float %2931, %2773
  %2933 = fsub fast float %2931, %2773
  %2934 = fmul fast float %2933, %2902
  %2935 = select i1 %2932, float %2931, float %2773
  %2936 = select i1 %2932, float %2934, float -0.000000e+00
  %2937 = fadd fast float %2936, %2905
  %2938 = fcmp fast olt float %2930, %2774
  %2939 = fsub fast float %2930, %2773
  %2940 = fmul fast float %2939, %2902
  %2941 = fadd fast float %2940, %2905
  %2942 = select i1 %2938, float %2930, float %2774
  %2943 = select i1 %2938, float %2941, float %2916
  %2944 = fcmp fast oge float %2937, 0.000000e+00
  %2945 = fcmp fast oge float %2943, 0.000000e+00
  %2946 = select i1 %2944, i1 %2945, i1 false
  br i1 %2946, label %2947, label %3126

2947:                                             ; preds = %2929
  %2948 = fcmp fast olt float %2937, %2763
  %2949 = fcmp fast olt float %2943, %2763
  %2950 = select i1 %2948, i1 %2949, i1 false
  br i1 %2950, label %2951, label %3126

2951:                                             ; preds = %2947
  %2952 = fptosi float %2937 to i32
  %2953 = fptosi float %2943 to i32
  %2954 = icmp eq i32 %2952, %2953
  br i1 %2954, label %2955, label %2982

2955:                                             ; preds = %2951
  %2956 = fsub fast float %2942, %2935
  %2957 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 4
  %2958 = load float, ptr %2957, align 4, !tbaa !485
  %2959 = fmul fast float %2958, %2956
  %2960 = icmp sgt i32 %2952, -1
  %2961 = icmp sgt i32 %2229, %2952
  %2962 = and i1 %2960, %2961
  br i1 %2962, label %2964, label %2963

2963:                                             ; preds = %2955
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CE@GDDDMDCC@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3142)
          to label %2964 unwind label %4018

2964:                                             ; preds = %2963, %2955
  %2965 = sitofp i32 %2952 to float
  %2966 = fadd fast float %2965, 1.000000e+00
  %2967 = fsub fast float %2966, %2943
  %2968 = fsub fast float %2966, %2937
  %2969 = fcmp fast ult float %2968, 0.000000e+00
  br i1 %2969, label %2970, label %2971

2970:                                             ; preds = %2964
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1BO@IKHHJKG@?$AAt?$AAo?$AAp?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3072)
          to label %2971 unwind label %4018

2971:                                             ; preds = %2970, %2964
  %2972 = fcmp fast ult float %2967, 0.000000e+00
  br i1 %2972, label %2973, label %2974

2973:                                             ; preds = %2971
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CE@HFDPCECH@?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3073)
          to label %2974 unwind label %4018

2974:                                             ; preds = %2973, %2971
  %2975 = fadd fast float %2967, %2968
  %2976 = fmul fast float %2975, 5.000000e-01
  %2977 = fmul fast float %2976, %2959
  %2978 = sext i32 %2952 to i64
  %2979 = getelementptr inbounds float, ptr %2743, i64 %2978
  %2980 = load float, ptr %2979, align 4, !tbaa !6
  %2981 = fadd fast float %2980, %2977
  store float %2981, ptr %2979, align 4, !tbaa !6
  br label %3177

2982:                                             ; preds = %2951
  %2983 = fcmp fast ogt float %2937, %2943
  br i1 %2983, label %2984, label %2989

2984:                                             ; preds = %2982
  %2985 = fsub fast float %2893, %2935
  %2986 = fsub fast float %2893, %2942
  %2987 = fneg fast float %2902
  %2988 = fneg fast float %2918
  br label %2989

2989:                                             ; preds = %2984, %2982
  %2990 = phi float [ %2988, %2984 ], [ %2918, %2982 ]
  %2991 = phi float [ %2985, %2984 ], [ %2942, %2982 ]
  %2992 = phi float [ %2986, %2984 ], [ %2935, %2982 ]
  %2993 = phi float [ %2937, %2984 ], [ %2943, %2982 ]
  %2994 = phi float [ %2943, %2984 ], [ %2937, %2982 ]
  %2995 = phi float [ %2987, %2984 ], [ %2902, %2982 ]
  %2996 = phi float [ %2916, %2984 ], [ %2905, %2982 ]
  %2997 = fcmp fast ult float %2990, 0.000000e+00
  br i1 %2997, label %2998, label %2999

2998:                                             ; preds = %2989
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1BA@DNEJOLOH@?$AAd?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3160)
          to label %2999 unwind label %4018

2999:                                             ; preds = %2998, %2989
  %3000 = fcmp fast ult float %2995, 0.000000e+00
  br i1 %3000, label %3001, label %3002

3001:                                             ; preds = %2999
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1BA@KAEGAKJB@?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3161)
          to label %3002 unwind label %4018

3002:                                             ; preds = %3001, %2999
  %3003 = fptosi float %2994 to i32
  %3004 = fptosi float %2993 to i32
  %3005 = add i32 %3003, 1
  %3006 = sitofp i32 %3005 to float
  %3007 = fsub fast float %3006, %2996
  %3008 = fmul fast float %3007, %2990
  %3009 = fadd fast float %3008, %2773
  %3010 = sitofp i32 %3004 to float
  %3011 = fsub fast float %3010, %2996
  %3012 = fmul fast float %3011, %2990
  %3013 = fadd fast float %3012, %2773
  %3014 = fcmp fast ogt float %3009, %2774
  %3015 = select i1 %3014, float %2774, float %3009
  %3016 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2895, i64 0, i32 4
  %3017 = load float, ptr %3016, align 4, !tbaa !485
  %3018 = fsub fast float %3015, %2992
  %3019 = fmul fast float %3017, %3018
  %3020 = fsub fast float %3006, %2994
  %3021 = fmul fast float %3020, 5.000000e-01
  %3022 = fmul fast float %3021, %3019
  %3023 = sext i32 %3003 to i64
  %3024 = getelementptr inbounds float, ptr %2743, i64 %3023
  %3025 = load float, ptr %3024, align 4, !tbaa !6
  %3026 = fadd fast float %3022, %3025
  store float %3026, ptr %3024, align 4, !tbaa !6
  %3027 = fcmp fast ogt float %3013, %2774
  br i1 %3027, label %3028, label %3035

3028:                                             ; preds = %3002
  %3029 = icmp eq i32 %3005, %3004
  %3030 = sub nsw i32 %3004, %3005
  %3031 = fsub fast float %2774, %3015
  %3032 = sitofp i32 %3030 to float
  %3033 = fdiv fast float %3031, %3032
  %3034 = select i1 %3029, float %2990, float %3033
  br label %3035

3035:                                             ; preds = %3028, %3002
  %3036 = phi float [ %2774, %3028 ], [ %3013, %3002 ]
  %3037 = phi float [ %3034, %3028 ], [ %2990, %3002 ]
  %3038 = fmul fast float %3037, %3017
  %3039 = icmp slt i32 %3005, %3004
  br i1 %3039, label %3040, label %3099

3040:                                             ; preds = %3035
  %3041 = fmul fast float %3038, 5.000000e-01
  %3042 = sext i32 %3005 to i64
  %3043 = add i32 %3004, -2
  %3044 = sub i32 %3043, %3003
  %3045 = zext i32 %3044 to i64
  %3046 = add nuw nsw i64 %3045, 1
  %3047 = icmp ult i32 %3044, 7
  br i1 %3047, label %3085, label %3048

3048:                                             ; preds = %3040
  %3049 = and i64 %3046, -8
  %3050 = add nsw i64 %3049, %3042
  %3051 = sitofp i64 %3049 to float
  %3052 = fmul fast float %3038, %3051
  %3053 = fadd fast float %3019, %3052
  %3054 = insertelement <4 x float> poison, float %3019, i64 0
  %3055 = shufflevector <4 x float> %3054, <4 x float> poison, <4 x i32> zeroinitializer
  %3056 = insertelement <4 x float> poison, float %3038, i64 0
  %3057 = shufflevector <4 x float> %3056, <4 x float> poison, <4 x i32> zeroinitializer
  %3058 = fmul fast <4 x float> %3057, <float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00>
  %3059 = fadd fast <4 x float> %3055, %3058
  %3060 = fmul fast float %3038, 4.000000e+00
  %3061 = insertelement <4 x float> poison, float %3060, i64 0
  %3062 = shufflevector <4 x float> %3061, <4 x float> poison, <4 x i32> zeroinitializer
  %3063 = insertelement <4 x float> poison, float %3041, i64 0
  %3064 = shufflevector <4 x float> %3063, <4 x float> poison, <4 x i32> zeroinitializer
  %3065 = insertelement <4 x float> poison, float %3041, i64 0
  %3066 = shufflevector <4 x float> %3065, <4 x float> poison, <4 x i32> zeroinitializer
  br label %3067

3067:                                             ; preds = %3067, %3048
  %3068 = phi i64 [ 0, %3048 ], [ %3080, %3067 ]
  %3069 = phi <4 x float> [ %3059, %3048 ], [ %3081, %3067 ]
  %3070 = fadd fast <4 x float> %3069, %3062
  %3071 = add i64 %3068, %3042
  %3072 = fadd fast <4 x float> %3069, %3064
  %3073 = fadd fast <4 x float> %3070, %3066
  %3074 = getelementptr inbounds float, ptr %2743, i64 %3071
  %3075 = load <4 x float>, ptr %3074, align 4, !tbaa !6
  %3076 = getelementptr inbounds float, ptr %3074, i64 4
  %3077 = load <4 x float>, ptr %3076, align 4, !tbaa !6
  %3078 = fadd fast <4 x float> %3072, %3075
  %3079 = fadd fast <4 x float> %3073, %3077
  store <4 x float> %3078, ptr %3074, align 4, !tbaa !6
  store <4 x float> %3079, ptr %3076, align 4, !tbaa !6
  %3080 = add nuw i64 %3068, 8
  %3081 = fadd fast <4 x float> %3070, %3062
  %3082 = icmp eq i64 %3080, %3049
  br i1 %3082, label %3083, label %3067, !llvm.loop !497

3083:                                             ; preds = %3067
  %3084 = icmp eq i64 %3046, %3049
  br i1 %3084, label %3099, label %3085

3085:                                             ; preds = %3040, %3083
  %3086 = phi i64 [ %3042, %3040 ], [ %3050, %3083 ]
  %3087 = phi float [ %3019, %3040 ], [ %3053, %3083 ]
  br label %3088

3088:                                             ; preds = %3085, %3088
  %3089 = phi i64 [ %3096, %3088 ], [ %3086, %3085 ]
  %3090 = phi float [ %3095, %3088 ], [ %3087, %3085 ]
  %3091 = fadd fast float %3090, %3041
  %3092 = getelementptr inbounds float, ptr %2743, i64 %3089
  %3093 = load float, ptr %3092, align 4, !tbaa !6
  %3094 = fadd fast float %3091, %3093
  store float %3094, ptr %3092, align 4, !tbaa !6
  %3095 = fadd fast float %3090, %3038
  %3096 = add nsw i64 %3089, 1
  %3097 = trunc i64 %3096 to i32
  %3098 = icmp eq i32 %3097, %3004
  br i1 %3098, label %3099, label %3088, !llvm.loop !498

3099:                                             ; preds = %3088, %3083, %3035
  %3100 = phi float [ %3019, %3035 ], [ %3053, %3083 ], [ %3095, %3088 ]
  %3101 = call fast float @llvm.fabs.f32(float %3100)
  %3102 = fcmp fast ugt float %3101, 0x3FF028F5C0000000
  br i1 %3102, label %3103, label %3104

3103:                                             ; preds = %3099
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CK@PHOJNIKI@?$AAf?$AAa?$AAb?$AAs?$AAf?$AA?$CI?$AAa?$AAr?$AAe?$AAa?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA?4?$AA0?$AA1?$AAf?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3228)
          to label %3104 unwind label %4018

3104:                                             ; preds = %3103, %3099
  %3105 = fadd fast float %3036, 0xBF847AE140000000
  %3106 = fcmp fast ogt float %2991, %3105
  br i1 %3106, label %3108, label %3107

3107:                                             ; preds = %3104
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CI@LBLBFJLN@?$AAs?$AAy?$AA1?$AA?5?$AA?$DO?$AA?5?$AAy?$AA_?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?9?$AA0?$AA?4?$AA0?$AA1?$AAf?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3229)
          to label %3108 unwind label %4018

3108:                                             ; preds = %3107, %3104
  %3109 = fsub fast float %2991, %3036
  %3110 = fsub fast float 1.000000e+00, %2993
  %3111 = fadd fast float %3110, %3010
  %3112 = fcmp fast ult float %3111, 0.000000e+00
  br i1 %3112, label %3113, label %3114

3113:                                             ; preds = %3108
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CE@HFDPCECH@?$AAb?$AAo?$AAt?$AAt?$AAo?$AAm?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3073)
          to label %3114 unwind label %4018

3114:                                             ; preds = %3113, %3108
  %3115 = fmul fast float %3111, 5.000000e-01
  %3116 = fadd fast float %3115, 5.000000e-01
  %3117 = fmul fast float %3017, %3116
  %3118 = fmul fast float %3117, %3109
  %3119 = fadd fast float %3100, %3118
  %3120 = sext i32 %3004 to i64
  %3121 = getelementptr inbounds float, ptr %2743, i64 %3120
  %3122 = load float, ptr %3121, align 4, !tbaa !6
  %3123 = fadd fast float %3119, %3122
  store float %3123, ptr %3121, align 4, !tbaa !6
  %3124 = fsub fast float %2991, %2992
  %3125 = fmul fast float %3017, %3124
  br label %3177

3126:                                             ; preds = %2947, %2929
  br i1 %2764, label %3127, label %3183

3127:                                             ; preds = %3126
  %3128 = fdiv fast float 1.000000e+00, %2902
  %3129 = fdiv fast float 1.000000e+00, %2902
  br label %3130

3130:                                             ; preds = %3127, %3175
  %3131 = phi i32 [ %3133, %3175 ], [ 0, %3127 ]
  %3132 = sitofp i32 %3131 to float
  %3133 = add nuw nsw i32 %3131, 1
  %3134 = sitofp i32 %3133 to float
  %3135 = fsub fast float %3132, %2905
  %3136 = fmul fast float %3135, %3128
  %3137 = fadd fast float %3136, %2773
  %3138 = fsub fast float %3134, %2905
  %3139 = fmul fast float %3138, %3129
  %3140 = fadd fast float %3139, %2773
  %3141 = fcmp fast olt float %2905, %3132
  %3142 = fcmp fast ogt float %2916, %3134
  %3143 = select i1 %3141, i1 %3142, i1 false
  br i1 %3143, label %3144, label %3147

3144:                                             ; preds = %3130
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %3132, float noundef %3137)
          to label %3145 unwind label %4018

3145:                                             ; preds = %3144
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3132, float noundef %3137, float noundef %3134, float noundef %3140)
          to label %3146 unwind label %4018

3146:                                             ; preds = %3145
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3134, float noundef %3140, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3147:                                             ; preds = %3130
  %3148 = fcmp fast olt float %2916, %3132
  %3149 = fcmp fast ogt float %2905, %3134
  %3150 = select i1 %3148, i1 %3149, i1 false
  br i1 %3150, label %3151, label %3154

3151:                                             ; preds = %3147
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %3134, float noundef %3140)
          to label %3152 unwind label %4018

3152:                                             ; preds = %3151
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3134, float noundef %3140, float noundef %3132, float noundef %3137)
          to label %3153 unwind label %4018

3153:                                             ; preds = %3152
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3132, float noundef %3137, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3154:                                             ; preds = %3147
  %3155 = fcmp fast ogt float %2916, %3132
  %3156 = select i1 %3141, i1 %3155, i1 false
  br i1 %3156, label %3157, label %3159

3157:                                             ; preds = %3154
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %3132, float noundef %3137)
          to label %3158 unwind label %4018

3158:                                             ; preds = %3157
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3132, float noundef %3137, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3159:                                             ; preds = %3154
  %3160 = fcmp fast ogt float %2905, %3132
  %3161 = select i1 %3148, i1 %3160, i1 false
  br i1 %3161, label %3162, label %3164

3162:                                             ; preds = %3159
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %3132, float noundef %3137)
          to label %3163 unwind label %4018

3163:                                             ; preds = %3162
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3132, float noundef %3137, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3164:                                             ; preds = %3159
  %3165 = fcmp fast olt float %2905, %3134
  %3166 = select i1 %3165, i1 %3142, i1 false
  br i1 %3166, label %3167, label %3169

3167:                                             ; preds = %3164
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %3134, float noundef %3140)
          to label %3168 unwind label %4018

3168:                                             ; preds = %3167
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3134, float noundef %3140, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3169:                                             ; preds = %3164
  %3170 = fcmp fast olt float %2916, %3134
  %3171 = select i1 %3170, i1 %3149, i1 false
  br i1 %3171, label %3172, label %3174

3172:                                             ; preds = %3169
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %3134, float noundef %3140)
          to label %3173 unwind label %4018

3173:                                             ; preds = %3172
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %3134, float noundef %3140, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3174:                                             ; preds = %3169
  invoke fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr noundef %2743, i32 noundef %3131, ptr noundef %2895, float noundef %2905, float noundef %2773, float noundef %2916, float noundef %2774)
          to label %3175 unwind label %4018

3175:                                             ; preds = %3174, %3173, %3168, %3163, %3158, %3153, %3146
  %3176 = icmp eq i32 %3131, %2228
  br i1 %3176, label %3183, label %3130, !llvm.loop !499

3177:                                             ; preds = %2974, %3114
  %3178 = phi i64 [ %2978, %2974 ], [ %3120, %3114 ]
  %3179 = phi float [ %2959, %2974 ], [ %3125, %3114 ]
  %3180 = getelementptr inbounds float, ptr %2757, i64 %3178
  %3181 = load float, ptr %3180, align 4, !tbaa !6
  %3182 = fadd fast float %3181, %3179
  store float %3182, ptr %3180, align 4, !tbaa !6
  br label %3183

3183:                                             ; preds = %3175, %3177, %2914, %2912, %3126, %2906
  %3184 = load ptr, ptr %2895, align 8, !tbaa !484
  %3185 = icmp eq ptr %3184, null
  br i1 %3185, label %3186, label %2894, !llvm.loop !500

3186:                                             ; preds = %3183, %2885
  br i1 %2764, label %3187, label %3189

3187:                                             ; preds = %3186
  %3188 = mul nsw i32 %2769, %1808
  br label %3192

3189:                                             ; preds = %3192, %3186
  %3190 = load ptr, ptr %6, align 8, !tbaa !117
  %3191 = icmp eq ptr %3190, null
  br i1 %3191, label %3222, label %3213

3192:                                             ; preds = %3192, %3187
  %3193 = phi i64 [ %3211, %3192 ], [ 0, %3187 ]
  %3194 = phi float [ %3197, %3192 ], [ 0.000000e+00, %3187 ]
  %3195 = getelementptr inbounds float, ptr %2745, i64 %3193
  %3196 = load float, ptr %3195, align 4, !tbaa !6
  %3197 = fadd fast float %3196, %3194
  %3198 = getelementptr inbounds float, ptr %2743, i64 %3193
  %3199 = load float, ptr %3198, align 4, !tbaa !6
  %3200 = fadd fast float %3199, %3197
  %3201 = call fast float @llvm.fabs.f32(float %3200)
  %3202 = fmul fast float %3201, 2.550000e+02
  %3203 = fadd fast float %3202, 5.000000e-01
  %3204 = fptosi float %3203 to i32
  %3205 = call i32 @llvm.smin.i32(i32 %3204, i32 255)
  %3206 = trunc i32 %3205 to i8
  %3207 = trunc i64 %3193 to i32
  %3208 = add nsw i32 %3188, %3207
  %3209 = sext i32 %3208 to i64
  %3210 = getelementptr inbounds i8, ptr %2234, i64 %3209
  store i8 %3206, ptr %3210, align 1, !tbaa !46
  %3211 = add nuw nsw i64 %3193, 1
  %3212 = icmp eq i64 %3211, %2744
  br i1 %3212, label %3189, label %3192, !llvm.loop !501

3213:                                             ; preds = %3189, %3213
  %3214 = phi ptr [ %3220, %3213 ], [ %3190, %3189 ]
  %3215 = getelementptr inbounds %struct.stbtt__active_edge, ptr %3214, i64 0, i32 2
  %3216 = load float, ptr %3215, align 4, !tbaa !492
  %3217 = getelementptr inbounds %struct.stbtt__active_edge, ptr %3214, i64 0, i32 1
  %3218 = load float, ptr %3217, align 8, !tbaa !494
  %3219 = fadd fast float %3218, %3216
  store float %3219, ptr %3217, align 8, !tbaa !494
  %3220 = load ptr, ptr %3214, align 8, !tbaa !117
  %3221 = icmp eq ptr %3220, null
  br i1 %3221, label %3222, label %3213, !llvm.loop !502

3222:                                             ; preds = %3213, %3189
  %3223 = add nsw i32 %2768, 1
  %3224 = add nuw nsw i32 %2769, 1
  %3225 = icmp eq i32 %2769, %2226
  br i1 %3225, label %3226, label %2765, !llvm.loop !503

3226:                                             ; preds = %3222
  %3227 = icmp eq ptr %2888, null
  br i1 %3227, label %3233, label %3228

3228:                                             ; preds = %3226, %3231
  %3229 = phi ptr [ %3230, %3231 ], [ %2888, %3226 ]
  %3230 = load ptr, ptr %3229, align 8, !tbaa !488
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3229)
          to label %3231 unwind label %4018

3231:                                             ; preds = %3228
  %3232 = icmp eq ptr %3230, null
  br i1 %3232, label %3233, label %3228, !llvm.loop !504

3233:                                             ; preds = %3231, %3226, %2742
  %3234 = icmp eq ptr %2743, %7
  br i1 %3234, label %3236, label %3235

3235:                                             ; preds = %3233
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %2743)
          to label %3236 unwind label %4018

3236:                                             ; preds = %3235, %3233
  call void @llvm.lifetime.end.p0(i64 516, ptr nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %2640)
          to label %3237 unwind label %4018

3237:                                             ; preds = %3236, %2641
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %2443)
          to label %3238 unwind label %4018

3238:                                             ; preds = %3237
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %2519)
          to label %3239 unwind label %4018

3239:                                             ; preds = %3238, %2599, %2364
  %3240 = load ptr, ptr %10, align 8, !tbaa !117
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %3240)
          to label %3241 unwind label %4018

3241:                                             ; preds = %3239
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #39
  br i1 %2000, label %3242, label %3474

3242:                                             ; preds = %3241
  %3243 = load i32, ptr %2025, align 4, !tbaa !432
  %3244 = load i32, ptr %2022, align 4, !tbaa !430
  %3245 = load i32, ptr %2047, align 4, !tbaa !459
  %3246 = load i32, ptr %2050, align 4, !tbaa !451
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store i64 0, ptr %5, align 8
  %3247 = icmp sgt i32 %3243, 0
  br i1 %3247, label %3248, label %3473

3248:                                             ; preds = %3242
  %3249 = sext i32 %3245 to i64
  %3250 = getelementptr inbounds i8, ptr %1878, i64 %3249
  %3251 = mul nsw i32 %3246, %1808
  %3252 = sext i32 %3251 to i64
  %3253 = getelementptr inbounds i8, ptr %3250, i64 %3252
  %3254 = sub i32 %3244, %2009
  %3255 = icmp slt i32 %3254, 0
  %3256 = add i32 %3244, %2007
  %3257 = zext i32 %3256 to i64
  %3258 = and i64 %3257, 1
  %3259 = icmp eq i32 %3256, 1
  %3260 = and i64 %3257, 4294967294
  %3261 = icmp eq i64 %3258, 0
  %3262 = and i64 %3257, 1
  %3263 = icmp eq i32 %3256, 1
  %3264 = and i64 %3257, 4294967294
  %3265 = icmp eq i64 %3262, 0
  br label %3266

3266:                                             ; preds = %3469, %3248
  %3267 = phi i32 [ 0, %3248 ], [ %3471, %3469 ]
  %3268 = phi ptr [ %3253, %3248 ], [ %3470, %3469 ]
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %5, i8 0, i64 %2001, i1 false)
  switch i8 %1999, label %3275 [
    i8 2, label %3273
    i8 3, label %3272
    i8 4, label %3270
    i8 5, label %3269
  ]

3269:                                             ; preds = %3266
  br i1 %3255, label %3445, label %3367

3270:                                             ; preds = %3266
  br i1 %3255, label %3445, label %3271

3271:                                             ; preds = %3270
  br i1 %3259, label %3426, label %3331

3272:                                             ; preds = %3266
  br i1 %3255, label %3445, label %3312

3273:                                             ; preds = %3266
  br i1 %3255, label %3445, label %3274

3274:                                             ; preds = %3273
  br i1 %3263, label %3407, label %3276

3275:                                             ; preds = %3266
  br i1 %3255, label %3445, label %3386

3276:                                             ; preds = %3274, %3276
  %3277 = phi i64 [ %3309, %3276 ], [ 0, %3274 ]
  %3278 = phi i32 [ %3303, %3276 ], [ 0, %3274 ]
  %3279 = phi i64 [ %3310, %3276 ], [ 0, %3274 ]
  %3280 = getelementptr inbounds i8, ptr %3268, i64 %3277
  %3281 = load i8, ptr %3280, align 1, !tbaa !46
  %3282 = zext i8 %3281 to i32
  %3283 = and i64 %3277, 6
  %3284 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3283
  %3285 = load i8, ptr %3284, align 2, !tbaa !46
  %3286 = zext i8 %3285 to i32
  %3287 = sub nsw i32 %3282, %3286
  %3288 = add i32 %3287, %3278
  %3289 = add nuw i64 %3277, 2
  %3290 = and i64 %3289, 6
  %3291 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3290
  store i8 %3281, ptr %3291, align 2, !tbaa !46
  %3292 = lshr i32 %3288, 1
  %3293 = trunc i32 %3292 to i8
  store i8 %3293, ptr %3280, align 1, !tbaa !46
  %3294 = or i64 %3277, 1
  %3295 = getelementptr inbounds i8, ptr %3268, i64 %3294
  %3296 = load i8, ptr %3295, align 1, !tbaa !46
  %3297 = zext i8 %3296 to i32
  %3298 = and i64 %3294, 7
  %3299 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3298
  %3300 = load i8, ptr %3299, align 1, !tbaa !46
  %3301 = zext i8 %3300 to i32
  %3302 = sub nsw i32 %3297, %3301
  %3303 = add i32 %3302, %3288
  %3304 = add nuw i64 %3277, 3
  %3305 = and i64 %3304, 7
  %3306 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3305
  store i8 %3296, ptr %3306, align 1, !tbaa !46
  %3307 = lshr i32 %3303, 1
  %3308 = trunc i32 %3307 to i8
  store i8 %3308, ptr %3295, align 1, !tbaa !46
  %3309 = add nuw nsw i64 %3277, 2
  %3310 = add i64 %3279, 2
  %3311 = icmp eq i64 %3310, %3264
  br i1 %3311, label %3407, label %3276, !llvm.loop !505

3312:                                             ; preds = %3272, %3312
  %3313 = phi i64 [ %3329, %3312 ], [ 0, %3272 ]
  %3314 = phi i32 [ %3323, %3312 ], [ 0, %3272 ]
  %3315 = getelementptr inbounds i8, ptr %3268, i64 %3313
  %3316 = load i8, ptr %3315, align 1, !tbaa !46
  %3317 = zext i8 %3316 to i32
  %3318 = and i64 %3313, 7
  %3319 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3318
  %3320 = load i8, ptr %3319, align 1, !tbaa !46
  %3321 = zext i8 %3320 to i32
  %3322 = sub nsw i32 %3317, %3321
  %3323 = add i32 %3322, %3314
  %3324 = add nuw i64 %3313, 3
  %3325 = and i64 %3324, 7
  %3326 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3325
  store i8 %3316, ptr %3326, align 1, !tbaa !46
  %3327 = udiv i32 %3323, 3
  %3328 = trunc i32 %3327 to i8
  store i8 %3328, ptr %3315, align 1, !tbaa !46
  %3329 = add nuw nsw i64 %3313, 1
  %3330 = icmp eq i64 %3329, %3257
  br i1 %3330, label %3445, label %3312, !llvm.loop !506

3331:                                             ; preds = %3271, %3331
  %3332 = phi i64 [ %3364, %3331 ], [ 0, %3271 ]
  %3333 = phi i32 [ %3358, %3331 ], [ 0, %3271 ]
  %3334 = phi i64 [ %3365, %3331 ], [ 0, %3271 ]
  %3335 = getelementptr inbounds i8, ptr %3268, i64 %3332
  %3336 = load i8, ptr %3335, align 1, !tbaa !46
  %3337 = zext i8 %3336 to i32
  %3338 = and i64 %3332, 6
  %3339 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3338
  %3340 = load i8, ptr %3339, align 2, !tbaa !46
  %3341 = zext i8 %3340 to i32
  %3342 = sub nsw i32 %3337, %3341
  %3343 = add i32 %3342, %3333
  %3344 = add nuw i64 %3332, 4
  %3345 = and i64 %3344, 6
  %3346 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3345
  store i8 %3336, ptr %3346, align 2, !tbaa !46
  %3347 = lshr i32 %3343, 2
  %3348 = trunc i32 %3347 to i8
  store i8 %3348, ptr %3335, align 1, !tbaa !46
  %3349 = or i64 %3332, 1
  %3350 = getelementptr inbounds i8, ptr %3268, i64 %3349
  %3351 = load i8, ptr %3350, align 1, !tbaa !46
  %3352 = zext i8 %3351 to i32
  %3353 = and i64 %3349, 7
  %3354 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3353
  %3355 = load i8, ptr %3354, align 1, !tbaa !46
  %3356 = zext i8 %3355 to i32
  %3357 = sub nsw i32 %3352, %3356
  %3358 = add i32 %3357, %3343
  %3359 = add nuw i64 %3332, 5
  %3360 = and i64 %3359, 7
  %3361 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3360
  store i8 %3351, ptr %3361, align 1, !tbaa !46
  %3362 = lshr i32 %3358, 2
  %3363 = trunc i32 %3362 to i8
  store i8 %3363, ptr %3350, align 1, !tbaa !46
  %3364 = add nuw nsw i64 %3332, 2
  %3365 = add i64 %3334, 2
  %3366 = icmp eq i64 %3365, %3260
  br i1 %3366, label %3426, label %3331, !llvm.loop !507

3367:                                             ; preds = %3269, %3367
  %3368 = phi i64 [ %3384, %3367 ], [ 0, %3269 ]
  %3369 = phi i32 [ %3378, %3367 ], [ 0, %3269 ]
  %3370 = getelementptr inbounds i8, ptr %3268, i64 %3368
  %3371 = load i8, ptr %3370, align 1, !tbaa !46
  %3372 = zext i8 %3371 to i32
  %3373 = and i64 %3368, 7
  %3374 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3373
  %3375 = load i8, ptr %3374, align 1, !tbaa !46
  %3376 = zext i8 %3375 to i32
  %3377 = sub nsw i32 %3372, %3376
  %3378 = add i32 %3377, %3369
  %3379 = add nuw i64 %3368, 5
  %3380 = and i64 %3379, 7
  %3381 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3380
  store i8 %3371, ptr %3381, align 1, !tbaa !46
  %3382 = udiv i32 %3378, 5
  %3383 = trunc i32 %3382 to i8
  store i8 %3383, ptr %3370, align 1, !tbaa !46
  %3384 = add nuw nsw i64 %3368, 1
  %3385 = icmp eq i64 %3384, %3257
  br i1 %3385, label %3445, label %3367, !llvm.loop !508

3386:                                             ; preds = %3275, %3386
  %3387 = phi i64 [ %3405, %3386 ], [ 0, %3275 ]
  %3388 = phi i32 [ %3398, %3386 ], [ 0, %3275 ]
  %3389 = getelementptr inbounds i8, ptr %3268, i64 %3387
  %3390 = load i8, ptr %3389, align 1, !tbaa !46
  %3391 = zext i8 %3390 to i32
  %3392 = trunc i64 %3387 to i32
  %3393 = and i64 %3387, 7
  %3394 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3393
  %3395 = load i8, ptr %3394, align 1, !tbaa !46
  %3396 = zext i8 %3395 to i32
  %3397 = sub nsw i32 %3391, %3396
  %3398 = add i32 %3397, %3388
  %3399 = add i32 %2009, %3392
  %3400 = and i32 %3399, 7
  %3401 = zext i32 %3400 to i64
  %3402 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3401
  store i8 %3390, ptr %3402, align 1, !tbaa !46
  %3403 = udiv i32 %3398, %2009
  %3404 = trunc i32 %3403 to i8
  store i8 %3404, ptr %3389, align 1, !tbaa !46
  %3405 = add nuw nsw i64 %3387, 1
  %3406 = icmp eq i64 %3405, %3257
  br i1 %3406, label %3445, label %3386, !llvm.loop !509

3407:                                             ; preds = %3276, %3274
  %3408 = phi i32 [ undef, %3274 ], [ %3303, %3276 ]
  %3409 = phi i64 [ 0, %3274 ], [ %3309, %3276 ]
  %3410 = phi i32 [ 0, %3274 ], [ %3303, %3276 ]
  br i1 %3265, label %3445, label %3411

3411:                                             ; preds = %3407
  %3412 = getelementptr inbounds i8, ptr %3268, i64 %3409
  %3413 = load i8, ptr %3412, align 1, !tbaa !46
  %3414 = zext i8 %3413 to i32
  %3415 = and i64 %3409, 7
  %3416 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3415
  %3417 = load i8, ptr %3416, align 1, !tbaa !46
  %3418 = zext i8 %3417 to i32
  %3419 = sub nsw i32 %3414, %3418
  %3420 = add i32 %3419, %3410
  %3421 = add nuw i64 %3409, 2
  %3422 = and i64 %3421, 7
  %3423 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3422
  store i8 %3413, ptr %3423, align 1, !tbaa !46
  %3424 = lshr i32 %3420, 1
  %3425 = trunc i32 %3424 to i8
  store i8 %3425, ptr %3412, align 1, !tbaa !46
  br label %3445

3426:                                             ; preds = %3331, %3271
  %3427 = phi i32 [ undef, %3271 ], [ %3358, %3331 ]
  %3428 = phi i64 [ 0, %3271 ], [ %3364, %3331 ]
  %3429 = phi i32 [ 0, %3271 ], [ %3358, %3331 ]
  br i1 %3261, label %3445, label %3430

3430:                                             ; preds = %3426
  %3431 = getelementptr inbounds i8, ptr %3268, i64 %3428
  %3432 = load i8, ptr %3431, align 1, !tbaa !46
  %3433 = zext i8 %3432 to i32
  %3434 = and i64 %3428, 7
  %3435 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3434
  %3436 = load i8, ptr %3435, align 1, !tbaa !46
  %3437 = zext i8 %3436 to i32
  %3438 = sub nsw i32 %3433, %3437
  %3439 = add i32 %3438, %3429
  %3440 = add nuw i64 %3428, 4
  %3441 = and i64 %3440, 7
  %3442 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3441
  store i8 %3432, ptr %3442, align 1, !tbaa !46
  %3443 = lshr i32 %3439, 2
  %3444 = trunc i32 %3443 to i8
  store i8 %3444, ptr %3431, align 1, !tbaa !46
  br label %3445

3445:                                             ; preds = %3367, %3430, %3426, %3312, %3411, %3407, %3386, %3275, %3273, %3272, %3270, %3269
  %3446 = phi i32 [ 0, %3275 ], [ 0, %3273 ], [ 0, %3272 ], [ 0, %3270 ], [ 0, %3269 ], [ %3256, %3386 ], [ %3256, %3407 ], [ %3256, %3411 ], [ %3256, %3312 ], [ %3256, %3426 ], [ %3256, %3430 ], [ %3256, %3367 ]
  %3447 = phi i32 [ 0, %3275 ], [ 0, %3273 ], [ 0, %3272 ], [ 0, %3270 ], [ 0, %3269 ], [ %3398, %3386 ], [ %3408, %3407 ], [ %3420, %3411 ], [ %3323, %3312 ], [ %3427, %3426 ], [ %3439, %3430 ], [ %3378, %3367 ]
  %3448 = icmp slt i32 %3446, %3244
  br i1 %3448, label %3449, label %3469

3449:                                             ; preds = %3445
  %3450 = zext i32 %3446 to i64
  br label %3451

3451:                                             ; preds = %3458, %3449
  %3452 = phi i64 [ %3450, %3449 ], [ %3466, %3458 ]
  %3453 = phi i32 [ %3447, %3449 ], [ %3463, %3458 ]
  %3454 = getelementptr inbounds i8, ptr %3268, i64 %3452
  %3455 = load i8, ptr %3454, align 1, !tbaa !46
  %3456 = icmp eq i8 %3455, 0
  br i1 %3456, label %3458, label %3457

3457:                                             ; preds = %3451
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1BO@BDJAMAMF@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 4073)
          to label %3458 unwind label %4018

3458:                                             ; preds = %3457, %3451
  %3459 = and i64 %3452, 7
  %3460 = getelementptr inbounds [8 x i8], ptr %5, i64 0, i64 %3459
  %3461 = load i8, ptr %3460, align 1, !tbaa !46
  %3462 = zext i8 %3461 to i32
  %3463 = sub i32 %3453, %3462
  %3464 = udiv i32 %3463, %2009
  %3465 = trunc i32 %3464 to i8
  store i8 %3465, ptr %3454, align 1, !tbaa !46
  %3466 = add nuw nsw i64 %3452, 1
  %3467 = trunc i64 %3466 to i32
  %3468 = icmp sgt i32 %3244, %3467
  br i1 %3468, label %3451, label %3469, !llvm.loop !510

3469:                                             ; preds = %3458, %3445
  %3470 = getelementptr inbounds i8, ptr %3268, i64 %1883
  %3471 = add nuw nsw i32 %3267, 1
  %3472 = icmp eq i32 %3471, %3243
  br i1 %3472, label %3473, label %3266, !llvm.loop !511

3473:                                             ; preds = %3469, %3242
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  br label %3474

3474:                                             ; preds = %3473, %3241
  br i1 %2003, label %3475, label %3631

3475:                                             ; preds = %3474
  %3476 = load i32, ptr %2025, align 4, !tbaa !432
  %3477 = load i32, ptr %2022, align 4, !tbaa !430
  %3478 = load i32, ptr %2047, align 4, !tbaa !459
  %3479 = load i32, ptr %2050, align 4, !tbaa !451
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #39
  store i64 0, ptr %4, align 8
  %3480 = icmp sgt i32 %3477, 0
  br i1 %3480, label %3481, label %3630

3481:                                             ; preds = %3475
  %3482 = sext i32 %3478 to i64
  %3483 = getelementptr inbounds i8, ptr %1878, i64 %3482
  %3484 = mul nsw i32 %3479, %1808
  %3485 = sext i32 %3484 to i64
  %3486 = getelementptr inbounds i8, ptr %3483, i64 %3485
  %3487 = sub i32 %3476, %2010
  %3488 = icmp slt i32 %3487, 0
  %3489 = add i32 %3476, %2008
  %3490 = zext i32 %3489 to i64
  br label %3491

3491:                                             ; preds = %3626, %3481
  %3492 = phi i32 [ 0, %3481 ], [ %3628, %3626 ]
  %3493 = phi ptr [ %3486, %3481 ], [ %3627, %3626 ]
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %4, i8 0, i64 %2004, i1 false)
  switch i8 %2002, label %3498 [
    i8 2, label %3497
    i8 3, label %3496
    i8 4, label %3495
    i8 5, label %3494
  ]

3494:                                             ; preds = %3491
  br i1 %3488, label %3601, label %3559

3495:                                             ; preds = %3491
  br i1 %3488, label %3601, label %3539

3496:                                             ; preds = %3491
  br i1 %3488, label %3601, label %3519

3497:                                             ; preds = %3491
  br i1 %3488, label %3601, label %3499

3498:                                             ; preds = %3491
  br i1 %3488, label %3601, label %3579

3499:                                             ; preds = %3497, %3499
  %3500 = phi i64 [ %3517, %3499 ], [ 0, %3497 ]
  %3501 = phi i32 [ %3511, %3499 ], [ 0, %3497 ]
  %3502 = mul nsw i64 %3500, %1883
  %3503 = getelementptr inbounds i8, ptr %3493, i64 %3502
  %3504 = load i8, ptr %3503, align 1, !tbaa !46
  %3505 = zext i8 %3504 to i32
  %3506 = and i64 %3500, 7
  %3507 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3506
  %3508 = load i8, ptr %3507, align 1, !tbaa !46
  %3509 = zext i8 %3508 to i32
  %3510 = sub nsw i32 %3505, %3509
  %3511 = add i32 %3510, %3501
  %3512 = add nuw i64 %3500, 2
  %3513 = and i64 %3512, 7
  %3514 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3513
  store i8 %3504, ptr %3514, align 1, !tbaa !46
  %3515 = lshr i32 %3511, 1
  %3516 = trunc i32 %3515 to i8
  store i8 %3516, ptr %3503, align 1, !tbaa !46
  %3517 = add nuw nsw i64 %3500, 1
  %3518 = icmp eq i64 %3517, %3490
  br i1 %3518, label %3601, label %3499, !llvm.loop !512

3519:                                             ; preds = %3496, %3519
  %3520 = phi i64 [ %3537, %3519 ], [ 0, %3496 ]
  %3521 = phi i32 [ %3531, %3519 ], [ 0, %3496 ]
  %3522 = mul nsw i64 %3520, %1883
  %3523 = getelementptr inbounds i8, ptr %3493, i64 %3522
  %3524 = load i8, ptr %3523, align 1, !tbaa !46
  %3525 = zext i8 %3524 to i32
  %3526 = and i64 %3520, 7
  %3527 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3526
  %3528 = load i8, ptr %3527, align 1, !tbaa !46
  %3529 = zext i8 %3528 to i32
  %3530 = sub nsw i32 %3525, %3529
  %3531 = add i32 %3530, %3521
  %3532 = add nuw i64 %3520, 3
  %3533 = and i64 %3532, 7
  %3534 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3533
  store i8 %3524, ptr %3534, align 1, !tbaa !46
  %3535 = udiv i32 %3531, 3
  %3536 = trunc i32 %3535 to i8
  store i8 %3536, ptr %3523, align 1, !tbaa !46
  %3537 = add nuw nsw i64 %3520, 1
  %3538 = icmp eq i64 %3537, %3490
  br i1 %3538, label %3601, label %3519, !llvm.loop !513

3539:                                             ; preds = %3495, %3539
  %3540 = phi i64 [ %3557, %3539 ], [ 0, %3495 ]
  %3541 = phi i32 [ %3551, %3539 ], [ 0, %3495 ]
  %3542 = mul nsw i64 %3540, %1883
  %3543 = getelementptr inbounds i8, ptr %3493, i64 %3542
  %3544 = load i8, ptr %3543, align 1, !tbaa !46
  %3545 = zext i8 %3544 to i32
  %3546 = and i64 %3540, 7
  %3547 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3546
  %3548 = load i8, ptr %3547, align 1, !tbaa !46
  %3549 = zext i8 %3548 to i32
  %3550 = sub nsw i32 %3545, %3549
  %3551 = add i32 %3550, %3541
  %3552 = add nuw i64 %3540, 4
  %3553 = and i64 %3552, 7
  %3554 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3553
  store i8 %3544, ptr %3554, align 1, !tbaa !46
  %3555 = lshr i32 %3551, 2
  %3556 = trunc i32 %3555 to i8
  store i8 %3556, ptr %3543, align 1, !tbaa !46
  %3557 = add nuw nsw i64 %3540, 1
  %3558 = icmp eq i64 %3557, %3490
  br i1 %3558, label %3601, label %3539, !llvm.loop !514

3559:                                             ; preds = %3494, %3559
  %3560 = phi i64 [ %3577, %3559 ], [ 0, %3494 ]
  %3561 = phi i32 [ %3571, %3559 ], [ 0, %3494 ]
  %3562 = mul nsw i64 %3560, %1883
  %3563 = getelementptr inbounds i8, ptr %3493, i64 %3562
  %3564 = load i8, ptr %3563, align 1, !tbaa !46
  %3565 = zext i8 %3564 to i32
  %3566 = and i64 %3560, 7
  %3567 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3566
  %3568 = load i8, ptr %3567, align 1, !tbaa !46
  %3569 = zext i8 %3568 to i32
  %3570 = sub nsw i32 %3565, %3569
  %3571 = add i32 %3570, %3561
  %3572 = add nuw i64 %3560, 5
  %3573 = and i64 %3572, 7
  %3574 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3573
  store i8 %3564, ptr %3574, align 1, !tbaa !46
  %3575 = udiv i32 %3571, 5
  %3576 = trunc i32 %3575 to i8
  store i8 %3576, ptr %3563, align 1, !tbaa !46
  %3577 = add nuw nsw i64 %3560, 1
  %3578 = icmp eq i64 %3577, %3490
  br i1 %3578, label %3601, label %3559, !llvm.loop !515

3579:                                             ; preds = %3498, %3579
  %3580 = phi i64 [ %3599, %3579 ], [ 0, %3498 ]
  %3581 = phi i32 [ %3592, %3579 ], [ 0, %3498 ]
  %3582 = mul nsw i64 %3580, %1883
  %3583 = getelementptr inbounds i8, ptr %3493, i64 %3582
  %3584 = load i8, ptr %3583, align 1, !tbaa !46
  %3585 = zext i8 %3584 to i32
  %3586 = trunc i64 %3580 to i32
  %3587 = and i64 %3580, 7
  %3588 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3587
  %3589 = load i8, ptr %3588, align 1, !tbaa !46
  %3590 = zext i8 %3589 to i32
  %3591 = sub nsw i32 %3585, %3590
  %3592 = add i32 %3591, %3581
  %3593 = add i32 %2010, %3586
  %3594 = and i32 %3593, 7
  %3595 = zext i32 %3594 to i64
  %3596 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3595
  store i8 %3584, ptr %3596, align 1, !tbaa !46
  %3597 = udiv i32 %3592, %2010
  %3598 = trunc i32 %3597 to i8
  store i8 %3598, ptr %3583, align 1, !tbaa !46
  %3599 = add nuw nsw i64 %3580, 1
  %3600 = icmp eq i64 %3599, %3490
  br i1 %3600, label %3601, label %3579, !llvm.loop !516

3601:                                             ; preds = %3559, %3539, %3519, %3499, %3579, %3498, %3497, %3496, %3495, %3494
  %3602 = phi i32 [ 0, %3498 ], [ 0, %3497 ], [ 0, %3496 ], [ 0, %3495 ], [ 0, %3494 ], [ %3489, %3579 ], [ %3489, %3499 ], [ %3489, %3519 ], [ %3489, %3539 ], [ %3489, %3559 ]
  %3603 = phi i32 [ 0, %3498 ], [ 0, %3497 ], [ 0, %3496 ], [ 0, %3495 ], [ 0, %3494 ], [ %3592, %3579 ], [ %3511, %3499 ], [ %3531, %3519 ], [ %3551, %3539 ], [ %3571, %3559 ]
  %3604 = icmp slt i32 %3602, %3476
  br i1 %3604, label %3605, label %3626

3605:                                             ; preds = %3601
  %3606 = sext i32 %3602 to i64
  br label %3607

3607:                                             ; preds = %3615, %3605
  %3608 = phi i64 [ %3606, %3605 ], [ %3623, %3615 ]
  %3609 = phi i32 [ %3603, %3605 ], [ %3620, %3615 ]
  %3610 = mul nsw i64 %3608, %1883
  %3611 = getelementptr inbounds i8, ptr %3493, i64 %3610
  %3612 = load i8, ptr %3611, align 1, !tbaa !46
  %3613 = icmp eq i8 %3612, 0
  br i1 %3613, label %3615, label %3614

3614:                                             ; preds = %3607
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1DO@LAPBLJ@?$AAp?$AAi?$AAx?$AAe?$AAl?$AAs?$AA?$FL?$AAi?$AA?$CK?$AAs?$AAt?$AAr?$AAi?$AAd?$AAe?$AA_?$AAi?$AAn?$AA_?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?$FN?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 4135)
          to label %3615 unwind label %4018

3615:                                             ; preds = %3614, %3607
  %3616 = and i64 %3608, 7
  %3617 = getelementptr inbounds [8 x i8], ptr %4, i64 0, i64 %3616
  %3618 = load i8, ptr %3617, align 1, !tbaa !46
  %3619 = zext i8 %3618 to i32
  %3620 = sub i32 %3609, %3619
  %3621 = udiv i32 %3620, %2010
  %3622 = trunc i32 %3621 to i8
  store i8 %3622, ptr %3611, align 1, !tbaa !46
  %3623 = add nsw i64 %3608, 1
  %3624 = trunc i64 %3623 to i32
  %3625 = icmp eq i32 %3476, %3624
  br i1 %3625, label %3626, label %3607, !llvm.loop !517

3626:                                             ; preds = %3615, %3601
  %3627 = getelementptr inbounds i8, ptr %3493, i64 1
  %3628 = add nuw nsw i32 %3492, 1
  %3629 = icmp eq i32 %3628, %3477
  br i1 %3629, label %3630, label %3491, !llvm.loop !518

3630:                                             ; preds = %3626, %3475
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #39
  br label %3631

3631:                                             ; preds = %3630, %3474
  %3632 = load i32, ptr %2047, align 4, !tbaa !459
  %3633 = trunc i32 %3632 to i16
  store i16 %3633, ptr %2031, align 4, !tbaa !519
  %3634 = load i32, ptr %2050, align 4, !tbaa !451
  %3635 = trunc i32 %3634 to i16
  %3636 = getelementptr inbounds %struct.stbtt_packedchar, ptr %2030, i64 %2016, i32 1
  store i16 %3635, ptr %3636, align 2, !tbaa !521
  %3637 = load i32, ptr %2022, align 4, !tbaa !430
  %3638 = add nsw i32 %3637, %3632
  %3639 = trunc i32 %3638 to i16
  %3640 = getelementptr inbounds %struct.stbtt_packedchar, ptr %2030, i64 %2016, i32 2
  store i16 %3639, ptr %3640, align 4, !tbaa !522
  %3641 = load i32, ptr %2025, align 4, !tbaa !432
  %3642 = add nsw i32 %3641, %3634
  %3643 = trunc i32 %3642 to i16
  %3644 = getelementptr inbounds %struct.stbtt_packedchar, ptr %2030, i64 %2016, i32 3
  store i16 %3643, ptr %3644, align 2, !tbaa !523
  %3645 = sitofp i16 %2085 to float
  %3646 = extractelement <2 x i32> %2225, i64 0
  %3647 = sitofp i32 %3646 to float
  %3648 = fmul fast float %1976, %3647
  %3649 = getelementptr inbounds %struct.stbtt_packedchar, ptr %2030, i64 %2016, i32 4
  %3650 = extractelement <2 x i32> %2225, i64 1
  %3651 = sitofp i32 %3650 to float
  %3652 = fmul fast float %1978, %3651
  %3653 = add nsw i32 %3637, %3646
  %3654 = sitofp i32 %3653 to float
  %3655 = fmul fast float %1976, %3654
  %3656 = insertelement <4 x float> poison, float %3648, i64 0
  %3657 = insertelement <4 x float> %3656, float %3652, i64 1
  %3658 = insertelement <4 x float> %3657, float %1972, i64 2
  %3659 = insertelement <4 x float> %3658, float %3655, i64 3
  %3660 = insertelement <4 x float> %2005, float %3645, i64 2
  %3661 = shufflevector <4 x float> %3660, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  %3662 = fadd fast <4 x float> %3659, %3661
  %3663 = fmul fast <4 x float> %3659, %3661
  %3664 = shufflevector <4 x float> %3662, <4 x float> %3663, <4 x i32> <i32 0, i32 1, i32 6, i32 3>
  store <4 x float> %3664, ptr %3649, align 4, !tbaa !6
  %3665 = add nsw i32 %3641, %3650
  %3666 = sitofp i32 %3665 to float
  %3667 = fmul fast float %1978, %3666
  %3668 = fadd fast float %3667, %2006
  %3669 = getelementptr inbounds %struct.stbtt_packedchar, ptr %2030, i64 %2016, i32 8
  store float %3668, ptr %3669, align 4, !tbaa !524
  %3670 = icmp eq i32 %2045, 0
  %3671 = trunc i64 %2016 to i32
  %3672 = select i1 %3670, i32 %3671, i32 %2017
  br label %3681

3673:                                             ; preds = %2021
  %3674 = icmp sgt i32 %2017, -1
  %3675 = select i1 %2027, i1 %3674, i1 false
  br i1 %3675, label %3676, label %3681

3676:                                             ; preds = %3673
  %3677 = load ptr, ptr %1914, align 8, !tbaa !456
  %3678 = zext i32 %2017 to i64
  %3679 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3677, i64 %3678
  %3680 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3677, i64 %2016
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(28) %3680, ptr noundef nonnull align 4 dereferenceable(28) %3679, i64 28, i1 false), !tbaa.struct !525
  br label %3681

3681:                                             ; preds = %3676, %3673, %3631, %2028, %2015
  %3682 = phi i32 [ %3672, %3631 ], [ %2017, %3676 ], [ %2017, %3673 ], [ %2017, %2015 ], [ %2017, %2028 ]
  %3683 = add nuw nsw i64 %2016, 1
  %3684 = load i32, ptr %1913, align 8, !tbaa !455
  %3685 = sext i32 %3684 to i64
  %3686 = icmp slt i64 %3683, %3685
  br i1 %3686, label %2015, label %3687, !llvm.loop !526

3687:                                             ; preds = %3681, %1971
  %3688 = getelementptr inbounds %struct.ImFontConfig, ptr %1902, i64 0, i32 15
  %3689 = load float, ptr %3688, align 8, !tbaa !262
  %3690 = fcmp fast une float %3689, 1.000000e+00
  br i1 %3690, label %3691, label %3800

3691:                                             ; preds = %3687
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %29) #39
  %3692 = insertelement <16 x float> poison, float %3689, i64 0
  %3693 = shufflevector <16 x float> %3692, <16 x float> poison, <16 x i32> zeroinitializer
  br label %3694

3694:                                             ; preds = %3694, %3691
  %3695 = phi i64 [ 0, %3691 ], [ %3703, %3694 ]
  %3696 = phi <16 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %3691 ], [ %3704, %3694 ]
  %3697 = uitofp <16 x i32> %3696 to <16 x float>
  %3698 = fmul fast <16 x float> %3693, %3697
  %3699 = fptoui <16 x float> %3698 to <16 x i32>
  %3700 = call <16 x i32> @llvm.umin.v16i32(<16 x i32> %3699, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>)
  %3701 = trunc <16 x i32> %3700 to <16 x i8>
  %3702 = getelementptr inbounds i8, ptr %29, i64 %3695
  store <16 x i8> %3701, ptr %3702, align 16, !tbaa !46
  %3703 = add nuw i64 %3695, 16
  %3704 = add <16 x i32> %3696, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %3705 = icmp eq i64 %3703, 256
  br i1 %3705, label %3706, label %3694, !llvm.loop !527

3706:                                             ; preds = %3694
  %3707 = load i32, ptr %1905, align 8, !tbaa !399
  %3708 = icmp sgt i32 %3707, 0
  br i1 %3708, label %3709, label %3711

3709:                                             ; preds = %3706
  %3710 = load ptr, ptr %1909, align 8, !tbaa !419
  br label %3712

3711:                                             ; preds = %3795, %3706
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %29) #39
  br label %3800

3712:                                             ; preds = %3709, %3795
  %3713 = phi i32 [ %3796, %3795 ], [ %3707, %3709 ]
  %3714 = phi i32 [ %3797, %3795 ], [ 0, %3709 ]
  %3715 = phi ptr [ %3798, %3795 ], [ %3710, %3709 ]
  %3716 = getelementptr inbounds %struct.stbrp_rect, ptr %3715, i64 0, i32 5
  %3717 = load i32, ptr %3716, align 4, !tbaa !450
  %3718 = icmp eq i32 %3717, 0
  br i1 %3718, label %3795, label %3719

3719:                                             ; preds = %3712
  %3720 = load i32, ptr %37, align 8, !tbaa !292
  %3721 = getelementptr inbounds %struct.stbrp_rect, ptr %3715, i64 0, i32 2
  %3722 = load i32, ptr %3721, align 4, !tbaa !432
  %3723 = getelementptr inbounds %struct.stbrp_rect, ptr %3715, i64 0, i32 1
  %3724 = load i32, ptr %3723, align 4, !tbaa !430
  %3725 = getelementptr inbounds %struct.stbrp_rect, ptr %3715, i64 0, i32 4
  %3726 = load i32, ptr %3725, align 4, !tbaa !451
  %3727 = getelementptr inbounds %struct.stbrp_rect, ptr %3715, i64 0, i32 3
  %3728 = load i32, ptr %3727, align 4, !tbaa !459
  %3729 = load ptr, ptr %44, align 8, !tbaa !273
  %3730 = icmp sgt i32 %3722, 0
  br i1 %3730, label %3731, label %3795

3731:                                             ; preds = %3719
  %3732 = icmp sgt i32 %3724, 0
  %3733 = sub nsw i32 %3720, %3724
  %3734 = sext i32 %3733 to i64
  br i1 %3732, label %3735, label %3795

3735:                                             ; preds = %3731
  %3736 = sext i32 %3728 to i64
  %3737 = getelementptr inbounds i8, ptr %3729, i64 %3736
  %3738 = mul nsw i32 %3726, %3720
  %3739 = sext i32 %3738 to i64
  %3740 = getelementptr inbounds i8, ptr %3737, i64 %3739
  %3741 = and i32 %3724, 3
  %3742 = icmp eq i32 %3741, 0
  %3743 = icmp ult i32 %3724, 4
  br label %3744

3744:                                             ; preds = %3788, %3735
  %3745 = phi i32 [ %3790, %3788 ], [ %3722, %3735 ]
  %3746 = phi ptr [ %3791, %3788 ], [ %3740, %3735 ]
  br i1 %3742, label %3759, label %3747

3747:                                             ; preds = %3744, %3747
  %3748 = phi i32 [ %3755, %3747 ], [ %3724, %3744 ]
  %3749 = phi ptr [ %3756, %3747 ], [ %3746, %3744 ]
  %3750 = phi i32 [ %3757, %3747 ], [ 0, %3744 ]
  %3751 = load i8, ptr %3749, align 1, !tbaa !46
  %3752 = zext i8 %3751 to i64
  %3753 = getelementptr inbounds i8, ptr %29, i64 %3752
  %3754 = load i8, ptr %3753, align 1, !tbaa !46
  store i8 %3754, ptr %3749, align 1, !tbaa !46
  %3755 = add nsw i32 %3748, -1
  %3756 = getelementptr inbounds i8, ptr %3749, i64 1
  %3757 = add i32 %3750, 1
  %3758 = icmp eq i32 %3757, %3741
  br i1 %3758, label %3759, label %3747, !llvm.loop !528

3759:                                             ; preds = %3747, %3744
  %3760 = phi i32 [ %3724, %3744 ], [ %3755, %3747 ]
  %3761 = phi ptr [ %3746, %3744 ], [ %3756, %3747 ]
  %3762 = phi ptr [ undef, %3744 ], [ %3756, %3747 ]
  br i1 %3743, label %3788, label %3763

3763:                                             ; preds = %3759, %3763
  %3764 = phi i32 [ %3785, %3763 ], [ %3760, %3759 ]
  %3765 = phi ptr [ %3786, %3763 ], [ %3761, %3759 ]
  %3766 = load i8, ptr %3765, align 1, !tbaa !46
  %3767 = zext i8 %3766 to i64
  %3768 = getelementptr inbounds i8, ptr %29, i64 %3767
  %3769 = load i8, ptr %3768, align 1, !tbaa !46
  store i8 %3769, ptr %3765, align 1, !tbaa !46
  %3770 = getelementptr inbounds i8, ptr %3765, i64 1
  %3771 = load i8, ptr %3770, align 1, !tbaa !46
  %3772 = zext i8 %3771 to i64
  %3773 = getelementptr inbounds i8, ptr %29, i64 %3772
  %3774 = load i8, ptr %3773, align 1, !tbaa !46
  store i8 %3774, ptr %3770, align 1, !tbaa !46
  %3775 = getelementptr inbounds i8, ptr %3765, i64 2
  %3776 = load i8, ptr %3775, align 1, !tbaa !46
  %3777 = zext i8 %3776 to i64
  %3778 = getelementptr inbounds i8, ptr %29, i64 %3777
  %3779 = load i8, ptr %3778, align 1, !tbaa !46
  store i8 %3779, ptr %3775, align 1, !tbaa !46
  %3780 = getelementptr inbounds i8, ptr %3765, i64 3
  %3781 = load i8, ptr %3780, align 1, !tbaa !46
  %3782 = zext i8 %3781 to i64
  %3783 = getelementptr inbounds i8, ptr %29, i64 %3782
  %3784 = load i8, ptr %3783, align 1, !tbaa !46
  store i8 %3784, ptr %3780, align 1, !tbaa !46
  %3785 = add nsw i32 %3764, -4
  %3786 = getelementptr inbounds i8, ptr %3765, i64 4
  %3787 = icmp sgt i32 %3764, 4
  br i1 %3787, label %3763, label %3788, !llvm.loop !352

3788:                                             ; preds = %3763, %3759
  %3789 = phi ptr [ %3762, %3759 ], [ %3786, %3763 ]
  %3790 = add nsw i32 %3745, -1
  %3791 = getelementptr inbounds i8, ptr %3789, i64 %3734
  %3792 = icmp sgt i32 %3745, 1
  br i1 %3792, label %3744, label %3793, !llvm.loop !353

3793:                                             ; preds = %3788
  %3794 = load i32, ptr %1905, align 8, !tbaa !399
  br label %3795

3795:                                             ; preds = %3793, %3731, %3719, %3712
  %3796 = phi i32 [ %3794, %3793 ], [ %3713, %3731 ], [ %3713, %3719 ], [ %3713, %3712 ]
  %3797 = add nuw nsw i32 %3714, 1
  %3798 = getelementptr inbounds %struct.stbrp_rect, ptr %3715, i64 1
  %3799 = icmp slt i32 %3797, %3796
  br i1 %3799, label %3712, label %3711, !llvm.loop !529

3800:                                             ; preds = %3711, %3687
  store ptr null, ptr %1909, align 8, !tbaa !419
  br label %3801

3801:                                             ; preds = %1901, %3800
  %3802 = add nuw nsw i32 %1885, 1
  br label %1884, !llvm.loop !530

3803:                                             ; preds = %1888
  %3804 = load ptr, ptr %1367, align 8, !tbaa !412
  %3805 = icmp eq ptr %3804, null
  br i1 %3805, label %3808, label %3806

3806:                                             ; preds = %3803
  store i32 0, ptr %1347, align 4, !tbaa !413
  store i32 0, ptr %27, align 8, !tbaa !410
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3804)
          to label %3807 unwind label %4018

3807:                                             ; preds = %3806
  store ptr null, ptr %1367, align 8, !tbaa !412
  br label %3808

3808:                                             ; preds = %3803, %3807
  br label %3809

3809:                                             ; preds = %3808, %4002
  %3810 = phi i32 [ %4003, %4002 ], [ 0, %3808 ]
  %3811 = icmp slt i32 %3810, %55
  br i1 %3811, label %3836, label %3812

3812:                                             ; preds = %3809
  br i1 %56, label %3813, label %3815

3813:                                             ; preds = %3812
  %3814 = zext i32 %55 to i64
  br label %3818

3815:                                             ; preds = %3812
  %3816 = icmp eq ptr %63, null
  br i1 %3816, label %4004, label %3817

3817:                                             ; preds = %3833, %3815
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %63)
          to label %4004 unwind label %4018

3818:                                             ; preds = %3813, %3833
  %3819 = phi i64 [ %3834, %3833 ], [ 0, %3813 ]
  %3820 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3819, i32 9, i32 2
  %3821 = load ptr, ptr %3820, align 8, !tbaa !403
  %3822 = icmp eq ptr %3821, null
  br i1 %3822, label %3826, label %3823

3823:                                             ; preds = %3818
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3821)
          to label %3826 unwind label %3824

3824:                                             ; preds = %3823
  %3825 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %3825) ]
  unreachable

3826:                                             ; preds = %3823, %3818
  %3827 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3819, i32 8, i32 0, i32 2
  %3828 = load ptr, ptr %3827, align 8, !tbaa !393
  %3829 = icmp eq ptr %3828, null
  br i1 %3829, label %3833, label %3830

3830:                                             ; preds = %3826
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3828)
          to label %3833 unwind label %3831

3831:                                             ; preds = %3830
  %3832 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %3832) ]
  unreachable

3833:                                             ; preds = %3830, %3826
  %3834 = add nuw nsw i64 %3819, 1
  %3835 = icmp eq i64 %3834, %3814
  br i1 %3835, label %3817, label %3818, !llvm.loop !531

3836:                                             ; preds = %3809
  %3837 = zext i32 %3810 to i64
  %3838 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3837
  %3839 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3837, i32 7
  %3840 = load i32, ptr %3839, align 8, !tbaa !399
  %3841 = icmp eq i32 %3840, 0
  br i1 %3841, label %4002, label %3842

3842:                                             ; preds = %3836
  %3843 = load i32, ptr %30, align 8
  %3844 = icmp sgt i32 %3843, %3810
  br i1 %3844, label %3846, label %3845

3845:                                             ; preds = %3842
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %3846 unwind label %4018

3846:                                             ; preds = %3842, %3845
  %3847 = load ptr, ptr %78, align 8, !tbaa !270
  %3848 = getelementptr inbounds %struct.ImFontConfig, ptr %3847, i64 %3837
  %3849 = getelementptr inbounds %struct.ImFontConfig, ptr %3847, i64 %3837, i32 18
  %3850 = load ptr, ptr %3849, align 8, !tbaa !313
  %3851 = getelementptr inbounds %struct.ImFontConfig, ptr %3847, i64 %3837, i32 4
  %3852 = load float, ptr %3851, align 4, !tbaa !295
  %3853 = getelementptr i8, ptr %3838, i64 8
  %3854 = load ptr, ptr %3853, align 8, !tbaa !364
  %3855 = getelementptr i8, ptr %3838, i64 36
  %3856 = load i32, ptr %3855, align 4, !tbaa !370
  %3857 = sext i32 %3856 to i64
  %3858 = getelementptr inbounds i8, ptr %3854, i64 %3857
  %3859 = getelementptr inbounds i8, ptr %3858, i64 4
  %3860 = getelementptr i8, ptr %3859, i64 1
  %3861 = getelementptr inbounds i8, ptr %3858, i64 6
  %3862 = getelementptr i8, ptr %3861, i64 1
  %3863 = load i8, ptr %3859, align 1, !tbaa !46
  %3864 = load i8, ptr %3860, align 1, !tbaa !46
  %3865 = load i8, ptr %3861, align 1, !tbaa !46
  %3866 = load i8, ptr %3862, align 1, !tbaa !46
  %3867 = insertelement <2 x i8> poison, i8 %3863, i64 0
  %3868 = insertelement <2 x i8> %3867, i8 %3865, i64 1
  %3869 = zext <2 x i8> %3868 to <2 x i16>
  %3870 = shl nuw <2 x i16> %3869, <i16 8, i16 8>
  %3871 = insertelement <2 x i8> poison, i8 %3864, i64 0
  %3872 = insertelement <2 x i8> %3871, i8 %3866, i64 1
  %3873 = zext <2 x i8> %3872 to <2 x i16>
  %3874 = or <2 x i16> %3870, %3873
  %3875 = extractelement <2 x i16> %3874, i64 0
  %3876 = sext i16 %3875 to i32
  %3877 = extractelement <2 x i16> %3874, i64 1
  %3878 = sext i16 %3877 to i32
  %3879 = sub nsw i32 %3876, %3878
  %3880 = sitofp i32 %3879 to float
  %3881 = fdiv fast float %3852, %3880
  %3882 = sitofp <2 x i16> %3874 to <2 x float>
  %3883 = insertelement <2 x float> poison, float %3881, i64 0
  %3884 = shufflevector <2 x float> %3883, <2 x float> poison, <2 x i32> zeroinitializer
  %3885 = fmul fast <2 x float> %3884, %3882
  %3886 = icmp slt <2 x i16> %3874, <i16 1, i16 1>
  %3887 = select <2 x i1> %3886, <2 x float> <float -1.000000e+00, float -1.000000e+00>, <2 x float> <float 1.000000e+00, float 1.000000e+00>
  %3888 = fadd fast <2 x float> %3885, %3887
  %3889 = fptosi <2 x float> %3888 to <2 x i32>
  %3890 = sitofp <2 x i32> %3889 to <2 x float>
  %3891 = getelementptr inbounds %struct.ImFontConfig, ptr %3847, i64 %3837, i32 13
  %3892 = load i8, ptr %3891, align 8, !tbaa !309, !range !268, !noundef !269
  %3893 = icmp eq i8 %3892, 0
  br i1 %3893, label %3900, label %3894

3894:                                             ; preds = %3846
  %3895 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 8
  %3896 = load i16, ptr %3895, align 8, !tbaa !290
  %3897 = add i16 %3896, 1
  %3898 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 16
  %3899 = load float, ptr %3898, align 8, !tbaa !532
  br label %3934

3900:                                             ; preds = %3846
  %3901 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 2
  %3902 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %3902, align 8, !tbaa !6
  %3903 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 4, i32 2
  %3904 = load ptr, ptr %3903, align 8, !tbaa !533
  %3905 = icmp eq ptr %3904, null
  br i1 %3905, label %3910, label %3906

3906:                                             ; preds = %3900
  %3907 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 4
  %3908 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 4, i32 1
  store i32 0, ptr %3908, align 4, !tbaa !534
  store i32 0, ptr %3907, align 8, !tbaa !535
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3904)
          to label %3909 unwind label %4018

3909:                                             ; preds = %3906
  store ptr null, ptr %3903, align 8, !tbaa !533
  br label %3910

3910:                                             ; preds = %3909, %3900
  %3911 = getelementptr inbounds %struct.ImVector, ptr %3850, i64 0, i32 2
  %3912 = load ptr, ptr %3911, align 8, !tbaa !536
  %3913 = icmp eq ptr %3912, null
  br i1 %3913, label %3917, label %3914

3914:                                             ; preds = %3910
  %3915 = getelementptr inbounds %struct.ImVector, ptr %3850, i64 0, i32 1
  store i32 0, ptr %3915, align 4, !tbaa !537
  store i32 0, ptr %3850, align 8, !tbaa !538
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3912)
          to label %3916 unwind label %4018

3916:                                             ; preds = %3914
  store ptr null, ptr %3911, align 8, !tbaa !536
  br label %3917

3917:                                             ; preds = %3916, %3910
  %3918 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 3, i32 2
  %3919 = load ptr, ptr %3918, align 8, !tbaa !63
  %3920 = icmp eq ptr %3919, null
  br i1 %3920, label %3925, label %3921

3921:                                             ; preds = %3917
  %3922 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 3
  %3923 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 3, i32 1
  store i32 0, ptr %3923, align 4, !tbaa !62
  store i32 0, ptr %3922, align 8, !tbaa !64
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3919)
          to label %3924 unwind label %4018

3924:                                             ; preds = %3921
  store ptr null, ptr %3918, align 8, !tbaa !63
  br label %3925

3925:                                             ; preds = %3924, %3917
  %3926 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 5
  %3927 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3926, i8 0, i64 16, i1 false)
  store i8 1, ptr %3927, align 8, !tbaa !539
  %3928 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 16
  %3929 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 18
  store i32 0, ptr %3929, align 8, !tbaa !540
  %3930 = load float, ptr %3851, align 4, !tbaa !295
  store float %3930, ptr %3901, align 4, !tbaa !181
  %3931 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 7
  store ptr %3848, ptr %3931, align 8, !tbaa !288
  %3932 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 6
  store ptr %0, ptr %3932, align 8, !tbaa !171
  store <2 x float> %3890, ptr %3928, align 8, !tbaa !6
  %3933 = extractelement <2 x float> %3890, i64 0
  br label %3934

3934:                                             ; preds = %3925, %3894
  %3935 = phi float [ %3899, %3894 ], [ %3933, %3925 ]
  %3936 = phi i16 [ %3897, %3894 ], [ 1, %3925 ]
  %3937 = getelementptr inbounds %struct.ImFont, ptr %3850, i64 0, i32 8
  store i16 %3936, ptr %3937, align 8, !tbaa !290
  %3938 = getelementptr inbounds %struct.ImFontConfig, ptr %3847, i64 %3837, i32 9
  %3939 = load float, ptr %3938, align 4, !tbaa !541
  %3940 = getelementptr inbounds %struct.ImFontConfig, ptr %3847, i64 %3837, i32 9, i32 1
  %3941 = load float, ptr %3940, align 8, !tbaa !297
  %3942 = fadd fast float %3935, 5.000000e-01
  %3943 = fptosi float %3942 to i32
  %3944 = sitofp i32 %3943 to float
  %3945 = fadd fast float %3941, %3944
  %3946 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3837, i32 9
  %3947 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3837, i32 9, i32 2
  %3948 = getelementptr inbounds %struct.ImFontBuildSrcData, ptr %63, i64 %3837, i32 3
  br label %3949

3949:                                             ; preds = %4000, %3934
  %3950 = phi i32 [ 0, %3934 ], [ %4001, %4000 ]
  %3951 = load i32, ptr %3839, align 8, !tbaa !399
  %3952 = icmp slt i32 %3950, %3951
  br i1 %3952, label %3953, label %4002

3953:                                             ; preds = %3949
  %3954 = load i32, ptr %3946, align 8
  %3955 = icmp sgt i32 %3954, %3950
  br i1 %3955, label %3957, label %3956

3956:                                             ; preds = %3953
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %3957 unwind label %4018

3957:                                             ; preds = %3953, %3956
  %3958 = load ptr, ptr %3947, align 8, !tbaa !403
  %3959 = zext i32 %3950 to i64
  %3960 = getelementptr inbounds i32, ptr %3958, i64 %3959
  %3961 = load i32, ptr %3960, align 4, !tbaa !105
  %3962 = load ptr, ptr %3948, align 8, !tbaa !420
  %3963 = load i32, ptr %36, align 4, !tbaa !293
  %3964 = load i32, ptr %37, align 8, !tbaa !292
  %3965 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 4
  %3966 = load float, ptr %3965, align 4, !tbaa !542
  %3967 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 5
  %3968 = load float, ptr %3967, align 4, !tbaa !543
  %3969 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 7
  %3970 = load float, ptr %3969, align 4, !tbaa !544
  %3971 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 8
  %3972 = load float, ptr %3971, align 4, !tbaa !524
  %3973 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959
  %3974 = sitofp i32 %3963 to float
  %3975 = fdiv fast float 1.000000e+00, %3974
  %3976 = sitofp i32 %3964 to float
  %3977 = fdiv fast float 1.000000e+00, %3976
  %3978 = load i16, ptr %3973, align 4, !tbaa !519
  %3979 = uitofp i16 %3978 to float
  %3980 = fmul fast float %3977, %3979
  %3981 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 1
  %3982 = load i16, ptr %3981, align 2, !tbaa !521
  %3983 = uitofp i16 %3982 to float
  %3984 = fmul fast float %3975, %3983
  %3985 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 2
  %3986 = load i16, ptr %3985, align 4, !tbaa !522
  %3987 = uitofp i16 %3986 to float
  %3988 = fmul fast float %3977, %3987
  %3989 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 3
  %3990 = load i16, ptr %3989, align 2, !tbaa !523
  %3991 = uitofp i16 %3990 to float
  %3992 = fmul fast float %3975, %3991
  %3993 = getelementptr inbounds %struct.stbtt_packedchar, ptr %3962, i64 %3959, i32 6
  %3994 = load float, ptr %3993, align 4, !tbaa !545
  %3995 = fadd fast float %3972, %3945
  %3996 = fadd fast float %3970, %3939
  %3997 = fadd fast float %3968, %3945
  %3998 = fadd fast float %3966, %3939
  %3999 = trunc i32 %3961 to i16
  invoke void @"?AddGlyph@ImFont@@QEAAXPEBUImFontConfig@@GMMMMMMMMM@Z"(ptr noundef nonnull align 8 dereferenceable(120) %3850, ptr noundef nonnull %3848, i16 noundef %3999, float noundef %3998, float noundef %3997, float noundef %3996, float noundef %3995, float noundef %3980, float noundef %3984, float noundef %3988, float noundef %3992, float noundef %3994)
          to label %4000 unwind label %4018

4000:                                             ; preds = %3957
  %4001 = add nuw nsw i32 %3950, 1
  br label %3949, !llvm.loop !546

4002:                                             ; preds = %3949, %3836
  %4003 = add nuw nsw i32 %3810, 1
  br label %3809, !llvm.loop !547

4004:                                             ; preds = %3815, %3817
  invoke void @"?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z"(ptr noundef nonnull %0)
          to label %4005 unwind label %4018

4005:                                             ; preds = %4004
  %4006 = load ptr, ptr %1370, align 8, !tbaa !414
  %4007 = icmp eq ptr %4006, null
  br i1 %4007, label %4011, label %4008

4008:                                             ; preds = %4005
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %4006)
          to label %4011 unwind label %4009

4009:                                             ; preds = %4008
  %4010 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %4010) ]
  unreachable

4011:                                             ; preds = %4005, %4008
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %28) #39
  %4012 = load ptr, ptr %1367, align 8, !tbaa !412
  %4013 = icmp eq ptr %4012, null
  br i1 %4013, label %4017, label %4014

4014:                                             ; preds = %4011
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %4012)
          to label %4017 unwind label %4015

4015:                                             ; preds = %4014
  %4016 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %4016) ]
  unreachable

4017:                                             ; preds = %4011, %4014
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %27) #39
  br label %4031

4018:                                             ; preds = %1823, %3956, %3921, %3914, %3906, %3845, %3817, %3806, %3614, %3457, %3239, %3238, %3237, %3236, %3235, %3228, %3174, %3173, %3172, %3168, %3167, %3163, %3162, %3158, %3157, %3153, %3152, %3151, %3146, %3145, %3144, %3113, %3107, %3103, %3001, %2998, %2973, %2970, %2963, %2925, %2914, %2912, %2910, %2899, %2874, %2837, %2821, %2796, %2736, %2635, %2598, %2597, %2511, %2440, %2239, %2220, %2088, %2041, %1896, %1888, %1887, %1747, %1745, %1735, %1731, %1528, %1418, %1408, %1399, %1355, %1349, %1510, %1520, %3957, %4004, %1862, %1805
  %4019 = phi ptr [ %63, %1528 ], [ %63, %1520 ], [ %63, %1510 ], [ %63, %1418 ], [ %63, %1408 ], [ %63, %1399 ], [ %63, %1823 ], [ %63, %3614 ], [ %63, %3457 ], [ %63, %3239 ], [ %63, %2598 ], [ %63, %2597 ], [ %63, %3238 ], [ %63, %3237 ], [ %63, %3236 ], [ %63, %3235 ], [ %63, %3228 ], [ %63, %2914 ], [ %63, %2912 ], [ %63, %2910 ], [ %63, %2973 ], [ %63, %2970 ], [ %63, %2963 ], [ %63, %3113 ], [ %63, %3107 ], [ %63, %3103 ], [ %63, %3001 ], [ %63, %2998 ], [ %63, %3146 ], [ %63, %3145 ], [ %63, %3144 ], [ %63, %3153 ], [ %63, %3152 ], [ %63, %3151 ], [ %63, %3158 ], [ %63, %3157 ], [ %63, %3163 ], [ %63, %3162 ], [ %63, %3168 ], [ %63, %3167 ], [ %63, %3173 ], [ %63, %3172 ], [ %63, %3174 ], [ %63, %2925 ], [ %63, %2899 ], [ %63, %2837 ], [ %63, %2874 ], [ %63, %2821 ], [ %63, %2796 ], [ %63, %2736 ], [ %63, %2635 ], [ %63, %2511 ], [ %63, %2440 ], [ %63, %2239 ], [ %63, %2220 ], [ %63, %2088 ], [ %63, %2041 ], [ %63, %1896 ], [ %63, %3957 ], [ %63, %3956 ], [ %63, %3921 ], [ %63, %3914 ], [ %63, %3906 ], [ %63, %3845 ], [ null, %4004 ], [ %63, %3817 ], [ %63, %3806 ], [ %63, %1888 ], [ %63, %1887 ], [ %63, %1862 ], [ %63, %1805 ], [ %63, %1747 ], [ %63, %1745 ], [ %63, %1735 ], [ %63, %1731 ], [ %63, %1355 ], [ %63, %1349 ]
  %4020 = cleanuppad within none []
  call void @"??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %28) #39 [ "funclet"(token %4020) ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %28) #39
  call void @"??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %27) #39 [ "funclet"(token %4020) ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %27) #39
  cleanupret from %4020 unwind label %4032

4021:                                             ; preds = %999, %132
  %4022 = icmp eq ptr %73, null
  br i1 %4022, label %4026, label %4023

4023:                                             ; preds = %4021
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %73)
          to label %4026 unwind label %4024

4024:                                             ; preds = %4023
  %4025 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %4025) ]
  unreachable

4026:                                             ; preds = %4021, %4023
  %4027 = icmp eq ptr %63, null
  br i1 %4027, label %4031, label %4028

4028:                                             ; preds = %4026
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %63)
          to label %4031 unwind label %4029

4029:                                             ; preds = %4028
  %4030 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %4030) ]
  unreachable

4031:                                             ; preds = %4017, %4026, %4028
  ret i1 %85

4032:                                             ; preds = %1341, %1334, %1319, %1294, %1287, %1241, %1233, %1211, %1202, %1177, %1133, %1125, %1094, %1086, %1066, %1017, %860, %859, %840, %839, %818, %817, %816, %815, %813, %812, %811, %810, %809, %807, %806, %794, %96, %88, %67, %57, %1188, %1326, %268, %1037, %132, %109, %4018
  %4033 = phi ptr [ %73, %1211 ], [ %73, %1202 ], [ %73, %1188 ], [ %73, %1177 ], [ %73, %1133 ], [ %73, %1125 ], [ %73, %1094 ], [ %73, %1086 ], [ %73, %1066 ], [ %73, %1326 ], [ %73, %1319 ], [ %73, %1294 ], [ %73, %1287 ], [ %73, %1241 ], [ %73, %1233 ], [ %73, %1341 ], [ null, %4018 ], [ %73, %1334 ], [ %73, %132 ], [ %73, %1037 ], [ %73, %1017 ], [ %73, %860 ], [ %73, %859 ], [ %73, %840 ], [ %73, %839 ], [ %73, %818 ], [ %73, %817 ], [ %73, %816 ], [ %73, %815 ], [ %73, %813 ], [ %73, %812 ], [ %73, %811 ], [ %73, %810 ], [ %73, %809 ], [ %73, %807 ], [ %73, %806 ], [ %73, %794 ], [ %73, %268 ], [ %73, %109 ], [ %73, %96 ], [ %73, %88 ], [ null, %67 ], [ null, %57 ]
  %4034 = phi ptr [ %63, %1211 ], [ %63, %1202 ], [ %63, %1188 ], [ %63, %1177 ], [ %63, %1133 ], [ %63, %1125 ], [ %63, %1094 ], [ %63, %1086 ], [ %63, %1066 ], [ %63, %1326 ], [ %63, %1319 ], [ %63, %1294 ], [ %63, %1287 ], [ %63, %1241 ], [ %63, %1233 ], [ %63, %1341 ], [ %4019, %4018 ], [ %63, %1334 ], [ %63, %132 ], [ %63, %1037 ], [ %63, %1017 ], [ %63, %860 ], [ %63, %859 ], [ %63, %840 ], [ %63, %839 ], [ %63, %818 ], [ %63, %817 ], [ %63, %816 ], [ %63, %815 ], [ %63, %813 ], [ %63, %812 ], [ %63, %811 ], [ %63, %810 ], [ %63, %809 ], [ %63, %807 ], [ %63, %806 ], [ %63, %794 ], [ %63, %268 ], [ %63, %109 ], [ %63, %96 ], [ %63, %88 ], [ %63, %67 ], [ null, %57 ]
  %4035 = cleanuppad within none []
  %4036 = icmp eq ptr %4033, null
  br i1 %4036, label %4040, label %4037

4037:                                             ; preds = %4032
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %4033) [ "funclet"(token %4035) ]
          to label %4040 unwind label %4038

4038:                                             ; preds = %4037
  %4039 = cleanuppad within %4035 []
  call void @__std_terminate() #40 [ "funclet"(token %4039) ]
  unreachable

4040:                                             ; preds = %4032, %4037
  %4041 = icmp eq ptr %4034, null
  br i1 %4041, label %4045, label %4042

4042:                                             ; preds = %4040
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %4034) [ "funclet"(token %4035) ]
          to label %4045 unwind label %4043

4043:                                             ; preds = %4042
  %4044 = cleanuppad within %4035 []
  call void @__std_terminate() #40 [ "funclet"(token %4044) ]
  unreachable

4045:                                             ; preds = %4040, %4042
  cleanupret from %4035 unwind to caller
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ImFontAtlasBuildSetupFont@@YAXPEAUImFontAtlas@@PEAUImFont@@PEAUImFontConfig@@MM@Z"(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, float noundef %3, float noundef %4) local_unnamed_addr #7 {
  %6 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 13
  %7 = load i8, ptr %6, align 8, !tbaa !309, !range !268, !noundef !269
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 8
  %11 = load i16, ptr %10, align 8, !tbaa !290
  %12 = add i16 %11, 1
  br label %45

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 2
  %15 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %15, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 4, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !533
  %18 = icmp eq ptr %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 4
  %21 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 4, i32 1
  store i32 0, ptr %21, align 4, !tbaa !534
  store i32 0, ptr %20, align 8, !tbaa !535
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %17)
  store ptr null, ptr %16, align 8, !tbaa !533
  br label %22

22:                                               ; preds = %19, %13
  %23 = getelementptr inbounds %struct.ImVector, ptr %1, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !536
  %25 = icmp eq ptr %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.ImVector, ptr %1, i64 0, i32 1
  store i32 0, ptr %27, align 4, !tbaa !537
  store i32 0, ptr %1, align 8, !tbaa !538
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %24)
  store ptr null, ptr %23, align 8, !tbaa !536
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 3, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !63
  %31 = icmp eq ptr %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 3
  %34 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 3, i32 1
  store i32 0, ptr %34, align 4, !tbaa !62
  store i32 0, ptr %33, align 8, !tbaa !64
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %30)
  store ptr null, ptr %29, align 8, !tbaa !63
  br label %35

35:                                               ; preds = %28, %32
  %36 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 5
  %37 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %36, i8 0, i64 16, i1 false)
  store i8 1, ptr %37, align 8, !tbaa !539
  %38 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 17
  %39 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 16
  %40 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 18
  store i32 0, ptr %40, align 8, !tbaa !540
  %41 = getelementptr inbounds %struct.ImFontConfig, ptr %2, i64 0, i32 4
  %42 = load float, ptr %41, align 4, !tbaa !295
  store float %42, ptr %14, align 4, !tbaa !181
  %43 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 7
  store ptr %2, ptr %43, align 8, !tbaa !288
  %44 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 6
  store ptr %0, ptr %44, align 8, !tbaa !171
  store float %3, ptr %39, align 8, !tbaa !532
  store float %4, ptr %38, align 4, !tbaa !548
  br label %45

45:                                               ; preds = %9, %35
  %46 = phi i16 [ %12, %9 ], [ 1, %35 ]
  %47 = getelementptr inbounds %struct.ImFont, ptr %1, i64 0, i32 8
  store i16 %46, ptr %47, align 8, !tbaa !290
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ClearOutputData@ImFont@@QEAAXXZ"(ptr nocapture noundef nonnull align 8 dereferenceable(120) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %2, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !533
  %5 = icmp eq ptr %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 1
  store i32 0, ptr %8, align 4, !tbaa !534
  store i32 0, ptr %7, align 8, !tbaa !535
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %4)
  store ptr null, ptr %3, align 8, !tbaa !533
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !536
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 1
  store i32 0, ptr %14, align 4, !tbaa !537
  store i32 0, ptr %0, align 8, !tbaa !538
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %11)
  store ptr null, ptr %10, align 8, !tbaa !536
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !63
  %18 = icmp eq ptr %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %21 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 1
  store i32 0, ptr %21, align 4, !tbaa !62
  store i32 0, ptr %20, align 8, !tbaa !64
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %17)
  store ptr null, ptr %16, align 8, !tbaa !63
  br label %22

22:                                               ; preds = %15, %19
  %23 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %24 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, i8 0, i64 16, i1 false)
  store i8 1, ptr %24, align 8, !tbaa !539
  %25 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 16
  store <2 x float> zeroinitializer, ptr %25, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 18
  store i32 0, ptr %26, align 8, !tbaa !540
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?ImFontAtlasBuildPackCustomRects@@YAXPEAUImFontAtlas@@PEAX@Z"(ptr nocapture noundef %0, ptr noundef %1) local_unnamed_addr #0 personality ptr @__CxxFrameHandler3 {
  %3 = alloca %struct.ImVector.11, align 8
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CE@FMMHMDCM@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAc?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2622)
  br label %6

6:                                                ; preds = %5, %2
  %7 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %8 = load i32, ptr %7, align 8, !tbaa !287
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %struct.ImVector.11, ptr %3, i64 0, i32 1
  br label %16

12:                                               ; preds = %6
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CK@POMOOFJC@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2625)
  %13 = load i32, ptr %7, align 8, !tbaa !287
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %14 = getelementptr inbounds %struct.ImVector.11, ptr %3, i64 0, i32 1
  %15 = icmp sgt i32 %13, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %10, %12
  %17 = phi ptr [ %11, %10 ], [ %14, %12 ]
  %18 = phi i32 [ %8, %10 ], [ %13, %12 ]
  %19 = tail call i32 @llvm.smax.i32(i32 %18, i32 8)
  %20 = zext i32 %19 to i64
  %21 = mul nuw nsw i64 %20, 24
  %22 = invoke noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %21)
          to label %23 unwind label %157

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.ImVector.11, ptr %3, i64 0, i32 2
  store ptr %22, ptr %24, align 8, !tbaa !412
  store i32 %19, ptr %17, align 4, !tbaa !413
  br label %25

25:                                               ; preds = %23, %12
  %26 = phi i32 [ %18, %23 ], [ %13, %12 ]
  %27 = phi ptr [ %22, %23 ], [ null, %12 ]
  store i32 %26, ptr %3, align 8, !tbaa !410
  %28 = mul nsw i32 %26, 24
  %29 = sext i32 %28 to i64
  tail call void @llvm.memset.p0.i64(ptr align 4 %27, i8 0, i64 %29, i1 false)
  %30 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  br label %31

31:                                               ; preds = %60, %25
  %32 = phi i32 [ %26, %25 ], [ %57, %60 ]
  %33 = phi i32 [ 0, %25 ], [ %63, %60 ]
  %34 = load i32, ptr %7, align 8, !tbaa !287
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = icmp sgt i32 %32, 0
  br i1 %37, label %64, label %38

38:                                               ; preds = %36
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %64 unwind label %157

39:                                               ; preds = %31
  %40 = load ptr, ptr %30, align 8, !tbaa !271
  %41 = zext i32 %33 to i64
  %42 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %40, i64 %41
  %43 = load i16, ptr %42, align 8, !tbaa !549
  %44 = load i32, ptr %3, align 8
  %45 = icmp sgt i32 %44, %33
  br i1 %45, label %47, label %46

46:                                               ; preds = %39
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %47 unwind label %157

47:                                               ; preds = %39, %46
  %48 = zext i16 %43 to i32
  %49 = getelementptr inbounds %struct.stbrp_rect, ptr %27, i64 %41, i32 1
  store i32 %48, ptr %49, align 4, !tbaa !430
  %50 = load i32, ptr %7, align 8
  %51 = icmp sgt i32 %50, %33
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %53 unwind label %157

53:                                               ; preds = %47, %52
  %54 = load ptr, ptr %30, align 8, !tbaa !271
  %55 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %54, i64 %41, i32 1
  %56 = load i16, ptr %55, align 2, !tbaa !550
  %57 = load i32, ptr %3, align 8
  %58 = icmp sgt i32 %57, %33
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %60 unwind label %157

60:                                               ; preds = %53, %59
  %61 = zext i16 %56 to i32
  %62 = getelementptr inbounds %struct.stbrp_rect, ptr %27, i64 %41, i32 2
  store i32 %61, ptr %62, align 4, !tbaa !432
  %63 = add nuw nsw i32 %33, 1
  br label %31, !llvm.loop !551

64:                                               ; preds = %36, %38
  invoke fastcc void @"?stbrp_pack_rects@@YAHPEAUstbrp_context@@PEAUstbrp_rect@@H@Z"(ptr noundef %1, ptr noundef nonnull %27, i32 noundef %32)
          to label %65 unwind label %157

65:                                               ; preds = %64
  %66 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  br label %67

67:                                               ; preds = %65, %153
  %68 = phi ptr [ %154, %153 ], [ %27, %65 ]
  %69 = phi i32 [ %155, %153 ], [ %32, %65 ]
  %70 = phi i32 [ %156, %153 ], [ 0, %65 ]
  %71 = icmp slt i32 %70, %69
  br i1 %71, label %78, label %72

72:                                               ; preds = %67
  %73 = icmp eq ptr %68, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %72
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %68)
          to label %77 unwind label %75

75:                                               ; preds = %74
  %76 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %76) ]
  unreachable

77:                                               ; preds = %72, %74
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #39
  ret void

78:                                               ; preds = %67
  %79 = zext i32 %70 to i64
  %80 = getelementptr inbounds %struct.stbrp_rect, ptr %68, i64 %79, i32 5
  %81 = load i32, ptr %80, align 4, !tbaa !450
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %153, label %83

83:                                               ; preds = %78
  %84 = load i32, ptr %3, align 8
  %85 = icmp sgt i32 %84, %70
  br i1 %85, label %87, label %86

86:                                               ; preds = %83
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %87 unwind label %157

87:                                               ; preds = %83, %86
  %88 = getelementptr inbounds %struct.stbrp_rect, ptr %68, i64 %79, i32 3
  %89 = load i32, ptr %88, align 4, !tbaa !459
  %90 = load i32, ptr %7, align 8
  %91 = icmp sgt i32 %90, %70
  br i1 %91, label %93, label %92

92:                                               ; preds = %87
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %93 unwind label %157

93:                                               ; preds = %87, %92
  %94 = load ptr, ptr %30, align 8, !tbaa !271
  %95 = trunc i32 %89 to i16
  %96 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %94, i64 %79, i32 2
  store i16 %95, ptr %96, align 4, !tbaa !346
  %97 = load i32, ptr %3, align 8
  %98 = icmp sgt i32 %97, %70
  br i1 %98, label %100, label %99

99:                                               ; preds = %93
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %100 unwind label %157

100:                                              ; preds = %93, %99
  %101 = getelementptr inbounds %struct.stbrp_rect, ptr %68, i64 %79, i32 4
  %102 = load i32, ptr %101, align 4, !tbaa !451
  %103 = load i32, ptr %7, align 8
  %104 = icmp sgt i32 %103, %70
  br i1 %104, label %106, label %105

105:                                              ; preds = %100
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %106 unwind label %157

106:                                              ; preds = %100, %105
  %107 = load ptr, ptr %30, align 8, !tbaa !271
  %108 = trunc i32 %102 to i16
  %109 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %107, i64 %79, i32 3
  store i16 %108, ptr %109, align 2, !tbaa !348
  %110 = load i32, ptr %3, align 8
  %111 = icmp sgt i32 %110, %70
  br i1 %111, label %113, label %112

112:                                              ; preds = %106
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %113 unwind label %157

113:                                              ; preds = %106, %112
  %114 = getelementptr inbounds %struct.stbrp_rect, ptr %68, i64 %79, i32 1
  %115 = load i32, ptr %114, align 4, !tbaa !430
  %116 = load i32, ptr %7, align 8
  %117 = icmp sgt i32 %116, %70
  br i1 %117, label %119, label %118

118:                                              ; preds = %113
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %119 unwind label %157

119:                                              ; preds = %113, %118
  %120 = load ptr, ptr %30, align 8, !tbaa !271
  %121 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %120, i64 %79
  %122 = load i16, ptr %121, align 8, !tbaa !549
  %123 = zext i16 %122 to i32
  %124 = icmp eq i32 %115, %123
  br i1 %124, label %125, label %139

125:                                              ; preds = %119
  br i1 %111, label %127, label %126

126:                                              ; preds = %125
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %127 unwind label %157

127:                                              ; preds = %125, %126
  %128 = getelementptr inbounds %struct.stbrp_rect, ptr %68, i64 %79, i32 2
  %129 = load i32, ptr %128, align 4, !tbaa !432
  %130 = load i32, ptr %7, align 8
  %131 = icmp sgt i32 %130, %70
  br i1 %131, label %133, label %132

132:                                              ; preds = %127
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %133 unwind label %157

133:                                              ; preds = %127, %132
  %134 = load ptr, ptr %30, align 8, !tbaa !271
  %135 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %134, i64 %79, i32 1
  %136 = load i16, ptr %135, align 2, !tbaa !550
  %137 = zext i16 %136 to i32
  %138 = icmp eq i32 %129, %137
  br i1 %138, label %140, label %139

139:                                              ; preds = %133, %119
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1KE@CBAIECN@?$AAp?$AAa?$AAc?$AAk?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN?$AA?4?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAu?$AAs?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AAs?$AA?$FL?$AAi?$AA?$FN@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2641)
          to label %140 unwind label %157

140:                                              ; preds = %139, %133
  br i1 %111, label %141, label %143

141:                                              ; preds = %140
  %142 = load i32, ptr %101, align 4, !tbaa !451
  br label %146

143:                                              ; preds = %140
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %144 unwind label %157

144:                                              ; preds = %143
  %145 = load i32, ptr %101, align 4, !tbaa !451
  invoke void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
          to label %146 unwind label %157

146:                                              ; preds = %141, %144
  %147 = phi i32 [ %142, %141 ], [ %145, %144 ]
  %148 = getelementptr inbounds %struct.stbrp_rect, ptr %27, i64 %79, i32 2
  %149 = load i32, ptr %148, align 4, !tbaa !432
  %150 = add nsw i32 %149, %147
  %151 = load i32, ptr %66, align 4, !tbaa !293
  %152 = tail call i32 @llvm.smax.i32(i32 %151, i32 %150)
  store i32 %152, ptr %66, align 4, !tbaa !293
  br label %153

153:                                              ; preds = %78, %146
  %154 = phi ptr [ %68, %78 ], [ %27, %146 ]
  %155 = phi i32 [ %69, %78 ], [ %110, %146 ]
  %156 = add nuw nsw i32 %70, 1
  br label %67, !llvm.loop !552

157:                                              ; preds = %64, %144, %143, %132, %126, %118, %112, %105, %99, %92, %86, %59, %52, %46, %38, %16, %139
  %158 = cleanuppad within none []
  call void @"??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %3) #39 [ "funclet"(token %158) ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #39
  cleanupret from %158 unwind to caller
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @"?stbrp_pack_rects@@YAHPEAUstbrp_context@@PEAUstbrp_rect@@H@Z"(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #7 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = zext i32 %2 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %2, 4
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = and i64 %8, 4294967292
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %27, %13 ]
  %15 = phi i64 [ 0, %11 ], [ %28, %13 ]
  %16 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %14, i32 5
  %17 = trunc i64 %14 to i32
  store i32 %17, ptr %16, align 4, !tbaa !450
  %18 = or i64 %14, 1
  %19 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %18, i32 5
  %20 = trunc i64 %18 to i32
  store i32 %20, ptr %19, align 4, !tbaa !450
  %21 = or i64 %14, 2
  %22 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %21, i32 5
  %23 = trunc i64 %21 to i32
  store i32 %23, ptr %22, align 4, !tbaa !450
  %24 = or i64 %14, 3
  %25 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %24, i32 5
  %26 = trunc i64 %24 to i32
  store i32 %26, ptr %25, align 4, !tbaa !450
  %27 = add nuw nsw i64 %14, 4
  %28 = add i64 %15, 4
  %29 = icmp eq i64 %28, %12
  br i1 %29, label %30, label %13, !llvm.loop !553

30:                                               ; preds = %13, %7
  %31 = phi i64 [ 0, %7 ], [ %27, %13 ]
  %32 = icmp eq i64 %9, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %30, %33
  %34 = phi i64 [ %38, %33 ], [ %31, %30 ]
  %35 = phi i64 [ %39, %33 ], [ 0, %30 ]
  %36 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %34, i32 5
  %37 = trunc i64 %34 to i32
  store i32 %37, ptr %36, align 4, !tbaa !450
  %38 = add nuw nsw i64 %34, 1
  %39 = add i64 %35, 1
  %40 = icmp eq i64 %39, %9
  br i1 %40, label %41, label %33, !llvm.loop !554

41:                                               ; preds = %30, %33, %3
  %42 = sext i32 %2 to i64
  %43 = icmp ugt i32 %2, 1
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @qsort(ptr noundef %1, i64 noundef %42, i64 noundef 24, ptr noundef nonnull @"?rect_height_compare@@YAHPEBX0@Z")
  br label %45

45:                                               ; preds = %41, %44
  br i1 %6, label %46, label %252

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct.stbrp_context, ptr %0, i64 0, i32 2
  %48 = getelementptr inbounds %struct.stbrp_context, ptr %0, i64 0, i32 1
  %49 = getelementptr inbounds %struct.stbrp_context, ptr %0, i64 0, i32 6
  %50 = getelementptr inbounds %struct.stbrp_context, ptr %0, i64 0, i32 4
  %51 = getelementptr inbounds %struct.stbrp_context, ptr %0, i64 0, i32 7
  %52 = zext i32 %2 to i64
  br label %53

53:                                               ; preds = %46, %249
  %54 = phi i64 [ 0, %46 ], [ %250, %249 ]
  %55 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %54, i32 1
  %56 = load i32, ptr %55, align 4, !tbaa !430
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %54, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !432
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %58, %53
  %63 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %54, i32 3
  store <2 x i32> zeroinitializer, ptr %63, align 4, !tbaa !105
  br label %249

64:                                               ; preds = %58
  %65 = load i32, ptr %47, align 8, !tbaa !447, !noalias !555
  %66 = add i32 %56, -1
  %67 = add i32 %66, %65
  %68 = srem i32 %67, %65
  %69 = sub nsw i32 %67, %68
  %70 = srem i32 %69, %65
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %64
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CM@LEHAODMI@?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CF?$AA?5?$AAc?$AA?9?$AA?$DO?$AAa?$AAl?$AAi?$AAg?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 356), !noalias !555
  br label %73

73:                                               ; preds = %72, %64
  %74 = load i32, ptr %0, align 8, !tbaa !444, !noalias !555
  %75 = icmp sgt i32 %69, %74
  br i1 %75, label %247, label %76

76:                                               ; preds = %73
  %77 = load i32, ptr %48, align 4, !tbaa !445, !noalias !555
  %78 = icmp slt i32 %77, %60
  br i1 %78, label %247, label %79

79:                                               ; preds = %76
  %80 = load ptr, ptr %49, align 8, !tbaa !443, !noalias !555
  %81 = load i32, ptr %80, align 8, !tbaa !448, !noalias !555
  %82 = add nsw i32 %81, %69
  %83 = icmp sgt i32 %82, %74
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = load i32, ptr %50, align 8, !tbaa !441, !noalias !555
  br label %130

86:                                               ; preds = %79, %115
  %87 = phi i32 [ %121, %115 ], [ %81, %79 ]
  %88 = phi i32 [ %118, %115 ], [ 1073741824, %79 ]
  %89 = phi ptr [ %117, %115 ], [ null, %79 ]
  %90 = phi ptr [ %120, %115 ], [ %80, %79 ]
  %91 = phi ptr [ %119, %115 ], [ %49, %79 ]
  %92 = phi i32 [ %116, %115 ], [ 1073741824, %79 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39, !noalias !555
  %93 = call fastcc noundef i32 @"?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z"(ptr noundef nonnull %90, i32 noundef %87, i32 noundef %69, ptr noundef nonnull %4), !noalias !555
  %94 = load i32, ptr %50, align 8, !tbaa !441, !noalias !555
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %86
  %97 = icmp slt i32 %93, %92
  %98 = tail call i32 @llvm.smin.i32(i32 %93, i32 %92)
  %99 = select i1 %97, ptr %91, ptr %89
  br label %115

100:                                              ; preds = %86
  %101 = add nsw i32 %93, %60
  %102 = load i32, ptr %48, align 4, !tbaa !445, !noalias !555
  %103 = icmp sgt i32 %101, %102
  br i1 %103, label %115, label %104

104:                                              ; preds = %100
  %105 = icmp slt i32 %93, %92
  br i1 %105, label %106, label %108

106:                                              ; preds = %104
  %107 = load i32, ptr %4, align 4, !tbaa !105, !noalias !555
  br label %113

108:                                              ; preds = %104
  %109 = icmp eq i32 %93, %92
  %110 = load i32, ptr %4, align 4, !noalias !555
  %111 = icmp slt i32 %110, %88
  %112 = select i1 %109, i1 %111, i1 false
  br i1 %112, label %113, label %115

113:                                              ; preds = %108, %106
  %114 = phi i32 [ %107, %106 ], [ %110, %108 ]
  br label %115

115:                                              ; preds = %113, %108, %100, %96
  %116 = phi i32 [ %93, %113 ], [ %92, %108 ], [ %92, %100 ], [ %98, %96 ]
  %117 = phi ptr [ %91, %113 ], [ %89, %108 ], [ %89, %100 ], [ %99, %96 ]
  %118 = phi i32 [ %114, %113 ], [ %88, %108 ], [ %88, %100 ], [ %88, %96 ]
  %119 = getelementptr inbounds %struct.stbrp_node, ptr %90, i64 0, i32 2
  %120 = load ptr, ptr %119, align 8, !tbaa !435, !noalias !555
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39, !noalias !555
  %121 = load i32, ptr %120, align 8, !tbaa !448, !noalias !555
  %122 = add nsw i32 %121, %69
  %123 = load i32, ptr %0, align 8, !tbaa !444, !noalias !555
  %124 = icmp sgt i32 %122, %123
  br i1 %124, label %125, label %86, !llvm.loop !560

125:                                              ; preds = %115
  %126 = icmp eq ptr %117, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %125
  %128 = load ptr, ptr %117, align 8, !tbaa !117, !noalias !555
  %129 = load i32, ptr %128, align 8, !tbaa !448, !noalias !555
  br label %130

130:                                              ; preds = %127, %125, %84
  %131 = phi i32 [ %94, %127 ], [ %94, %125 ], [ %85, %84 ]
  %132 = phi i32 [ %118, %127 ], [ %118, %125 ], [ 1073741824, %84 ]
  %133 = phi ptr [ %117, %127 ], [ null, %125 ], [ null, %84 ]
  %134 = phi i32 [ %116, %127 ], [ %116, %125 ], [ 1073741824, %84 ]
  %135 = phi i32 [ %129, %127 ], [ 0, %125 ], [ 0, %84 ]
  %136 = icmp eq i32 %131, 1
  br i1 %136, label %137, label %199

137:                                              ; preds = %130
  %138 = load ptr, ptr %49, align 8, !tbaa !443, !noalias !555
  %139 = load i32, ptr %138, align 8, !tbaa !448, !noalias !555
  %140 = icmp slt i32 %139, %69
  br i1 %140, label %141, label %147

141:                                              ; preds = %137, %141
  %142 = phi ptr [ %144, %141 ], [ %138, %137 ]
  %143 = getelementptr inbounds %struct.stbrp_node, ptr %142, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8, !tbaa !435, !noalias !555
  %145 = load i32, ptr %144, align 8, !tbaa !448, !noalias !555
  %146 = icmp slt i32 %145, %69
  br i1 %146, label %141, label %147, !llvm.loop !561

147:                                              ; preds = %141, %137
  %148 = phi ptr [ %138, %137 ], [ %144, %141 ]
  br label %149

149:                                              ; preds = %147, %191
  %150 = phi i32 [ %195, %191 ], [ %132, %147 ]
  %151 = phi i32 [ %194, %191 ], [ %135, %147 ]
  %152 = phi ptr [ %193, %191 ], [ %133, %147 ]
  %153 = phi ptr [ %197, %191 ], [ %148, %147 ]
  %154 = phi ptr [ %164, %191 ], [ %138, %147 ]
  %155 = phi ptr [ %163, %191 ], [ %49, %147 ]
  %156 = phi i32 [ %192, %191 ], [ %134, %147 ]
  %157 = load i32, ptr %153, align 8, !tbaa !448, !noalias !555
  %158 = sub nsw i32 %157, %69
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #39, !noalias !555
  %159 = icmp sgt i32 %158, -1
  br i1 %159, label %161, label %160

160:                                              ; preds = %149
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BE@MNLKNDNL@?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 420), !noalias !555
  br label %161

161:                                              ; preds = %160, %149
  br label %162

162:                                              ; preds = %161, %162
  %163 = phi ptr [ %165, %162 ], [ %155, %161 ]
  %164 = phi ptr [ %166, %162 ], [ %154, %161 ]
  %165 = getelementptr inbounds %struct.stbrp_node, ptr %164, i64 0, i32 2
  %166 = load ptr, ptr %165, align 8, !tbaa !435, !noalias !555
  %167 = load i32, ptr %166, align 8, !tbaa !448, !noalias !555
  %168 = icmp sgt i32 %167, %158
  br i1 %168, label %169, label %162, !llvm.loop !562

169:                                              ; preds = %162
  %170 = load i32, ptr %164, align 8, !tbaa !448, !noalias !555
  %171 = icmp sgt i32 %170, %158
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FA@GPDJEJHP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO?$AA?5?$AAx?$AAp?$AAo?$AAs?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5@", ptr noundef nonnull @"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 426), !noalias !555
  br label %173

173:                                              ; preds = %172, %169
  %174 = call fastcc noundef i32 @"?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z"(ptr noundef nonnull %164, i32 noundef %158, i32 noundef %69, ptr noundef nonnull %5), !noalias !555
  %175 = add nsw i32 %174, %60
  %176 = load i32, ptr %48, align 4, !tbaa !445, !noalias !555
  %177 = icmp sgt i32 %175, %176
  %178 = icmp sgt i32 %174, %156
  %179 = select i1 %177, i1 true, i1 %178
  br i1 %179, label %191, label %180

180:                                              ; preds = %173
  %181 = icmp slt i32 %174, %156
  %182 = load i32, ptr %5, align 4, !tbaa !105, !noalias !555
  %183 = icmp slt i32 %182, %150
  %184 = select i1 %181, i1 true, i1 %183
  br i1 %184, label %189, label %185

185:                                              ; preds = %180
  %186 = icmp eq i32 %182, %150
  %187 = icmp slt i32 %158, %151
  %188 = select i1 %186, i1 %187, i1 false
  br i1 %188, label %189, label %191

189:                                              ; preds = %185, %180
  %190 = phi i32 [ %150, %185 ], [ %182, %180 ]
  br label %191

191:                                              ; preds = %189, %185, %173
  %192 = phi i32 [ %174, %189 ], [ %156, %185 ], [ %156, %173 ]
  %193 = phi ptr [ %163, %189 ], [ %152, %185 ], [ %152, %173 ]
  %194 = phi i32 [ %158, %189 ], [ %151, %185 ], [ %151, %173 ]
  %195 = phi i32 [ %190, %189 ], [ %150, %185 ], [ %150, %173 ]
  %196 = getelementptr inbounds %struct.stbrp_node, ptr %153, i64 0, i32 2
  %197 = load ptr, ptr %196, align 8, !tbaa !435, !noalias !555
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #39, !noalias !555
  %198 = icmp eq ptr %197, null
  br i1 %198, label %199, label %149, !llvm.loop !563

199:                                              ; preds = %191, %130
  %200 = phi i32 [ %134, %130 ], [ %192, %191 ]
  %201 = phi ptr [ %133, %130 ], [ %193, %191 ]
  %202 = phi i32 [ %135, %130 ], [ %194, %191 ]
  %203 = icmp eq ptr %201, null
  br i1 %203, label %247, label %204

204:                                              ; preds = %199
  %205 = add nsw i32 %200, %60
  %206 = load i32, ptr %48, align 4, !tbaa !445, !noalias !564
  %207 = icmp sgt i32 %205, %206
  br i1 %207, label %247, label %208

208:                                              ; preds = %204
  %209 = load ptr, ptr %51, align 8, !tbaa !442, !noalias !564
  %210 = icmp eq ptr %209, null
  br i1 %210, label %247, label %211

211:                                              ; preds = %208
  store i32 %202, ptr %209, align 8, !tbaa !448, !noalias !564
  %212 = getelementptr inbounds %struct.stbrp_node, ptr %209, i64 0, i32 1
  store i32 %205, ptr %212, align 4, !tbaa !449, !noalias !564
  %213 = getelementptr inbounds %struct.stbrp_node, ptr %209, i64 0, i32 2
  %214 = load ptr, ptr %213, align 8, !tbaa !435, !noalias !564
  store ptr %214, ptr %51, align 8, !tbaa !442, !noalias !564
  %215 = load ptr, ptr %201, align 8, !tbaa !117, !noalias !564
  %216 = load i32, ptr %215, align 8, !tbaa !448, !noalias !564
  %217 = icmp slt i32 %216, %202
  br i1 %217, label %218, label %221

218:                                              ; preds = %211
  %219 = getelementptr inbounds %struct.stbrp_node, ptr %215, i64 0, i32 2
  %220 = load ptr, ptr %219, align 8, !tbaa !435, !noalias !564
  br label %221

221:                                              ; preds = %218, %211
  %222 = phi ptr [ %219, %218 ], [ %201, %211 ]
  %223 = phi ptr [ %220, %218 ], [ %215, %211 ]
  store ptr %209, ptr %222, align 8, !tbaa !117, !noalias !564
  %224 = getelementptr inbounds %struct.stbrp_node, ptr %223, i64 0, i32 2
  %225 = load ptr, ptr %224, align 8, !tbaa !435, !noalias !564
  %226 = icmp eq ptr %225, null
  %227 = add nsw i32 %202, %56
  br i1 %226, label %239, label %228

228:                                              ; preds = %221, %234
  %229 = phi ptr [ %237, %234 ], [ %225, %221 ]
  %230 = phi ptr [ %236, %234 ], [ %224, %221 ]
  %231 = phi ptr [ %229, %234 ], [ %223, %221 ]
  %232 = load i32, ptr %229, align 8, !tbaa !448, !noalias !564
  %233 = icmp sgt i32 %232, %227
  br i1 %233, label %239, label %234

234:                                              ; preds = %228
  %235 = load ptr, ptr %51, align 8, !tbaa !442, !noalias !564
  store ptr %235, ptr %230, align 8, !tbaa !435, !noalias !564
  store ptr %231, ptr %51, align 8, !tbaa !442, !noalias !564
  %236 = getelementptr inbounds %struct.stbrp_node, ptr %229, i64 0, i32 2
  %237 = load ptr, ptr %236, align 8, !tbaa !435, !noalias !564
  %238 = icmp eq ptr %237, null
  br i1 %238, label %239, label %228, !llvm.loop !565

239:                                              ; preds = %234, %228, %221
  %240 = phi ptr [ %223, %221 ], [ %231, %228 ], [ %229, %234 ]
  store ptr %240, ptr %213, align 8, !tbaa !435, !noalias !564
  %241 = load i32, ptr %240, align 8, !tbaa !448, !noalias !564
  %242 = icmp slt i32 %241, %227
  br i1 %242, label %243, label %244

243:                                              ; preds = %239
  store i32 %227, ptr %240, align 8, !tbaa !448, !noalias !564
  br label %244

244:                                              ; preds = %243, %239
  %245 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %54, i32 3
  store i32 %202, ptr %245, align 4, !tbaa !459
  %246 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %54, i32 4
  store i32 %200, ptr %246, align 4, !tbaa !451
  br label %249

247:                                              ; preds = %199, %204, %208, %76, %73
  %248 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %54, i32 3
  store <2 x i32> <i32 2147483647, i32 2147483647>, ptr %248, align 4, !tbaa !105
  br label %249

249:                                              ; preds = %244, %247, %62
  %250 = add nuw nsw i64 %54, 1
  %251 = icmp eq i64 %250, %52
  br i1 %251, label %252, label %53, !llvm.loop !566

252:                                              ; preds = %249, %45
  br i1 %43, label %253, label %254

253:                                              ; preds = %252
  tail call void @qsort(ptr noundef %1, i64 noundef %42, i64 noundef 24, ptr noundef nonnull @"?rect_original_order@@YAHPEBX0@Z")
  br label %254

254:                                              ; preds = %252, %253
  br i1 %6, label %255, label %276

255:                                              ; preds = %254
  %256 = zext i32 %2 to i64
  br label %257

257:                                              ; preds = %255, %270
  %258 = phi i64 [ 0, %255 ], [ %274, %270 ]
  %259 = phi i32 [ 1, %255 ], [ %272, %270 ]
  %260 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %258, i32 3
  %261 = load i32, ptr %260, align 4, !tbaa !459
  %262 = icmp eq i32 %261, 2147483647
  br i1 %262, label %263, label %270

263:                                              ; preds = %257
  %264 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %258, i32 4
  %265 = load i32, ptr %264, align 4, !tbaa !451
  %266 = freeze i32 %265
  %267 = icmp ne i32 %266, 2147483647
  %268 = zext i1 %267 to i32
  %269 = select i1 %267, i32 %259, i32 0
  br label %270

270:                                              ; preds = %257, %263
  %271 = phi i32 [ %268, %263 ], [ 1, %257 ]
  %272 = phi i32 [ %269, %263 ], [ %259, %257 ]
  %273 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 %258, i32 5
  store i32 %271, ptr %273, align 4
  %274 = add nuw nsw i64 %258, 1
  %275 = icmp eq i64 %274, %256
  br i1 %275, label %276, label %257, !llvm.loop !567

276:                                              ; preds = %270, %254
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @"??1?$ImVector@Ustbrp_rect@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #18 comdat align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImVector.11, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !412
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3)
          to label %6 unwind label %7

6:                                                ; preds = %5, %1
  ret void

7:                                                ; preds = %5
  %8 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %8) ]
  unreachable
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ImFontAtlasBuildRender8bppRectFromString@@YAXPEAUImFontAtlas@@HHHHPEBDDE@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, i8 noundef %6, i8 noundef %7) local_unnamed_addr #7 {
  %9 = ptrtoint ptr %5 to i64
  %10 = icmp sgt i32 %1, -1
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = add nsw i32 %3, %1
  %13 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %14 = load i32, ptr %13, align 8, !tbaa !292
  %15 = icmp sgt i32 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11, %8
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2648)
  br label %17

17:                                               ; preds = %16, %11
  %18 = icmp sgt i32 %2, -1
  br i1 %18, label %19, label %24

19:                                               ; preds = %17
  %20 = add nsw i32 %4, %2
  %21 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %22 = load i32, ptr %21, align 4, !tbaa !293
  %23 = icmp sgt i32 %20, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %19, %17
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2649)
  br label %25

25:                                               ; preds = %24, %19
  %26 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %27 = icmp sgt i32 %4, 0
  br i1 %27, label %28, label %156

28:                                               ; preds = %25
  %29 = icmp sgt i32 %3, 0
  %30 = sext i32 %3 to i64
  br i1 %29, label %31, label %156

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %33 = load ptr, ptr %32, align 8, !tbaa !273
  %34 = sext i32 %1 to i64
  %35 = getelementptr inbounds i8, ptr %33, i64 %34
  %36 = load i32, ptr %26, align 8, !tbaa !292
  %37 = mul nsw i32 %36, %2
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, ptr %35, i64 %38
  %40 = zext i32 %3 to i64
  %41 = icmp ult i32 %3, 8
  %42 = icmp ult i32 %3, 32
  %43 = and i64 %40, 4294967264
  %44 = insertelement <16 x i8> poison, i8 %6, i64 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> poison, <16 x i32> zeroinitializer
  %46 = insertelement <16 x i8> poison, i8 %6, i64 0
  %47 = shufflevector <16 x i8> %46, <16 x i8> poison, <16 x i32> zeroinitializer
  %48 = insertelement <16 x i8> poison, i8 %7, i64 0
  %49 = shufflevector <16 x i8> %48, <16 x i8> poison, <16 x i32> zeroinitializer
  %50 = insertelement <16 x i8> poison, i8 %7, i64 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> poison, <16 x i32> zeroinitializer
  %52 = icmp eq i64 %43, %40
  %53 = and i64 %40, 24
  %54 = icmp eq i64 %53, 0
  %55 = and i64 %40, 4294967288
  %56 = insertelement <8 x i8> poison, i8 %6, i64 0
  %57 = shufflevector <8 x i8> %56, <8 x i8> poison, <8 x i32> zeroinitializer
  %58 = insertelement <8 x i8> poison, i8 %7, i64 0
  %59 = shufflevector <8 x i8> %58, <8 x i8> poison, <8 x i32> zeroinitializer
  %60 = icmp eq i64 %55, %40
  %61 = and i64 %40, 3
  %62 = icmp eq i64 %61, 0
  br label %63

63:                                               ; preds = %31, %148
  %64 = phi i64 [ 0, %31 ], [ %155, %148 ]
  %65 = phi i32 [ 0, %31 ], [ %149, %148 ]
  %66 = phi ptr [ %39, %31 ], [ %152, %148 ]
  %67 = phi ptr [ %5, %31 ], [ %153, %148 ]
  br i1 %41, label %103, label %68

68:                                               ; preds = %63
  %69 = mul i64 %64, %30
  %70 = add i64 %69, %9
  %71 = ptrtoint ptr %66 to i64
  %72 = sub i64 %71, %70
  %73 = icmp ult i64 %72, 32
  br i1 %73, label %103, label %74

74:                                               ; preds = %68
  br i1 %42, label %91, label %75

75:                                               ; preds = %74, %75
  %76 = phi i64 [ %87, %75 ], [ 0, %74 ]
  %77 = getelementptr inbounds i8, ptr %67, i64 %76
  %78 = load <16 x i8>, ptr %77, align 1, !tbaa !46
  %79 = getelementptr inbounds i8, ptr %77, i64 16
  %80 = load <16 x i8>, ptr %79, align 1, !tbaa !46
  %81 = icmp eq <16 x i8> %78, %45
  %82 = icmp eq <16 x i8> %80, %47
  %83 = select <16 x i1> %81, <16 x i8> %49, <16 x i8> zeroinitializer
  %84 = select <16 x i1> %82, <16 x i8> %51, <16 x i8> zeroinitializer
  %85 = getelementptr inbounds i8, ptr %66, i64 %76
  store <16 x i8> %83, ptr %85, align 1, !tbaa !46
  %86 = getelementptr inbounds i8, ptr %85, i64 16
  store <16 x i8> %84, ptr %86, align 1, !tbaa !46
  %87 = add nuw i64 %76, 32
  %88 = icmp eq i64 %87, %43
  br i1 %88, label %89, label %75, !llvm.loop !568

89:                                               ; preds = %75
  br i1 %52, label %148, label %90

90:                                               ; preds = %89
  br i1 %54, label %103, label %91

91:                                               ; preds = %74, %90
  %92 = phi i64 [ %43, %90 ], [ 0, %74 ]
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ %92, %91 ], [ %100, %93 ]
  %95 = getelementptr inbounds i8, ptr %67, i64 %94
  %96 = load <8 x i8>, ptr %95, align 1, !tbaa !46
  %97 = icmp eq <8 x i8> %96, %57
  %98 = select <8 x i1> %97, <8 x i8> %59, <8 x i8> zeroinitializer
  %99 = getelementptr inbounds i8, ptr %66, i64 %94
  store <8 x i8> %98, ptr %99, align 1, !tbaa !46
  %100 = add nuw i64 %94, 8
  %101 = icmp eq i64 %100, %55
  br i1 %101, label %102, label %93, !llvm.loop !569

102:                                              ; preds = %93
  br i1 %60, label %148, label %103

103:                                              ; preds = %68, %63, %90, %102
  %104 = phi i64 [ 0, %63 ], [ 0, %68 ], [ %43, %90 ], [ %55, %102 ]
  %105 = xor i64 %104, -1
  %106 = add nsw i64 %105, %40
  br i1 %62, label %118, label %107

107:                                              ; preds = %103, %107
  %108 = phi i64 [ %115, %107 ], [ %104, %103 ]
  %109 = phi i64 [ %116, %107 ], [ 0, %103 ]
  %110 = getelementptr inbounds i8, ptr %67, i64 %108
  %111 = load i8, ptr %110, align 1, !tbaa !46
  %112 = icmp eq i8 %111, %6
  %113 = select i1 %112, i8 %7, i8 0
  %114 = getelementptr inbounds i8, ptr %66, i64 %108
  store i8 %113, ptr %114, align 1, !tbaa !46
  %115 = add nuw nsw i64 %108, 1
  %116 = add i64 %109, 1
  %117 = icmp eq i64 %116, %61
  br i1 %117, label %118, label %107, !llvm.loop !570

118:                                              ; preds = %107, %103
  %119 = phi i64 [ %104, %103 ], [ %115, %107 ]
  %120 = icmp ult i64 %106, 3
  br i1 %120, label %148, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %146, %121 ], [ %119, %118 ]
  %123 = getelementptr inbounds i8, ptr %67, i64 %122
  %124 = load i8, ptr %123, align 1, !tbaa !46
  %125 = icmp eq i8 %124, %6
  %126 = select i1 %125, i8 %7, i8 0
  %127 = getelementptr inbounds i8, ptr %66, i64 %122
  store i8 %126, ptr %127, align 1, !tbaa !46
  %128 = add nuw nsw i64 %122, 1
  %129 = getelementptr inbounds i8, ptr %67, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !46
  %131 = icmp eq i8 %130, %6
  %132 = select i1 %131, i8 %7, i8 0
  %133 = getelementptr inbounds i8, ptr %66, i64 %128
  store i8 %132, ptr %133, align 1, !tbaa !46
  %134 = add nuw nsw i64 %122, 2
  %135 = getelementptr inbounds i8, ptr %67, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !46
  %137 = icmp eq i8 %136, %6
  %138 = select i1 %137, i8 %7, i8 0
  %139 = getelementptr inbounds i8, ptr %66, i64 %134
  store i8 %138, ptr %139, align 1, !tbaa !46
  %140 = add nuw nsw i64 %122, 3
  %141 = getelementptr inbounds i8, ptr %67, i64 %140
  %142 = load i8, ptr %141, align 1, !tbaa !46
  %143 = icmp eq i8 %142, %6
  %144 = select i1 %143, i8 %7, i8 0
  %145 = getelementptr inbounds i8, ptr %66, i64 %140
  store i8 %144, ptr %145, align 1, !tbaa !46
  %146 = add nuw nsw i64 %122, 4
  %147 = icmp eq i64 %146, %40
  br i1 %147, label %148, label %121, !llvm.loop !571

148:                                              ; preds = %118, %121, %102, %89
  %149 = add nuw nsw i32 %65, 1
  %150 = load i32, ptr %26, align 8, !tbaa !292
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, ptr %66, i64 %151
  %153 = getelementptr inbounds i8, ptr %67, i64 %30
  %154 = icmp eq i32 %149, %4
  %155 = add i64 %64, 1
  br i1 %154, label %156, label %63, !llvm.loop !572

156:                                              ; preds = %148, %28, %25
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?ImFontAtlasBuildRender32bppRectFromString@@YAXPEAUImFontAtlas@@HHHHPEBDDI@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, i8 noundef %6, i32 noundef %7) local_unnamed_addr #7 {
  %9 = icmp sgt i32 %1, -1
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = add nsw i32 %3, %1
  %12 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %13 = load i32, ptr %12, align 8, !tbaa !292
  %14 = icmp sgt i32 %11, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %10, %8
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2658)
  br label %16

16:                                               ; preds = %15, %10
  %17 = icmp sgt i32 %2, -1
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = add nsw i32 %4, %2
  %20 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %21 = load i32, ptr %20, align 4, !tbaa !293
  %22 = icmp sgt i32 %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %18, %16
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2659)
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %26 = icmp sgt i32 %4, 0
  br i1 %26, label %27, label %135

27:                                               ; preds = %24
  %28 = icmp sgt i32 %3, 0
  %29 = sext i32 %3 to i64
  br i1 %28, label %30, label %135

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !274
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds i32, ptr %32, i64 %33
  %35 = load i32, ptr %25, align 8, !tbaa !292
  %36 = mul nsw i32 %35, %2
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, ptr %34, i64 %37
  %39 = zext i32 %3 to i64
  %40 = shl nuw nsw i64 %39, 2
  %41 = icmp ult i32 %3, 8
  %42 = and i64 %39, 4294967288
  %43 = insertelement <4 x i8> poison, i8 %6, i64 0
  %44 = shufflevector <4 x i8> %43, <4 x i8> poison, <4 x i32> zeroinitializer
  %45 = insertelement <4 x i8> poison, i8 %6, i64 0
  %46 = shufflevector <4 x i8> %45, <4 x i8> poison, <4 x i32> zeroinitializer
  %47 = insertelement <4 x i32> poison, i32 %7, i64 0
  %48 = shufflevector <4 x i32> %47, <4 x i32> poison, <4 x i32> zeroinitializer
  %49 = insertelement <4 x i32> poison, i32 %7, i64 0
  %50 = shufflevector <4 x i32> %49, <4 x i32> poison, <4 x i32> zeroinitializer
  %51 = icmp eq i64 %42, %39
  %52 = and i64 %39, 3
  %53 = icmp eq i64 %52, 0
  br label %54

54:                                               ; preds = %30, %127
  %55 = phi i64 [ 0, %30 ], [ %134, %127 ]
  %56 = phi i32 [ 0, %30 ], [ %128, %127 ]
  %57 = phi ptr [ %38, %30 ], [ %131, %127 ]
  %58 = phi ptr [ %5, %30 ], [ %132, %127 ]
  br i1 %41, label %82, label %59

59:                                               ; preds = %54
  %60 = mul i64 %55, %29
  %61 = add i64 %60, %39
  %62 = getelementptr i8, ptr %5, i64 %61
  %63 = getelementptr i8, ptr %57, i64 %40
  %64 = icmp ult ptr %57, %62
  %65 = icmp ult ptr %58, %63
  %66 = and i1 %64, %65
  br i1 %66, label %82, label %67

67:                                               ; preds = %59, %67
  %68 = phi i64 [ %79, %67 ], [ 0, %59 ]
  %69 = getelementptr inbounds i8, ptr %58, i64 %68
  %70 = load <4 x i8>, ptr %69, align 1, !tbaa !46, !alias.scope !573
  %71 = getelementptr inbounds i8, ptr %69, i64 4
  %72 = load <4 x i8>, ptr %71, align 1, !tbaa !46, !alias.scope !573
  %73 = icmp eq <4 x i8> %70, %44
  %74 = icmp eq <4 x i8> %72, %46
  %75 = select <4 x i1> %73, <4 x i32> %48, <4 x i32> zeroinitializer
  %76 = select <4 x i1> %74, <4 x i32> %50, <4 x i32> zeroinitializer
  %77 = getelementptr inbounds i32, ptr %57, i64 %68
  store <4 x i32> %75, ptr %77, align 4, !tbaa !105, !alias.scope !576, !noalias !573
  %78 = getelementptr inbounds i32, ptr %77, i64 4
  store <4 x i32> %76, ptr %78, align 4, !tbaa !105, !alias.scope !576, !noalias !573
  %79 = add nuw i64 %68, 8
  %80 = icmp eq i64 %79, %42
  br i1 %80, label %81, label %67, !llvm.loop !578

81:                                               ; preds = %67
  br i1 %51, label %127, label %82

82:                                               ; preds = %59, %54, %81
  %83 = phi i64 [ 0, %59 ], [ 0, %54 ], [ %42, %81 ]
  %84 = xor i64 %83, -1
  %85 = add nsw i64 %84, %39
  br i1 %53, label %97, label %86

86:                                               ; preds = %82, %86
  %87 = phi i64 [ %94, %86 ], [ %83, %82 ]
  %88 = phi i64 [ %95, %86 ], [ 0, %82 ]
  %89 = getelementptr inbounds i8, ptr %58, i64 %87
  %90 = load i8, ptr %89, align 1, !tbaa !46
  %91 = icmp eq i8 %90, %6
  %92 = select i1 %91, i32 %7, i32 0
  %93 = getelementptr inbounds i32, ptr %57, i64 %87
  store i32 %92, ptr %93, align 4, !tbaa !105
  %94 = add nuw nsw i64 %87, 1
  %95 = add i64 %88, 1
  %96 = icmp eq i64 %95, %52
  br i1 %96, label %97, label %86, !llvm.loop !579

97:                                               ; preds = %86, %82
  %98 = phi i64 [ %83, %82 ], [ %94, %86 ]
  %99 = icmp ult i64 %85, 3
  br i1 %99, label %127, label %100

100:                                              ; preds = %97, %100
  %101 = phi i64 [ %125, %100 ], [ %98, %97 ]
  %102 = getelementptr inbounds i8, ptr %58, i64 %101
  %103 = load i8, ptr %102, align 1, !tbaa !46
  %104 = icmp eq i8 %103, %6
  %105 = select i1 %104, i32 %7, i32 0
  %106 = getelementptr inbounds i32, ptr %57, i64 %101
  store i32 %105, ptr %106, align 4, !tbaa !105
  %107 = add nuw nsw i64 %101, 1
  %108 = getelementptr inbounds i8, ptr %58, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !46
  %110 = icmp eq i8 %109, %6
  %111 = select i1 %110, i32 %7, i32 0
  %112 = getelementptr inbounds i32, ptr %57, i64 %107
  store i32 %111, ptr %112, align 4, !tbaa !105
  %113 = add nuw nsw i64 %101, 2
  %114 = getelementptr inbounds i8, ptr %58, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !46
  %116 = icmp eq i8 %115, %6
  %117 = select i1 %116, i32 %7, i32 0
  %118 = getelementptr inbounds i32, ptr %57, i64 %113
  store i32 %117, ptr %118, align 4, !tbaa !105
  %119 = add nuw nsw i64 %101, 3
  %120 = getelementptr inbounds i8, ptr %58, i64 %119
  %121 = load i8, ptr %120, align 1, !tbaa !46
  %122 = icmp eq i8 %121, %6
  %123 = select i1 %122, i32 %7, i32 0
  %124 = getelementptr inbounds i32, ptr %57, i64 %119
  store i32 %123, ptr %124, align 4, !tbaa !105
  %125 = add nuw nsw i64 %101, 4
  %126 = icmp eq i64 %125, %39
  br i1 %126, label %127, label %100, !llvm.loop !580

127:                                              ; preds = %97, %100, %81
  %128 = add nuw nsw i32 %56, 1
  %129 = load i32, ptr %25, align 8, !tbaa !292
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %57, i64 %130
  %132 = getelementptr inbounds i8, ptr %58, i64 %29
  %133 = icmp eq i32 %128, %4
  %134 = add i64 %55, 1
  br i1 %133, label %135, label %54, !llvm.loop !581

135:                                              ; preds = %127, %27, %24
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?ImFontAtlasBuildInit@@YAXPEAUImFontAtlas@@@Z"(ptr nocapture noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 20
  %3 = load i32, ptr %2, align 4, !tbaa !266
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %85

5:                                                ; preds = %1
  %6 = load i32, ptr %0, align 8, !tbaa !349
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %10 = load i32, ptr %9, align 8, !tbaa !287
  %11 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !286
  %13 = icmp eq i32 %10, %12
  br i1 %8, label %14, label %45

14:                                               ; preds = %5
  br i1 %13, label %15, label %39

15:                                               ; preds = %14
  %16 = add nsw i32 %10, 1
  %17 = icmp eq i32 %10, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = sdiv i32 %10, 2
  %20 = add nsw i32 %19, %10
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i32 [ %20, %18 ], [ 8, %15 ]
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 %16)
  %24 = icmp slt i32 %10, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 5
  %28 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %27)
  %29 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !271
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = load i32, ptr %9, align 8, !tbaa !287
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr nonnull align 8 %30, i64 %35, i1 false)
  %36 = load ptr, ptr %29, align 8, !tbaa !271
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %36)
  br label %37

37:                                               ; preds = %32, %25
  store ptr %28, ptr %29, align 8, !tbaa !271
  store i32 %23, ptr %11, align 4, !tbaa !286
  %38 = load i32, ptr %9, align 8, !tbaa !287
  br label %39

39:                                               ; preds = %14, %21, %37
  %40 = phi i32 [ %38, %37 ], [ %10, %21 ], [ %10, %14 ]
  %41 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !271
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %42, i64 %43
  store i16 245, ptr %44, align 8
  br label %76

45:                                               ; preds = %5
  br i1 %13, label %46, label %70

46:                                               ; preds = %45
  %47 = add nsw i32 %10, 1
  %48 = icmp eq i32 %10, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = sdiv i32 %10, 2
  %51 = add nsw i32 %50, %10
  br label %52

52:                                               ; preds = %49, %46
  %53 = phi i32 [ %51, %49 ], [ 8, %46 ]
  %54 = tail call i32 @llvm.smax.i32(i32 %53, i32 %47)
  %55 = icmp slt i32 %10, %54
  br i1 %55, label %56, label %70

56:                                               ; preds = %52
  %57 = sext i32 %54 to i64
  %58 = shl nsw i64 %57, 5
  %59 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %58)
  %60 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !271
  %62 = icmp eq ptr %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %56
  %64 = load i32, ptr %9, align 8, !tbaa !287
  %65 = sext i32 %64 to i64
  %66 = shl nsw i64 %65, 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %59, ptr nonnull align 8 %61, i64 %66, i1 false)
  %67 = load ptr, ptr %60, align 8, !tbaa !271
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %67)
  br label %68

68:                                               ; preds = %63, %56
  store ptr %59, ptr %60, align 8, !tbaa !271
  store i32 %54, ptr %11, align 4, !tbaa !286
  %69 = load i32, ptr %9, align 8, !tbaa !287
  br label %70

70:                                               ; preds = %45, %52, %68
  %71 = phi i32 [ %69, %68 ], [ %10, %52 ], [ %10, %45 ]
  %72 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !271
  %74 = sext i32 %71 to i64
  %75 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %73, i64 %74
  store i16 2, ptr %75, align 8
  br label %76

76:                                               ; preds = %70, %39
  %77 = phi ptr [ %75, %70 ], [ %44, %39 ]
  %78 = phi i16 [ 2, %70 ], [ 27, %39 ]
  %79 = getelementptr inbounds i8, ptr %77, i64 2
  store i16 %78, ptr %79, align 2
  %80 = getelementptr inbounds i8, ptr %77, i64 4
  store i16 -1, ptr %80, align 4
  %81 = getelementptr inbounds i8, ptr %77, i64 6
  store i16 -1, ptr %81, align 2
  %82 = getelementptr inbounds i8, ptr %77, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %82, i8 0, i64 24, i1 false)
  %83 = load i32, ptr %9, align 8, !tbaa !287
  %84 = add nsw i32 %83, 1
  store i32 %84, ptr %9, align 8, !tbaa !287
  store i32 %83, ptr %2, align 4, !tbaa !266
  br label %85

85:                                               ; preds = %76, %1
  %86 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 21
  %87 = load i32, ptr %86, align 8, !tbaa !265
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %132

89:                                               ; preds = %85
  %90 = load i32, ptr %0, align 8, !tbaa !349
  %91 = and i32 %90, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %132

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %95 = load i32, ptr %94, align 8, !tbaa !287
  %96 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 1
  %97 = load i32, ptr %96, align 4, !tbaa !286
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = add nsw i32 %95, 1
  %101 = icmp eq i32 %95, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = sdiv i32 %95, 2
  %104 = add nsw i32 %103, %95
  br label %105

105:                                              ; preds = %102, %99
  %106 = phi i32 [ %104, %102 ], [ 8, %99 ]
  %107 = tail call i32 @llvm.smax.i32(i32 %106, i32 %100)
  %108 = icmp slt i32 %95, %107
  br i1 %108, label %109, label %123

109:                                              ; preds = %105
  %110 = sext i32 %107 to i64
  %111 = shl nsw i64 %110, 5
  %112 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %111)
  %113 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %114 = load ptr, ptr %113, align 8, !tbaa !271
  %115 = icmp eq ptr %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %109
  %117 = load i32, ptr %94, align 8, !tbaa !287
  %118 = sext i32 %117 to i64
  %119 = shl nsw i64 %118, 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %112, ptr nonnull align 8 %114, i64 %119, i1 false)
  %120 = load ptr, ptr %113, align 8, !tbaa !271
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %120)
  br label %121

121:                                              ; preds = %116, %109
  store ptr %112, ptr %113, align 8, !tbaa !271
  store i32 %107, ptr %96, align 4, !tbaa !286
  %122 = load i32, ptr %94, align 8, !tbaa !287
  br label %123

123:                                              ; preds = %93, %105, %121
  %124 = phi i32 [ %122, %121 ], [ %95, %105 ], [ %95, %93 ]
  %125 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %126 = load ptr, ptr %125, align 8, !tbaa !271
  %127 = sext i32 %124 to i64
  %128 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %126, i64 %127
  store <4 x i16> <i16 65, i16 64, i16 -1, i16 -1>, ptr %128, align 8
  %129 = getelementptr inbounds i8, ptr %128, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %129, i8 0, i64 24, i1 false)
  %130 = load i32, ptr %94, align 8, !tbaa !287
  %131 = add nsw i32 %130, 1
  store i32 %131, ptr %94, align 8, !tbaa !287
  store i32 %130, ptr %86, align 8, !tbaa !265
  br label %132

132:                                              ; preds = %89, %123, %85
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?ImFontAtlasBuildFinish@@YAXPEAUImFontAtlas@@@Z"(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 8
  %3 = load ptr, ptr %2, align 8, !tbaa !273
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1HG@JLCPLJIF@?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAP?$AAi?$AAx?$AAe?$AAl?$AAs?$AAA?$AAl?$AAp?$AAh?$AAa?$AA8?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAa@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2782)
  br label %10

10:                                               ; preds = %9, %5, %1
  %11 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 20
  %12 = load i32, ptr %11, align 4, !tbaa !266
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BG@HMJJDGFN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2856)
  %15 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  br label %20

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %18 = load i32, ptr %17, align 8
  %19 = icmp sgt i32 %18, %12
  br i1 %19, label %22, label %20

20:                                               ; preds = %16, %14
  %21 = phi ptr [ %15, %14 ], [ %17, %16 ]
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi ptr [ %17, %16 ], [ %21, %20 ]
  %24 = getelementptr inbounds %struct.ImVector.3, ptr %23, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !271
  %26 = sext i32 %12 to i64
  %27 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %25, i64 %26
  %28 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %25, i64 %26, i32 2
  %29 = load i16, ptr %28, align 4, !tbaa !346
  %30 = icmp eq i16 %29, -1
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BM@DDBMCGAE@?$AAr?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2669)
  br label %32

32:                                               ; preds = %31, %22
  %33 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 10
  %34 = load i32, ptr %33, align 8, !tbaa !292
  %35 = load i32, ptr %0, align 8, !tbaa !349
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = load i16, ptr %27, align 8, !tbaa !549
  br i1 %37, label %39, label %7005

39:                                               ; preds = %32
  %40 = icmp eq i16 %38, 245
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %25, i64 %26, i32 1
  %43 = load i16, ptr %42, align 2, !tbaa !550
  %44 = icmp eq i16 %43, 27
  br i1 %44, label %47, label %45

45:                                               ; preds = %41, %39
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1MA@PDHEAINP@?$AAr?$AA?9?$AA?$DO?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAF?$AAO?$AAN?$AAT?$AA_?$AAA?$AAT?$AAL?$AAA?$AAS?$AA_?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT?$AA_?$AAT@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2675)
  %46 = load i32, ptr %33, align 8, !tbaa !292
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi i32 [ %46, %45 ], [ %34, %41 ]
  %49 = load i16, ptr %28, align 4, !tbaa !346
  %50 = zext i16 %49 to i32
  %51 = add nuw nsw i32 %50, 123
  %52 = load ptr, ptr %2, align 8, !tbaa !273
  %53 = icmp eq ptr %52, null
  %54 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %25, i64 %26, i32 3
  %55 = load i16, ptr %54, align 2, !tbaa !348
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %50, 122
  %58 = icmp sgt i32 %57, %48
  br i1 %53, label %2896, label %59

59:                                               ; preds = %47
  br i1 %58, label %60, label %61

60:                                               ; preds = %59
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2648)
  br label %61

61:                                               ; preds = %60, %59
  %62 = add nuw nsw i32 %56, 27
  %63 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %64 = load i32, ptr %63, align 4, !tbaa !293
  %65 = icmp sgt i32 %62, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2649)
  br label %67

67:                                               ; preds = %66, %61
  %68 = load ptr, ptr %2, align 8, !tbaa !273
  %69 = ptrtoint ptr %68 to i64
  %70 = zext i16 %49 to i64
  %71 = getelementptr inbounds i8, ptr %68, i64 %70
  %72 = load i32, ptr %33, align 8, !tbaa !292
  %73 = mul nsw i32 %72, %56
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %71, i64 %74
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %75, align 1, !tbaa !46
  %76 = getelementptr inbounds i8, ptr %75, i64 16
  store <16 x i8> zeroinitializer, ptr %76, align 1, !tbaa !46
  %77 = getelementptr inbounds i8, ptr %75, i64 32
  store <16 x i8> zeroinitializer, ptr %77, align 1, !tbaa !46
  %78 = getelementptr inbounds i8, ptr %75, i64 48
  store <16 x i8> zeroinitializer, ptr %78, align 1, !tbaa !46
  %79 = getelementptr inbounds i8, ptr %75, i64 64
  store <16 x i8> zeroinitializer, ptr %79, align 1, !tbaa !46
  %80 = getelementptr inbounds i8, ptr %75, i64 80
  store <16 x i8> zeroinitializer, ptr %80, align 1, !tbaa !46
  %81 = getelementptr inbounds i8, ptr %75, i64 96
  store <16 x i8> zeroinitializer, ptr %81, align 1, !tbaa !46
  %82 = getelementptr inbounds i8, ptr %75, i64 112
  store <8 x i8> zeroinitializer, ptr %82, align 1, !tbaa !46
  %83 = getelementptr inbounds i8, ptr %75, i64 120
  store i8 0, ptr %83, align 1, !tbaa !46
  %84 = getelementptr inbounds i8, ptr %75, i64 121
  store i8 0, ptr %84, align 1, !tbaa !46
  %85 = load i32, ptr %33, align 8, !tbaa !292
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, ptr %75, i64 %86
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %87, align 1, !tbaa !46
  %88 = getelementptr inbounds i8, ptr %87, i64 16
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %88, align 1, !tbaa !46
  %89 = getelementptr inbounds i8, ptr %87, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %89, align 1, !tbaa !46
  %90 = getelementptr inbounds i8, ptr %87, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %90, align 1, !tbaa !46
  %91 = getelementptr inbounds i8, ptr %87, i64 64
  store <16 x i8> zeroinitializer, ptr %91, align 1, !tbaa !46
  %92 = getelementptr inbounds i8, ptr %87, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %92, align 1, !tbaa !46
  %93 = getelementptr inbounds i8, ptr %87, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %93, align 1, !tbaa !46
  %94 = getelementptr inbounds i8, ptr %87, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %94, align 1, !tbaa !46
  %95 = getelementptr inbounds i8, ptr %87, i64 120
  store i8 -1, ptr %95, align 1, !tbaa !46
  %96 = getelementptr inbounds i8, ptr %87, i64 121
  store i8 0, ptr %96, align 1, !tbaa !46
  %97 = load i32, ptr %33, align 8, !tbaa !292
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, ptr %87, i64 %98
  store <16 x i8> zeroinitializer, ptr %99, align 1, !tbaa !46
  %100 = getelementptr inbounds i8, ptr %99, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %100, align 1, !tbaa !46
  %101 = getelementptr inbounds i8, ptr %99, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %101, align 1, !tbaa !46
  %102 = getelementptr inbounds i8, ptr %99, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %102, align 1, !tbaa !46
  %103 = getelementptr inbounds i8, ptr %99, i64 64
  store <16 x i8> zeroinitializer, ptr %103, align 1, !tbaa !46
  %104 = getelementptr inbounds i8, ptr %99, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %104, align 1, !tbaa !46
  %105 = getelementptr inbounds i8, ptr %99, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %105, align 1, !tbaa !46
  %106 = getelementptr inbounds i8, ptr %99, i64 112
  store <8 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %106, align 1, !tbaa !46
  %107 = getelementptr inbounds i8, ptr %99, i64 120
  store i8 -1, ptr %107, align 1, !tbaa !46
  %108 = getelementptr inbounds i8, ptr %99, i64 121
  store i8 0, ptr %108, align 1, !tbaa !46
  %109 = load i32, ptr %33, align 8, !tbaa !292
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, ptr %99, i64 %110
  store <16 x i8> zeroinitializer, ptr %111, align 1, !tbaa !46
  %112 = getelementptr inbounds i8, ptr %111, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %112, align 1, !tbaa !46
  %113 = getelementptr inbounds i8, ptr %111, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %113, align 1, !tbaa !46
  %114 = getelementptr inbounds i8, ptr %111, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %114, align 1, !tbaa !46
  %115 = getelementptr inbounds i8, ptr %111, i64 64
  store <16 x i8> zeroinitializer, ptr %115, align 1, !tbaa !46
  %116 = getelementptr inbounds i8, ptr %111, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %116, align 1, !tbaa !46
  %117 = getelementptr inbounds i8, ptr %111, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %117, align 1, !tbaa !46
  %118 = getelementptr inbounds i8, ptr %111, i64 112
  store <8 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1>, ptr %118, align 1, !tbaa !46
  %119 = getelementptr inbounds i8, ptr %111, i64 120
  store i8 0, ptr %119, align 1, !tbaa !46
  %120 = getelementptr inbounds i8, ptr %111, i64 121
  store i8 0, ptr %120, align 1, !tbaa !46
  %121 = load i32, ptr %33, align 8, !tbaa !292
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, ptr %111, i64 %122
  store <16 x i8> zeroinitializer, ptr %123, align 1, !tbaa !46
  %124 = getelementptr inbounds i8, ptr %123, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %124, align 1, !tbaa !46
  %125 = getelementptr inbounds i8, ptr %123, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %125, align 1, !tbaa !46
  %126 = getelementptr inbounds i8, ptr %123, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %126, align 1, !tbaa !46
  %127 = getelementptr inbounds i8, ptr %123, i64 64
  store <16 x i8> zeroinitializer, ptr %127, align 1, !tbaa !46
  %128 = getelementptr inbounds i8, ptr %123, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %128, align 1, !tbaa !46
  %129 = getelementptr inbounds i8, ptr %123, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %129, align 1, !tbaa !46
  %130 = getelementptr inbounds i8, ptr %123, i64 112
  store <8 x i8> <i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 0>, ptr %130, align 1, !tbaa !46
  %131 = getelementptr inbounds i8, ptr %123, i64 120
  store i8 0, ptr %131, align 1, !tbaa !46
  %132 = getelementptr inbounds i8, ptr %123, i64 121
  store i8 0, ptr %132, align 1, !tbaa !46
  %133 = load i32, ptr %33, align 8, !tbaa !292
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, ptr %123, i64 %134
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %135, align 1, !tbaa !46
  %136 = getelementptr inbounds i8, ptr %135, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %136, align 1, !tbaa !46
  %137 = getelementptr inbounds i8, ptr %135, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %137, align 1, !tbaa !46
  %138 = getelementptr inbounds i8, ptr %135, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %138, align 1, !tbaa !46
  %139 = getelementptr inbounds i8, ptr %135, i64 64
  store <16 x i8> zeroinitializer, ptr %139, align 1, !tbaa !46
  %140 = getelementptr inbounds i8, ptr %135, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %140, align 1, !tbaa !46
  %141 = getelementptr inbounds i8, ptr %135, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %141, align 1, !tbaa !46
  %142 = getelementptr inbounds i8, ptr %135, i64 112
  store <8 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %142, align 1, !tbaa !46
  %143 = getelementptr inbounds i8, ptr %135, i64 120
  store i8 0, ptr %143, align 1, !tbaa !46
  %144 = getelementptr inbounds i8, ptr %135, i64 121
  store i8 0, ptr %144, align 1, !tbaa !46
  %145 = load i32, ptr %33, align 8, !tbaa !292
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, ptr %135, i64 %146
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %147, align 1, !tbaa !46
  %148 = getelementptr inbounds i8, ptr %147, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %148, align 1, !tbaa !46
  %149 = getelementptr inbounds i8, ptr %147, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %149, align 1, !tbaa !46
  %150 = getelementptr inbounds i8, ptr %147, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %150, align 1, !tbaa !46
  %151 = getelementptr inbounds i8, ptr %147, i64 64
  store <16 x i8> zeroinitializer, ptr %151, align 1, !tbaa !46
  %152 = getelementptr inbounds i8, ptr %147, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %152, align 1, !tbaa !46
  %153 = getelementptr inbounds i8, ptr %147, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %153, align 1, !tbaa !46
  %154 = getelementptr inbounds i8, ptr %147, i64 112
  store <8 x i8> <i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %154, align 1, !tbaa !46
  %155 = getelementptr inbounds i8, ptr %147, i64 120
  store i8 0, ptr %155, align 1, !tbaa !46
  %156 = getelementptr inbounds i8, ptr %147, i64 121
  store i8 0, ptr %156, align 1, !tbaa !46
  %157 = load i32, ptr %33, align 8, !tbaa !292
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, ptr %147, i64 %158
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %159, align 1, !tbaa !46
  %160 = getelementptr inbounds i8, ptr %159, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %160, align 1, !tbaa !46
  %161 = getelementptr inbounds i8, ptr %159, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %161, align 1, !tbaa !46
  %162 = getelementptr inbounds i8, ptr %159, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %162, align 1, !tbaa !46
  %163 = getelementptr inbounds i8, ptr %159, i64 64
  store <16 x i8> zeroinitializer, ptr %163, align 1, !tbaa !46
  %164 = getelementptr inbounds i8, ptr %159, i64 80
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %164, align 1, !tbaa !46
  %165 = getelementptr inbounds i8, ptr %159, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %165, align 1, !tbaa !46
  %166 = getelementptr inbounds i8, ptr %159, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %166, align 1, !tbaa !46
  %167 = getelementptr inbounds i8, ptr %159, i64 120
  store i8 0, ptr %167, align 1, !tbaa !46
  %168 = getelementptr inbounds i8, ptr %159, i64 121
  store i8 0, ptr %168, align 1, !tbaa !46
  %169 = load i32, ptr %33, align 8, !tbaa !292
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, ptr %159, i64 %170
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %171, align 1, !tbaa !46
  %172 = getelementptr inbounds i8, ptr %171, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %172, align 1, !tbaa !46
  %173 = getelementptr inbounds i8, ptr %171, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %173, align 1, !tbaa !46
  %174 = getelementptr inbounds i8, ptr %171, i64 48
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %174, align 1, !tbaa !46
  %175 = getelementptr inbounds i8, ptr %171, i64 64
  store <16 x i8> zeroinitializer, ptr %175, align 1, !tbaa !46
  %176 = getelementptr inbounds i8, ptr %171, i64 80
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %176, align 1, !tbaa !46
  %177 = getelementptr inbounds i8, ptr %171, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %177, align 1, !tbaa !46
  %178 = getelementptr inbounds i8, ptr %171, i64 112
  store <8 x i8> <i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %178, align 1, !tbaa !46
  %179 = getelementptr inbounds i8, ptr %171, i64 120
  store i8 0, ptr %179, align 1, !tbaa !46
  %180 = getelementptr inbounds i8, ptr %171, i64 121
  store i8 0, ptr %180, align 1, !tbaa !46
  %181 = load i32, ptr %33, align 8, !tbaa !292
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, ptr %171, i64 %182
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %183, align 1, !tbaa !46
  %184 = getelementptr inbounds i8, ptr %183, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %184, align 1, !tbaa !46
  %185 = getelementptr inbounds i8, ptr %183, i64 32
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %185, align 1, !tbaa !46
  %186 = getelementptr inbounds i8, ptr %183, i64 48
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %186, align 1, !tbaa !46
  %187 = getelementptr inbounds i8, ptr %183, i64 64
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %187, align 1, !tbaa !46
  %188 = getelementptr inbounds i8, ptr %183, i64 80
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %188, align 1, !tbaa !46
  %189 = getelementptr inbounds i8, ptr %183, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %189, align 1, !tbaa !46
  %190 = getelementptr inbounds i8, ptr %183, i64 112
  store <8 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %190, align 1, !tbaa !46
  %191 = getelementptr inbounds i8, ptr %183, i64 120
  store i8 0, ptr %191, align 1, !tbaa !46
  %192 = getelementptr inbounds i8, ptr %183, i64 121
  store i8 0, ptr %192, align 1, !tbaa !46
  %193 = load i32, ptr %33, align 8, !tbaa !292
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8, ptr %183, i64 %194
  %196 = add i64 %69, %86
  %197 = add i64 %196, %98
  %198 = add i64 %197, %110
  %199 = add i64 %198, %122
  %200 = add i64 %199, %134
  %201 = add i64 %200, %146
  %202 = add i64 %201, %158
  %203 = add i64 %202, %170
  %204 = add i64 %203, %182
  %205 = add i64 %204, %194
  %206 = add i64 %205, %74
  %207 = add i64 %206, %70
  %208 = sub i64 %207, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1220)
  %209 = icmp ugt i64 %208, 15
  br i1 %209, label %210, label %218

210:                                              ; preds = %67
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %195, align 1, !tbaa !46
  %211 = getelementptr inbounds i8, ptr %195, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %211, align 1, !tbaa !46
  %212 = getelementptr inbounds i8, ptr %195, i64 32
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %212, align 1, !tbaa !46
  %213 = getelementptr inbounds i8, ptr %195, i64 48
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %213, align 1, !tbaa !46
  %214 = getelementptr inbounds i8, ptr %195, i64 64
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %214, align 1, !tbaa !46
  %215 = getelementptr inbounds i8, ptr %195, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0>, ptr %215, align 1, !tbaa !46
  %216 = getelementptr inbounds i8, ptr %195, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %216, align 1, !tbaa !46
  %217 = getelementptr inbounds i8, ptr %195, i64 112
  store <8 x i8> <i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 0>, ptr %217, align 1, !tbaa !46
  br label %218

218:                                              ; preds = %67, %210
  %219 = phi i64 [ 0, %67 ], [ 120, %210 ]
  br label %220

220:                                              ; preds = %220, %218
  %221 = phi i64 [ %228, %220 ], [ %219, %218 ]
  %222 = phi i64 [ %229, %220 ], [ 0, %218 ]
  %223 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %221
  %224 = load i8, ptr %223, align 1, !tbaa !46
  %225 = icmp eq i8 %224, 46
  %226 = sext i1 %225 to i8
  %227 = getelementptr inbounds i8, ptr %195, i64 %221
  store i8 %226, ptr %227, align 1, !tbaa !46
  %228 = add nuw nsw i64 %221, 1
  %229 = add i64 %222, 1
  %230 = icmp eq i64 %229, 2
  br i1 %230, label %231, label %220, !llvm.loop !582

231:                                              ; preds = %220
  br i1 %209, label %259, label %232

232:                                              ; preds = %231, %232
  %233 = phi i64 [ %257, %232 ], [ %228, %231 ]
  %234 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %233
  %235 = load i8, ptr %234, align 1, !tbaa !46
  %236 = icmp eq i8 %235, 46
  %237 = sext i1 %236 to i8
  %238 = getelementptr inbounds i8, ptr %195, i64 %233
  store i8 %237, ptr %238, align 1, !tbaa !46
  %239 = add nuw nsw i64 %233, 1
  %240 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %239
  %241 = load i8, ptr %240, align 1, !tbaa !46
  %242 = icmp eq i8 %241, 46
  %243 = sext i1 %242 to i8
  %244 = getelementptr inbounds i8, ptr %195, i64 %239
  store i8 %243, ptr %244, align 1, !tbaa !46
  %245 = add nuw nsw i64 %233, 2
  %246 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !46
  %248 = icmp eq i8 %247, 46
  %249 = sext i1 %248 to i8
  %250 = getelementptr inbounds i8, ptr %195, i64 %245
  store i8 %249, ptr %250, align 1, !tbaa !46
  %251 = add nuw nsw i64 %233, 3
  %252 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !46
  %254 = icmp eq i8 %253, 46
  %255 = sext i1 %254 to i8
  %256 = getelementptr inbounds i8, ptr %195, i64 %251
  store i8 %255, ptr %256, align 1, !tbaa !46
  %257 = add nuw nsw i64 %233, 4
  %258 = icmp eq i64 %257, 122
  br i1 %258, label %259, label %232, !llvm.loop !583

259:                                              ; preds = %232, %231
  %260 = load i32, ptr %33, align 8, !tbaa !292
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8, ptr %195, i64 %261
  %263 = add i64 %69, %86
  %264 = add i64 %263, %98
  %265 = add i64 %264, %110
  %266 = add i64 %265, %122
  %267 = add i64 %266, %134
  %268 = add i64 %267, %146
  %269 = add i64 %268, %158
  %270 = add i64 %269, %170
  %271 = add i64 %270, %182
  %272 = add i64 %271, %194
  %273 = add i64 %272, %261
  %274 = add i64 %273, %74
  %275 = add i64 %274, %70
  %276 = sub i64 %275, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1342)
  %277 = icmp ugt i64 %276, 15
  br i1 %277, label %278, label %286

278:                                              ; preds = %259
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %262, align 1, !tbaa !46
  %279 = getelementptr inbounds i8, ptr %262, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %279, align 1, !tbaa !46
  %280 = getelementptr inbounds i8, ptr %262, i64 32
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %280, align 1, !tbaa !46
  %281 = getelementptr inbounds i8, ptr %262, i64 48
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %281, align 1, !tbaa !46
  %282 = getelementptr inbounds i8, ptr %262, i64 64
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %282, align 1, !tbaa !46
  %283 = getelementptr inbounds i8, ptr %262, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0>, ptr %283, align 1, !tbaa !46
  %284 = getelementptr inbounds i8, ptr %262, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %284, align 1, !tbaa !46
  %285 = getelementptr inbounds i8, ptr %262, i64 112
  store <8 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1>, ptr %285, align 1, !tbaa !46
  br label %286

286:                                              ; preds = %259, %278
  %287 = phi i64 [ 0, %259 ], [ 120, %278 ]
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ %296, %288 ], [ %287, %286 ]
  %290 = phi i64 [ %297, %288 ], [ 0, %286 ]
  %291 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %289
  %292 = load i8, ptr %291, align 1, !tbaa !46
  %293 = icmp eq i8 %292, 46
  %294 = sext i1 %293 to i8
  %295 = getelementptr inbounds i8, ptr %262, i64 %289
  store i8 %294, ptr %295, align 1, !tbaa !46
  %296 = add nuw nsw i64 %289, 1
  %297 = add i64 %290, 1
  %298 = icmp eq i64 %297, 2
  br i1 %298, label %299, label %288, !llvm.loop !584

299:                                              ; preds = %288
  br i1 %277, label %327, label %300

300:                                              ; preds = %299, %300
  %301 = phi i64 [ %325, %300 ], [ %296, %299 ]
  %302 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !46
  %304 = icmp eq i8 %303, 46
  %305 = sext i1 %304 to i8
  %306 = getelementptr inbounds i8, ptr %262, i64 %301
  store i8 %305, ptr %306, align 1, !tbaa !46
  %307 = add nuw nsw i64 %301, 1
  %308 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %307
  %309 = load i8, ptr %308, align 1, !tbaa !46
  %310 = icmp eq i8 %309, 46
  %311 = sext i1 %310 to i8
  %312 = getelementptr inbounds i8, ptr %262, i64 %307
  store i8 %311, ptr %312, align 1, !tbaa !46
  %313 = add nuw nsw i64 %301, 2
  %314 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %313
  %315 = load i8, ptr %314, align 1, !tbaa !46
  %316 = icmp eq i8 %315, 46
  %317 = sext i1 %316 to i8
  %318 = getelementptr inbounds i8, ptr %262, i64 %313
  store i8 %317, ptr %318, align 1, !tbaa !46
  %319 = add nuw nsw i64 %301, 3
  %320 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %319
  %321 = load i8, ptr %320, align 1, !tbaa !46
  %322 = icmp eq i8 %321, 46
  %323 = sext i1 %322 to i8
  %324 = getelementptr inbounds i8, ptr %262, i64 %319
  store i8 %323, ptr %324, align 1, !tbaa !46
  %325 = add nuw nsw i64 %301, 4
  %326 = icmp eq i64 %325, 122
  br i1 %326, label %327, label %300, !llvm.loop !585

327:                                              ; preds = %300, %299
  %328 = load i32, ptr %33, align 8, !tbaa !292
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, ptr %262, i64 %329
  %331 = add i64 %69, %86
  %332 = add i64 %331, %98
  %333 = add i64 %332, %110
  %334 = add i64 %333, %122
  %335 = add i64 %334, %134
  %336 = add i64 %335, %146
  %337 = add i64 %336, %158
  %338 = add i64 %337, %170
  %339 = add i64 %338, %182
  %340 = add i64 %339, %194
  %341 = add i64 %340, %261
  %342 = add i64 %341, %329
  %343 = add i64 %342, %74
  %344 = add i64 %343, %70
  %345 = sub i64 %344, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1464)
  %346 = icmp ugt i64 %345, 15
  br i1 %346, label %347, label %355

347:                                              ; preds = %327
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %330, align 1, !tbaa !46
  %348 = getelementptr inbounds i8, ptr %330, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %348, align 1, !tbaa !46
  %349 = getelementptr inbounds i8, ptr %330, i64 32
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %349, align 1, !tbaa !46
  %350 = getelementptr inbounds i8, ptr %330, i64 48
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %350, align 1, !tbaa !46
  %351 = getelementptr inbounds i8, ptr %330, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 0, i8 0>, ptr %351, align 1, !tbaa !46
  %352 = getelementptr inbounds i8, ptr %330, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1>, ptr %352, align 1, !tbaa !46
  %353 = getelementptr inbounds i8, ptr %330, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %353, align 1, !tbaa !46
  %354 = getelementptr inbounds i8, ptr %330, i64 112
  store <8 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %354, align 1, !tbaa !46
  br label %355

355:                                              ; preds = %327, %347
  %356 = phi i64 [ 0, %327 ], [ 120, %347 ]
  br label %357

357:                                              ; preds = %357, %355
  %358 = phi i64 [ %365, %357 ], [ %356, %355 ]
  %359 = phi i64 [ %366, %357 ], [ 0, %355 ]
  %360 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %358
  %361 = load i8, ptr %360, align 1, !tbaa !46
  %362 = icmp eq i8 %361, 46
  %363 = sext i1 %362 to i8
  %364 = getelementptr inbounds i8, ptr %330, i64 %358
  store i8 %363, ptr %364, align 1, !tbaa !46
  %365 = add nuw nsw i64 %358, 1
  %366 = add i64 %359, 1
  %367 = icmp eq i64 %366, 2
  br i1 %367, label %368, label %357, !llvm.loop !586

368:                                              ; preds = %357
  br i1 %346, label %396, label %369

369:                                              ; preds = %368, %369
  %370 = phi i64 [ %394, %369 ], [ %365, %368 ]
  %371 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %370
  %372 = load i8, ptr %371, align 1, !tbaa !46
  %373 = icmp eq i8 %372, 46
  %374 = sext i1 %373 to i8
  %375 = getelementptr inbounds i8, ptr %330, i64 %370
  store i8 %374, ptr %375, align 1, !tbaa !46
  %376 = add nuw nsw i64 %370, 1
  %377 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !46
  %379 = icmp eq i8 %378, 46
  %380 = sext i1 %379 to i8
  %381 = getelementptr inbounds i8, ptr %330, i64 %376
  store i8 %380, ptr %381, align 1, !tbaa !46
  %382 = add nuw nsw i64 %370, 2
  %383 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %382
  %384 = load i8, ptr %383, align 1, !tbaa !46
  %385 = icmp eq i8 %384, 46
  %386 = sext i1 %385 to i8
  %387 = getelementptr inbounds i8, ptr %330, i64 %382
  store i8 %386, ptr %387, align 1, !tbaa !46
  %388 = add nuw nsw i64 %370, 3
  %389 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %388
  %390 = load i8, ptr %389, align 1, !tbaa !46
  %391 = icmp eq i8 %390, 46
  %392 = sext i1 %391 to i8
  %393 = getelementptr inbounds i8, ptr %330, i64 %388
  store i8 %392, ptr %393, align 1, !tbaa !46
  %394 = add nuw nsw i64 %370, 4
  %395 = icmp eq i64 %394, 122
  br i1 %395, label %396, label %369, !llvm.loop !587

396:                                              ; preds = %369, %368
  %397 = load i32, ptr %33, align 8, !tbaa !292
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds i8, ptr %330, i64 %398
  %400 = add i64 %69, %86
  %401 = add i64 %400, %98
  %402 = add i64 %401, %110
  %403 = add i64 %402, %122
  %404 = add i64 %403, %134
  %405 = add i64 %404, %146
  %406 = add i64 %405, %158
  %407 = add i64 %406, %170
  %408 = add i64 %407, %182
  %409 = add i64 %408, %194
  %410 = add i64 %409, %261
  %411 = add i64 %410, %329
  %412 = add i64 %411, %398
  %413 = add i64 %412, %74
  %414 = add i64 %413, %70
  %415 = sub i64 %414, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1586)
  %416 = icmp ugt i64 %415, 15
  br i1 %416, label %417, label %425

417:                                              ; preds = %396
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %399, align 1, !tbaa !46
  %418 = getelementptr inbounds i8, ptr %399, i64 16
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %418, align 1, !tbaa !46
  %419 = getelementptr inbounds i8, ptr %399, i64 32
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %419, align 1, !tbaa !46
  %420 = getelementptr inbounds i8, ptr %399, i64 48
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %420, align 1, !tbaa !46
  %421 = getelementptr inbounds i8, ptr %399, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %421, align 1, !tbaa !46
  %422 = getelementptr inbounds i8, ptr %399, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %422, align 1, !tbaa !46
  %423 = getelementptr inbounds i8, ptr %399, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %423, align 1, !tbaa !46
  %424 = getelementptr inbounds i8, ptr %399, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %424, align 1, !tbaa !46
  br label %425

425:                                              ; preds = %396, %417
  %426 = phi i64 [ 0, %396 ], [ 120, %417 ]
  br label %427

427:                                              ; preds = %427, %425
  %428 = phi i64 [ %435, %427 ], [ %426, %425 ]
  %429 = phi i64 [ %436, %427 ], [ 0, %425 ]
  %430 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %428
  %431 = load i8, ptr %430, align 1, !tbaa !46
  %432 = icmp eq i8 %431, 46
  %433 = sext i1 %432 to i8
  %434 = getelementptr inbounds i8, ptr %399, i64 %428
  store i8 %433, ptr %434, align 1, !tbaa !46
  %435 = add nuw nsw i64 %428, 1
  %436 = add i64 %429, 1
  %437 = icmp eq i64 %436, 2
  br i1 %437, label %438, label %427, !llvm.loop !588

438:                                              ; preds = %427
  br i1 %416, label %466, label %439

439:                                              ; preds = %438, %439
  %440 = phi i64 [ %464, %439 ], [ %435, %438 ]
  %441 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %440
  %442 = load i8, ptr %441, align 1, !tbaa !46
  %443 = icmp eq i8 %442, 46
  %444 = sext i1 %443 to i8
  %445 = getelementptr inbounds i8, ptr %399, i64 %440
  store i8 %444, ptr %445, align 1, !tbaa !46
  %446 = add nuw nsw i64 %440, 1
  %447 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %446
  %448 = load i8, ptr %447, align 1, !tbaa !46
  %449 = icmp eq i8 %448, 46
  %450 = sext i1 %449 to i8
  %451 = getelementptr inbounds i8, ptr %399, i64 %446
  store i8 %450, ptr %451, align 1, !tbaa !46
  %452 = add nuw nsw i64 %440, 2
  %453 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %452
  %454 = load i8, ptr %453, align 1, !tbaa !46
  %455 = icmp eq i8 %454, 46
  %456 = sext i1 %455 to i8
  %457 = getelementptr inbounds i8, ptr %399, i64 %452
  store i8 %456, ptr %457, align 1, !tbaa !46
  %458 = add nuw nsw i64 %440, 3
  %459 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %458
  %460 = load i8, ptr %459, align 1, !tbaa !46
  %461 = icmp eq i8 %460, 46
  %462 = sext i1 %461 to i8
  %463 = getelementptr inbounds i8, ptr %399, i64 %458
  store i8 %462, ptr %463, align 1, !tbaa !46
  %464 = add nuw nsw i64 %440, 4
  %465 = icmp eq i64 %464, 122
  br i1 %465, label %466, label %439, !llvm.loop !589

466:                                              ; preds = %439, %438
  %467 = load i32, ptr %33, align 8, !tbaa !292
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i8, ptr %399, i64 %468
  %470 = add i64 %69, %86
  %471 = add i64 %470, %98
  %472 = add i64 %471, %110
  %473 = add i64 %472, %122
  %474 = add i64 %473, %134
  %475 = add i64 %474, %146
  %476 = add i64 %475, %158
  %477 = add i64 %476, %170
  %478 = add i64 %477, %182
  %479 = add i64 %478, %194
  %480 = add i64 %479, %261
  %481 = add i64 %480, %329
  %482 = add i64 %481, %398
  %483 = add i64 %482, %468
  %484 = add i64 %483, %74
  %485 = add i64 %484, %70
  %486 = sub i64 %485, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1708)
  %487 = icmp ugt i64 %486, 15
  br i1 %487, label %488, label %496

488:                                              ; preds = %466
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %469, align 1, !tbaa !46
  %489 = getelementptr inbounds i8, ptr %469, i64 16
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %489, align 1, !tbaa !46
  %490 = getelementptr inbounds i8, ptr %469, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %490, align 1, !tbaa !46
  %491 = getelementptr inbounds i8, ptr %469, i64 48
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %491, align 1, !tbaa !46
  %492 = getelementptr inbounds i8, ptr %469, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %492, align 1, !tbaa !46
  %493 = getelementptr inbounds i8, ptr %469, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %493, align 1, !tbaa !46
  %494 = getelementptr inbounds i8, ptr %469, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %494, align 1, !tbaa !46
  %495 = getelementptr inbounds i8, ptr %469, i64 112
  store <8 x i8> zeroinitializer, ptr %495, align 1, !tbaa !46
  br label %496

496:                                              ; preds = %466, %488
  %497 = phi i64 [ 0, %466 ], [ 120, %488 ]
  br label %498

498:                                              ; preds = %498, %496
  %499 = phi i64 [ %506, %498 ], [ %497, %496 ]
  %500 = phi i64 [ %507, %498 ], [ 0, %496 ]
  %501 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %499
  %502 = load i8, ptr %501, align 1, !tbaa !46
  %503 = icmp eq i8 %502, 46
  %504 = sext i1 %503 to i8
  %505 = getelementptr inbounds i8, ptr %469, i64 %499
  store i8 %504, ptr %505, align 1, !tbaa !46
  %506 = add nuw nsw i64 %499, 1
  %507 = add i64 %500, 1
  %508 = icmp eq i64 %507, 2
  br i1 %508, label %509, label %498, !llvm.loop !590

509:                                              ; preds = %498
  br i1 %487, label %537, label %510

510:                                              ; preds = %509, %510
  %511 = phi i64 [ %535, %510 ], [ %506, %509 ]
  %512 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %511
  %513 = load i8, ptr %512, align 1, !tbaa !46
  %514 = icmp eq i8 %513, 46
  %515 = sext i1 %514 to i8
  %516 = getelementptr inbounds i8, ptr %469, i64 %511
  store i8 %515, ptr %516, align 1, !tbaa !46
  %517 = add nuw nsw i64 %511, 1
  %518 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %517
  %519 = load i8, ptr %518, align 1, !tbaa !46
  %520 = icmp eq i8 %519, 46
  %521 = sext i1 %520 to i8
  %522 = getelementptr inbounds i8, ptr %469, i64 %517
  store i8 %521, ptr %522, align 1, !tbaa !46
  %523 = add nuw nsw i64 %511, 2
  %524 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %523
  %525 = load i8, ptr %524, align 1, !tbaa !46
  %526 = icmp eq i8 %525, 46
  %527 = sext i1 %526 to i8
  %528 = getelementptr inbounds i8, ptr %469, i64 %523
  store i8 %527, ptr %528, align 1, !tbaa !46
  %529 = add nuw nsw i64 %511, 3
  %530 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %529
  %531 = load i8, ptr %530, align 1, !tbaa !46
  %532 = icmp eq i8 %531, 46
  %533 = sext i1 %532 to i8
  %534 = getelementptr inbounds i8, ptr %469, i64 %529
  store i8 %533, ptr %534, align 1, !tbaa !46
  %535 = add nuw nsw i64 %511, 4
  %536 = icmp eq i64 %535, 122
  br i1 %536, label %537, label %510, !llvm.loop !591

537:                                              ; preds = %510, %509
  %538 = load i32, ptr %33, align 8, !tbaa !292
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds i8, ptr %469, i64 %539
  %541 = add i64 %69, %86
  %542 = add i64 %541, %98
  %543 = add i64 %542, %110
  %544 = add i64 %543, %122
  %545 = add i64 %544, %134
  %546 = add i64 %545, %146
  %547 = add i64 %546, %158
  %548 = add i64 %547, %170
  %549 = add i64 %548, %182
  %550 = add i64 %549, %194
  %551 = add i64 %550, %261
  %552 = add i64 %551, %329
  %553 = add i64 %552, %398
  %554 = add i64 %553, %468
  %555 = add i64 %554, %539
  %556 = add i64 %555, %74
  %557 = add i64 %556, %70
  %558 = sub i64 %557, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1830)
  %559 = icmp ugt i64 %558, 15
  br i1 %559, label %560, label %568

560:                                              ; preds = %537
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %540, align 1, !tbaa !46
  %561 = getelementptr inbounds i8, ptr %540, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %561, align 1, !tbaa !46
  %562 = getelementptr inbounds i8, ptr %540, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %562, align 1, !tbaa !46
  %563 = getelementptr inbounds i8, ptr %540, i64 48
  store <16 x i8> zeroinitializer, ptr %563, align 1, !tbaa !46
  %564 = getelementptr inbounds i8, ptr %540, i64 64
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0>, ptr %564, align 1, !tbaa !46
  %565 = getelementptr inbounds i8, ptr %540, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %565, align 1, !tbaa !46
  %566 = getelementptr inbounds i8, ptr %540, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %566, align 1, !tbaa !46
  %567 = getelementptr inbounds i8, ptr %540, i64 112
  store <8 x i8> zeroinitializer, ptr %567, align 1, !tbaa !46
  br label %568

568:                                              ; preds = %537, %560
  %569 = phi i64 [ 0, %537 ], [ 120, %560 ]
  br label %570

570:                                              ; preds = %570, %568
  %571 = phi i64 [ %578, %570 ], [ %569, %568 ]
  %572 = phi i64 [ %579, %570 ], [ 0, %568 ]
  %573 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %571
  %574 = load i8, ptr %573, align 1, !tbaa !46
  %575 = icmp eq i8 %574, 46
  %576 = sext i1 %575 to i8
  %577 = getelementptr inbounds i8, ptr %540, i64 %571
  store i8 %576, ptr %577, align 1, !tbaa !46
  %578 = add nuw nsw i64 %571, 1
  %579 = add i64 %572, 1
  %580 = icmp eq i64 %579, 2
  br i1 %580, label %581, label %570, !llvm.loop !592

581:                                              ; preds = %570
  br i1 %559, label %609, label %582

582:                                              ; preds = %581, %582
  %583 = phi i64 [ %607, %582 ], [ %578, %581 ]
  %584 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %583
  %585 = load i8, ptr %584, align 1, !tbaa !46
  %586 = icmp eq i8 %585, 46
  %587 = sext i1 %586 to i8
  %588 = getelementptr inbounds i8, ptr %540, i64 %583
  store i8 %587, ptr %588, align 1, !tbaa !46
  %589 = add nuw nsw i64 %583, 1
  %590 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %589
  %591 = load i8, ptr %590, align 1, !tbaa !46
  %592 = icmp eq i8 %591, 46
  %593 = sext i1 %592 to i8
  %594 = getelementptr inbounds i8, ptr %540, i64 %589
  store i8 %593, ptr %594, align 1, !tbaa !46
  %595 = add nuw nsw i64 %583, 2
  %596 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %595
  %597 = load i8, ptr %596, align 1, !tbaa !46
  %598 = icmp eq i8 %597, 46
  %599 = sext i1 %598 to i8
  %600 = getelementptr inbounds i8, ptr %540, i64 %595
  store i8 %599, ptr %600, align 1, !tbaa !46
  %601 = add nuw nsw i64 %583, 3
  %602 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %601
  %603 = load i8, ptr %602, align 1, !tbaa !46
  %604 = icmp eq i8 %603, 46
  %605 = sext i1 %604 to i8
  %606 = getelementptr inbounds i8, ptr %540, i64 %601
  store i8 %605, ptr %606, align 1, !tbaa !46
  %607 = add nuw nsw i64 %583, 4
  %608 = icmp eq i64 %607, 122
  br i1 %608, label %609, label %582, !llvm.loop !593

609:                                              ; preds = %582, %581
  %610 = load i32, ptr %33, align 8, !tbaa !292
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds i8, ptr %540, i64 %611
  %613 = add i64 %69, %86
  %614 = add i64 %613, %98
  %615 = add i64 %614, %110
  %616 = add i64 %615, %122
  %617 = add i64 %616, %134
  %618 = add i64 %617, %146
  %619 = add i64 %618, %158
  %620 = add i64 %619, %170
  %621 = add i64 %620, %182
  %622 = add i64 %621, %194
  %623 = add i64 %622, %261
  %624 = add i64 %623, %329
  %625 = add i64 %624, %398
  %626 = add i64 %625, %468
  %627 = add i64 %626, %539
  %628 = add i64 %627, %611
  %629 = add i64 %628, %74
  %630 = add i64 %629, %70
  %631 = sub i64 %630, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1952)
  %632 = icmp ugt i64 %631, 15
  br i1 %632, label %633, label %641

633:                                              ; preds = %609
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %612, align 1, !tbaa !46
  %634 = getelementptr inbounds i8, ptr %612, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %634, align 1, !tbaa !46
  %635 = getelementptr inbounds i8, ptr %612, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %635, align 1, !tbaa !46
  %636 = getelementptr inbounds i8, ptr %612, i64 48
  store <16 x i8> zeroinitializer, ptr %636, align 1, !tbaa !46
  %637 = getelementptr inbounds i8, ptr %612, i64 64
  store <16 x i8> zeroinitializer, ptr %637, align 1, !tbaa !46
  %638 = getelementptr inbounds i8, ptr %612, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %638, align 1, !tbaa !46
  %639 = getelementptr inbounds i8, ptr %612, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %639, align 1, !tbaa !46
  %640 = getelementptr inbounds i8, ptr %612, i64 112
  store <8 x i8> zeroinitializer, ptr %640, align 1, !tbaa !46
  br label %641

641:                                              ; preds = %609, %633
  %642 = phi i64 [ 0, %609 ], [ 120, %633 ]
  br label %643

643:                                              ; preds = %643, %641
  %644 = phi i64 [ %651, %643 ], [ %642, %641 ]
  %645 = phi i64 [ %652, %643 ], [ 0, %641 ]
  %646 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %644
  %647 = load i8, ptr %646, align 1, !tbaa !46
  %648 = icmp eq i8 %647, 46
  %649 = sext i1 %648 to i8
  %650 = getelementptr inbounds i8, ptr %612, i64 %644
  store i8 %649, ptr %650, align 1, !tbaa !46
  %651 = add nuw nsw i64 %644, 1
  %652 = add i64 %645, 1
  %653 = icmp eq i64 %652, 2
  br i1 %653, label %654, label %643, !llvm.loop !594

654:                                              ; preds = %643
  br i1 %632, label %682, label %655

655:                                              ; preds = %654, %655
  %656 = phi i64 [ %680, %655 ], [ %651, %654 ]
  %657 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %656
  %658 = load i8, ptr %657, align 1, !tbaa !46
  %659 = icmp eq i8 %658, 46
  %660 = sext i1 %659 to i8
  %661 = getelementptr inbounds i8, ptr %612, i64 %656
  store i8 %660, ptr %661, align 1, !tbaa !46
  %662 = add nuw nsw i64 %656, 1
  %663 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %662
  %664 = load i8, ptr %663, align 1, !tbaa !46
  %665 = icmp eq i8 %664, 46
  %666 = sext i1 %665 to i8
  %667 = getelementptr inbounds i8, ptr %612, i64 %662
  store i8 %666, ptr %667, align 1, !tbaa !46
  %668 = add nuw nsw i64 %656, 2
  %669 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %668
  %670 = load i8, ptr %669, align 1, !tbaa !46
  %671 = icmp eq i8 %670, 46
  %672 = sext i1 %671 to i8
  %673 = getelementptr inbounds i8, ptr %612, i64 %668
  store i8 %672, ptr %673, align 1, !tbaa !46
  %674 = add nuw nsw i64 %656, 3
  %675 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %674
  %676 = load i8, ptr %675, align 1, !tbaa !46
  %677 = icmp eq i8 %676, 46
  %678 = sext i1 %677 to i8
  %679 = getelementptr inbounds i8, ptr %612, i64 %674
  store i8 %678, ptr %679, align 1, !tbaa !46
  %680 = add nuw nsw i64 %656, 4
  %681 = icmp eq i64 %680, 122
  br i1 %681, label %682, label %655, !llvm.loop !595

682:                                              ; preds = %655, %654
  %683 = load i32, ptr %33, align 8, !tbaa !292
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds i8, ptr %612, i64 %684
  %686 = add i64 %69, %86
  %687 = add i64 %686, %98
  %688 = add i64 %687, %110
  %689 = add i64 %688, %122
  %690 = add i64 %689, %134
  %691 = add i64 %690, %146
  %692 = add i64 %691, %158
  %693 = add i64 %692, %170
  %694 = add i64 %693, %182
  %695 = add i64 %694, %194
  %696 = add i64 %695, %261
  %697 = add i64 %696, %329
  %698 = add i64 %697, %398
  %699 = add i64 %698, %468
  %700 = add i64 %699, %539
  %701 = add i64 %700, %611
  %702 = add i64 %701, %684
  %703 = add i64 %702, %74
  %704 = add i64 %703, %70
  %705 = sub i64 %704, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2074)
  %706 = icmp ugt i64 %705, 15
  br i1 %706, label %707, label %715

707:                                              ; preds = %682
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %685, align 1, !tbaa !46
  %708 = getelementptr inbounds i8, ptr %685, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %708, align 1, !tbaa !46
  %709 = getelementptr inbounds i8, ptr %685, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %709, align 1, !tbaa !46
  %710 = getelementptr inbounds i8, ptr %685, i64 48
  store <16 x i8> zeroinitializer, ptr %710, align 1, !tbaa !46
  %711 = getelementptr inbounds i8, ptr %685, i64 64
  store <16 x i8> zeroinitializer, ptr %711, align 1, !tbaa !46
  %712 = getelementptr inbounds i8, ptr %685, i64 80
  store <16 x i8> zeroinitializer, ptr %712, align 1, !tbaa !46
  %713 = getelementptr inbounds i8, ptr %685, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %713, align 1, !tbaa !46
  %714 = getelementptr inbounds i8, ptr %685, i64 112
  store <8 x i8> zeroinitializer, ptr %714, align 1, !tbaa !46
  br label %715

715:                                              ; preds = %682, %707
  %716 = phi i64 [ 0, %682 ], [ 120, %707 ]
  br label %717

717:                                              ; preds = %717, %715
  %718 = phi i64 [ %725, %717 ], [ %716, %715 ]
  %719 = phi i64 [ %726, %717 ], [ 0, %715 ]
  %720 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %718
  %721 = load i8, ptr %720, align 1, !tbaa !46
  %722 = icmp eq i8 %721, 46
  %723 = sext i1 %722 to i8
  %724 = getelementptr inbounds i8, ptr %685, i64 %718
  store i8 %723, ptr %724, align 1, !tbaa !46
  %725 = add nuw nsw i64 %718, 1
  %726 = add i64 %719, 1
  %727 = icmp eq i64 %726, 2
  br i1 %727, label %728, label %717, !llvm.loop !596

728:                                              ; preds = %717
  br i1 %706, label %756, label %729

729:                                              ; preds = %728, %729
  %730 = phi i64 [ %754, %729 ], [ %725, %728 ]
  %731 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %730
  %732 = load i8, ptr %731, align 1, !tbaa !46
  %733 = icmp eq i8 %732, 46
  %734 = sext i1 %733 to i8
  %735 = getelementptr inbounds i8, ptr %685, i64 %730
  store i8 %734, ptr %735, align 1, !tbaa !46
  %736 = add nuw nsw i64 %730, 1
  %737 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %736
  %738 = load i8, ptr %737, align 1, !tbaa !46
  %739 = icmp eq i8 %738, 46
  %740 = sext i1 %739 to i8
  %741 = getelementptr inbounds i8, ptr %685, i64 %736
  store i8 %740, ptr %741, align 1, !tbaa !46
  %742 = add nuw nsw i64 %730, 2
  %743 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %742
  %744 = load i8, ptr %743, align 1, !tbaa !46
  %745 = icmp eq i8 %744, 46
  %746 = sext i1 %745 to i8
  %747 = getelementptr inbounds i8, ptr %685, i64 %742
  store i8 %746, ptr %747, align 1, !tbaa !46
  %748 = add nuw nsw i64 %730, 3
  %749 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %748
  %750 = load i8, ptr %749, align 1, !tbaa !46
  %751 = icmp eq i8 %750, 46
  %752 = sext i1 %751 to i8
  %753 = getelementptr inbounds i8, ptr %685, i64 %748
  store i8 %752, ptr %753, align 1, !tbaa !46
  %754 = add nuw nsw i64 %730, 4
  %755 = icmp eq i64 %754, 122
  br i1 %755, label %756, label %729, !llvm.loop !597

756:                                              ; preds = %729, %728
  %757 = load i32, ptr %33, align 8, !tbaa !292
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds i8, ptr %685, i64 %758
  %760 = add i64 %69, %86
  %761 = add i64 %760, %98
  %762 = add i64 %761, %110
  %763 = add i64 %762, %122
  %764 = add i64 %763, %134
  %765 = add i64 %764, %146
  %766 = add i64 %765, %158
  %767 = add i64 %766, %170
  %768 = add i64 %767, %182
  %769 = add i64 %768, %194
  %770 = add i64 %769, %261
  %771 = add i64 %770, %329
  %772 = add i64 %771, %398
  %773 = add i64 %772, %468
  %774 = add i64 %773, %539
  %775 = add i64 %774, %611
  %776 = add i64 %775, %684
  %777 = add i64 %776, %758
  %778 = add i64 %777, %74
  %779 = add i64 %778, %70
  %780 = sub i64 %779, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2196)
  %781 = icmp ugt i64 %780, 15
  br i1 %781, label %782, label %790

782:                                              ; preds = %756
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %759, align 1, !tbaa !46
  %783 = getelementptr inbounds i8, ptr %759, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %783, align 1, !tbaa !46
  %784 = getelementptr inbounds i8, ptr %759, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %784, align 1, !tbaa !46
  %785 = getelementptr inbounds i8, ptr %759, i64 48
  store <16 x i8> zeroinitializer, ptr %785, align 1, !tbaa !46
  %786 = getelementptr inbounds i8, ptr %759, i64 64
  store <16 x i8> zeroinitializer, ptr %786, align 1, !tbaa !46
  %787 = getelementptr inbounds i8, ptr %759, i64 80
  store <16 x i8> zeroinitializer, ptr %787, align 1, !tbaa !46
  %788 = getelementptr inbounds i8, ptr %759, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %788, align 1, !tbaa !46
  %789 = getelementptr inbounds i8, ptr %759, i64 112
  store <8 x i8> zeroinitializer, ptr %789, align 1, !tbaa !46
  br label %790

790:                                              ; preds = %756, %782
  %791 = phi i64 [ 0, %756 ], [ 120, %782 ]
  br label %792

792:                                              ; preds = %792, %790
  %793 = phi i64 [ %800, %792 ], [ %791, %790 ]
  %794 = phi i64 [ %801, %792 ], [ 0, %790 ]
  %795 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %793
  %796 = load i8, ptr %795, align 1, !tbaa !46
  %797 = icmp eq i8 %796, 46
  %798 = sext i1 %797 to i8
  %799 = getelementptr inbounds i8, ptr %759, i64 %793
  store i8 %798, ptr %799, align 1, !tbaa !46
  %800 = add nuw nsw i64 %793, 1
  %801 = add i64 %794, 1
  %802 = icmp eq i64 %801, 2
  br i1 %802, label %803, label %792, !llvm.loop !598

803:                                              ; preds = %792
  br i1 %781, label %831, label %804

804:                                              ; preds = %803, %804
  %805 = phi i64 [ %829, %804 ], [ %800, %803 ]
  %806 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %805
  %807 = load i8, ptr %806, align 1, !tbaa !46
  %808 = icmp eq i8 %807, 46
  %809 = sext i1 %808 to i8
  %810 = getelementptr inbounds i8, ptr %759, i64 %805
  store i8 %809, ptr %810, align 1, !tbaa !46
  %811 = add nuw nsw i64 %805, 1
  %812 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %811
  %813 = load i8, ptr %812, align 1, !tbaa !46
  %814 = icmp eq i8 %813, 46
  %815 = sext i1 %814 to i8
  %816 = getelementptr inbounds i8, ptr %759, i64 %811
  store i8 %815, ptr %816, align 1, !tbaa !46
  %817 = add nuw nsw i64 %805, 2
  %818 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %817
  %819 = load i8, ptr %818, align 1, !tbaa !46
  %820 = icmp eq i8 %819, 46
  %821 = sext i1 %820 to i8
  %822 = getelementptr inbounds i8, ptr %759, i64 %817
  store i8 %821, ptr %822, align 1, !tbaa !46
  %823 = add nuw nsw i64 %805, 3
  %824 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %823
  %825 = load i8, ptr %824, align 1, !tbaa !46
  %826 = icmp eq i8 %825, 46
  %827 = sext i1 %826 to i8
  %828 = getelementptr inbounds i8, ptr %759, i64 %823
  store i8 %827, ptr %828, align 1, !tbaa !46
  %829 = add nuw nsw i64 %805, 4
  %830 = icmp eq i64 %829, 122
  br i1 %830, label %831, label %804, !llvm.loop !599

831:                                              ; preds = %804, %803
  %832 = load i32, ptr %33, align 8, !tbaa !292
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds i8, ptr %759, i64 %833
  %835 = add i64 %69, %86
  %836 = add i64 %835, %98
  %837 = add i64 %836, %110
  %838 = add i64 %837, %122
  %839 = add i64 %838, %134
  %840 = add i64 %839, %146
  %841 = add i64 %840, %158
  %842 = add i64 %841, %170
  %843 = add i64 %842, %182
  %844 = add i64 %843, %194
  %845 = add i64 %844, %261
  %846 = add i64 %845, %329
  %847 = add i64 %846, %398
  %848 = add i64 %847, %468
  %849 = add i64 %848, %539
  %850 = add i64 %849, %611
  %851 = add i64 %850, %684
  %852 = add i64 %851, %758
  %853 = add i64 %852, %833
  %854 = add i64 %853, %74
  %855 = add i64 %854, %70
  %856 = sub i64 %855, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2318)
  %857 = icmp ugt i64 %856, 15
  br i1 %857, label %858, label %866

858:                                              ; preds = %831
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %834, align 1, !tbaa !46
  %859 = getelementptr inbounds i8, ptr %834, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %859, align 1, !tbaa !46
  %860 = getelementptr inbounds i8, ptr %834, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %860, align 1, !tbaa !46
  %861 = getelementptr inbounds i8, ptr %834, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %861, align 1, !tbaa !46
  %862 = getelementptr inbounds i8, ptr %834, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %862, align 1, !tbaa !46
  %863 = getelementptr inbounds i8, ptr %834, i64 80
  store <16 x i8> zeroinitializer, ptr %863, align 1, !tbaa !46
  %864 = getelementptr inbounds i8, ptr %834, i64 96
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %864, align 1, !tbaa !46
  %865 = getelementptr inbounds i8, ptr %834, i64 112
  store <8 x i8> zeroinitializer, ptr %865, align 1, !tbaa !46
  br label %866

866:                                              ; preds = %831, %858
  %867 = phi i64 [ 0, %831 ], [ 120, %858 ]
  br label %868

868:                                              ; preds = %868, %866
  %869 = phi i64 [ %876, %868 ], [ %867, %866 ]
  %870 = phi i64 [ %877, %868 ], [ 0, %866 ]
  %871 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %869
  %872 = load i8, ptr %871, align 1, !tbaa !46
  %873 = icmp eq i8 %872, 46
  %874 = sext i1 %873 to i8
  %875 = getelementptr inbounds i8, ptr %834, i64 %869
  store i8 %874, ptr %875, align 1, !tbaa !46
  %876 = add nuw nsw i64 %869, 1
  %877 = add i64 %870, 1
  %878 = icmp eq i64 %877, 2
  br i1 %878, label %879, label %868, !llvm.loop !600

879:                                              ; preds = %868
  br i1 %857, label %907, label %880

880:                                              ; preds = %879, %880
  %881 = phi i64 [ %905, %880 ], [ %876, %879 ]
  %882 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %881
  %883 = load i8, ptr %882, align 1, !tbaa !46
  %884 = icmp eq i8 %883, 46
  %885 = sext i1 %884 to i8
  %886 = getelementptr inbounds i8, ptr %834, i64 %881
  store i8 %885, ptr %886, align 1, !tbaa !46
  %887 = add nuw nsw i64 %881, 1
  %888 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %887
  %889 = load i8, ptr %888, align 1, !tbaa !46
  %890 = icmp eq i8 %889, 46
  %891 = sext i1 %890 to i8
  %892 = getelementptr inbounds i8, ptr %834, i64 %887
  store i8 %891, ptr %892, align 1, !tbaa !46
  %893 = add nuw nsw i64 %881, 2
  %894 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %893
  %895 = load i8, ptr %894, align 1, !tbaa !46
  %896 = icmp eq i8 %895, 46
  %897 = sext i1 %896 to i8
  %898 = getelementptr inbounds i8, ptr %834, i64 %893
  store i8 %897, ptr %898, align 1, !tbaa !46
  %899 = add nuw nsw i64 %881, 3
  %900 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %899
  %901 = load i8, ptr %900, align 1, !tbaa !46
  %902 = icmp eq i8 %901, 46
  %903 = sext i1 %902 to i8
  %904 = getelementptr inbounds i8, ptr %834, i64 %899
  store i8 %903, ptr %904, align 1, !tbaa !46
  %905 = add nuw nsw i64 %881, 4
  %906 = icmp eq i64 %905, 122
  br i1 %906, label %907, label %880, !llvm.loop !601

907:                                              ; preds = %880, %879
  %908 = load i32, ptr %33, align 8, !tbaa !292
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds i8, ptr %834, i64 %909
  %911 = add i64 %69, %86
  %912 = add i64 %911, %98
  %913 = add i64 %912, %110
  %914 = add i64 %913, %122
  %915 = add i64 %914, %134
  %916 = add i64 %915, %146
  %917 = add i64 %916, %158
  %918 = add i64 %917, %170
  %919 = add i64 %918, %182
  %920 = add i64 %919, %194
  %921 = add i64 %920, %261
  %922 = add i64 %921, %329
  %923 = add i64 %922, %398
  %924 = add i64 %923, %468
  %925 = add i64 %924, %539
  %926 = add i64 %925, %611
  %927 = add i64 %926, %684
  %928 = add i64 %927, %758
  %929 = add i64 %928, %833
  %930 = add i64 %929, %909
  %931 = add i64 %930, %74
  %932 = add i64 %931, %70
  %933 = sub i64 %932, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2440)
  %934 = icmp ugt i64 %933, 15
  br i1 %934, label %935, label %943

935:                                              ; preds = %907
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %910, align 1, !tbaa !46
  %936 = getelementptr inbounds i8, ptr %910, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %936, align 1, !tbaa !46
  %937 = getelementptr inbounds i8, ptr %910, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %937, align 1, !tbaa !46
  %938 = getelementptr inbounds i8, ptr %910, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %938, align 1, !tbaa !46
  %939 = getelementptr inbounds i8, ptr %910, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %939, align 1, !tbaa !46
  %940 = getelementptr inbounds i8, ptr %910, i64 80
  store <16 x i8> zeroinitializer, ptr %940, align 1, !tbaa !46
  %941 = getelementptr inbounds i8, ptr %910, i64 96
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %941, align 1, !tbaa !46
  %942 = getelementptr inbounds i8, ptr %910, i64 112
  store <8 x i8> zeroinitializer, ptr %942, align 1, !tbaa !46
  br label %943

943:                                              ; preds = %907, %935
  %944 = phi i64 [ 0, %907 ], [ 120, %935 ]
  br label %945

945:                                              ; preds = %945, %943
  %946 = phi i64 [ %953, %945 ], [ %944, %943 ]
  %947 = phi i64 [ %954, %945 ], [ 0, %943 ]
  %948 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %946
  %949 = load i8, ptr %948, align 1, !tbaa !46
  %950 = icmp eq i8 %949, 46
  %951 = sext i1 %950 to i8
  %952 = getelementptr inbounds i8, ptr %910, i64 %946
  store i8 %951, ptr %952, align 1, !tbaa !46
  %953 = add nuw nsw i64 %946, 1
  %954 = add i64 %947, 1
  %955 = icmp eq i64 %954, 2
  br i1 %955, label %956, label %945, !llvm.loop !602

956:                                              ; preds = %945
  br i1 %934, label %984, label %957

957:                                              ; preds = %956, %957
  %958 = phi i64 [ %982, %957 ], [ %953, %956 ]
  %959 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %958
  %960 = load i8, ptr %959, align 1, !tbaa !46
  %961 = icmp eq i8 %960, 46
  %962 = sext i1 %961 to i8
  %963 = getelementptr inbounds i8, ptr %910, i64 %958
  store i8 %962, ptr %963, align 1, !tbaa !46
  %964 = add nuw nsw i64 %958, 1
  %965 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %964
  %966 = load i8, ptr %965, align 1, !tbaa !46
  %967 = icmp eq i8 %966, 46
  %968 = sext i1 %967 to i8
  %969 = getelementptr inbounds i8, ptr %910, i64 %964
  store i8 %968, ptr %969, align 1, !tbaa !46
  %970 = add nuw nsw i64 %958, 2
  %971 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %970
  %972 = load i8, ptr %971, align 1, !tbaa !46
  %973 = icmp eq i8 %972, 46
  %974 = sext i1 %973 to i8
  %975 = getelementptr inbounds i8, ptr %910, i64 %970
  store i8 %974, ptr %975, align 1, !tbaa !46
  %976 = add nuw nsw i64 %958, 3
  %977 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %976
  %978 = load i8, ptr %977, align 1, !tbaa !46
  %979 = icmp eq i8 %978, 46
  %980 = sext i1 %979 to i8
  %981 = getelementptr inbounds i8, ptr %910, i64 %976
  store i8 %980, ptr %981, align 1, !tbaa !46
  %982 = add nuw nsw i64 %958, 4
  %983 = icmp eq i64 %982, 122
  br i1 %983, label %984, label %957, !llvm.loop !603

984:                                              ; preds = %957, %956
  %985 = load i32, ptr %33, align 8, !tbaa !292
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds i8, ptr %910, i64 %986
  %988 = add i64 %69, %86
  %989 = add i64 %988, %98
  %990 = add i64 %989, %110
  %991 = add i64 %990, %122
  %992 = add i64 %991, %134
  %993 = add i64 %992, %146
  %994 = add i64 %993, %158
  %995 = add i64 %994, %170
  %996 = add i64 %995, %182
  %997 = add i64 %996, %194
  %998 = add i64 %997, %261
  %999 = add i64 %998, %329
  %1000 = add i64 %999, %398
  %1001 = add i64 %1000, %468
  %1002 = add i64 %1001, %539
  %1003 = add i64 %1002, %611
  %1004 = add i64 %1003, %684
  %1005 = add i64 %1004, %758
  %1006 = add i64 %1005, %833
  %1007 = add i64 %1006, %909
  %1008 = add i64 %1007, %986
  %1009 = add i64 %1008, %74
  %1010 = add i64 %1009, %70
  %1011 = sub i64 %1010, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2562)
  %1012 = icmp ugt i64 %1011, 15
  br i1 %1012, label %1013, label %1021

1013:                                             ; preds = %984
  store <16 x i8> zeroinitializer, ptr %987, align 1, !tbaa !46
  %1014 = getelementptr inbounds i8, ptr %987, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1014, align 1, !tbaa !46
  %1015 = getelementptr inbounds i8, ptr %987, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1015, align 1, !tbaa !46
  %1016 = getelementptr inbounds i8, ptr %987, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1016, align 1, !tbaa !46
  %1017 = getelementptr inbounds i8, ptr %987, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1017, align 1, !tbaa !46
  %1018 = getelementptr inbounds i8, ptr %987, i64 80
  store <16 x i8> zeroinitializer, ptr %1018, align 1, !tbaa !46
  %1019 = getelementptr inbounds i8, ptr %987, i64 96
  store <16 x i8> zeroinitializer, ptr %1019, align 1, !tbaa !46
  %1020 = getelementptr inbounds i8, ptr %987, i64 112
  store <8 x i8> zeroinitializer, ptr %1020, align 1, !tbaa !46
  br label %1021

1021:                                             ; preds = %984, %1013
  %1022 = phi i64 [ 0, %984 ], [ 120, %1013 ]
  br label %1023

1023:                                             ; preds = %1023, %1021
  %1024 = phi i64 [ %1031, %1023 ], [ %1022, %1021 ]
  %1025 = phi i64 [ %1032, %1023 ], [ 0, %1021 ]
  %1026 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %1024
  %1027 = load i8, ptr %1026, align 1, !tbaa !46
  %1028 = icmp eq i8 %1027, 46
  %1029 = sext i1 %1028 to i8
  %1030 = getelementptr inbounds i8, ptr %987, i64 %1024
  store i8 %1029, ptr %1030, align 1, !tbaa !46
  %1031 = add nuw nsw i64 %1024, 1
  %1032 = add i64 %1025, 1
  %1033 = icmp eq i64 %1032, 2
  br i1 %1033, label %1034, label %1023, !llvm.loop !604

1034:                                             ; preds = %1023
  br i1 %1012, label %1062, label %1035

1035:                                             ; preds = %1034, %1035
  %1036 = phi i64 [ %1060, %1035 ], [ %1031, %1034 ]
  %1037 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %1036
  %1038 = load i8, ptr %1037, align 1, !tbaa !46
  %1039 = icmp eq i8 %1038, 46
  %1040 = sext i1 %1039 to i8
  %1041 = getelementptr inbounds i8, ptr %987, i64 %1036
  store i8 %1040, ptr %1041, align 1, !tbaa !46
  %1042 = add nuw nsw i64 %1036, 1
  %1043 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %1042
  %1044 = load i8, ptr %1043, align 1, !tbaa !46
  %1045 = icmp eq i8 %1044, 46
  %1046 = sext i1 %1045 to i8
  %1047 = getelementptr inbounds i8, ptr %987, i64 %1042
  store i8 %1046, ptr %1047, align 1, !tbaa !46
  %1048 = add nuw nsw i64 %1036, 2
  %1049 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %1048
  %1050 = load i8, ptr %1049, align 1, !tbaa !46
  %1051 = icmp eq i8 %1050, 46
  %1052 = sext i1 %1051 to i8
  %1053 = getelementptr inbounds i8, ptr %987, i64 %1048
  store i8 %1052, ptr %1053, align 1, !tbaa !46
  %1054 = add nuw nsw i64 %1036, 3
  %1055 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %1054
  %1056 = load i8, ptr %1055, align 1, !tbaa !46
  %1057 = icmp eq i8 %1056, 46
  %1058 = sext i1 %1057 to i8
  %1059 = getelementptr inbounds i8, ptr %987, i64 %1054
  store i8 %1058, ptr %1059, align 1, !tbaa !46
  %1060 = add nuw nsw i64 %1036, 4
  %1061 = icmp eq i64 %1060, 122
  br i1 %1061, label %1062, label %1035, !llvm.loop !605

1062:                                             ; preds = %1035, %1034
  %1063 = load i32, ptr %33, align 8, !tbaa !292
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds i8, ptr %987, i64 %1064
  %1066 = add i64 %69, %86
  %1067 = add i64 %1066, %98
  %1068 = add i64 %1067, %110
  %1069 = add i64 %1068, %122
  %1070 = add i64 %1069, %134
  %1071 = add i64 %1070, %146
  %1072 = add i64 %1071, %158
  %1073 = add i64 %1072, %170
  %1074 = add i64 %1073, %182
  %1075 = add i64 %1074, %194
  %1076 = add i64 %1075, %261
  %1077 = add i64 %1076, %329
  %1078 = add i64 %1077, %398
  %1079 = add i64 %1078, %468
  %1080 = add i64 %1079, %539
  %1081 = add i64 %1080, %611
  %1082 = add i64 %1081, %684
  %1083 = add i64 %1082, %758
  %1084 = add i64 %1083, %833
  %1085 = add i64 %1084, %909
  %1086 = add i64 %1085, %986
  %1087 = add i64 %1086, %1064
  %1088 = add i64 %1087, %74
  %1089 = add i64 %1088, %70
  %1090 = sub i64 %1089, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2684)
  %1091 = icmp ugt i64 %1090, 15
  br i1 %1091, label %1092, label %1100

1092:                                             ; preds = %1062
  store <16 x i8> zeroinitializer, ptr %1065, align 1, !tbaa !46
  %1093 = getelementptr inbounds i8, ptr %1065, i64 16
  store <16 x i8> zeroinitializer, ptr %1093, align 1, !tbaa !46
  %1094 = getelementptr inbounds i8, ptr %1065, i64 32
  store <16 x i8> zeroinitializer, ptr %1094, align 1, !tbaa !46
  %1095 = getelementptr inbounds i8, ptr %1065, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %1095, align 1, !tbaa !46
  %1096 = getelementptr inbounds i8, ptr %1065, i64 64
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %1096, align 1, !tbaa !46
  %1097 = getelementptr inbounds i8, ptr %1065, i64 80
  store <16 x i8> zeroinitializer, ptr %1097, align 1, !tbaa !46
  %1098 = getelementptr inbounds i8, ptr %1065, i64 96
  store <16 x i8> zeroinitializer, ptr %1098, align 1, !tbaa !46
  %1099 = getelementptr inbounds i8, ptr %1065, i64 112
  store <8 x i8> zeroinitializer, ptr %1099, align 1, !tbaa !46
  br label %1100

1100:                                             ; preds = %1062, %1092
  %1101 = phi i64 [ 0, %1062 ], [ 120, %1092 ]
  br label %1102

1102:                                             ; preds = %1102, %1100
  %1103 = phi i64 [ %1110, %1102 ], [ %1101, %1100 ]
  %1104 = phi i64 [ %1111, %1102 ], [ 0, %1100 ]
  %1105 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %1103
  %1106 = load i8, ptr %1105, align 1, !tbaa !46
  %1107 = icmp eq i8 %1106, 46
  %1108 = sext i1 %1107 to i8
  %1109 = getelementptr inbounds i8, ptr %1065, i64 %1103
  store i8 %1108, ptr %1109, align 1, !tbaa !46
  %1110 = add nuw nsw i64 %1103, 1
  %1111 = add i64 %1104, 1
  %1112 = icmp eq i64 %1111, 2
  br i1 %1112, label %1113, label %1102, !llvm.loop !606

1113:                                             ; preds = %1102
  br i1 %1091, label %1141, label %1114

1114:                                             ; preds = %1113, %1114
  %1115 = phi i64 [ %1139, %1114 ], [ %1110, %1113 ]
  %1116 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %1115
  %1117 = load i8, ptr %1116, align 1, !tbaa !46
  %1118 = icmp eq i8 %1117, 46
  %1119 = sext i1 %1118 to i8
  %1120 = getelementptr inbounds i8, ptr %1065, i64 %1115
  store i8 %1119, ptr %1120, align 1, !tbaa !46
  %1121 = add nuw nsw i64 %1115, 1
  %1122 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %1121
  %1123 = load i8, ptr %1122, align 1, !tbaa !46
  %1124 = icmp eq i8 %1123, 46
  %1125 = sext i1 %1124 to i8
  %1126 = getelementptr inbounds i8, ptr %1065, i64 %1121
  store i8 %1125, ptr %1126, align 1, !tbaa !46
  %1127 = add nuw nsw i64 %1115, 2
  %1128 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %1127
  %1129 = load i8, ptr %1128, align 1, !tbaa !46
  %1130 = icmp eq i8 %1129, 46
  %1131 = sext i1 %1130 to i8
  %1132 = getelementptr inbounds i8, ptr %1065, i64 %1127
  store i8 %1131, ptr %1132, align 1, !tbaa !46
  %1133 = add nuw nsw i64 %1115, 3
  %1134 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %1133
  %1135 = load i8, ptr %1134, align 1, !tbaa !46
  %1136 = icmp eq i8 %1135, 46
  %1137 = sext i1 %1136 to i8
  %1138 = getelementptr inbounds i8, ptr %1065, i64 %1133
  store i8 %1137, ptr %1138, align 1, !tbaa !46
  %1139 = add nuw nsw i64 %1115, 4
  %1140 = icmp eq i64 %1139, 122
  br i1 %1140, label %1141, label %1114, !llvm.loop !607

1141:                                             ; preds = %1114, %1113
  %1142 = load i32, ptr %33, align 8, !tbaa !292
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds i8, ptr %1065, i64 %1143
  %1145 = add i64 %69, %86
  %1146 = add i64 %1145, %98
  %1147 = add i64 %1146, %110
  %1148 = add i64 %1147, %122
  %1149 = add i64 %1148, %134
  %1150 = add i64 %1149, %146
  %1151 = add i64 %1150, %158
  %1152 = add i64 %1151, %170
  %1153 = add i64 %1152, %182
  %1154 = add i64 %1153, %194
  %1155 = add i64 %1154, %261
  %1156 = add i64 %1155, %329
  %1157 = add i64 %1156, %398
  %1158 = add i64 %1157, %468
  %1159 = add i64 %1158, %539
  %1160 = add i64 %1159, %611
  %1161 = add i64 %1160, %684
  %1162 = add i64 %1161, %758
  %1163 = add i64 %1162, %833
  %1164 = add i64 %1163, %909
  %1165 = add i64 %1164, %986
  %1166 = add i64 %1165, %1064
  %1167 = add i64 %1166, %1143
  %1168 = add i64 %1167, %74
  %1169 = add i64 %1168, %70
  %1170 = sub i64 %1169, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2806)
  %1171 = icmp ugt i64 %1170, 15
  br i1 %1171, label %1172, label %1180

1172:                                             ; preds = %1141
  store <16 x i8> zeroinitializer, ptr %1144, align 1, !tbaa !46
  %1173 = getelementptr inbounds i8, ptr %1144, i64 16
  store <16 x i8> zeroinitializer, ptr %1173, align 1, !tbaa !46
  %1174 = getelementptr inbounds i8, ptr %1144, i64 32
  store <16 x i8> zeroinitializer, ptr %1174, align 1, !tbaa !46
  %1175 = getelementptr inbounds i8, ptr %1144, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1175, align 1, !tbaa !46
  %1176 = getelementptr inbounds i8, ptr %1144, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1176, align 1, !tbaa !46
  %1177 = getelementptr inbounds i8, ptr %1144, i64 80
  store <16 x i8> zeroinitializer, ptr %1177, align 1, !tbaa !46
  %1178 = getelementptr inbounds i8, ptr %1144, i64 96
  store <16 x i8> zeroinitializer, ptr %1178, align 1, !tbaa !46
  %1179 = getelementptr inbounds i8, ptr %1144, i64 112
  store <8 x i8> zeroinitializer, ptr %1179, align 1, !tbaa !46
  br label %1180

1180:                                             ; preds = %1141, %1172
  %1181 = phi i64 [ 0, %1141 ], [ 120, %1172 ]
  br label %1182

1182:                                             ; preds = %1182, %1180
  %1183 = phi i64 [ %1190, %1182 ], [ %1181, %1180 ]
  %1184 = phi i64 [ %1191, %1182 ], [ 0, %1180 ]
  %1185 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %1183
  %1186 = load i8, ptr %1185, align 1, !tbaa !46
  %1187 = icmp eq i8 %1186, 46
  %1188 = sext i1 %1187 to i8
  %1189 = getelementptr inbounds i8, ptr %1144, i64 %1183
  store i8 %1188, ptr %1189, align 1, !tbaa !46
  %1190 = add nuw nsw i64 %1183, 1
  %1191 = add i64 %1184, 1
  %1192 = icmp eq i64 %1191, 2
  br i1 %1192, label %1193, label %1182, !llvm.loop !608

1193:                                             ; preds = %1182
  br i1 %1171, label %1221, label %1194

1194:                                             ; preds = %1193, %1194
  %1195 = phi i64 [ %1219, %1194 ], [ %1190, %1193 ]
  %1196 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %1195
  %1197 = load i8, ptr %1196, align 1, !tbaa !46
  %1198 = icmp eq i8 %1197, 46
  %1199 = sext i1 %1198 to i8
  %1200 = getelementptr inbounds i8, ptr %1144, i64 %1195
  store i8 %1199, ptr %1200, align 1, !tbaa !46
  %1201 = add nuw nsw i64 %1195, 1
  %1202 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %1201
  %1203 = load i8, ptr %1202, align 1, !tbaa !46
  %1204 = icmp eq i8 %1203, 46
  %1205 = sext i1 %1204 to i8
  %1206 = getelementptr inbounds i8, ptr %1144, i64 %1201
  store i8 %1205, ptr %1206, align 1, !tbaa !46
  %1207 = add nuw nsw i64 %1195, 2
  %1208 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %1207
  %1209 = load i8, ptr %1208, align 1, !tbaa !46
  %1210 = icmp eq i8 %1209, 46
  %1211 = sext i1 %1210 to i8
  %1212 = getelementptr inbounds i8, ptr %1144, i64 %1207
  store i8 %1211, ptr %1212, align 1, !tbaa !46
  %1213 = add nuw nsw i64 %1195, 3
  %1214 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %1213
  %1215 = load i8, ptr %1214, align 1, !tbaa !46
  %1216 = icmp eq i8 %1215, 46
  %1217 = sext i1 %1216 to i8
  %1218 = getelementptr inbounds i8, ptr %1144, i64 %1213
  store i8 %1217, ptr %1218, align 1, !tbaa !46
  %1219 = add nuw nsw i64 %1195, 4
  %1220 = icmp eq i64 %1219, 122
  br i1 %1220, label %1221, label %1194, !llvm.loop !609

1221:                                             ; preds = %1194, %1193
  %1222 = load i32, ptr %33, align 8, !tbaa !292
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds i8, ptr %1144, i64 %1223
  %1225 = add i64 %69, %86
  %1226 = add i64 %1225, %98
  %1227 = add i64 %1226, %110
  %1228 = add i64 %1227, %122
  %1229 = add i64 %1228, %134
  %1230 = add i64 %1229, %146
  %1231 = add i64 %1230, %158
  %1232 = add i64 %1231, %170
  %1233 = add i64 %1232, %182
  %1234 = add i64 %1233, %194
  %1235 = add i64 %1234, %261
  %1236 = add i64 %1235, %329
  %1237 = add i64 %1236, %398
  %1238 = add i64 %1237, %468
  %1239 = add i64 %1238, %539
  %1240 = add i64 %1239, %611
  %1241 = add i64 %1240, %684
  %1242 = add i64 %1241, %758
  %1243 = add i64 %1242, %833
  %1244 = add i64 %1243, %909
  %1245 = add i64 %1244, %986
  %1246 = add i64 %1245, %1064
  %1247 = add i64 %1246, %1143
  %1248 = add i64 %1247, %1223
  %1249 = add i64 %1248, %74
  %1250 = add i64 %1249, %70
  %1251 = sub i64 %1250, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2928)
  %1252 = icmp ugt i64 %1251, 15
  br i1 %1252, label %1253, label %1261

1253:                                             ; preds = %1221
  store <16 x i8> zeroinitializer, ptr %1224, align 1, !tbaa !46
  %1254 = getelementptr inbounds i8, ptr %1224, i64 16
  store <16 x i8> zeroinitializer, ptr %1254, align 1, !tbaa !46
  %1255 = getelementptr inbounds i8, ptr %1224, i64 32
  store <16 x i8> zeroinitializer, ptr %1255, align 1, !tbaa !46
  %1256 = getelementptr inbounds i8, ptr %1224, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1256, align 1, !tbaa !46
  %1257 = getelementptr inbounds i8, ptr %1224, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1257, align 1, !tbaa !46
  %1258 = getelementptr inbounds i8, ptr %1224, i64 80
  store <16 x i8> zeroinitializer, ptr %1258, align 1, !tbaa !46
  %1259 = getelementptr inbounds i8, ptr %1224, i64 96
  store <16 x i8> zeroinitializer, ptr %1259, align 1, !tbaa !46
  %1260 = getelementptr inbounds i8, ptr %1224, i64 112
  store <8 x i8> zeroinitializer, ptr %1260, align 1, !tbaa !46
  br label %1261

1261:                                             ; preds = %1221, %1253
  %1262 = phi i64 [ 0, %1221 ], [ 120, %1253 ]
  br label %1263

1263:                                             ; preds = %1263, %1261
  %1264 = phi i64 [ %1271, %1263 ], [ %1262, %1261 ]
  %1265 = phi i64 [ %1272, %1263 ], [ 0, %1261 ]
  %1266 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %1264
  %1267 = load i8, ptr %1266, align 1, !tbaa !46
  %1268 = icmp eq i8 %1267, 46
  %1269 = sext i1 %1268 to i8
  %1270 = getelementptr inbounds i8, ptr %1224, i64 %1264
  store i8 %1269, ptr %1270, align 1, !tbaa !46
  %1271 = add nuw nsw i64 %1264, 1
  %1272 = add i64 %1265, 1
  %1273 = icmp eq i64 %1272, 2
  br i1 %1273, label %1274, label %1263, !llvm.loop !610

1274:                                             ; preds = %1263
  br i1 %1252, label %1302, label %1275

1275:                                             ; preds = %1274, %1275
  %1276 = phi i64 [ %1300, %1275 ], [ %1271, %1274 ]
  %1277 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %1276
  %1278 = load i8, ptr %1277, align 1, !tbaa !46
  %1279 = icmp eq i8 %1278, 46
  %1280 = sext i1 %1279 to i8
  %1281 = getelementptr inbounds i8, ptr %1224, i64 %1276
  store i8 %1280, ptr %1281, align 1, !tbaa !46
  %1282 = add nuw nsw i64 %1276, 1
  %1283 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %1282
  %1284 = load i8, ptr %1283, align 1, !tbaa !46
  %1285 = icmp eq i8 %1284, 46
  %1286 = sext i1 %1285 to i8
  %1287 = getelementptr inbounds i8, ptr %1224, i64 %1282
  store i8 %1286, ptr %1287, align 1, !tbaa !46
  %1288 = add nuw nsw i64 %1276, 2
  %1289 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %1288
  %1290 = load i8, ptr %1289, align 1, !tbaa !46
  %1291 = icmp eq i8 %1290, 46
  %1292 = sext i1 %1291 to i8
  %1293 = getelementptr inbounds i8, ptr %1224, i64 %1288
  store i8 %1292, ptr %1293, align 1, !tbaa !46
  %1294 = add nuw nsw i64 %1276, 3
  %1295 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %1294
  %1296 = load i8, ptr %1295, align 1, !tbaa !46
  %1297 = icmp eq i8 %1296, 46
  %1298 = sext i1 %1297 to i8
  %1299 = getelementptr inbounds i8, ptr %1224, i64 %1294
  store i8 %1298, ptr %1299, align 1, !tbaa !46
  %1300 = add nuw nsw i64 %1276, 4
  %1301 = icmp eq i64 %1300, 122
  br i1 %1301, label %1302, label %1275, !llvm.loop !611

1302:                                             ; preds = %1275, %1274
  %1303 = load i32, ptr %33, align 8, !tbaa !292
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds i8, ptr %1224, i64 %1304
  %1306 = add i64 %69, %86
  %1307 = add i64 %1306, %98
  %1308 = add i64 %1307, %110
  %1309 = add i64 %1308, %122
  %1310 = add i64 %1309, %134
  %1311 = add i64 %1310, %146
  %1312 = add i64 %1311, %158
  %1313 = add i64 %1312, %170
  %1314 = add i64 %1313, %182
  %1315 = add i64 %1314, %194
  %1316 = add i64 %1315, %261
  %1317 = add i64 %1316, %329
  %1318 = add i64 %1317, %398
  %1319 = add i64 %1318, %468
  %1320 = add i64 %1319, %539
  %1321 = add i64 %1320, %611
  %1322 = add i64 %1321, %684
  %1323 = add i64 %1322, %758
  %1324 = add i64 %1323, %833
  %1325 = add i64 %1324, %909
  %1326 = add i64 %1325, %986
  %1327 = add i64 %1326, %1064
  %1328 = add i64 %1327, %1143
  %1329 = add i64 %1328, %1223
  %1330 = add i64 %1329, %1304
  %1331 = add i64 %1330, %74
  %1332 = add i64 %1331, %70
  %1333 = sub i64 %1332, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 3050)
  %1334 = icmp ugt i64 %1333, 15
  br i1 %1334, label %1335, label %1343

1335:                                             ; preds = %1302
  store <16 x i8> zeroinitializer, ptr %1305, align 1, !tbaa !46
  %1336 = getelementptr inbounds i8, ptr %1305, i64 16
  store <16 x i8> zeroinitializer, ptr %1336, align 1, !tbaa !46
  %1337 = getelementptr inbounds i8, ptr %1305, i64 32
  store <16 x i8> zeroinitializer, ptr %1337, align 1, !tbaa !46
  %1338 = getelementptr inbounds i8, ptr %1305, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1338, align 1, !tbaa !46
  %1339 = getelementptr inbounds i8, ptr %1305, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1339, align 1, !tbaa !46
  %1340 = getelementptr inbounds i8, ptr %1305, i64 80
  store <16 x i8> zeroinitializer, ptr %1340, align 1, !tbaa !46
  %1341 = getelementptr inbounds i8, ptr %1305, i64 96
  store <16 x i8> zeroinitializer, ptr %1341, align 1, !tbaa !46
  %1342 = getelementptr inbounds i8, ptr %1305, i64 112
  store <8 x i8> zeroinitializer, ptr %1342, align 1, !tbaa !46
  br label %1343

1343:                                             ; preds = %1302, %1335
  %1344 = phi i64 [ 0, %1302 ], [ 120, %1335 ]
  br label %1345

1345:                                             ; preds = %1345, %1343
  %1346 = phi i64 [ %1353, %1345 ], [ %1344, %1343 ]
  %1347 = phi i64 [ %1354, %1345 ], [ 0, %1343 ]
  %1348 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %1346
  %1349 = load i8, ptr %1348, align 1, !tbaa !46
  %1350 = icmp eq i8 %1349, 46
  %1351 = sext i1 %1350 to i8
  %1352 = getelementptr inbounds i8, ptr %1305, i64 %1346
  store i8 %1351, ptr %1352, align 1, !tbaa !46
  %1353 = add nuw nsw i64 %1346, 1
  %1354 = add i64 %1347, 1
  %1355 = icmp eq i64 %1354, 2
  br i1 %1355, label %1356, label %1345, !llvm.loop !612

1356:                                             ; preds = %1345
  br i1 %1334, label %1384, label %1357

1357:                                             ; preds = %1356, %1357
  %1358 = phi i64 [ %1382, %1357 ], [ %1353, %1356 ]
  %1359 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %1358
  %1360 = load i8, ptr %1359, align 1, !tbaa !46
  %1361 = icmp eq i8 %1360, 46
  %1362 = sext i1 %1361 to i8
  %1363 = getelementptr inbounds i8, ptr %1305, i64 %1358
  store i8 %1362, ptr %1363, align 1, !tbaa !46
  %1364 = add nuw nsw i64 %1358, 1
  %1365 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %1364
  %1366 = load i8, ptr %1365, align 1, !tbaa !46
  %1367 = icmp eq i8 %1366, 46
  %1368 = sext i1 %1367 to i8
  %1369 = getelementptr inbounds i8, ptr %1305, i64 %1364
  store i8 %1368, ptr %1369, align 1, !tbaa !46
  %1370 = add nuw nsw i64 %1358, 2
  %1371 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %1370
  %1372 = load i8, ptr %1371, align 1, !tbaa !46
  %1373 = icmp eq i8 %1372, 46
  %1374 = sext i1 %1373 to i8
  %1375 = getelementptr inbounds i8, ptr %1305, i64 %1370
  store i8 %1374, ptr %1375, align 1, !tbaa !46
  %1376 = add nuw nsw i64 %1358, 3
  %1377 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %1376
  %1378 = load i8, ptr %1377, align 1, !tbaa !46
  %1379 = icmp eq i8 %1378, 46
  %1380 = sext i1 %1379 to i8
  %1381 = getelementptr inbounds i8, ptr %1305, i64 %1376
  store i8 %1380, ptr %1381, align 1, !tbaa !46
  %1382 = add nuw nsw i64 %1358, 4
  %1383 = icmp eq i64 %1382, 122
  br i1 %1383, label %1384, label %1357, !llvm.loop !613

1384:                                             ; preds = %1357, %1356
  %1385 = load i32, ptr %33, align 8, !tbaa !292
  %1386 = sext i32 %1385 to i64
  %1387 = getelementptr inbounds i8, ptr %1305, i64 %1386
  %1388 = add i64 %69, %86
  %1389 = add i64 %1388, %98
  %1390 = add i64 %1389, %110
  %1391 = add i64 %1390, %122
  %1392 = add i64 %1391, %134
  %1393 = add i64 %1392, %146
  %1394 = add i64 %1393, %158
  %1395 = add i64 %1394, %170
  %1396 = add i64 %1395, %182
  %1397 = add i64 %1396, %194
  %1398 = add i64 %1397, %261
  %1399 = add i64 %1398, %329
  %1400 = add i64 %1399, %398
  %1401 = add i64 %1400, %468
  %1402 = add i64 %1401, %539
  %1403 = add i64 %1402, %611
  %1404 = add i64 %1403, %684
  %1405 = add i64 %1404, %758
  %1406 = add i64 %1405, %833
  %1407 = add i64 %1406, %909
  %1408 = add i64 %1407, %986
  %1409 = add i64 %1408, %1064
  %1410 = add i64 %1409, %1143
  %1411 = add i64 %1410, %1223
  %1412 = add i64 %1411, %1304
  %1413 = add i64 %1412, %1386
  %1414 = add i64 %1413, %74
  %1415 = add i64 %1414, %70
  %1416 = sub i64 %1415, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 3172)
  %1417 = icmp ugt i64 %1416, 15
  br i1 %1417, label %1418, label %1426

1418:                                             ; preds = %1384
  store <16 x i8> zeroinitializer, ptr %1387, align 1, !tbaa !46
  %1419 = getelementptr inbounds i8, ptr %1387, i64 16
  store <16 x i8> zeroinitializer, ptr %1419, align 1, !tbaa !46
  %1420 = getelementptr inbounds i8, ptr %1387, i64 32
  store <16 x i8> zeroinitializer, ptr %1420, align 1, !tbaa !46
  %1421 = getelementptr inbounds i8, ptr %1387, i64 48
  store <16 x i8> zeroinitializer, ptr %1421, align 1, !tbaa !46
  %1422 = getelementptr inbounds i8, ptr %1387, i64 64
  store <16 x i8> zeroinitializer, ptr %1422, align 1, !tbaa !46
  %1423 = getelementptr inbounds i8, ptr %1387, i64 80
  store <16 x i8> zeroinitializer, ptr %1423, align 1, !tbaa !46
  %1424 = getelementptr inbounds i8, ptr %1387, i64 96
  store <16 x i8> zeroinitializer, ptr %1424, align 1, !tbaa !46
  %1425 = getelementptr inbounds i8, ptr %1387, i64 112
  store <8 x i8> zeroinitializer, ptr %1425, align 1, !tbaa !46
  br label %1426

1426:                                             ; preds = %1384, %1418
  %1427 = phi i64 [ 0, %1384 ], [ 120, %1418 ]
  br label %1428

1428:                                             ; preds = %1428, %1426
  %1429 = phi i64 [ %1436, %1428 ], [ %1427, %1426 ]
  %1430 = phi i64 [ %1437, %1428 ], [ 0, %1426 ]
  %1431 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %1429
  %1432 = load i8, ptr %1431, align 1, !tbaa !46
  %1433 = icmp eq i8 %1432, 46
  %1434 = sext i1 %1433 to i8
  %1435 = getelementptr inbounds i8, ptr %1387, i64 %1429
  store i8 %1434, ptr %1435, align 1, !tbaa !46
  %1436 = add nuw nsw i64 %1429, 1
  %1437 = add i64 %1430, 1
  %1438 = icmp eq i64 %1437, 2
  br i1 %1438, label %1439, label %1428, !llvm.loop !614

1439:                                             ; preds = %1428
  br i1 %1417, label %1467, label %1440

1440:                                             ; preds = %1439, %1440
  %1441 = phi i64 [ %1465, %1440 ], [ %1436, %1439 ]
  %1442 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %1441
  %1443 = load i8, ptr %1442, align 1, !tbaa !46
  %1444 = icmp eq i8 %1443, 46
  %1445 = sext i1 %1444 to i8
  %1446 = getelementptr inbounds i8, ptr %1387, i64 %1441
  store i8 %1445, ptr %1446, align 1, !tbaa !46
  %1447 = add nuw nsw i64 %1441, 1
  %1448 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %1447
  %1449 = load i8, ptr %1448, align 1, !tbaa !46
  %1450 = icmp eq i8 %1449, 46
  %1451 = sext i1 %1450 to i8
  %1452 = getelementptr inbounds i8, ptr %1387, i64 %1447
  store i8 %1451, ptr %1452, align 1, !tbaa !46
  %1453 = add nuw nsw i64 %1441, 2
  %1454 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %1453
  %1455 = load i8, ptr %1454, align 1, !tbaa !46
  %1456 = icmp eq i8 %1455, 46
  %1457 = sext i1 %1456 to i8
  %1458 = getelementptr inbounds i8, ptr %1387, i64 %1453
  store i8 %1457, ptr %1458, align 1, !tbaa !46
  %1459 = add nuw nsw i64 %1441, 3
  %1460 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %1459
  %1461 = load i8, ptr %1460, align 1, !tbaa !46
  %1462 = icmp eq i8 %1461, 46
  %1463 = sext i1 %1462 to i8
  %1464 = getelementptr inbounds i8, ptr %1387, i64 %1459
  store i8 %1463, ptr %1464, align 1, !tbaa !46
  %1465 = add nuw nsw i64 %1441, 4
  %1466 = icmp eq i64 %1465, 122
  br i1 %1466, label %1467, label %1440, !llvm.loop !615

1467:                                             ; preds = %1440, %1439
  %1468 = load i32, ptr %33, align 8, !tbaa !292
  %1469 = load i16, ptr %54, align 2, !tbaa !348
  %1470 = zext i16 %1469 to i32
  %1471 = add nuw nsw i32 %50, 245
  %1472 = icmp sgt i32 %1471, %1468
  br i1 %1472, label %1473, label %1474

1473:                                             ; preds = %1467
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2648)
  br label %1474

1474:                                             ; preds = %1473, %1467
  %1475 = add nuw nsw i32 %1470, 27
  %1476 = load i32, ptr %63, align 4, !tbaa !293
  %1477 = icmp sgt i32 %1475, %1476
  br i1 %1477, label %1478, label %1479

1478:                                             ; preds = %1474
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2649)
  br label %1479

1479:                                             ; preds = %1478, %1474
  %1480 = load ptr, ptr %2, align 8, !tbaa !273
  %1481 = ptrtoint ptr %1480 to i64
  %1482 = zext i32 %51 to i64
  %1483 = getelementptr inbounds i8, ptr %1480, i64 %1482
  %1484 = load i32, ptr %33, align 8, !tbaa !292
  %1485 = mul nsw i32 %1484, %1470
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds i8, ptr %1483, i64 %1486
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1>, ptr %1487, align 1, !tbaa !46
  %1488 = getelementptr inbounds i8, ptr %1487, i64 16
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1488, align 1, !tbaa !46
  %1489 = getelementptr inbounds i8, ptr %1487, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1489, align 1, !tbaa !46
  %1490 = getelementptr inbounds i8, ptr %1487, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %1490, align 1, !tbaa !46
  %1491 = getelementptr inbounds i8, ptr %1487, i64 64
  store <16 x i8> zeroinitializer, ptr %1491, align 1, !tbaa !46
  %1492 = getelementptr inbounds i8, ptr %1487, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1492, align 1, !tbaa !46
  %1493 = getelementptr inbounds i8, ptr %1487, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1>, ptr %1493, align 1, !tbaa !46
  %1494 = getelementptr inbounds i8, ptr %1487, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1494, align 1, !tbaa !46
  %1495 = getelementptr inbounds i8, ptr %1487, i64 120
  store i8 -1, ptr %1495, align 1, !tbaa !46
  %1496 = getelementptr inbounds i8, ptr %1487, i64 121
  store i8 0, ptr %1496, align 1, !tbaa !46
  %1497 = load i32, ptr %33, align 8, !tbaa !292
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds i8, ptr %1487, i64 %1498
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1499, align 1, !tbaa !46
  %1500 = getelementptr inbounds i8, ptr %1499, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1500, align 1, !tbaa !46
  %1501 = getelementptr inbounds i8, ptr %1499, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1501, align 1, !tbaa !46
  %1502 = getelementptr inbounds i8, ptr %1499, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1502, align 1, !tbaa !46
  %1503 = getelementptr inbounds i8, ptr %1499, i64 64
  store <16 x i8> zeroinitializer, ptr %1503, align 1, !tbaa !46
  %1504 = getelementptr inbounds i8, ptr %1499, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1504, align 1, !tbaa !46
  %1505 = getelementptr inbounds i8, ptr %1499, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1505, align 1, !tbaa !46
  %1506 = getelementptr inbounds i8, ptr %1499, i64 112
  store <8 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1506, align 1, !tbaa !46
  %1507 = getelementptr inbounds i8, ptr %1499, i64 120
  store i8 0, ptr %1507, align 1, !tbaa !46
  %1508 = getelementptr inbounds i8, ptr %1499, i64 121
  store i8 -1, ptr %1508, align 1, !tbaa !46
  %1509 = load i32, ptr %33, align 8, !tbaa !292
  %1510 = sext i32 %1509 to i64
  %1511 = getelementptr inbounds i8, ptr %1499, i64 %1510
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1>, ptr %1511, align 1, !tbaa !46
  %1512 = getelementptr inbounds i8, ptr %1511, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1512, align 1, !tbaa !46
  %1513 = getelementptr inbounds i8, ptr %1511, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1513, align 1, !tbaa !46
  %1514 = getelementptr inbounds i8, ptr %1511, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1514, align 1, !tbaa !46
  %1515 = getelementptr inbounds i8, ptr %1511, i64 64
  store <16 x i8> zeroinitializer, ptr %1515, align 1, !tbaa !46
  %1516 = getelementptr inbounds i8, ptr %1511, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1516, align 1, !tbaa !46
  %1517 = getelementptr inbounds i8, ptr %1511, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1517, align 1, !tbaa !46
  %1518 = getelementptr inbounds i8, ptr %1511, i64 112
  store <8 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1518, align 1, !tbaa !46
  %1519 = getelementptr inbounds i8, ptr %1511, i64 120
  store i8 0, ptr %1519, align 1, !tbaa !46
  %1520 = getelementptr inbounds i8, ptr %1511, i64 121
  store i8 -1, ptr %1520, align 1, !tbaa !46
  %1521 = load i32, ptr %33, align 8, !tbaa !292
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds i8, ptr %1511, i64 %1522
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1523, align 1, !tbaa !46
  %1524 = getelementptr inbounds i8, ptr %1523, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1524, align 1, !tbaa !46
  %1525 = getelementptr inbounds i8, ptr %1523, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1525, align 1, !tbaa !46
  %1526 = getelementptr inbounds i8, ptr %1523, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1526, align 1, !tbaa !46
  %1527 = getelementptr inbounds i8, ptr %1523, i64 64
  store <16 x i8> zeroinitializer, ptr %1527, align 1, !tbaa !46
  %1528 = getelementptr inbounds i8, ptr %1523, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1528, align 1, !tbaa !46
  %1529 = getelementptr inbounds i8, ptr %1523, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1529, align 1, !tbaa !46
  %1530 = getelementptr inbounds i8, ptr %1523, i64 112
  store <8 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1530, align 1, !tbaa !46
  %1531 = getelementptr inbounds i8, ptr %1523, i64 120
  store i8 -1, ptr %1531, align 1, !tbaa !46
  %1532 = getelementptr inbounds i8, ptr %1523, i64 121
  store i8 0, ptr %1532, align 1, !tbaa !46
  %1533 = load i32, ptr %33, align 8, !tbaa !292
  %1534 = sext i32 %1533 to i64
  %1535 = getelementptr inbounds i8, ptr %1523, i64 %1534
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1535, align 1, !tbaa !46
  %1536 = getelementptr inbounds i8, ptr %1535, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1536, align 1, !tbaa !46
  %1537 = getelementptr inbounds i8, ptr %1535, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1537, align 1, !tbaa !46
  %1538 = getelementptr inbounds i8, ptr %1535, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1538, align 1, !tbaa !46
  %1539 = getelementptr inbounds i8, ptr %1535, i64 64
  store <16 x i8> zeroinitializer, ptr %1539, align 1, !tbaa !46
  %1540 = getelementptr inbounds i8, ptr %1535, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1540, align 1, !tbaa !46
  %1541 = getelementptr inbounds i8, ptr %1535, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1541, align 1, !tbaa !46
  %1542 = getelementptr inbounds i8, ptr %1535, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1>, ptr %1542, align 1, !tbaa !46
  %1543 = getelementptr inbounds i8, ptr %1535, i64 120
  store i8 0, ptr %1543, align 1, !tbaa !46
  %1544 = getelementptr inbounds i8, ptr %1535, i64 121
  store i8 0, ptr %1544, align 1, !tbaa !46
  %1545 = load i32, ptr %33, align 8, !tbaa !292
  %1546 = sext i32 %1545 to i64
  %1547 = getelementptr inbounds i8, ptr %1535, i64 %1546
  store <16 x i8> <i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1547, align 1, !tbaa !46
  %1548 = getelementptr inbounds i8, ptr %1547, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %1548, align 1, !tbaa !46
  %1549 = getelementptr inbounds i8, ptr %1547, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0>, ptr %1549, align 1, !tbaa !46
  %1550 = getelementptr inbounds i8, ptr %1547, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0>, ptr %1550, align 1, !tbaa !46
  %1551 = getelementptr inbounds i8, ptr %1547, i64 64
  store <16 x i8> zeroinitializer, ptr %1551, align 1, !tbaa !46
  %1552 = getelementptr inbounds i8, ptr %1547, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1552, align 1, !tbaa !46
  %1553 = getelementptr inbounds i8, ptr %1547, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1553, align 1, !tbaa !46
  %1554 = getelementptr inbounds i8, ptr %1547, i64 112
  store <8 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1554, align 1, !tbaa !46
  %1555 = getelementptr inbounds i8, ptr %1547, i64 120
  store i8 0, ptr %1555, align 1, !tbaa !46
  %1556 = getelementptr inbounds i8, ptr %1547, i64 121
  store i8 0, ptr %1556, align 1, !tbaa !46
  %1557 = load i32, ptr %33, align 8, !tbaa !292
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds i8, ptr %1547, i64 %1558
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1559, align 1, !tbaa !46
  %1560 = getelementptr inbounds i8, ptr %1559, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1560, align 1, !tbaa !46
  %1561 = getelementptr inbounds i8, ptr %1559, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1561, align 1, !tbaa !46
  %1562 = getelementptr inbounds i8, ptr %1559, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0>, ptr %1562, align 1, !tbaa !46
  %1563 = getelementptr inbounds i8, ptr %1559, i64 64
  store <16 x i8> zeroinitializer, ptr %1563, align 1, !tbaa !46
  %1564 = getelementptr inbounds i8, ptr %1559, i64 80
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1564, align 1, !tbaa !46
  %1565 = getelementptr inbounds i8, ptr %1559, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1565, align 1, !tbaa !46
  %1566 = getelementptr inbounds i8, ptr %1559, i64 112
  store <8 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1566, align 1, !tbaa !46
  %1567 = getelementptr inbounds i8, ptr %1559, i64 120
  store i8 0, ptr %1567, align 1, !tbaa !46
  %1568 = getelementptr inbounds i8, ptr %1559, i64 121
  store i8 0, ptr %1568, align 1, !tbaa !46
  %1569 = load i32, ptr %33, align 8, !tbaa !292
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds i8, ptr %1559, i64 %1570
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1571, align 1, !tbaa !46
  %1572 = getelementptr inbounds i8, ptr %1571, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1572, align 1, !tbaa !46
  %1573 = getelementptr inbounds i8, ptr %1571, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1573, align 1, !tbaa !46
  %1574 = getelementptr inbounds i8, ptr %1571, i64 48
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1>, ptr %1574, align 1, !tbaa !46
  %1575 = getelementptr inbounds i8, ptr %1571, i64 64
  store <16 x i8> zeroinitializer, ptr %1575, align 1, !tbaa !46
  %1576 = getelementptr inbounds i8, ptr %1571, i64 80
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1576, align 1, !tbaa !46
  %1577 = getelementptr inbounds i8, ptr %1571, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1577, align 1, !tbaa !46
  %1578 = getelementptr inbounds i8, ptr %1571, i64 112
  store <8 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1578, align 1, !tbaa !46
  %1579 = getelementptr inbounds i8, ptr %1571, i64 120
  store i8 0, ptr %1579, align 1, !tbaa !46
  %1580 = getelementptr inbounds i8, ptr %1571, i64 121
  store i8 0, ptr %1580, align 1, !tbaa !46
  %1581 = load i32, ptr %33, align 8, !tbaa !292
  %1582 = sext i32 %1581 to i64
  %1583 = getelementptr inbounds i8, ptr %1571, i64 %1582
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1583, align 1, !tbaa !46
  %1584 = getelementptr inbounds i8, ptr %1583, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1584, align 1, !tbaa !46
  %1585 = getelementptr inbounds i8, ptr %1583, i64 32
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1585, align 1, !tbaa !46
  %1586 = getelementptr inbounds i8, ptr %1583, i64 48
  store <16 x i8> <i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1586, align 1, !tbaa !46
  %1587 = getelementptr inbounds i8, ptr %1583, i64 64
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1587, align 1, !tbaa !46
  %1588 = getelementptr inbounds i8, ptr %1583, i64 80
  store <16 x i8> <i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1588, align 1, !tbaa !46
  %1589 = getelementptr inbounds i8, ptr %1583, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1589, align 1, !tbaa !46
  %1590 = getelementptr inbounds i8, ptr %1583, i64 112
  store <8 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1590, align 1, !tbaa !46
  %1591 = getelementptr inbounds i8, ptr %1583, i64 120
  store i8 0, ptr %1591, align 1, !tbaa !46
  %1592 = getelementptr inbounds i8, ptr %1583, i64 121
  store i8 0, ptr %1592, align 1, !tbaa !46
  %1593 = load i32, ptr %33, align 8, !tbaa !292
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds i8, ptr %1583, i64 %1594
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1595, align 1, !tbaa !46
  %1596 = getelementptr inbounds i8, ptr %1595, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1596, align 1, !tbaa !46
  %1597 = getelementptr inbounds i8, ptr %1595, i64 32
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1597, align 1, !tbaa !46
  %1598 = getelementptr inbounds i8, ptr %1595, i64 48
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1598, align 1, !tbaa !46
  %1599 = getelementptr inbounds i8, ptr %1595, i64 64
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1599, align 1, !tbaa !46
  %1600 = getelementptr inbounds i8, ptr %1595, i64 80
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 -1>, ptr %1600, align 1, !tbaa !46
  %1601 = getelementptr inbounds i8, ptr %1595, i64 96
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1601, align 1, !tbaa !46
  %1602 = getelementptr inbounds i8, ptr %1595, i64 112
  store <8 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1602, align 1, !tbaa !46
  %1603 = getelementptr inbounds i8, ptr %1595, i64 120
  store i8 0, ptr %1603, align 1, !tbaa !46
  %1604 = getelementptr inbounds i8, ptr %1595, i64 121
  store i8 0, ptr %1604, align 1, !tbaa !46
  %1605 = load i32, ptr %33, align 8, !tbaa !292
  %1606 = sext i32 %1605 to i64
  %1607 = getelementptr inbounds i8, ptr %1595, i64 %1606
  %1608 = add i64 %1481, %1498
  %1609 = add i64 %1608, %1510
  %1610 = add i64 %1609, %1522
  %1611 = add i64 %1610, %1534
  %1612 = add i64 %1611, %1546
  %1613 = add i64 %1612, %1558
  %1614 = add i64 %1613, %1570
  %1615 = add i64 %1614, %1582
  %1616 = add i64 %1615, %1594
  %1617 = add i64 %1616, %1606
  %1618 = add i64 %1617, %1486
  %1619 = add i64 %1618, %70
  %1620 = add i64 %1619, 123
  %1621 = sub i64 %1620, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1220)
  %1622 = icmp ugt i64 %1621, 15
  br i1 %1622, label %1623, label %1631

1623:                                             ; preds = %1479
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1607, align 1, !tbaa !46
  %1624 = getelementptr inbounds i8, ptr %1607, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1624, align 1, !tbaa !46
  %1625 = getelementptr inbounds i8, ptr %1607, i64 32
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %1625, align 1, !tbaa !46
  %1626 = getelementptr inbounds i8, ptr %1607, i64 48
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1626, align 1, !tbaa !46
  %1627 = getelementptr inbounds i8, ptr %1607, i64 64
  store <16 x i8> <i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1627, align 1, !tbaa !46
  %1628 = getelementptr inbounds i8, ptr %1607, i64 80
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 -1>, ptr %1628, align 1, !tbaa !46
  %1629 = getelementptr inbounds i8, ptr %1607, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1>, ptr %1629, align 1, !tbaa !46
  %1630 = getelementptr inbounds i8, ptr %1607, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1>, ptr %1630, align 1, !tbaa !46
  br label %1631

1631:                                             ; preds = %1479, %1623
  %1632 = phi i64 [ 0, %1479 ], [ 120, %1623 ]
  br label %1633

1633:                                             ; preds = %1633, %1631
  %1634 = phi i64 [ %1641, %1633 ], [ %1632, %1631 ]
  %1635 = phi i64 [ %1642, %1633 ], [ 0, %1631 ]
  %1636 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %1634
  %1637 = load i8, ptr %1636, align 1, !tbaa !46
  %1638 = icmp eq i8 %1637, 88
  %1639 = sext i1 %1638 to i8
  %1640 = getelementptr inbounds i8, ptr %1607, i64 %1634
  store i8 %1639, ptr %1640, align 1, !tbaa !46
  %1641 = add nuw nsw i64 %1634, 1
  %1642 = add i64 %1635, 1
  %1643 = icmp eq i64 %1642, 2
  br i1 %1643, label %1644, label %1633, !llvm.loop !616

1644:                                             ; preds = %1633
  br i1 %1622, label %1672, label %1645

1645:                                             ; preds = %1644, %1645
  %1646 = phi i64 [ %1670, %1645 ], [ %1641, %1644 ]
  %1647 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %1646
  %1648 = load i8, ptr %1647, align 1, !tbaa !46
  %1649 = icmp eq i8 %1648, 88
  %1650 = sext i1 %1649 to i8
  %1651 = getelementptr inbounds i8, ptr %1607, i64 %1646
  store i8 %1650, ptr %1651, align 1, !tbaa !46
  %1652 = add nuw nsw i64 %1646, 1
  %1653 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %1652
  %1654 = load i8, ptr %1653, align 1, !tbaa !46
  %1655 = icmp eq i8 %1654, 88
  %1656 = sext i1 %1655 to i8
  %1657 = getelementptr inbounds i8, ptr %1607, i64 %1652
  store i8 %1656, ptr %1657, align 1, !tbaa !46
  %1658 = add nuw nsw i64 %1646, 2
  %1659 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %1658
  %1660 = load i8, ptr %1659, align 1, !tbaa !46
  %1661 = icmp eq i8 %1660, 88
  %1662 = sext i1 %1661 to i8
  %1663 = getelementptr inbounds i8, ptr %1607, i64 %1658
  store i8 %1662, ptr %1663, align 1, !tbaa !46
  %1664 = add nuw nsw i64 %1646, 3
  %1665 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %1664
  %1666 = load i8, ptr %1665, align 1, !tbaa !46
  %1667 = icmp eq i8 %1666, 88
  %1668 = sext i1 %1667 to i8
  %1669 = getelementptr inbounds i8, ptr %1607, i64 %1664
  store i8 %1668, ptr %1669, align 1, !tbaa !46
  %1670 = add nuw nsw i64 %1646, 4
  %1671 = icmp eq i64 %1670, 122
  br i1 %1671, label %1672, label %1645, !llvm.loop !617

1672:                                             ; preds = %1645, %1644
  %1673 = load i32, ptr %33, align 8, !tbaa !292
  %1674 = sext i32 %1673 to i64
  %1675 = getelementptr inbounds i8, ptr %1607, i64 %1674
  %1676 = add i64 %1481, %1498
  %1677 = add i64 %1676, %1510
  %1678 = add i64 %1677, %1522
  %1679 = add i64 %1678, %1534
  %1680 = add i64 %1679, %1546
  %1681 = add i64 %1680, %1558
  %1682 = add i64 %1681, %1570
  %1683 = add i64 %1682, %1582
  %1684 = add i64 %1683, %1594
  %1685 = add i64 %1684, %1606
  %1686 = add i64 %1685, %1674
  %1687 = add i64 %1686, %1486
  %1688 = add i64 %1687, %70
  %1689 = add i64 %1688, 123
  %1690 = sub i64 %1689, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1342)
  %1691 = icmp ugt i64 %1690, 15
  br i1 %1691, label %1692, label %1700

1692:                                             ; preds = %1672
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1675, align 1, !tbaa !46
  %1693 = getelementptr inbounds i8, ptr %1675, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1693, align 1, !tbaa !46
  %1694 = getelementptr inbounds i8, ptr %1675, i64 32
  store <16 x i8> zeroinitializer, ptr %1694, align 1, !tbaa !46
  %1695 = getelementptr inbounds i8, ptr %1675, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1695, align 1, !tbaa !46
  %1696 = getelementptr inbounds i8, ptr %1675, i64 64
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 -1>, ptr %1696, align 1, !tbaa !46
  %1697 = getelementptr inbounds i8, ptr %1675, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1>, ptr %1697, align 1, !tbaa !46
  %1698 = getelementptr inbounds i8, ptr %1675, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0>, ptr %1698, align 1, !tbaa !46
  %1699 = getelementptr inbounds i8, ptr %1675, i64 112
  store <8 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1699, align 1, !tbaa !46
  br label %1700

1700:                                             ; preds = %1672, %1692
  %1701 = phi i64 [ 0, %1672 ], [ 120, %1692 ]
  br label %1702

1702:                                             ; preds = %1702, %1700
  %1703 = phi i64 [ %1710, %1702 ], [ %1701, %1700 ]
  %1704 = phi i64 [ %1711, %1702 ], [ 0, %1700 ]
  %1705 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %1703
  %1706 = load i8, ptr %1705, align 1, !tbaa !46
  %1707 = icmp eq i8 %1706, 88
  %1708 = sext i1 %1707 to i8
  %1709 = getelementptr inbounds i8, ptr %1675, i64 %1703
  store i8 %1708, ptr %1709, align 1, !tbaa !46
  %1710 = add nuw nsw i64 %1703, 1
  %1711 = add i64 %1704, 1
  %1712 = icmp eq i64 %1711, 2
  br i1 %1712, label %1713, label %1702, !llvm.loop !618

1713:                                             ; preds = %1702
  br i1 %1691, label %1741, label %1714

1714:                                             ; preds = %1713, %1714
  %1715 = phi i64 [ %1739, %1714 ], [ %1710, %1713 ]
  %1716 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %1715
  %1717 = load i8, ptr %1716, align 1, !tbaa !46
  %1718 = icmp eq i8 %1717, 88
  %1719 = sext i1 %1718 to i8
  %1720 = getelementptr inbounds i8, ptr %1675, i64 %1715
  store i8 %1719, ptr %1720, align 1, !tbaa !46
  %1721 = add nuw nsw i64 %1715, 1
  %1722 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %1721
  %1723 = load i8, ptr %1722, align 1, !tbaa !46
  %1724 = icmp eq i8 %1723, 88
  %1725 = sext i1 %1724 to i8
  %1726 = getelementptr inbounds i8, ptr %1675, i64 %1721
  store i8 %1725, ptr %1726, align 1, !tbaa !46
  %1727 = add nuw nsw i64 %1715, 2
  %1728 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %1727
  %1729 = load i8, ptr %1728, align 1, !tbaa !46
  %1730 = icmp eq i8 %1729, 88
  %1731 = sext i1 %1730 to i8
  %1732 = getelementptr inbounds i8, ptr %1675, i64 %1727
  store i8 %1731, ptr %1732, align 1, !tbaa !46
  %1733 = add nuw nsw i64 %1715, 3
  %1734 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %1733
  %1735 = load i8, ptr %1734, align 1, !tbaa !46
  %1736 = icmp eq i8 %1735, 88
  %1737 = sext i1 %1736 to i8
  %1738 = getelementptr inbounds i8, ptr %1675, i64 %1733
  store i8 %1737, ptr %1738, align 1, !tbaa !46
  %1739 = add nuw nsw i64 %1715, 4
  %1740 = icmp eq i64 %1739, 122
  br i1 %1740, label %1741, label %1714, !llvm.loop !619

1741:                                             ; preds = %1714, %1713
  %1742 = load i32, ptr %33, align 8, !tbaa !292
  %1743 = sext i32 %1742 to i64
  %1744 = getelementptr inbounds i8, ptr %1675, i64 %1743
  %1745 = add i64 %1481, %1498
  %1746 = add i64 %1745, %1510
  %1747 = add i64 %1746, %1522
  %1748 = add i64 %1747, %1534
  %1749 = add i64 %1748, %1546
  %1750 = add i64 %1749, %1558
  %1751 = add i64 %1750, %1570
  %1752 = add i64 %1751, %1582
  %1753 = add i64 %1752, %1594
  %1754 = add i64 %1753, %1606
  %1755 = add i64 %1754, %1674
  %1756 = add i64 %1755, %1743
  %1757 = add i64 %1756, %1486
  %1758 = add i64 %1757, %70
  %1759 = add i64 %1758, 123
  %1760 = sub i64 %1759, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1464)
  %1761 = icmp ugt i64 %1760, 15
  br i1 %1761, label %1762, label %1770

1762:                                             ; preds = %1741
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1744, align 1, !tbaa !46
  %1763 = getelementptr inbounds i8, ptr %1744, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1763, align 1, !tbaa !46
  %1764 = getelementptr inbounds i8, ptr %1744, i64 32
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %1764, align 1, !tbaa !46
  %1765 = getelementptr inbounds i8, ptr %1744, i64 48
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1765, align 1, !tbaa !46
  %1766 = getelementptr inbounds i8, ptr %1744, i64 64
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0>, ptr %1766, align 1, !tbaa !46
  %1767 = getelementptr inbounds i8, ptr %1744, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %1767, align 1, !tbaa !46
  %1768 = getelementptr inbounds i8, ptr %1744, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0>, ptr %1768, align 1, !tbaa !46
  %1769 = getelementptr inbounds i8, ptr %1744, i64 112
  store <8 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1769, align 1, !tbaa !46
  br label %1770

1770:                                             ; preds = %1741, %1762
  %1771 = phi i64 [ 0, %1741 ], [ 120, %1762 ]
  br label %1772

1772:                                             ; preds = %1772, %1770
  %1773 = phi i64 [ %1780, %1772 ], [ %1771, %1770 ]
  %1774 = phi i64 [ %1781, %1772 ], [ 0, %1770 ]
  %1775 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %1773
  %1776 = load i8, ptr %1775, align 1, !tbaa !46
  %1777 = icmp eq i8 %1776, 88
  %1778 = sext i1 %1777 to i8
  %1779 = getelementptr inbounds i8, ptr %1744, i64 %1773
  store i8 %1778, ptr %1779, align 1, !tbaa !46
  %1780 = add nuw nsw i64 %1773, 1
  %1781 = add i64 %1774, 1
  %1782 = icmp eq i64 %1781, 2
  br i1 %1782, label %1783, label %1772, !llvm.loop !620

1783:                                             ; preds = %1772
  br i1 %1761, label %1811, label %1784

1784:                                             ; preds = %1783, %1784
  %1785 = phi i64 [ %1809, %1784 ], [ %1780, %1783 ]
  %1786 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %1785
  %1787 = load i8, ptr %1786, align 1, !tbaa !46
  %1788 = icmp eq i8 %1787, 88
  %1789 = sext i1 %1788 to i8
  %1790 = getelementptr inbounds i8, ptr %1744, i64 %1785
  store i8 %1789, ptr %1790, align 1, !tbaa !46
  %1791 = add nuw nsw i64 %1785, 1
  %1792 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %1791
  %1793 = load i8, ptr %1792, align 1, !tbaa !46
  %1794 = icmp eq i8 %1793, 88
  %1795 = sext i1 %1794 to i8
  %1796 = getelementptr inbounds i8, ptr %1744, i64 %1791
  store i8 %1795, ptr %1796, align 1, !tbaa !46
  %1797 = add nuw nsw i64 %1785, 2
  %1798 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %1797
  %1799 = load i8, ptr %1798, align 1, !tbaa !46
  %1800 = icmp eq i8 %1799, 88
  %1801 = sext i1 %1800 to i8
  %1802 = getelementptr inbounds i8, ptr %1744, i64 %1797
  store i8 %1801, ptr %1802, align 1, !tbaa !46
  %1803 = add nuw nsw i64 %1785, 3
  %1804 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %1803
  %1805 = load i8, ptr %1804, align 1, !tbaa !46
  %1806 = icmp eq i8 %1805, 88
  %1807 = sext i1 %1806 to i8
  %1808 = getelementptr inbounds i8, ptr %1744, i64 %1803
  store i8 %1807, ptr %1808, align 1, !tbaa !46
  %1809 = add nuw nsw i64 %1785, 4
  %1810 = icmp eq i64 %1809, 122
  br i1 %1810, label %1811, label %1784, !llvm.loop !621

1811:                                             ; preds = %1784, %1783
  %1812 = load i32, ptr %33, align 8, !tbaa !292
  %1813 = sext i32 %1812 to i64
  %1814 = getelementptr inbounds i8, ptr %1744, i64 %1813
  %1815 = add i64 %1481, %1498
  %1816 = add i64 %1815, %1510
  %1817 = add i64 %1816, %1522
  %1818 = add i64 %1817, %1534
  %1819 = add i64 %1818, %1546
  %1820 = add i64 %1819, %1558
  %1821 = add i64 %1820, %1570
  %1822 = add i64 %1821, %1582
  %1823 = add i64 %1822, %1594
  %1824 = add i64 %1823, %1606
  %1825 = add i64 %1824, %1674
  %1826 = add i64 %1825, %1743
  %1827 = add i64 %1826, %1813
  %1828 = add i64 %1827, %1486
  %1829 = add i64 %1828, %70
  %1830 = add i64 %1829, 123
  %1831 = sub i64 %1830, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1586)
  %1832 = icmp ugt i64 %1831, 15
  br i1 %1832, label %1833, label %1841

1833:                                             ; preds = %1811
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 -1, i8 -1>, ptr %1814, align 1, !tbaa !46
  %1834 = getelementptr inbounds i8, ptr %1814, i64 16
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1834, align 1, !tbaa !46
  %1835 = getelementptr inbounds i8, ptr %1814, i64 32
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1835, align 1, !tbaa !46
  %1836 = getelementptr inbounds i8, ptr %1814, i64 48
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1836, align 1, !tbaa !46
  %1837 = getelementptr inbounds i8, ptr %1814, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1837, align 1, !tbaa !46
  %1838 = getelementptr inbounds i8, ptr %1814, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1838, align 1, !tbaa !46
  %1839 = getelementptr inbounds i8, ptr %1814, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0>, ptr %1839, align 1, !tbaa !46
  %1840 = getelementptr inbounds i8, ptr %1814, i64 112
  store <8 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1840, align 1, !tbaa !46
  br label %1841

1841:                                             ; preds = %1811, %1833
  %1842 = phi i64 [ 0, %1811 ], [ 120, %1833 ]
  br label %1843

1843:                                             ; preds = %1843, %1841
  %1844 = phi i64 [ %1851, %1843 ], [ %1842, %1841 ]
  %1845 = phi i64 [ %1852, %1843 ], [ 0, %1841 ]
  %1846 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %1844
  %1847 = load i8, ptr %1846, align 1, !tbaa !46
  %1848 = icmp eq i8 %1847, 88
  %1849 = sext i1 %1848 to i8
  %1850 = getelementptr inbounds i8, ptr %1814, i64 %1844
  store i8 %1849, ptr %1850, align 1, !tbaa !46
  %1851 = add nuw nsw i64 %1844, 1
  %1852 = add i64 %1845, 1
  %1853 = icmp eq i64 %1852, 2
  br i1 %1853, label %1854, label %1843, !llvm.loop !622

1854:                                             ; preds = %1843
  br i1 %1832, label %1882, label %1855

1855:                                             ; preds = %1854, %1855
  %1856 = phi i64 [ %1880, %1855 ], [ %1851, %1854 ]
  %1857 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %1856
  %1858 = load i8, ptr %1857, align 1, !tbaa !46
  %1859 = icmp eq i8 %1858, 88
  %1860 = sext i1 %1859 to i8
  %1861 = getelementptr inbounds i8, ptr %1814, i64 %1856
  store i8 %1860, ptr %1861, align 1, !tbaa !46
  %1862 = add nuw nsw i64 %1856, 1
  %1863 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %1862
  %1864 = load i8, ptr %1863, align 1, !tbaa !46
  %1865 = icmp eq i8 %1864, 88
  %1866 = sext i1 %1865 to i8
  %1867 = getelementptr inbounds i8, ptr %1814, i64 %1862
  store i8 %1866, ptr %1867, align 1, !tbaa !46
  %1868 = add nuw nsw i64 %1856, 2
  %1869 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %1868
  %1870 = load i8, ptr %1869, align 1, !tbaa !46
  %1871 = icmp eq i8 %1870, 88
  %1872 = sext i1 %1871 to i8
  %1873 = getelementptr inbounds i8, ptr %1814, i64 %1868
  store i8 %1872, ptr %1873, align 1, !tbaa !46
  %1874 = add nuw nsw i64 %1856, 3
  %1875 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %1874
  %1876 = load i8, ptr %1875, align 1, !tbaa !46
  %1877 = icmp eq i8 %1876, 88
  %1878 = sext i1 %1877 to i8
  %1879 = getelementptr inbounds i8, ptr %1814, i64 %1874
  store i8 %1878, ptr %1879, align 1, !tbaa !46
  %1880 = add nuw nsw i64 %1856, 4
  %1881 = icmp eq i64 %1880, 122
  br i1 %1881, label %1882, label %1855, !llvm.loop !623

1882:                                             ; preds = %1855, %1854
  %1883 = load i32, ptr %33, align 8, !tbaa !292
  %1884 = sext i32 %1883 to i64
  %1885 = getelementptr inbounds i8, ptr %1814, i64 %1884
  %1886 = add i64 %1481, %1498
  %1887 = add i64 %1886, %1510
  %1888 = add i64 %1887, %1522
  %1889 = add i64 %1888, %1534
  %1890 = add i64 %1889, %1546
  %1891 = add i64 %1890, %1558
  %1892 = add i64 %1891, %1570
  %1893 = add i64 %1892, %1582
  %1894 = add i64 %1893, %1594
  %1895 = add i64 %1894, %1606
  %1896 = add i64 %1895, %1674
  %1897 = add i64 %1896, %1743
  %1898 = add i64 %1897, %1813
  %1899 = add i64 %1898, %1884
  %1900 = add i64 %1899, %1486
  %1901 = add i64 %1900, %70
  %1902 = add i64 %1901, 123
  %1903 = sub i64 %1902, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1708)
  %1904 = icmp ugt i64 %1903, 15
  br i1 %1904, label %1905, label %1913

1905:                                             ; preds = %1882
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0>, ptr %1885, align 1, !tbaa !46
  %1906 = getelementptr inbounds i8, ptr %1885, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1906, align 1, !tbaa !46
  %1907 = getelementptr inbounds i8, ptr %1885, i64 32
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1907, align 1, !tbaa !46
  %1908 = getelementptr inbounds i8, ptr %1885, i64 48
  store <16 x i8> <i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1908, align 1, !tbaa !46
  %1909 = getelementptr inbounds i8, ptr %1885, i64 64
  store <16 x i8> <i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1909, align 1, !tbaa !46
  %1910 = getelementptr inbounds i8, ptr %1885, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %1910, align 1, !tbaa !46
  %1911 = getelementptr inbounds i8, ptr %1885, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 -1>, ptr %1911, align 1, !tbaa !46
  %1912 = getelementptr inbounds i8, ptr %1885, i64 112
  store <8 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1912, align 1, !tbaa !46
  br label %1913

1913:                                             ; preds = %1882, %1905
  %1914 = phi i64 [ 0, %1882 ], [ 120, %1905 ]
  br label %1915

1915:                                             ; preds = %1915, %1913
  %1916 = phi i64 [ %1923, %1915 ], [ %1914, %1913 ]
  %1917 = phi i64 [ %1924, %1915 ], [ 0, %1913 ]
  %1918 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %1916
  %1919 = load i8, ptr %1918, align 1, !tbaa !46
  %1920 = icmp eq i8 %1919, 88
  %1921 = sext i1 %1920 to i8
  %1922 = getelementptr inbounds i8, ptr %1885, i64 %1916
  store i8 %1921, ptr %1922, align 1, !tbaa !46
  %1923 = add nuw nsw i64 %1916, 1
  %1924 = add i64 %1917, 1
  %1925 = icmp eq i64 %1924, 2
  br i1 %1925, label %1926, label %1915, !llvm.loop !624

1926:                                             ; preds = %1915
  br i1 %1904, label %1954, label %1927

1927:                                             ; preds = %1926, %1927
  %1928 = phi i64 [ %1952, %1927 ], [ %1923, %1926 ]
  %1929 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %1928
  %1930 = load i8, ptr %1929, align 1, !tbaa !46
  %1931 = icmp eq i8 %1930, 88
  %1932 = sext i1 %1931 to i8
  %1933 = getelementptr inbounds i8, ptr %1885, i64 %1928
  store i8 %1932, ptr %1933, align 1, !tbaa !46
  %1934 = add nuw nsw i64 %1928, 1
  %1935 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %1934
  %1936 = load i8, ptr %1935, align 1, !tbaa !46
  %1937 = icmp eq i8 %1936, 88
  %1938 = sext i1 %1937 to i8
  %1939 = getelementptr inbounds i8, ptr %1885, i64 %1934
  store i8 %1938, ptr %1939, align 1, !tbaa !46
  %1940 = add nuw nsw i64 %1928, 2
  %1941 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %1940
  %1942 = load i8, ptr %1941, align 1, !tbaa !46
  %1943 = icmp eq i8 %1942, 88
  %1944 = sext i1 %1943 to i8
  %1945 = getelementptr inbounds i8, ptr %1885, i64 %1940
  store i8 %1944, ptr %1945, align 1, !tbaa !46
  %1946 = add nuw nsw i64 %1928, 3
  %1947 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %1946
  %1948 = load i8, ptr %1947, align 1, !tbaa !46
  %1949 = icmp eq i8 %1948, 88
  %1950 = sext i1 %1949 to i8
  %1951 = getelementptr inbounds i8, ptr %1885, i64 %1946
  store i8 %1950, ptr %1951, align 1, !tbaa !46
  %1952 = add nuw nsw i64 %1928, 4
  %1953 = icmp eq i64 %1952, 122
  br i1 %1953, label %1954, label %1927, !llvm.loop !625

1954:                                             ; preds = %1927, %1926
  %1955 = load i32, ptr %33, align 8, !tbaa !292
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds i8, ptr %1885, i64 %1956
  %1958 = add i64 %1481, %1498
  %1959 = add i64 %1958, %1510
  %1960 = add i64 %1959, %1522
  %1961 = add i64 %1960, %1534
  %1962 = add i64 %1961, %1546
  %1963 = add i64 %1962, %1558
  %1964 = add i64 %1963, %1570
  %1965 = add i64 %1964, %1582
  %1966 = add i64 %1965, %1594
  %1967 = add i64 %1966, %1606
  %1968 = add i64 %1967, %1674
  %1969 = add i64 %1968, %1743
  %1970 = add i64 %1969, %1813
  %1971 = add i64 %1970, %1884
  %1972 = add i64 %1971, %1956
  %1973 = add i64 %1972, %1486
  %1974 = add i64 %1973, %70
  %1975 = add i64 %1974, 123
  %1976 = sub i64 %1975, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1830)
  %1977 = icmp ugt i64 %1976, 15
  br i1 %1977, label %1978, label %1986

1978:                                             ; preds = %1954
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1>, ptr %1957, align 1, !tbaa !46
  %1979 = getelementptr inbounds i8, ptr %1957, i64 16
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1979, align 1, !tbaa !46
  %1980 = getelementptr inbounds i8, ptr %1957, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1980, align 1, !tbaa !46
  %1981 = getelementptr inbounds i8, ptr %1957, i64 48
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %1981, align 1, !tbaa !46
  %1982 = getelementptr inbounds i8, ptr %1957, i64 64
  store <16 x i8> <i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %1982, align 1, !tbaa !46
  %1983 = getelementptr inbounds i8, ptr %1957, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %1983, align 1, !tbaa !46
  %1984 = getelementptr inbounds i8, ptr %1957, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %1984, align 1, !tbaa !46
  %1985 = getelementptr inbounds i8, ptr %1957, i64 112
  store <8 x i8> zeroinitializer, ptr %1985, align 1, !tbaa !46
  br label %1986

1986:                                             ; preds = %1954, %1978
  %1987 = phi i64 [ 0, %1954 ], [ 120, %1978 ]
  br label %1988

1988:                                             ; preds = %1988, %1986
  %1989 = phi i64 [ %1996, %1988 ], [ %1987, %1986 ]
  %1990 = phi i64 [ %1997, %1988 ], [ 0, %1986 ]
  %1991 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %1989
  %1992 = load i8, ptr %1991, align 1, !tbaa !46
  %1993 = icmp eq i8 %1992, 88
  %1994 = sext i1 %1993 to i8
  %1995 = getelementptr inbounds i8, ptr %1957, i64 %1989
  store i8 %1994, ptr %1995, align 1, !tbaa !46
  %1996 = add nuw nsw i64 %1989, 1
  %1997 = add i64 %1990, 1
  %1998 = icmp eq i64 %1997, 2
  br i1 %1998, label %1999, label %1988, !llvm.loop !626

1999:                                             ; preds = %1988
  br i1 %1977, label %2027, label %2000

2000:                                             ; preds = %1999, %2000
  %2001 = phi i64 [ %2025, %2000 ], [ %1996, %1999 ]
  %2002 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %2001
  %2003 = load i8, ptr %2002, align 1, !tbaa !46
  %2004 = icmp eq i8 %2003, 88
  %2005 = sext i1 %2004 to i8
  %2006 = getelementptr inbounds i8, ptr %1957, i64 %2001
  store i8 %2005, ptr %2006, align 1, !tbaa !46
  %2007 = add nuw nsw i64 %2001, 1
  %2008 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %2007
  %2009 = load i8, ptr %2008, align 1, !tbaa !46
  %2010 = icmp eq i8 %2009, 88
  %2011 = sext i1 %2010 to i8
  %2012 = getelementptr inbounds i8, ptr %1957, i64 %2007
  store i8 %2011, ptr %2012, align 1, !tbaa !46
  %2013 = add nuw nsw i64 %2001, 2
  %2014 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %2013
  %2015 = load i8, ptr %2014, align 1, !tbaa !46
  %2016 = icmp eq i8 %2015, 88
  %2017 = sext i1 %2016 to i8
  %2018 = getelementptr inbounds i8, ptr %1957, i64 %2013
  store i8 %2017, ptr %2018, align 1, !tbaa !46
  %2019 = add nuw nsw i64 %2001, 3
  %2020 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %2019
  %2021 = load i8, ptr %2020, align 1, !tbaa !46
  %2022 = icmp eq i8 %2021, 88
  %2023 = sext i1 %2022 to i8
  %2024 = getelementptr inbounds i8, ptr %1957, i64 %2019
  store i8 %2023, ptr %2024, align 1, !tbaa !46
  %2025 = add nuw nsw i64 %2001, 4
  %2026 = icmp eq i64 %2025, 122
  br i1 %2026, label %2027, label %2000, !llvm.loop !627

2027:                                             ; preds = %2000, %1999
  %2028 = load i32, ptr %33, align 8, !tbaa !292
  %2029 = sext i32 %2028 to i64
  %2030 = getelementptr inbounds i8, ptr %1957, i64 %2029
  %2031 = add i64 %1481, %1498
  %2032 = add i64 %2031, %1510
  %2033 = add i64 %2032, %1522
  %2034 = add i64 %2033, %1534
  %2035 = add i64 %2034, %1546
  %2036 = add i64 %2035, %1558
  %2037 = add i64 %2036, %1570
  %2038 = add i64 %2037, %1582
  %2039 = add i64 %2038, %1594
  %2040 = add i64 %2039, %1606
  %2041 = add i64 %2040, %1674
  %2042 = add i64 %2041, %1743
  %2043 = add i64 %2042, %1813
  %2044 = add i64 %2043, %1884
  %2045 = add i64 %2044, %1956
  %2046 = add i64 %2045, %2029
  %2047 = add i64 %2046, %1486
  %2048 = add i64 %2047, %70
  %2049 = add i64 %2048, 123
  %2050 = sub i64 %2049, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 1952)
  %2051 = icmp ugt i64 %2050, 15
  br i1 %2051, label %2052, label %2060

2052:                                             ; preds = %2027
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2030, align 1, !tbaa !46
  %2053 = getelementptr inbounds i8, ptr %2030, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2053, align 1, !tbaa !46
  %2054 = getelementptr inbounds i8, ptr %2030, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %2054, align 1, !tbaa !46
  %2055 = getelementptr inbounds i8, ptr %2030, i64 48
  store <16 x i8> zeroinitializer, ptr %2055, align 1, !tbaa !46
  %2056 = getelementptr inbounds i8, ptr %2030, i64 64
  store <16 x i8> <i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %2056, align 1, !tbaa !46
  %2057 = getelementptr inbounds i8, ptr %2030, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %2057, align 1, !tbaa !46
  %2058 = getelementptr inbounds i8, ptr %2030, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2058, align 1, !tbaa !46
  %2059 = getelementptr inbounds i8, ptr %2030, i64 112
  store <8 x i8> zeroinitializer, ptr %2059, align 1, !tbaa !46
  br label %2060

2060:                                             ; preds = %2027, %2052
  %2061 = phi i64 [ 0, %2027 ], [ 120, %2052 ]
  br label %2062

2062:                                             ; preds = %2062, %2060
  %2063 = phi i64 [ %2070, %2062 ], [ %2061, %2060 ]
  %2064 = phi i64 [ %2071, %2062 ], [ 0, %2060 ]
  %2065 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %2063
  %2066 = load i8, ptr %2065, align 1, !tbaa !46
  %2067 = icmp eq i8 %2066, 88
  %2068 = sext i1 %2067 to i8
  %2069 = getelementptr inbounds i8, ptr %2030, i64 %2063
  store i8 %2068, ptr %2069, align 1, !tbaa !46
  %2070 = add nuw nsw i64 %2063, 1
  %2071 = add i64 %2064, 1
  %2072 = icmp eq i64 %2071, 2
  br i1 %2072, label %2073, label %2062, !llvm.loop !628

2073:                                             ; preds = %2062
  br i1 %2051, label %2101, label %2074

2074:                                             ; preds = %2073, %2074
  %2075 = phi i64 [ %2099, %2074 ], [ %2070, %2073 ]
  %2076 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %2075
  %2077 = load i8, ptr %2076, align 1, !tbaa !46
  %2078 = icmp eq i8 %2077, 88
  %2079 = sext i1 %2078 to i8
  %2080 = getelementptr inbounds i8, ptr %2030, i64 %2075
  store i8 %2079, ptr %2080, align 1, !tbaa !46
  %2081 = add nuw nsw i64 %2075, 1
  %2082 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %2081
  %2083 = load i8, ptr %2082, align 1, !tbaa !46
  %2084 = icmp eq i8 %2083, 88
  %2085 = sext i1 %2084 to i8
  %2086 = getelementptr inbounds i8, ptr %2030, i64 %2081
  store i8 %2085, ptr %2086, align 1, !tbaa !46
  %2087 = add nuw nsw i64 %2075, 2
  %2088 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %2087
  %2089 = load i8, ptr %2088, align 1, !tbaa !46
  %2090 = icmp eq i8 %2089, 88
  %2091 = sext i1 %2090 to i8
  %2092 = getelementptr inbounds i8, ptr %2030, i64 %2087
  store i8 %2091, ptr %2092, align 1, !tbaa !46
  %2093 = add nuw nsw i64 %2075, 3
  %2094 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %2093
  %2095 = load i8, ptr %2094, align 1, !tbaa !46
  %2096 = icmp eq i8 %2095, 88
  %2097 = sext i1 %2096 to i8
  %2098 = getelementptr inbounds i8, ptr %2030, i64 %2093
  store i8 %2097, ptr %2098, align 1, !tbaa !46
  %2099 = add nuw nsw i64 %2075, 4
  %2100 = icmp eq i64 %2099, 122
  br i1 %2100, label %2101, label %2074, !llvm.loop !629

2101:                                             ; preds = %2074, %2073
  %2102 = load i32, ptr %33, align 8, !tbaa !292
  %2103 = sext i32 %2102 to i64
  %2104 = getelementptr inbounds i8, ptr %2030, i64 %2103
  %2105 = add i64 %1481, %1498
  %2106 = add i64 %2105, %1510
  %2107 = add i64 %2106, %1522
  %2108 = add i64 %2107, %1534
  %2109 = add i64 %2108, %1546
  %2110 = add i64 %2109, %1558
  %2111 = add i64 %2110, %1570
  %2112 = add i64 %2111, %1582
  %2113 = add i64 %2112, %1594
  %2114 = add i64 %2113, %1606
  %2115 = add i64 %2114, %1674
  %2116 = add i64 %2115, %1743
  %2117 = add i64 %2116, %1813
  %2118 = add i64 %2117, %1884
  %2119 = add i64 %2118, %1956
  %2120 = add i64 %2119, %2029
  %2121 = add i64 %2120, %2103
  %2122 = add i64 %2121, %1486
  %2123 = add i64 %2122, %70
  %2124 = add i64 %2123, 123
  %2125 = sub i64 %2124, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2074)
  %2126 = icmp ugt i64 %2125, 15
  br i1 %2126, label %2127, label %2135

2127:                                             ; preds = %2101
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2104, align 1, !tbaa !46
  %2128 = getelementptr inbounds i8, ptr %2104, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0>, ptr %2128, align 1, !tbaa !46
  %2129 = getelementptr inbounds i8, ptr %2104, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 -1, i8 -1, i8 -1, i8 -1, i8 0>, ptr %2129, align 1, !tbaa !46
  %2130 = getelementptr inbounds i8, ptr %2104, i64 48
  store <16 x i8> zeroinitializer, ptr %2130, align 1, !tbaa !46
  %2131 = getelementptr inbounds i8, ptr %2104, i64 64
  store <16 x i8> zeroinitializer, ptr %2131, align 1, !tbaa !46
  %2132 = getelementptr inbounds i8, ptr %2104, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %2132, align 1, !tbaa !46
  %2133 = getelementptr inbounds i8, ptr %2104, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2133, align 1, !tbaa !46
  %2134 = getelementptr inbounds i8, ptr %2104, i64 112
  store <8 x i8> zeroinitializer, ptr %2134, align 1, !tbaa !46
  br label %2135

2135:                                             ; preds = %2101, %2127
  %2136 = phi i64 [ 0, %2101 ], [ 120, %2127 ]
  br label %2137

2137:                                             ; preds = %2137, %2135
  %2138 = phi i64 [ %2145, %2137 ], [ %2136, %2135 ]
  %2139 = phi i64 [ %2146, %2137 ], [ 0, %2135 ]
  %2140 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %2138
  %2141 = load i8, ptr %2140, align 1, !tbaa !46
  %2142 = icmp eq i8 %2141, 88
  %2143 = sext i1 %2142 to i8
  %2144 = getelementptr inbounds i8, ptr %2104, i64 %2138
  store i8 %2143, ptr %2144, align 1, !tbaa !46
  %2145 = add nuw nsw i64 %2138, 1
  %2146 = add i64 %2139, 1
  %2147 = icmp eq i64 %2146, 2
  br i1 %2147, label %2148, label %2137, !llvm.loop !630

2148:                                             ; preds = %2137
  br i1 %2126, label %2176, label %2149

2149:                                             ; preds = %2148, %2149
  %2150 = phi i64 [ %2174, %2149 ], [ %2145, %2148 ]
  %2151 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %2150
  %2152 = load i8, ptr %2151, align 1, !tbaa !46
  %2153 = icmp eq i8 %2152, 88
  %2154 = sext i1 %2153 to i8
  %2155 = getelementptr inbounds i8, ptr %2104, i64 %2150
  store i8 %2154, ptr %2155, align 1, !tbaa !46
  %2156 = add nuw nsw i64 %2150, 1
  %2157 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %2156
  %2158 = load i8, ptr %2157, align 1, !tbaa !46
  %2159 = icmp eq i8 %2158, 88
  %2160 = sext i1 %2159 to i8
  %2161 = getelementptr inbounds i8, ptr %2104, i64 %2156
  store i8 %2160, ptr %2161, align 1, !tbaa !46
  %2162 = add nuw nsw i64 %2150, 2
  %2163 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %2162
  %2164 = load i8, ptr %2163, align 1, !tbaa !46
  %2165 = icmp eq i8 %2164, 88
  %2166 = sext i1 %2165 to i8
  %2167 = getelementptr inbounds i8, ptr %2104, i64 %2162
  store i8 %2166, ptr %2167, align 1, !tbaa !46
  %2168 = add nuw nsw i64 %2150, 3
  %2169 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %2168
  %2170 = load i8, ptr %2169, align 1, !tbaa !46
  %2171 = icmp eq i8 %2170, 88
  %2172 = sext i1 %2171 to i8
  %2173 = getelementptr inbounds i8, ptr %2104, i64 %2168
  store i8 %2172, ptr %2173, align 1, !tbaa !46
  %2174 = add nuw nsw i64 %2150, 4
  %2175 = icmp eq i64 %2174, 122
  br i1 %2175, label %2176, label %2149, !llvm.loop !631

2176:                                             ; preds = %2149, %2148
  %2177 = load i32, ptr %33, align 8, !tbaa !292
  %2178 = sext i32 %2177 to i64
  %2179 = getelementptr inbounds i8, ptr %2104, i64 %2178
  %2180 = add i64 %1481, %1498
  %2181 = add i64 %2180, %1510
  %2182 = add i64 %2181, %1522
  %2183 = add i64 %2182, %1534
  %2184 = add i64 %2183, %1546
  %2185 = add i64 %2184, %1558
  %2186 = add i64 %2185, %1570
  %2187 = add i64 %2186, %1582
  %2188 = add i64 %2187, %1594
  %2189 = add i64 %2188, %1606
  %2190 = add i64 %2189, %1674
  %2191 = add i64 %2190, %1743
  %2192 = add i64 %2191, %1813
  %2193 = add i64 %2192, %1884
  %2194 = add i64 %2193, %1956
  %2195 = add i64 %2194, %2029
  %2196 = add i64 %2195, %2103
  %2197 = add i64 %2196, %2178
  %2198 = add i64 %2197, %1486
  %2199 = add i64 %2198, %70
  %2200 = add i64 %2199, 123
  %2201 = sub i64 %2200, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2196)
  %2202 = icmp ugt i64 %2201, 15
  br i1 %2202, label %2203, label %2211

2203:                                             ; preds = %2176
  store <16 x i8> <i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2179, align 1, !tbaa !46
  %2204 = getelementptr inbounds i8, ptr %2179, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %2204, align 1, !tbaa !46
  %2205 = getelementptr inbounds i8, ptr %2179, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0>, ptr %2205, align 1, !tbaa !46
  %2206 = getelementptr inbounds i8, ptr %2179, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %2206, align 1, !tbaa !46
  %2207 = getelementptr inbounds i8, ptr %2179, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2207, align 1, !tbaa !46
  %2208 = getelementptr inbounds i8, ptr %2179, i64 80
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1>, ptr %2208, align 1, !tbaa !46
  %2209 = getelementptr inbounds i8, ptr %2179, i64 96
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2209, align 1, !tbaa !46
  %2210 = getelementptr inbounds i8, ptr %2179, i64 112
  store <8 x i8> zeroinitializer, ptr %2210, align 1, !tbaa !46
  br label %2211

2211:                                             ; preds = %2176, %2203
  %2212 = phi i64 [ 0, %2176 ], [ 120, %2203 ]
  br label %2213

2213:                                             ; preds = %2213, %2211
  %2214 = phi i64 [ %2221, %2213 ], [ %2212, %2211 ]
  %2215 = phi i64 [ %2222, %2213 ], [ 0, %2211 ]
  %2216 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %2214
  %2217 = load i8, ptr %2216, align 1, !tbaa !46
  %2218 = icmp eq i8 %2217, 88
  %2219 = sext i1 %2218 to i8
  %2220 = getelementptr inbounds i8, ptr %2179, i64 %2214
  store i8 %2219, ptr %2220, align 1, !tbaa !46
  %2221 = add nuw nsw i64 %2214, 1
  %2222 = add i64 %2215, 1
  %2223 = icmp eq i64 %2222, 2
  br i1 %2223, label %2224, label %2213, !llvm.loop !632

2224:                                             ; preds = %2213
  br i1 %2202, label %2252, label %2225

2225:                                             ; preds = %2224, %2225
  %2226 = phi i64 [ %2250, %2225 ], [ %2221, %2224 ]
  %2227 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %2226
  %2228 = load i8, ptr %2227, align 1, !tbaa !46
  %2229 = icmp eq i8 %2228, 88
  %2230 = sext i1 %2229 to i8
  %2231 = getelementptr inbounds i8, ptr %2179, i64 %2226
  store i8 %2230, ptr %2231, align 1, !tbaa !46
  %2232 = add nuw nsw i64 %2226, 1
  %2233 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %2232
  %2234 = load i8, ptr %2233, align 1, !tbaa !46
  %2235 = icmp eq i8 %2234, 88
  %2236 = sext i1 %2235 to i8
  %2237 = getelementptr inbounds i8, ptr %2179, i64 %2232
  store i8 %2236, ptr %2237, align 1, !tbaa !46
  %2238 = add nuw nsw i64 %2226, 2
  %2239 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %2238
  %2240 = load i8, ptr %2239, align 1, !tbaa !46
  %2241 = icmp eq i8 %2240, 88
  %2242 = sext i1 %2241 to i8
  %2243 = getelementptr inbounds i8, ptr %2179, i64 %2238
  store i8 %2242, ptr %2243, align 1, !tbaa !46
  %2244 = add nuw nsw i64 %2226, 3
  %2245 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %2244
  %2246 = load i8, ptr %2245, align 1, !tbaa !46
  %2247 = icmp eq i8 %2246, 88
  %2248 = sext i1 %2247 to i8
  %2249 = getelementptr inbounds i8, ptr %2179, i64 %2244
  store i8 %2248, ptr %2249, align 1, !tbaa !46
  %2250 = add nuw nsw i64 %2226, 4
  %2251 = icmp eq i64 %2250, 122
  br i1 %2251, label %2252, label %2225, !llvm.loop !633

2252:                                             ; preds = %2225, %2224
  %2253 = load i32, ptr %33, align 8, !tbaa !292
  %2254 = sext i32 %2253 to i64
  %2255 = getelementptr inbounds i8, ptr %2179, i64 %2254
  %2256 = add i64 %1481, %1498
  %2257 = add i64 %2256, %1510
  %2258 = add i64 %2257, %1522
  %2259 = add i64 %2258, %1534
  %2260 = add i64 %2259, %1546
  %2261 = add i64 %2260, %1558
  %2262 = add i64 %2261, %1570
  %2263 = add i64 %2262, %1582
  %2264 = add i64 %2263, %1594
  %2265 = add i64 %2264, %1606
  %2266 = add i64 %2265, %1674
  %2267 = add i64 %2266, %1743
  %2268 = add i64 %2267, %1813
  %2269 = add i64 %2268, %1884
  %2270 = add i64 %2269, %1956
  %2271 = add i64 %2270, %2029
  %2272 = add i64 %2271, %2103
  %2273 = add i64 %2272, %2178
  %2274 = add i64 %2273, %2254
  %2275 = add i64 %2274, %1486
  %2276 = add i64 %2275, %70
  %2277 = add i64 %2276, 123
  %2278 = sub i64 %2277, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2318)
  %2279 = icmp ugt i64 %2278, 15
  br i1 %2279, label %2280, label %2288

2280:                                             ; preds = %2252
  store <16 x i8> <i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2255, align 1, !tbaa !46
  %2281 = getelementptr inbounds i8, ptr %2255, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2281, align 1, !tbaa !46
  %2282 = getelementptr inbounds i8, ptr %2255, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %2282, align 1, !tbaa !46
  %2283 = getelementptr inbounds i8, ptr %2255, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2283, align 1, !tbaa !46
  %2284 = getelementptr inbounds i8, ptr %2255, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2284, align 1, !tbaa !46
  %2285 = getelementptr inbounds i8, ptr %2255, i64 80
  store <16 x i8> zeroinitializer, ptr %2285, align 1, !tbaa !46
  %2286 = getelementptr inbounds i8, ptr %2255, i64 96
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2286, align 1, !tbaa !46
  %2287 = getelementptr inbounds i8, ptr %2255, i64 112
  store <8 x i8> zeroinitializer, ptr %2287, align 1, !tbaa !46
  br label %2288

2288:                                             ; preds = %2252, %2280
  %2289 = phi i64 [ 0, %2252 ], [ 120, %2280 ]
  br label %2290

2290:                                             ; preds = %2290, %2288
  %2291 = phi i64 [ %2298, %2290 ], [ %2289, %2288 ]
  %2292 = phi i64 [ %2299, %2290 ], [ 0, %2288 ]
  %2293 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %2291
  %2294 = load i8, ptr %2293, align 1, !tbaa !46
  %2295 = icmp eq i8 %2294, 88
  %2296 = sext i1 %2295 to i8
  %2297 = getelementptr inbounds i8, ptr %2255, i64 %2291
  store i8 %2296, ptr %2297, align 1, !tbaa !46
  %2298 = add nuw nsw i64 %2291, 1
  %2299 = add i64 %2292, 1
  %2300 = icmp eq i64 %2299, 2
  br i1 %2300, label %2301, label %2290, !llvm.loop !634

2301:                                             ; preds = %2290
  br i1 %2279, label %2329, label %2302

2302:                                             ; preds = %2301, %2302
  %2303 = phi i64 [ %2327, %2302 ], [ %2298, %2301 ]
  %2304 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %2303
  %2305 = load i8, ptr %2304, align 1, !tbaa !46
  %2306 = icmp eq i8 %2305, 88
  %2307 = sext i1 %2306 to i8
  %2308 = getelementptr inbounds i8, ptr %2255, i64 %2303
  store i8 %2307, ptr %2308, align 1, !tbaa !46
  %2309 = add nuw nsw i64 %2303, 1
  %2310 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %2309
  %2311 = load i8, ptr %2310, align 1, !tbaa !46
  %2312 = icmp eq i8 %2311, 88
  %2313 = sext i1 %2312 to i8
  %2314 = getelementptr inbounds i8, ptr %2255, i64 %2309
  store i8 %2313, ptr %2314, align 1, !tbaa !46
  %2315 = add nuw nsw i64 %2303, 2
  %2316 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %2315
  %2317 = load i8, ptr %2316, align 1, !tbaa !46
  %2318 = icmp eq i8 %2317, 88
  %2319 = sext i1 %2318 to i8
  %2320 = getelementptr inbounds i8, ptr %2255, i64 %2315
  store i8 %2319, ptr %2320, align 1, !tbaa !46
  %2321 = add nuw nsw i64 %2303, 3
  %2322 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %2321
  %2323 = load i8, ptr %2322, align 1, !tbaa !46
  %2324 = icmp eq i8 %2323, 88
  %2325 = sext i1 %2324 to i8
  %2326 = getelementptr inbounds i8, ptr %2255, i64 %2321
  store i8 %2325, ptr %2326, align 1, !tbaa !46
  %2327 = add nuw nsw i64 %2303, 4
  %2328 = icmp eq i64 %2327, 122
  br i1 %2328, label %2329, label %2302, !llvm.loop !635

2329:                                             ; preds = %2302, %2301
  %2330 = load i32, ptr %33, align 8, !tbaa !292
  %2331 = sext i32 %2330 to i64
  %2332 = getelementptr inbounds i8, ptr %2255, i64 %2331
  %2333 = add i64 %1481, %1498
  %2334 = add i64 %2333, %1510
  %2335 = add i64 %2334, %1522
  %2336 = add i64 %2335, %1534
  %2337 = add i64 %2336, %1546
  %2338 = add i64 %2337, %1558
  %2339 = add i64 %2338, %1570
  %2340 = add i64 %2339, %1582
  %2341 = add i64 %2340, %1594
  %2342 = add i64 %2341, %1606
  %2343 = add i64 %2342, %1674
  %2344 = add i64 %2343, %1743
  %2345 = add i64 %2344, %1813
  %2346 = add i64 %2345, %1884
  %2347 = add i64 %2346, %1956
  %2348 = add i64 %2347, %2029
  %2349 = add i64 %2348, %2103
  %2350 = add i64 %2349, %2178
  %2351 = add i64 %2350, %2254
  %2352 = add i64 %2351, %2331
  %2353 = add i64 %2352, %1486
  %2354 = add i64 %2353, %70
  %2355 = add i64 %2354, 123
  %2356 = sub i64 %2355, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2440)
  %2357 = icmp ugt i64 %2356, 15
  br i1 %2357, label %2358, label %2366

2358:                                             ; preds = %2329
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2332, align 1, !tbaa !46
  %2359 = getelementptr inbounds i8, ptr %2332, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %2359, align 1, !tbaa !46
  %2360 = getelementptr inbounds i8, ptr %2332, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2360, align 1, !tbaa !46
  %2361 = getelementptr inbounds i8, ptr %2332, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2361, align 1, !tbaa !46
  %2362 = getelementptr inbounds i8, ptr %2332, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %2362, align 1, !tbaa !46
  %2363 = getelementptr inbounds i8, ptr %2332, i64 80
  store <16 x i8> zeroinitializer, ptr %2363, align 1, !tbaa !46
  %2364 = getelementptr inbounds i8, ptr %2332, i64 96
  store <16 x i8> <i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2364, align 1, !tbaa !46
  %2365 = getelementptr inbounds i8, ptr %2332, i64 112
  store <8 x i8> zeroinitializer, ptr %2365, align 1, !tbaa !46
  br label %2366

2366:                                             ; preds = %2329, %2358
  %2367 = phi i64 [ 0, %2329 ], [ 120, %2358 ]
  br label %2368

2368:                                             ; preds = %2368, %2366
  %2369 = phi i64 [ %2376, %2368 ], [ %2367, %2366 ]
  %2370 = phi i64 [ %2377, %2368 ], [ 0, %2366 ]
  %2371 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %2369
  %2372 = load i8, ptr %2371, align 1, !tbaa !46
  %2373 = icmp eq i8 %2372, 88
  %2374 = sext i1 %2373 to i8
  %2375 = getelementptr inbounds i8, ptr %2332, i64 %2369
  store i8 %2374, ptr %2375, align 1, !tbaa !46
  %2376 = add nuw nsw i64 %2369, 1
  %2377 = add i64 %2370, 1
  %2378 = icmp eq i64 %2377, 2
  br i1 %2378, label %2379, label %2368, !llvm.loop !636

2379:                                             ; preds = %2368
  br i1 %2357, label %2407, label %2380

2380:                                             ; preds = %2379, %2380
  %2381 = phi i64 [ %2405, %2380 ], [ %2376, %2379 ]
  %2382 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %2381
  %2383 = load i8, ptr %2382, align 1, !tbaa !46
  %2384 = icmp eq i8 %2383, 88
  %2385 = sext i1 %2384 to i8
  %2386 = getelementptr inbounds i8, ptr %2332, i64 %2381
  store i8 %2385, ptr %2386, align 1, !tbaa !46
  %2387 = add nuw nsw i64 %2381, 1
  %2388 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %2387
  %2389 = load i8, ptr %2388, align 1, !tbaa !46
  %2390 = icmp eq i8 %2389, 88
  %2391 = sext i1 %2390 to i8
  %2392 = getelementptr inbounds i8, ptr %2332, i64 %2387
  store i8 %2391, ptr %2392, align 1, !tbaa !46
  %2393 = add nuw nsw i64 %2381, 2
  %2394 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %2393
  %2395 = load i8, ptr %2394, align 1, !tbaa !46
  %2396 = icmp eq i8 %2395, 88
  %2397 = sext i1 %2396 to i8
  %2398 = getelementptr inbounds i8, ptr %2332, i64 %2393
  store i8 %2397, ptr %2398, align 1, !tbaa !46
  %2399 = add nuw nsw i64 %2381, 3
  %2400 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %2399
  %2401 = load i8, ptr %2400, align 1, !tbaa !46
  %2402 = icmp eq i8 %2401, 88
  %2403 = sext i1 %2402 to i8
  %2404 = getelementptr inbounds i8, ptr %2332, i64 %2399
  store i8 %2403, ptr %2404, align 1, !tbaa !46
  %2405 = add nuw nsw i64 %2381, 4
  %2406 = icmp eq i64 %2405, 122
  br i1 %2406, label %2407, label %2380, !llvm.loop !637

2407:                                             ; preds = %2380, %2379
  %2408 = load i32, ptr %33, align 8, !tbaa !292
  %2409 = sext i32 %2408 to i64
  %2410 = getelementptr inbounds i8, ptr %2332, i64 %2409
  %2411 = add i64 %1481, %1498
  %2412 = add i64 %2411, %1510
  %2413 = add i64 %2412, %1522
  %2414 = add i64 %2413, %1534
  %2415 = add i64 %2414, %1546
  %2416 = add i64 %2415, %1558
  %2417 = add i64 %2416, %1570
  %2418 = add i64 %2417, %1582
  %2419 = add i64 %2418, %1594
  %2420 = add i64 %2419, %1606
  %2421 = add i64 %2420, %1674
  %2422 = add i64 %2421, %1743
  %2423 = add i64 %2422, %1813
  %2424 = add i64 %2423, %1884
  %2425 = add i64 %2424, %1956
  %2426 = add i64 %2425, %2029
  %2427 = add i64 %2426, %2103
  %2428 = add i64 %2427, %2178
  %2429 = add i64 %2428, %2254
  %2430 = add i64 %2429, %2331
  %2431 = add i64 %2430, %2409
  %2432 = add i64 %2431, %1486
  %2433 = add i64 %2432, %70
  %2434 = add i64 %2433, 123
  %2435 = sub i64 %2434, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2562)
  %2436 = icmp ugt i64 %2435, 15
  br i1 %2436, label %2437, label %2445

2437:                                             ; preds = %2407
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2410, align 1, !tbaa !46
  %2438 = getelementptr inbounds i8, ptr %2410, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2438, align 1, !tbaa !46
  %2439 = getelementptr inbounds i8, ptr %2410, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %2439, align 1, !tbaa !46
  %2440 = getelementptr inbounds i8, ptr %2410, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %2440, align 1, !tbaa !46
  %2441 = getelementptr inbounds i8, ptr %2410, i64 64
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2441, align 1, !tbaa !46
  %2442 = getelementptr inbounds i8, ptr %2410, i64 80
  store <16 x i8> zeroinitializer, ptr %2442, align 1, !tbaa !46
  %2443 = getelementptr inbounds i8, ptr %2410, i64 96
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2443, align 1, !tbaa !46
  %2444 = getelementptr inbounds i8, ptr %2410, i64 112
  store <8 x i8> zeroinitializer, ptr %2444, align 1, !tbaa !46
  br label %2445

2445:                                             ; preds = %2407, %2437
  %2446 = phi i64 [ 0, %2407 ], [ 120, %2437 ]
  br label %2447

2447:                                             ; preds = %2447, %2445
  %2448 = phi i64 [ %2455, %2447 ], [ %2446, %2445 ]
  %2449 = phi i64 [ %2456, %2447 ], [ 0, %2445 ]
  %2450 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %2448
  %2451 = load i8, ptr %2450, align 1, !tbaa !46
  %2452 = icmp eq i8 %2451, 88
  %2453 = sext i1 %2452 to i8
  %2454 = getelementptr inbounds i8, ptr %2410, i64 %2448
  store i8 %2453, ptr %2454, align 1, !tbaa !46
  %2455 = add nuw nsw i64 %2448, 1
  %2456 = add i64 %2449, 1
  %2457 = icmp eq i64 %2456, 2
  br i1 %2457, label %2458, label %2447, !llvm.loop !638

2458:                                             ; preds = %2447
  br i1 %2436, label %2486, label %2459

2459:                                             ; preds = %2458, %2459
  %2460 = phi i64 [ %2484, %2459 ], [ %2455, %2458 ]
  %2461 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %2460
  %2462 = load i8, ptr %2461, align 1, !tbaa !46
  %2463 = icmp eq i8 %2462, 88
  %2464 = sext i1 %2463 to i8
  %2465 = getelementptr inbounds i8, ptr %2410, i64 %2460
  store i8 %2464, ptr %2465, align 1, !tbaa !46
  %2466 = add nuw nsw i64 %2460, 1
  %2467 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %2466
  %2468 = load i8, ptr %2467, align 1, !tbaa !46
  %2469 = icmp eq i8 %2468, 88
  %2470 = sext i1 %2469 to i8
  %2471 = getelementptr inbounds i8, ptr %2410, i64 %2466
  store i8 %2470, ptr %2471, align 1, !tbaa !46
  %2472 = add nuw nsw i64 %2460, 2
  %2473 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %2472
  %2474 = load i8, ptr %2473, align 1, !tbaa !46
  %2475 = icmp eq i8 %2474, 88
  %2476 = sext i1 %2475 to i8
  %2477 = getelementptr inbounds i8, ptr %2410, i64 %2472
  store i8 %2476, ptr %2477, align 1, !tbaa !46
  %2478 = add nuw nsw i64 %2460, 3
  %2479 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %2478
  %2480 = load i8, ptr %2479, align 1, !tbaa !46
  %2481 = icmp eq i8 %2480, 88
  %2482 = sext i1 %2481 to i8
  %2483 = getelementptr inbounds i8, ptr %2410, i64 %2478
  store i8 %2482, ptr %2483, align 1, !tbaa !46
  %2484 = add nuw nsw i64 %2460, 4
  %2485 = icmp eq i64 %2484, 122
  br i1 %2485, label %2486, label %2459, !llvm.loop !639

2486:                                             ; preds = %2459, %2458
  %2487 = load i32, ptr %33, align 8, !tbaa !292
  %2488 = sext i32 %2487 to i64
  %2489 = getelementptr inbounds i8, ptr %2410, i64 %2488
  %2490 = add i64 %1481, %1498
  %2491 = add i64 %2490, %1510
  %2492 = add i64 %2491, %1522
  %2493 = add i64 %2492, %1534
  %2494 = add i64 %2493, %1546
  %2495 = add i64 %2494, %1558
  %2496 = add i64 %2495, %1570
  %2497 = add i64 %2496, %1582
  %2498 = add i64 %2497, %1594
  %2499 = add i64 %2498, %1606
  %2500 = add i64 %2499, %1674
  %2501 = add i64 %2500, %1743
  %2502 = add i64 %2501, %1813
  %2503 = add i64 %2502, %1884
  %2504 = add i64 %2503, %1956
  %2505 = add i64 %2504, %2029
  %2506 = add i64 %2505, %2103
  %2507 = add i64 %2506, %2178
  %2508 = add i64 %2507, %2254
  %2509 = add i64 %2508, %2331
  %2510 = add i64 %2509, %2409
  %2511 = add i64 %2510, %2488
  %2512 = add i64 %2511, %1486
  %2513 = add i64 %2512, %70
  %2514 = add i64 %2513, 123
  %2515 = sub i64 %2514, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2684)
  %2516 = icmp ugt i64 %2515, 15
  br i1 %2516, label %2517, label %2525

2517:                                             ; preds = %2486
  store <16 x i8> zeroinitializer, ptr %2489, align 1, !tbaa !46
  %2518 = getelementptr inbounds i8, ptr %2489, i64 16
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2518, align 1, !tbaa !46
  %2519 = getelementptr inbounds i8, ptr %2489, i64 32
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2519, align 1, !tbaa !46
  %2520 = getelementptr inbounds i8, ptr %2489, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2520, align 1, !tbaa !46
  %2521 = getelementptr inbounds i8, ptr %2489, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0>, ptr %2521, align 1, !tbaa !46
  %2522 = getelementptr inbounds i8, ptr %2489, i64 80
  store <16 x i8> zeroinitializer, ptr %2522, align 1, !tbaa !46
  %2523 = getelementptr inbounds i8, ptr %2489, i64 96
  store <16 x i8> zeroinitializer, ptr %2523, align 1, !tbaa !46
  %2524 = getelementptr inbounds i8, ptr %2489, i64 112
  store <8 x i8> zeroinitializer, ptr %2524, align 1, !tbaa !46
  br label %2525

2525:                                             ; preds = %2486, %2517
  %2526 = phi i64 [ 0, %2486 ], [ 120, %2517 ]
  br label %2527

2527:                                             ; preds = %2527, %2525
  %2528 = phi i64 [ %2535, %2527 ], [ %2526, %2525 ]
  %2529 = phi i64 [ %2536, %2527 ], [ 0, %2525 ]
  %2530 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %2528
  %2531 = load i8, ptr %2530, align 1, !tbaa !46
  %2532 = icmp eq i8 %2531, 88
  %2533 = sext i1 %2532 to i8
  %2534 = getelementptr inbounds i8, ptr %2489, i64 %2528
  store i8 %2533, ptr %2534, align 1, !tbaa !46
  %2535 = add nuw nsw i64 %2528, 1
  %2536 = add i64 %2529, 1
  %2537 = icmp eq i64 %2536, 2
  br i1 %2537, label %2538, label %2527, !llvm.loop !640

2538:                                             ; preds = %2527
  br i1 %2516, label %2566, label %2539

2539:                                             ; preds = %2538, %2539
  %2540 = phi i64 [ %2564, %2539 ], [ %2535, %2538 ]
  %2541 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %2540
  %2542 = load i8, ptr %2541, align 1, !tbaa !46
  %2543 = icmp eq i8 %2542, 88
  %2544 = sext i1 %2543 to i8
  %2545 = getelementptr inbounds i8, ptr %2489, i64 %2540
  store i8 %2544, ptr %2545, align 1, !tbaa !46
  %2546 = add nuw nsw i64 %2540, 1
  %2547 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %2546
  %2548 = load i8, ptr %2547, align 1, !tbaa !46
  %2549 = icmp eq i8 %2548, 88
  %2550 = sext i1 %2549 to i8
  %2551 = getelementptr inbounds i8, ptr %2489, i64 %2546
  store i8 %2550, ptr %2551, align 1, !tbaa !46
  %2552 = add nuw nsw i64 %2540, 2
  %2553 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %2552
  %2554 = load i8, ptr %2553, align 1, !tbaa !46
  %2555 = icmp eq i8 %2554, 88
  %2556 = sext i1 %2555 to i8
  %2557 = getelementptr inbounds i8, ptr %2489, i64 %2552
  store i8 %2556, ptr %2557, align 1, !tbaa !46
  %2558 = add nuw nsw i64 %2540, 3
  %2559 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %2558
  %2560 = load i8, ptr %2559, align 1, !tbaa !46
  %2561 = icmp eq i8 %2560, 88
  %2562 = sext i1 %2561 to i8
  %2563 = getelementptr inbounds i8, ptr %2489, i64 %2558
  store i8 %2562, ptr %2563, align 1, !tbaa !46
  %2564 = add nuw nsw i64 %2540, 4
  %2565 = icmp eq i64 %2564, 122
  br i1 %2565, label %2566, label %2539, !llvm.loop !641

2566:                                             ; preds = %2539, %2538
  %2567 = load i32, ptr %33, align 8, !tbaa !292
  %2568 = sext i32 %2567 to i64
  %2569 = getelementptr inbounds i8, ptr %2489, i64 %2568
  %2570 = add i64 %1481, %1498
  %2571 = add i64 %2570, %1510
  %2572 = add i64 %2571, %1522
  %2573 = add i64 %2572, %1534
  %2574 = add i64 %2573, %1546
  %2575 = add i64 %2574, %1558
  %2576 = add i64 %2575, %1570
  %2577 = add i64 %2576, %1582
  %2578 = add i64 %2577, %1594
  %2579 = add i64 %2578, %1606
  %2580 = add i64 %2579, %1674
  %2581 = add i64 %2580, %1743
  %2582 = add i64 %2581, %1813
  %2583 = add i64 %2582, %1884
  %2584 = add i64 %2583, %1956
  %2585 = add i64 %2584, %2029
  %2586 = add i64 %2585, %2103
  %2587 = add i64 %2586, %2178
  %2588 = add i64 %2587, %2254
  %2589 = add i64 %2588, %2331
  %2590 = add i64 %2589, %2409
  %2591 = add i64 %2590, %2488
  %2592 = add i64 %2591, %2568
  %2593 = add i64 %2592, %1486
  %2594 = add i64 %2593, %70
  %2595 = add i64 %2594, 123
  %2596 = sub i64 %2595, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2806)
  %2597 = icmp ugt i64 %2596, 15
  br i1 %2597, label %2598, label %2606

2598:                                             ; preds = %2566
  store <16 x i8> zeroinitializer, ptr %2569, align 1, !tbaa !46
  %2599 = getelementptr inbounds i8, ptr %2569, i64 16
  store <16 x i8> zeroinitializer, ptr %2599, align 1, !tbaa !46
  %2600 = getelementptr inbounds i8, ptr %2569, i64 32
  store <16 x i8> zeroinitializer, ptr %2600, align 1, !tbaa !46
  %2601 = getelementptr inbounds i8, ptr %2569, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 -1, i8 -1>, ptr %2601, align 1, !tbaa !46
  %2602 = getelementptr inbounds i8, ptr %2569, i64 64
  store <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2602, align 1, !tbaa !46
  %2603 = getelementptr inbounds i8, ptr %2569, i64 80
  store <16 x i8> zeroinitializer, ptr %2603, align 1, !tbaa !46
  %2604 = getelementptr inbounds i8, ptr %2569, i64 96
  store <16 x i8> zeroinitializer, ptr %2604, align 1, !tbaa !46
  %2605 = getelementptr inbounds i8, ptr %2569, i64 112
  store <8 x i8> zeroinitializer, ptr %2605, align 1, !tbaa !46
  br label %2606

2606:                                             ; preds = %2566, %2598
  %2607 = phi i64 [ 0, %2566 ], [ 120, %2598 ]
  br label %2608

2608:                                             ; preds = %2608, %2606
  %2609 = phi i64 [ %2616, %2608 ], [ %2607, %2606 ]
  %2610 = phi i64 [ %2617, %2608 ], [ 0, %2606 ]
  %2611 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %2609
  %2612 = load i8, ptr %2611, align 1, !tbaa !46
  %2613 = icmp eq i8 %2612, 88
  %2614 = sext i1 %2613 to i8
  %2615 = getelementptr inbounds i8, ptr %2569, i64 %2609
  store i8 %2614, ptr %2615, align 1, !tbaa !46
  %2616 = add nuw nsw i64 %2609, 1
  %2617 = add i64 %2610, 1
  %2618 = icmp eq i64 %2617, 2
  br i1 %2618, label %2619, label %2608, !llvm.loop !642

2619:                                             ; preds = %2608
  br i1 %2597, label %2647, label %2620

2620:                                             ; preds = %2619, %2620
  %2621 = phi i64 [ %2645, %2620 ], [ %2616, %2619 ]
  %2622 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %2621
  %2623 = load i8, ptr %2622, align 1, !tbaa !46
  %2624 = icmp eq i8 %2623, 88
  %2625 = sext i1 %2624 to i8
  %2626 = getelementptr inbounds i8, ptr %2569, i64 %2621
  store i8 %2625, ptr %2626, align 1, !tbaa !46
  %2627 = add nuw nsw i64 %2621, 1
  %2628 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %2627
  %2629 = load i8, ptr %2628, align 1, !tbaa !46
  %2630 = icmp eq i8 %2629, 88
  %2631 = sext i1 %2630 to i8
  %2632 = getelementptr inbounds i8, ptr %2569, i64 %2627
  store i8 %2631, ptr %2632, align 1, !tbaa !46
  %2633 = add nuw nsw i64 %2621, 2
  %2634 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %2633
  %2635 = load i8, ptr %2634, align 1, !tbaa !46
  %2636 = icmp eq i8 %2635, 88
  %2637 = sext i1 %2636 to i8
  %2638 = getelementptr inbounds i8, ptr %2569, i64 %2633
  store i8 %2637, ptr %2638, align 1, !tbaa !46
  %2639 = add nuw nsw i64 %2621, 3
  %2640 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %2639
  %2641 = load i8, ptr %2640, align 1, !tbaa !46
  %2642 = icmp eq i8 %2641, 88
  %2643 = sext i1 %2642 to i8
  %2644 = getelementptr inbounds i8, ptr %2569, i64 %2639
  store i8 %2643, ptr %2644, align 1, !tbaa !46
  %2645 = add nuw nsw i64 %2621, 4
  %2646 = icmp eq i64 %2645, 122
  br i1 %2646, label %2647, label %2620, !llvm.loop !643

2647:                                             ; preds = %2620, %2619
  %2648 = load i32, ptr %33, align 8, !tbaa !292
  %2649 = sext i32 %2648 to i64
  %2650 = getelementptr inbounds i8, ptr %2569, i64 %2649
  %2651 = add i64 %1481, %1498
  %2652 = add i64 %2651, %1510
  %2653 = add i64 %2652, %1522
  %2654 = add i64 %2653, %1534
  %2655 = add i64 %2654, %1546
  %2656 = add i64 %2655, %1558
  %2657 = add i64 %2656, %1570
  %2658 = add i64 %2657, %1582
  %2659 = add i64 %2658, %1594
  %2660 = add i64 %2659, %1606
  %2661 = add i64 %2660, %1674
  %2662 = add i64 %2661, %1743
  %2663 = add i64 %2662, %1813
  %2664 = add i64 %2663, %1884
  %2665 = add i64 %2664, %1956
  %2666 = add i64 %2665, %2029
  %2667 = add i64 %2666, %2103
  %2668 = add i64 %2667, %2178
  %2669 = add i64 %2668, %2254
  %2670 = add i64 %2669, %2331
  %2671 = add i64 %2670, %2409
  %2672 = add i64 %2671, %2488
  %2673 = add i64 %2672, %2568
  %2674 = add i64 %2673, %2649
  %2675 = add i64 %2674, %1486
  %2676 = add i64 %2675, %70
  %2677 = add i64 %2676, 123
  %2678 = sub i64 %2677, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 2928)
  %2679 = icmp ugt i64 %2678, 15
  br i1 %2679, label %2680, label %2688

2680:                                             ; preds = %2647
  store <16 x i8> zeroinitializer, ptr %2650, align 1, !tbaa !46
  %2681 = getelementptr inbounds i8, ptr %2650, i64 16
  store <16 x i8> zeroinitializer, ptr %2681, align 1, !tbaa !46
  %2682 = getelementptr inbounds i8, ptr %2650, i64 32
  store <16 x i8> zeroinitializer, ptr %2682, align 1, !tbaa !46
  %2683 = getelementptr inbounds i8, ptr %2650, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2683, align 1, !tbaa !46
  %2684 = getelementptr inbounds i8, ptr %2650, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0>, ptr %2684, align 1, !tbaa !46
  %2685 = getelementptr inbounds i8, ptr %2650, i64 80
  store <16 x i8> zeroinitializer, ptr %2685, align 1, !tbaa !46
  %2686 = getelementptr inbounds i8, ptr %2650, i64 96
  store <16 x i8> zeroinitializer, ptr %2686, align 1, !tbaa !46
  %2687 = getelementptr inbounds i8, ptr %2650, i64 112
  store <8 x i8> zeroinitializer, ptr %2687, align 1, !tbaa !46
  br label %2688

2688:                                             ; preds = %2647, %2680
  %2689 = phi i64 [ 0, %2647 ], [ 120, %2680 ]
  br label %2690

2690:                                             ; preds = %2690, %2688
  %2691 = phi i64 [ %2698, %2690 ], [ %2689, %2688 ]
  %2692 = phi i64 [ %2699, %2690 ], [ 0, %2688 ]
  %2693 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %2691
  %2694 = load i8, ptr %2693, align 1, !tbaa !46
  %2695 = icmp eq i8 %2694, 88
  %2696 = sext i1 %2695 to i8
  %2697 = getelementptr inbounds i8, ptr %2650, i64 %2691
  store i8 %2696, ptr %2697, align 1, !tbaa !46
  %2698 = add nuw nsw i64 %2691, 1
  %2699 = add i64 %2692, 1
  %2700 = icmp eq i64 %2699, 2
  br i1 %2700, label %2701, label %2690, !llvm.loop !644

2701:                                             ; preds = %2690
  br i1 %2679, label %2729, label %2702

2702:                                             ; preds = %2701, %2702
  %2703 = phi i64 [ %2727, %2702 ], [ %2698, %2701 ]
  %2704 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %2703
  %2705 = load i8, ptr %2704, align 1, !tbaa !46
  %2706 = icmp eq i8 %2705, 88
  %2707 = sext i1 %2706 to i8
  %2708 = getelementptr inbounds i8, ptr %2650, i64 %2703
  store i8 %2707, ptr %2708, align 1, !tbaa !46
  %2709 = add nuw nsw i64 %2703, 1
  %2710 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %2709
  %2711 = load i8, ptr %2710, align 1, !tbaa !46
  %2712 = icmp eq i8 %2711, 88
  %2713 = sext i1 %2712 to i8
  %2714 = getelementptr inbounds i8, ptr %2650, i64 %2709
  store i8 %2713, ptr %2714, align 1, !tbaa !46
  %2715 = add nuw nsw i64 %2703, 2
  %2716 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %2715
  %2717 = load i8, ptr %2716, align 1, !tbaa !46
  %2718 = icmp eq i8 %2717, 88
  %2719 = sext i1 %2718 to i8
  %2720 = getelementptr inbounds i8, ptr %2650, i64 %2715
  store i8 %2719, ptr %2720, align 1, !tbaa !46
  %2721 = add nuw nsw i64 %2703, 3
  %2722 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %2721
  %2723 = load i8, ptr %2722, align 1, !tbaa !46
  %2724 = icmp eq i8 %2723, 88
  %2725 = sext i1 %2724 to i8
  %2726 = getelementptr inbounds i8, ptr %2650, i64 %2721
  store i8 %2725, ptr %2726, align 1, !tbaa !46
  %2727 = add nuw nsw i64 %2703, 4
  %2728 = icmp eq i64 %2727, 122
  br i1 %2728, label %2729, label %2702, !llvm.loop !645

2729:                                             ; preds = %2702, %2701
  %2730 = load i32, ptr %33, align 8, !tbaa !292
  %2731 = sext i32 %2730 to i64
  %2732 = getelementptr inbounds i8, ptr %2650, i64 %2731
  %2733 = add i64 %1481, %1498
  %2734 = add i64 %2733, %1510
  %2735 = add i64 %2734, %1522
  %2736 = add i64 %2735, %1534
  %2737 = add i64 %2736, %1546
  %2738 = add i64 %2737, %1558
  %2739 = add i64 %2738, %1570
  %2740 = add i64 %2739, %1582
  %2741 = add i64 %2740, %1594
  %2742 = add i64 %2741, %1606
  %2743 = add i64 %2742, %1674
  %2744 = add i64 %2743, %1743
  %2745 = add i64 %2744, %1813
  %2746 = add i64 %2745, %1884
  %2747 = add i64 %2746, %1956
  %2748 = add i64 %2747, %2029
  %2749 = add i64 %2748, %2103
  %2750 = add i64 %2749, %2178
  %2751 = add i64 %2750, %2254
  %2752 = add i64 %2751, %2331
  %2753 = add i64 %2752, %2409
  %2754 = add i64 %2753, %2488
  %2755 = add i64 %2754, %2568
  %2756 = add i64 %2755, %2649
  %2757 = add i64 %2756, %2731
  %2758 = add i64 %2757, %1486
  %2759 = add i64 %2758, %70
  %2760 = add i64 %2759, 123
  %2761 = sub i64 %2760, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 3050)
  %2762 = icmp ugt i64 %2761, 15
  br i1 %2762, label %2763, label %2771

2763:                                             ; preds = %2729
  store <16 x i8> zeroinitializer, ptr %2732, align 1, !tbaa !46
  %2764 = getelementptr inbounds i8, ptr %2732, i64 16
  store <16 x i8> zeroinitializer, ptr %2764, align 1, !tbaa !46
  %2765 = getelementptr inbounds i8, ptr %2732, i64 32
  store <16 x i8> zeroinitializer, ptr %2765, align 1, !tbaa !46
  %2766 = getelementptr inbounds i8, ptr %2732, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0>, ptr %2766, align 1, !tbaa !46
  %2767 = getelementptr inbounds i8, ptr %2732, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 0, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2767, align 1, !tbaa !46
  %2768 = getelementptr inbounds i8, ptr %2732, i64 80
  store <16 x i8> zeroinitializer, ptr %2768, align 1, !tbaa !46
  %2769 = getelementptr inbounds i8, ptr %2732, i64 96
  store <16 x i8> zeroinitializer, ptr %2769, align 1, !tbaa !46
  %2770 = getelementptr inbounds i8, ptr %2732, i64 112
  store <8 x i8> zeroinitializer, ptr %2770, align 1, !tbaa !46
  br label %2771

2771:                                             ; preds = %2729, %2763
  %2772 = phi i64 [ 0, %2729 ], [ 120, %2763 ]
  br label %2773

2773:                                             ; preds = %2773, %2771
  %2774 = phi i64 [ %2781, %2773 ], [ %2772, %2771 ]
  %2775 = phi i64 [ %2782, %2773 ], [ 0, %2771 ]
  %2776 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %2774
  %2777 = load i8, ptr %2776, align 1, !tbaa !46
  %2778 = icmp eq i8 %2777, 88
  %2779 = sext i1 %2778 to i8
  %2780 = getelementptr inbounds i8, ptr %2732, i64 %2774
  store i8 %2779, ptr %2780, align 1, !tbaa !46
  %2781 = add nuw nsw i64 %2774, 1
  %2782 = add i64 %2775, 1
  %2783 = icmp eq i64 %2782, 2
  br i1 %2783, label %2784, label %2773, !llvm.loop !646

2784:                                             ; preds = %2773
  br i1 %2762, label %2812, label %2785

2785:                                             ; preds = %2784, %2785
  %2786 = phi i64 [ %2810, %2785 ], [ %2781, %2784 ]
  %2787 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %2786
  %2788 = load i8, ptr %2787, align 1, !tbaa !46
  %2789 = icmp eq i8 %2788, 88
  %2790 = sext i1 %2789 to i8
  %2791 = getelementptr inbounds i8, ptr %2732, i64 %2786
  store i8 %2790, ptr %2791, align 1, !tbaa !46
  %2792 = add nuw nsw i64 %2786, 1
  %2793 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %2792
  %2794 = load i8, ptr %2793, align 1, !tbaa !46
  %2795 = icmp eq i8 %2794, 88
  %2796 = sext i1 %2795 to i8
  %2797 = getelementptr inbounds i8, ptr %2732, i64 %2792
  store i8 %2796, ptr %2797, align 1, !tbaa !46
  %2798 = add nuw nsw i64 %2786, 2
  %2799 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %2798
  %2800 = load i8, ptr %2799, align 1, !tbaa !46
  %2801 = icmp eq i8 %2800, 88
  %2802 = sext i1 %2801 to i8
  %2803 = getelementptr inbounds i8, ptr %2732, i64 %2798
  store i8 %2802, ptr %2803, align 1, !tbaa !46
  %2804 = add nuw nsw i64 %2786, 3
  %2805 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %2804
  %2806 = load i8, ptr %2805, align 1, !tbaa !46
  %2807 = icmp eq i8 %2806, 88
  %2808 = sext i1 %2807 to i8
  %2809 = getelementptr inbounds i8, ptr %2732, i64 %2804
  store i8 %2808, ptr %2809, align 1, !tbaa !46
  %2810 = add nuw nsw i64 %2786, 4
  %2811 = icmp eq i64 %2810, 122
  br i1 %2811, label %2812, label %2785, !llvm.loop !647

2812:                                             ; preds = %2785, %2784
  %2813 = load i32, ptr %33, align 8, !tbaa !292
  %2814 = sext i32 %2813 to i64
  %2815 = getelementptr inbounds i8, ptr %2732, i64 %2814
  %2816 = add i64 %1481, %1498
  %2817 = add i64 %2816, %1510
  %2818 = add i64 %2817, %1522
  %2819 = add i64 %2818, %1534
  %2820 = add i64 %2819, %1546
  %2821 = add i64 %2820, %1558
  %2822 = add i64 %2821, %1570
  %2823 = add i64 %2822, %1582
  %2824 = add i64 %2823, %1594
  %2825 = add i64 %2824, %1606
  %2826 = add i64 %2825, %1674
  %2827 = add i64 %2826, %1743
  %2828 = add i64 %2827, %1813
  %2829 = add i64 %2828, %1884
  %2830 = add i64 %2829, %1956
  %2831 = add i64 %2830, %2029
  %2832 = add i64 %2831, %2103
  %2833 = add i64 %2832, %2178
  %2834 = add i64 %2833, %2254
  %2835 = add i64 %2834, %2331
  %2836 = add i64 %2835, %2409
  %2837 = add i64 %2836, %2488
  %2838 = add i64 %2837, %2568
  %2839 = add i64 %2838, %2649
  %2840 = add i64 %2839, %2731
  %2841 = add i64 %2840, %2814
  %2842 = add i64 %2841, %1486
  %2843 = add i64 %2842, %70
  %2844 = add i64 %2843, 123
  %2845 = sub i64 %2844, add (i64 ptrtoint (ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS to i64), i64 3172)
  %2846 = icmp ugt i64 %2845, 15
  br i1 %2846, label %2847, label %2855

2847:                                             ; preds = %2812
  store <16 x i8> zeroinitializer, ptr %2815, align 1, !tbaa !46
  %2848 = getelementptr inbounds i8, ptr %2815, i64 16
  store <16 x i8> zeroinitializer, ptr %2848, align 1, !tbaa !46
  %2849 = getelementptr inbounds i8, ptr %2815, i64 32
  store <16 x i8> zeroinitializer, ptr %2849, align 1, !tbaa !46
  %2850 = getelementptr inbounds i8, ptr %2815, i64 48
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0>, ptr %2850, align 1, !tbaa !46
  %2851 = getelementptr inbounds i8, ptr %2815, i64 64
  store <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -1, i8 -1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, ptr %2851, align 1, !tbaa !46
  %2852 = getelementptr inbounds i8, ptr %2815, i64 80
  store <16 x i8> zeroinitializer, ptr %2852, align 1, !tbaa !46
  %2853 = getelementptr inbounds i8, ptr %2815, i64 96
  store <16 x i8> zeroinitializer, ptr %2853, align 1, !tbaa !46
  %2854 = getelementptr inbounds i8, ptr %2815, i64 112
  store <8 x i8> zeroinitializer, ptr %2854, align 1, !tbaa !46
  br label %2855

2855:                                             ; preds = %2812, %2847
  %2856 = phi i64 [ 0, %2812 ], [ 120, %2847 ]
  br label %2857

2857:                                             ; preds = %2857, %2855
  %2858 = phi i64 [ %2865, %2857 ], [ %2856, %2855 ]
  %2859 = phi i64 [ %2866, %2857 ], [ 0, %2855 ]
  %2860 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %2858
  %2861 = load i8, ptr %2860, align 1, !tbaa !46
  %2862 = icmp eq i8 %2861, 88
  %2863 = sext i1 %2862 to i8
  %2864 = getelementptr inbounds i8, ptr %2815, i64 %2858
  store i8 %2863, ptr %2864, align 1, !tbaa !46
  %2865 = add nuw nsw i64 %2858, 1
  %2866 = add i64 %2859, 1
  %2867 = icmp eq i64 %2866, 2
  br i1 %2867, label %2868, label %2857, !llvm.loop !648

2868:                                             ; preds = %2857
  br i1 %2846, label %7049, label %2869

2869:                                             ; preds = %2868, %2869
  %2870 = phi i64 [ %2894, %2869 ], [ %2865, %2868 ]
  %2871 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %2870
  %2872 = load i8, ptr %2871, align 1, !tbaa !46
  %2873 = icmp eq i8 %2872, 88
  %2874 = sext i1 %2873 to i8
  %2875 = getelementptr inbounds i8, ptr %2815, i64 %2870
  store i8 %2874, ptr %2875, align 1, !tbaa !46
  %2876 = add nuw nsw i64 %2870, 1
  %2877 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %2876
  %2878 = load i8, ptr %2877, align 1, !tbaa !46
  %2879 = icmp eq i8 %2878, 88
  %2880 = sext i1 %2879 to i8
  %2881 = getelementptr inbounds i8, ptr %2815, i64 %2876
  store i8 %2880, ptr %2881, align 1, !tbaa !46
  %2882 = add nuw nsw i64 %2870, 2
  %2883 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %2882
  %2884 = load i8, ptr %2883, align 1, !tbaa !46
  %2885 = icmp eq i8 %2884, 88
  %2886 = sext i1 %2885 to i8
  %2887 = getelementptr inbounds i8, ptr %2815, i64 %2882
  store i8 %2886, ptr %2887, align 1, !tbaa !46
  %2888 = add nuw nsw i64 %2870, 3
  %2889 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %2888
  %2890 = load i8, ptr %2889, align 1, !tbaa !46
  %2891 = icmp eq i8 %2890, 88
  %2892 = sext i1 %2891 to i8
  %2893 = getelementptr inbounds i8, ptr %2815, i64 %2888
  store i8 %2892, ptr %2893, align 1, !tbaa !46
  %2894 = add nuw nsw i64 %2870, 4
  %2895 = icmp eq i64 %2894, 122
  br i1 %2895, label %7049, label %2869, !llvm.loop !649

2896:                                             ; preds = %47
  br i1 %58, label %2897, label %2898

2897:                                             ; preds = %2896
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2658)
  br label %2898

2898:                                             ; preds = %2897, %2896
  %2899 = add nuw nsw i32 %56, 27
  %2900 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  %2901 = load i32, ptr %2900, align 4, !tbaa !293
  %2902 = icmp sgt i32 %2899, %2901
  br i1 %2902, label %2903, label %2904

2903:                                             ; preds = %2898
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2659)
  br label %2904

2904:                                             ; preds = %2903, %2898
  %2905 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %2906 = load ptr, ptr %2905, align 8, !tbaa !274
  %2907 = zext i16 %49 to i64
  %2908 = getelementptr inbounds i32, ptr %2906, i64 %2907
  %2909 = load i32, ptr %33, align 8, !tbaa !292
  %2910 = mul nsw i32 %2909, %56
  %2911 = sext i32 %2910 to i64
  %2912 = getelementptr inbounds i32, ptr %2908, i64 %2911
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %2912, align 4, !tbaa !105
  %2913 = getelementptr inbounds i32, ptr %2912, i64 4
  store <4 x i32> zeroinitializer, ptr %2913, align 4, !tbaa !105
  %2914 = getelementptr inbounds i32, ptr %2912, i64 8
  store <4 x i32> zeroinitializer, ptr %2914, align 4, !tbaa !105
  %2915 = getelementptr inbounds i32, ptr %2912, i64 12
  store <4 x i32> zeroinitializer, ptr %2915, align 4, !tbaa !105
  %2916 = getelementptr inbounds i32, ptr %2912, i64 16
  store <4 x i32> zeroinitializer, ptr %2916, align 4, !tbaa !105
  %2917 = getelementptr inbounds i32, ptr %2912, i64 20
  store <4 x i32> zeroinitializer, ptr %2917, align 4, !tbaa !105
  %2918 = getelementptr inbounds i32, ptr %2912, i64 24
  store <4 x i32> zeroinitializer, ptr %2918, align 4, !tbaa !105
  %2919 = getelementptr inbounds i32, ptr %2912, i64 28
  store <4 x i32> zeroinitializer, ptr %2919, align 4, !tbaa !105
  %2920 = getelementptr inbounds i32, ptr %2912, i64 32
  store <4 x i32> zeroinitializer, ptr %2920, align 4, !tbaa !105
  %2921 = getelementptr inbounds i32, ptr %2912, i64 36
  store <4 x i32> zeroinitializer, ptr %2921, align 4, !tbaa !105
  %2922 = getelementptr inbounds i32, ptr %2912, i64 40
  store <4 x i32> zeroinitializer, ptr %2922, align 4, !tbaa !105
  %2923 = getelementptr inbounds i32, ptr %2912, i64 44
  store <4 x i32> zeroinitializer, ptr %2923, align 4, !tbaa !105
  %2924 = getelementptr inbounds i32, ptr %2912, i64 48
  store <4 x i32> zeroinitializer, ptr %2924, align 4, !tbaa !105
  %2925 = getelementptr inbounds i32, ptr %2912, i64 52
  store <4 x i32> zeroinitializer, ptr %2925, align 4, !tbaa !105
  %2926 = getelementptr inbounds i32, ptr %2912, i64 56
  store <4 x i32> zeroinitializer, ptr %2926, align 4, !tbaa !105
  %2927 = getelementptr inbounds i32, ptr %2912, i64 60
  store <4 x i32> zeroinitializer, ptr %2927, align 4, !tbaa !105
  %2928 = getelementptr inbounds i32, ptr %2912, i64 64
  store <4 x i32> zeroinitializer, ptr %2928, align 4, !tbaa !105
  %2929 = getelementptr inbounds i32, ptr %2912, i64 68
  store <4 x i32> zeroinitializer, ptr %2929, align 4, !tbaa !105
  %2930 = getelementptr inbounds i32, ptr %2912, i64 72
  store <4 x i32> zeroinitializer, ptr %2930, align 4, !tbaa !105
  %2931 = getelementptr inbounds i32, ptr %2912, i64 76
  store <4 x i32> zeroinitializer, ptr %2931, align 4, !tbaa !105
  %2932 = getelementptr inbounds i32, ptr %2912, i64 80
  store <4 x i32> zeroinitializer, ptr %2932, align 4, !tbaa !105
  %2933 = getelementptr inbounds i32, ptr %2912, i64 84
  store <4 x i32> zeroinitializer, ptr %2933, align 4, !tbaa !105
  %2934 = getelementptr inbounds i32, ptr %2912, i64 88
  store <4 x i32> zeroinitializer, ptr %2934, align 4, !tbaa !105
  %2935 = getelementptr inbounds i32, ptr %2912, i64 92
  store <4 x i32> zeroinitializer, ptr %2935, align 4, !tbaa !105
  %2936 = getelementptr inbounds i32, ptr %2912, i64 96
  store <4 x i32> zeroinitializer, ptr %2936, align 4, !tbaa !105
  %2937 = getelementptr inbounds i32, ptr %2912, i64 100
  store <4 x i32> zeroinitializer, ptr %2937, align 4, !tbaa !105
  %2938 = getelementptr inbounds i32, ptr %2912, i64 104
  store <4 x i32> zeroinitializer, ptr %2938, align 4, !tbaa !105
  %2939 = getelementptr inbounds i32, ptr %2912, i64 108
  store <4 x i32> zeroinitializer, ptr %2939, align 4, !tbaa !105
  %2940 = getelementptr inbounds i32, ptr %2912, i64 112
  store <4 x i32> zeroinitializer, ptr %2940, align 4, !tbaa !105
  %2941 = getelementptr inbounds i32, ptr %2912, i64 116
  store <4 x i32> zeroinitializer, ptr %2941, align 4, !tbaa !105
  %2942 = getelementptr inbounds i32, ptr %2912, i64 120
  store i32 0, ptr %2942, align 4, !tbaa !105
  %2943 = getelementptr inbounds i32, ptr %2912, i64 121
  store i32 0, ptr %2943, align 4, !tbaa !105
  %2944 = load i32, ptr %33, align 8, !tbaa !292
  %2945 = sext i32 %2944 to i64
  %2946 = getelementptr inbounds i32, ptr %2912, i64 %2945
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %2946, align 4, !tbaa !105
  %2947 = getelementptr inbounds i32, ptr %2946, i64 4
  store <4 x i32> zeroinitializer, ptr %2947, align 4, !tbaa !105
  %2948 = getelementptr inbounds i32, ptr %2946, i64 8
  store <4 x i32> zeroinitializer, ptr %2948, align 4, !tbaa !105
  %2949 = getelementptr inbounds i32, ptr %2946, i64 12
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %2949, align 4, !tbaa !105
  %2950 = getelementptr inbounds i32, ptr %2946, i64 16
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %2950, align 4, !tbaa !105
  %2951 = getelementptr inbounds i32, ptr %2946, i64 20
  store <4 x i32> zeroinitializer, ptr %2951, align 4, !tbaa !105
  %2952 = getelementptr inbounds i32, ptr %2946, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %2952, align 4, !tbaa !105
  %2953 = getelementptr inbounds i32, ptr %2946, i64 28
  store <4 x i32> zeroinitializer, ptr %2953, align 4, !tbaa !105
  %2954 = getelementptr inbounds i32, ptr %2946, i64 32
  store <4 x i32> zeroinitializer, ptr %2954, align 4, !tbaa !105
  %2955 = getelementptr inbounds i32, ptr %2946, i64 36
  store <4 x i32> zeroinitializer, ptr %2955, align 4, !tbaa !105
  %2956 = getelementptr inbounds i32, ptr %2946, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %2956, align 4, !tbaa !105
  %2957 = getelementptr inbounds i32, ptr %2946, i64 44
  store <4 x i32> zeroinitializer, ptr %2957, align 4, !tbaa !105
  %2958 = getelementptr inbounds i32, ptr %2946, i64 48
  store <4 x i32> zeroinitializer, ptr %2958, align 4, !tbaa !105
  %2959 = getelementptr inbounds i32, ptr %2946, i64 52
  store <4 x i32> zeroinitializer, ptr %2959, align 4, !tbaa !105
  %2960 = getelementptr inbounds i32, ptr %2946, i64 56
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %2960, align 4, !tbaa !105
  %2961 = getelementptr inbounds i32, ptr %2946, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %2961, align 4, !tbaa !105
  %2962 = getelementptr inbounds i32, ptr %2946, i64 64
  store <4 x i32> zeroinitializer, ptr %2962, align 4, !tbaa !105
  %2963 = getelementptr inbounds i32, ptr %2946, i64 68
  store <4 x i32> zeroinitializer, ptr %2963, align 4, !tbaa !105
  %2964 = getelementptr inbounds i32, ptr %2946, i64 72
  store <4 x i32> zeroinitializer, ptr %2964, align 4, !tbaa !105
  %2965 = getelementptr inbounds i32, ptr %2946, i64 76
  store <4 x i32> zeroinitializer, ptr %2965, align 4, !tbaa !105
  %2966 = getelementptr inbounds i32, ptr %2946, i64 80
  store <4 x i32> zeroinitializer, ptr %2966, align 4, !tbaa !105
  %2967 = getelementptr inbounds i32, ptr %2946, i64 84
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %2967, align 4, !tbaa !105
  %2968 = getelementptr inbounds i32, ptr %2946, i64 88
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %2968, align 4, !tbaa !105
  %2969 = getelementptr inbounds i32, ptr %2946, i64 92
  store <4 x i32> zeroinitializer, ptr %2969, align 4, !tbaa !105
  %2970 = getelementptr inbounds i32, ptr %2946, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %2970, align 4, !tbaa !105
  %2971 = getelementptr inbounds i32, ptr %2946, i64 100
  store <4 x i32> zeroinitializer, ptr %2971, align 4, !tbaa !105
  %2972 = getelementptr inbounds i32, ptr %2946, i64 104
  store <4 x i32> zeroinitializer, ptr %2972, align 4, !tbaa !105
  %2973 = getelementptr inbounds i32, ptr %2946, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %2973, align 4, !tbaa !105
  %2974 = getelementptr inbounds i32, ptr %2946, i64 112
  store <4 x i32> zeroinitializer, ptr %2974, align 4, !tbaa !105
  %2975 = getelementptr inbounds i32, ptr %2946, i64 116
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %2975, align 4, !tbaa !105
  %2976 = getelementptr inbounds i32, ptr %2946, i64 120
  store i32 -1, ptr %2976, align 4, !tbaa !105
  %2977 = getelementptr inbounds i32, ptr %2946, i64 121
  store i32 0, ptr %2977, align 4, !tbaa !105
  %2978 = load i32, ptr %33, align 8, !tbaa !292
  %2979 = sext i32 %2978 to i64
  %2980 = getelementptr inbounds i32, ptr %2946, i64 %2979
  store <4 x i32> zeroinitializer, ptr %2980, align 4, !tbaa !105
  %2981 = getelementptr inbounds i32, ptr %2980, i64 4
  store <4 x i32> zeroinitializer, ptr %2981, align 4, !tbaa !105
  %2982 = getelementptr inbounds i32, ptr %2980, i64 8
  store <4 x i32> zeroinitializer, ptr %2982, align 4, !tbaa !105
  %2983 = getelementptr inbounds i32, ptr %2980, i64 12
  store <4 x i32> zeroinitializer, ptr %2983, align 4, !tbaa !105
  %2984 = getelementptr inbounds i32, ptr %2980, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %2984, align 4, !tbaa !105
  %2985 = getelementptr inbounds i32, ptr %2980, i64 20
  store <4 x i32> zeroinitializer, ptr %2985, align 4, !tbaa !105
  %2986 = getelementptr inbounds i32, ptr %2980, i64 24
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %2986, align 4, !tbaa !105
  %2987 = getelementptr inbounds i32, ptr %2980, i64 28
  store <4 x i32> zeroinitializer, ptr %2987, align 4, !tbaa !105
  %2988 = getelementptr inbounds i32, ptr %2980, i64 32
  store <4 x i32> zeroinitializer, ptr %2988, align 4, !tbaa !105
  %2989 = getelementptr inbounds i32, ptr %2980, i64 36
  store <4 x i32> zeroinitializer, ptr %2989, align 4, !tbaa !105
  %2990 = getelementptr inbounds i32, ptr %2980, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %2990, align 4, !tbaa !105
  %2991 = getelementptr inbounds i32, ptr %2980, i64 44
  store <4 x i32> zeroinitializer, ptr %2991, align 4, !tbaa !105
  %2992 = getelementptr inbounds i32, ptr %2980, i64 48
  store <4 x i32> zeroinitializer, ptr %2992, align 4, !tbaa !105
  %2993 = getelementptr inbounds i32, ptr %2980, i64 52
  store <4 x i32> zeroinitializer, ptr %2993, align 4, !tbaa !105
  %2994 = getelementptr inbounds i32, ptr %2980, i64 56
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %2994, align 4, !tbaa !105
  %2995 = getelementptr inbounds i32, ptr %2980, i64 60
  store <4 x i32> zeroinitializer, ptr %2995, align 4, !tbaa !105
  %2996 = getelementptr inbounds i32, ptr %2980, i64 64
  store <4 x i32> zeroinitializer, ptr %2996, align 4, !tbaa !105
  %2997 = getelementptr inbounds i32, ptr %2980, i64 68
  store <4 x i32> zeroinitializer, ptr %2997, align 4, !tbaa !105
  %2998 = getelementptr inbounds i32, ptr %2980, i64 72
  store <4 x i32> zeroinitializer, ptr %2998, align 4, !tbaa !105
  %2999 = getelementptr inbounds i32, ptr %2980, i64 76
  store <4 x i32> zeroinitializer, ptr %2999, align 4, !tbaa !105
  %3000 = getelementptr inbounds i32, ptr %2980, i64 80
  store <4 x i32> zeroinitializer, ptr %3000, align 4, !tbaa !105
  %3001 = getelementptr inbounds i32, ptr %2980, i64 84
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3001, align 4, !tbaa !105
  %3002 = getelementptr inbounds i32, ptr %2980, i64 88
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3002, align 4, !tbaa !105
  %3003 = getelementptr inbounds i32, ptr %2980, i64 92
  store <4 x i32> zeroinitializer, ptr %3003, align 4, !tbaa !105
  %3004 = getelementptr inbounds i32, ptr %2980, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3004, align 4, !tbaa !105
  %3005 = getelementptr inbounds i32, ptr %2980, i64 100
  store <4 x i32> zeroinitializer, ptr %3005, align 4, !tbaa !105
  %3006 = getelementptr inbounds i32, ptr %2980, i64 104
  store <4 x i32> zeroinitializer, ptr %3006, align 4, !tbaa !105
  %3007 = getelementptr inbounds i32, ptr %2980, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3007, align 4, !tbaa !105
  %3008 = getelementptr inbounds i32, ptr %2980, i64 112
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3008, align 4, !tbaa !105
  %3009 = getelementptr inbounds i32, ptr %2980, i64 116
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3009, align 4, !tbaa !105
  %3010 = getelementptr inbounds i32, ptr %2980, i64 120
  store i32 -1, ptr %3010, align 4, !tbaa !105
  %3011 = getelementptr inbounds i32, ptr %2980, i64 121
  store i32 0, ptr %3011, align 4, !tbaa !105
  %3012 = load i32, ptr %33, align 8, !tbaa !292
  %3013 = sext i32 %3012 to i64
  %3014 = getelementptr inbounds i32, ptr %2980, i64 %3013
  store <4 x i32> zeroinitializer, ptr %3014, align 4, !tbaa !105
  %3015 = getelementptr inbounds i32, ptr %3014, i64 4
  store <4 x i32> zeroinitializer, ptr %3015, align 4, !tbaa !105
  %3016 = getelementptr inbounds i32, ptr %3014, i64 8
  store <4 x i32> zeroinitializer, ptr %3016, align 4, !tbaa !105
  %3017 = getelementptr inbounds i32, ptr %3014, i64 12
  store <4 x i32> zeroinitializer, ptr %3017, align 4, !tbaa !105
  %3018 = getelementptr inbounds i32, ptr %3014, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3018, align 4, !tbaa !105
  %3019 = getelementptr inbounds i32, ptr %3014, i64 20
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3019, align 4, !tbaa !105
  %3020 = getelementptr inbounds i32, ptr %3014, i64 24
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3020, align 4, !tbaa !105
  %3021 = getelementptr inbounds i32, ptr %3014, i64 28
  store <4 x i32> zeroinitializer, ptr %3021, align 4, !tbaa !105
  %3022 = getelementptr inbounds i32, ptr %3014, i64 32
  store <4 x i32> zeroinitializer, ptr %3022, align 4, !tbaa !105
  %3023 = getelementptr inbounds i32, ptr %3014, i64 36
  store <4 x i32> zeroinitializer, ptr %3023, align 4, !tbaa !105
  %3024 = getelementptr inbounds i32, ptr %3014, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3024, align 4, !tbaa !105
  %3025 = getelementptr inbounds i32, ptr %3014, i64 44
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3025, align 4, !tbaa !105
  %3026 = getelementptr inbounds i32, ptr %3014, i64 48
  store <4 x i32> zeroinitializer, ptr %3026, align 4, !tbaa !105
  %3027 = getelementptr inbounds i32, ptr %3014, i64 52
  store <4 x i32> zeroinitializer, ptr %3027, align 4, !tbaa !105
  %3028 = getelementptr inbounds i32, ptr %3014, i64 56
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3028, align 4, !tbaa !105
  %3029 = getelementptr inbounds i32, ptr %3014, i64 60
  store <4 x i32> zeroinitializer, ptr %3029, align 4, !tbaa !105
  %3030 = getelementptr inbounds i32, ptr %3014, i64 64
  store <4 x i32> zeroinitializer, ptr %3030, align 4, !tbaa !105
  %3031 = getelementptr inbounds i32, ptr %3014, i64 68
  store <4 x i32> zeroinitializer, ptr %3031, align 4, !tbaa !105
  %3032 = getelementptr inbounds i32, ptr %3014, i64 72
  store <4 x i32> zeroinitializer, ptr %3032, align 4, !tbaa !105
  %3033 = getelementptr inbounds i32, ptr %3014, i64 76
  store <4 x i32> zeroinitializer, ptr %3033, align 4, !tbaa !105
  %3034 = getelementptr inbounds i32, ptr %3014, i64 80
  store <4 x i32> zeroinitializer, ptr %3034, align 4, !tbaa !105
  %3035 = getelementptr inbounds i32, ptr %3014, i64 84
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3035, align 4, !tbaa !105
  %3036 = getelementptr inbounds i32, ptr %3014, i64 88
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3036, align 4, !tbaa !105
  %3037 = getelementptr inbounds i32, ptr %3014, i64 92
  store <4 x i32> zeroinitializer, ptr %3037, align 4, !tbaa !105
  %3038 = getelementptr inbounds i32, ptr %3014, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3038, align 4, !tbaa !105
  %3039 = getelementptr inbounds i32, ptr %3014, i64 100
  store <4 x i32> zeroinitializer, ptr %3039, align 4, !tbaa !105
  %3040 = getelementptr inbounds i32, ptr %3014, i64 104
  store <4 x i32> zeroinitializer, ptr %3040, align 4, !tbaa !105
  %3041 = getelementptr inbounds i32, ptr %3014, i64 108
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3041, align 4, !tbaa !105
  %3042 = getelementptr inbounds i32, ptr %3014, i64 112
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3042, align 4, !tbaa !105
  %3043 = getelementptr inbounds i32, ptr %3014, i64 116
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3043, align 4, !tbaa !105
  %3044 = getelementptr inbounds i32, ptr %3014, i64 120
  store i32 0, ptr %3044, align 4, !tbaa !105
  %3045 = getelementptr inbounds i32, ptr %3014, i64 121
  store i32 0, ptr %3045, align 4, !tbaa !105
  %3046 = load i32, ptr %33, align 8, !tbaa !292
  %3047 = sext i32 %3046 to i64
  %3048 = getelementptr inbounds i32, ptr %3014, i64 %3047
  store <4 x i32> zeroinitializer, ptr %3048, align 4, !tbaa !105
  %3049 = getelementptr inbounds i32, ptr %3048, i64 4
  store <4 x i32> zeroinitializer, ptr %3049, align 4, !tbaa !105
  %3050 = getelementptr inbounds i32, ptr %3048, i64 8
  store <4 x i32> zeroinitializer, ptr %3050, align 4, !tbaa !105
  %3051 = getelementptr inbounds i32, ptr %3048, i64 12
  store <4 x i32> zeroinitializer, ptr %3051, align 4, !tbaa !105
  %3052 = getelementptr inbounds i32, ptr %3048, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3052, align 4, !tbaa !105
  %3053 = getelementptr inbounds i32, ptr %3048, i64 20
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3053, align 4, !tbaa !105
  %3054 = getelementptr inbounds i32, ptr %3048, i64 24
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3054, align 4, !tbaa !105
  %3055 = getelementptr inbounds i32, ptr %3048, i64 28
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3055, align 4, !tbaa !105
  %3056 = getelementptr inbounds i32, ptr %3048, i64 32
  store <4 x i32> zeroinitializer, ptr %3056, align 4, !tbaa !105
  %3057 = getelementptr inbounds i32, ptr %3048, i64 36
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3057, align 4, !tbaa !105
  %3058 = getelementptr inbounds i32, ptr %3048, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3058, align 4, !tbaa !105
  %3059 = getelementptr inbounds i32, ptr %3048, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3059, align 4, !tbaa !105
  %3060 = getelementptr inbounds i32, ptr %3048, i64 48
  store <4 x i32> zeroinitializer, ptr %3060, align 4, !tbaa !105
  %3061 = getelementptr inbounds i32, ptr %3048, i64 52
  store <4 x i32> zeroinitializer, ptr %3061, align 4, !tbaa !105
  %3062 = getelementptr inbounds i32, ptr %3048, i64 56
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %3062, align 4, !tbaa !105
  %3063 = getelementptr inbounds i32, ptr %3048, i64 60
  store <4 x i32> zeroinitializer, ptr %3063, align 4, !tbaa !105
  %3064 = getelementptr inbounds i32, ptr %3048, i64 64
  store <4 x i32> zeroinitializer, ptr %3064, align 4, !tbaa !105
  %3065 = getelementptr inbounds i32, ptr %3048, i64 68
  store <4 x i32> zeroinitializer, ptr %3065, align 4, !tbaa !105
  %3066 = getelementptr inbounds i32, ptr %3048, i64 72
  store <4 x i32> zeroinitializer, ptr %3066, align 4, !tbaa !105
  %3067 = getelementptr inbounds i32, ptr %3048, i64 76
  store <4 x i32> zeroinitializer, ptr %3067, align 4, !tbaa !105
  %3068 = getelementptr inbounds i32, ptr %3048, i64 80
  store <4 x i32> zeroinitializer, ptr %3068, align 4, !tbaa !105
  %3069 = getelementptr inbounds i32, ptr %3048, i64 84
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %3069, align 4, !tbaa !105
  %3070 = getelementptr inbounds i32, ptr %3048, i64 88
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3070, align 4, !tbaa !105
  %3071 = getelementptr inbounds i32, ptr %3048, i64 92
  store <4 x i32> zeroinitializer, ptr %3071, align 4, !tbaa !105
  %3072 = getelementptr inbounds i32, ptr %3048, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3072, align 4, !tbaa !105
  %3073 = getelementptr inbounds i32, ptr %3048, i64 100
  store <4 x i32> zeroinitializer, ptr %3073, align 4, !tbaa !105
  %3074 = getelementptr inbounds i32, ptr %3048, i64 104
  store <4 x i32> zeroinitializer, ptr %3074, align 4, !tbaa !105
  %3075 = getelementptr inbounds i32, ptr %3048, i64 108
  store <4 x i32> zeroinitializer, ptr %3075, align 4, !tbaa !105
  %3076 = getelementptr inbounds i32, ptr %3048, i64 112
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3076, align 4, !tbaa !105
  %3077 = getelementptr inbounds i32, ptr %3048, i64 116
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3077, align 4, !tbaa !105
  %3078 = getelementptr inbounds i32, ptr %3048, i64 120
  store i32 0, ptr %3078, align 4, !tbaa !105
  %3079 = getelementptr inbounds i32, ptr %3048, i64 121
  store i32 0, ptr %3079, align 4, !tbaa !105
  %3080 = load i32, ptr %33, align 8, !tbaa !292
  %3081 = sext i32 %3080 to i64
  %3082 = getelementptr inbounds i32, ptr %3048, i64 %3081
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3082, align 4, !tbaa !105
  %3083 = getelementptr inbounds i32, ptr %3082, i64 4
  store <4 x i32> zeroinitializer, ptr %3083, align 4, !tbaa !105
  %3084 = getelementptr inbounds i32, ptr %3082, i64 8
  store <4 x i32> zeroinitializer, ptr %3084, align 4, !tbaa !105
  %3085 = getelementptr inbounds i32, ptr %3082, i64 12
  store <4 x i32> zeroinitializer, ptr %3085, align 4, !tbaa !105
  %3086 = getelementptr inbounds i32, ptr %3082, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3086, align 4, !tbaa !105
  %3087 = getelementptr inbounds i32, ptr %3082, i64 20
  store <4 x i32> zeroinitializer, ptr %3087, align 4, !tbaa !105
  %3088 = getelementptr inbounds i32, ptr %3082, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3088, align 4, !tbaa !105
  %3089 = getelementptr inbounds i32, ptr %3082, i64 28
  store <4 x i32> zeroinitializer, ptr %3089, align 4, !tbaa !105
  %3090 = getelementptr inbounds i32, ptr %3082, i64 32
  store <4 x i32> zeroinitializer, ptr %3090, align 4, !tbaa !105
  %3091 = getelementptr inbounds i32, ptr %3082, i64 36
  store <4 x i32> zeroinitializer, ptr %3091, align 4, !tbaa !105
  %3092 = getelementptr inbounds i32, ptr %3082, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3092, align 4, !tbaa !105
  %3093 = getelementptr inbounds i32, ptr %3082, i64 44
  store <4 x i32> zeroinitializer, ptr %3093, align 4, !tbaa !105
  %3094 = getelementptr inbounds i32, ptr %3082, i64 48
  store <4 x i32> zeroinitializer, ptr %3094, align 4, !tbaa !105
  %3095 = getelementptr inbounds i32, ptr %3082, i64 52
  store <4 x i32> zeroinitializer, ptr %3095, align 4, !tbaa !105
  %3096 = getelementptr inbounds i32, ptr %3082, i64 56
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3096, align 4, !tbaa !105
  %3097 = getelementptr inbounds i32, ptr %3082, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3097, align 4, !tbaa !105
  %3098 = getelementptr inbounds i32, ptr %3082, i64 64
  store <4 x i32> zeroinitializer, ptr %3098, align 4, !tbaa !105
  %3099 = getelementptr inbounds i32, ptr %3082, i64 68
  store <4 x i32> zeroinitializer, ptr %3099, align 4, !tbaa !105
  %3100 = getelementptr inbounds i32, ptr %3082, i64 72
  store <4 x i32> zeroinitializer, ptr %3100, align 4, !tbaa !105
  %3101 = getelementptr inbounds i32, ptr %3082, i64 76
  store <4 x i32> zeroinitializer, ptr %3101, align 4, !tbaa !105
  %3102 = getelementptr inbounds i32, ptr %3082, i64 80
  store <4 x i32> zeroinitializer, ptr %3102, align 4, !tbaa !105
  %3103 = getelementptr inbounds i32, ptr %3082, i64 84
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3103, align 4, !tbaa !105
  %3104 = getelementptr inbounds i32, ptr %3082, i64 88
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3104, align 4, !tbaa !105
  %3105 = getelementptr inbounds i32, ptr %3082, i64 92
  store <4 x i32> zeroinitializer, ptr %3105, align 4, !tbaa !105
  %3106 = getelementptr inbounds i32, ptr %3082, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3106, align 4, !tbaa !105
  %3107 = getelementptr inbounds i32, ptr %3082, i64 100
  store <4 x i32> zeroinitializer, ptr %3107, align 4, !tbaa !105
  %3108 = getelementptr inbounds i32, ptr %3082, i64 104
  store <4 x i32> zeroinitializer, ptr %3108, align 4, !tbaa !105
  %3109 = getelementptr inbounds i32, ptr %3082, i64 108
  store <4 x i32> zeroinitializer, ptr %3109, align 4, !tbaa !105
  %3110 = getelementptr inbounds i32, ptr %3082, i64 112
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3110, align 4, !tbaa !105
  %3111 = getelementptr inbounds i32, ptr %3082, i64 116
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3111, align 4, !tbaa !105
  %3112 = getelementptr inbounds i32, ptr %3082, i64 120
  store i32 0, ptr %3112, align 4, !tbaa !105
  %3113 = getelementptr inbounds i32, ptr %3082, i64 121
  store i32 0, ptr %3113, align 4, !tbaa !105
  %3114 = load i32, ptr %33, align 8, !tbaa !292
  %3115 = sext i32 %3114 to i64
  %3116 = getelementptr inbounds i32, ptr %3082, i64 %3115
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3116, align 4, !tbaa !105
  %3117 = getelementptr inbounds i32, ptr %3116, i64 4
  store <4 x i32> zeroinitializer, ptr %3117, align 4, !tbaa !105
  %3118 = getelementptr inbounds i32, ptr %3116, i64 8
  store <4 x i32> zeroinitializer, ptr %3118, align 4, !tbaa !105
  %3119 = getelementptr inbounds i32, ptr %3116, i64 12
  store <4 x i32> zeroinitializer, ptr %3119, align 4, !tbaa !105
  %3120 = getelementptr inbounds i32, ptr %3116, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3120, align 4, !tbaa !105
  %3121 = getelementptr inbounds i32, ptr %3116, i64 20
  store <4 x i32> zeroinitializer, ptr %3121, align 4, !tbaa !105
  %3122 = getelementptr inbounds i32, ptr %3116, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3122, align 4, !tbaa !105
  %3123 = getelementptr inbounds i32, ptr %3116, i64 28
  store <4 x i32> zeroinitializer, ptr %3123, align 4, !tbaa !105
  %3124 = getelementptr inbounds i32, ptr %3116, i64 32
  store <4 x i32> zeroinitializer, ptr %3124, align 4, !tbaa !105
  %3125 = getelementptr inbounds i32, ptr %3116, i64 36
  store <4 x i32> zeroinitializer, ptr %3125, align 4, !tbaa !105
  %3126 = getelementptr inbounds i32, ptr %3116, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3126, align 4, !tbaa !105
  %3127 = getelementptr inbounds i32, ptr %3116, i64 44
  store <4 x i32> zeroinitializer, ptr %3127, align 4, !tbaa !105
  %3128 = getelementptr inbounds i32, ptr %3116, i64 48
  store <4 x i32> zeroinitializer, ptr %3128, align 4, !tbaa !105
  %3129 = getelementptr inbounds i32, ptr %3116, i64 52
  store <4 x i32> zeroinitializer, ptr %3129, align 4, !tbaa !105
  %3130 = getelementptr inbounds i32, ptr %3116, i64 56
  store <4 x i32> zeroinitializer, ptr %3130, align 4, !tbaa !105
  %3131 = getelementptr inbounds i32, ptr %3116, i64 60
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3131, align 4, !tbaa !105
  %3132 = getelementptr inbounds i32, ptr %3116, i64 64
  store <4 x i32> zeroinitializer, ptr %3132, align 4, !tbaa !105
  %3133 = getelementptr inbounds i32, ptr %3116, i64 68
  store <4 x i32> zeroinitializer, ptr %3133, align 4, !tbaa !105
  %3134 = getelementptr inbounds i32, ptr %3116, i64 72
  store <4 x i32> zeroinitializer, ptr %3134, align 4, !tbaa !105
  %3135 = getelementptr inbounds i32, ptr %3116, i64 76
  store <4 x i32> zeroinitializer, ptr %3135, align 4, !tbaa !105
  %3136 = getelementptr inbounds i32, ptr %3116, i64 80
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3136, align 4, !tbaa !105
  %3137 = getelementptr inbounds i32, ptr %3116, i64 84
  store <4 x i32> zeroinitializer, ptr %3137, align 4, !tbaa !105
  %3138 = getelementptr inbounds i32, ptr %3116, i64 88
  store <4 x i32> zeroinitializer, ptr %3138, align 4, !tbaa !105
  %3139 = getelementptr inbounds i32, ptr %3116, i64 92
  store <4 x i32> zeroinitializer, ptr %3139, align 4, !tbaa !105
  %3140 = getelementptr inbounds i32, ptr %3116, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %3140, align 4, !tbaa !105
  %3141 = getelementptr inbounds i32, ptr %3116, i64 100
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3141, align 4, !tbaa !105
  %3142 = getelementptr inbounds i32, ptr %3116, i64 104
  store <4 x i32> zeroinitializer, ptr %3142, align 4, !tbaa !105
  %3143 = getelementptr inbounds i32, ptr %3116, i64 108
  store <4 x i32> zeroinitializer, ptr %3143, align 4, !tbaa !105
  %3144 = getelementptr inbounds i32, ptr %3116, i64 112
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3144, align 4, !tbaa !105
  %3145 = getelementptr inbounds i32, ptr %3116, i64 116
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3145, align 4, !tbaa !105
  %3146 = getelementptr inbounds i32, ptr %3116, i64 120
  store i32 0, ptr %3146, align 4, !tbaa !105
  %3147 = getelementptr inbounds i32, ptr %3116, i64 121
  store i32 0, ptr %3147, align 4, !tbaa !105
  %3148 = load i32, ptr %33, align 8, !tbaa !292
  %3149 = sext i32 %3148 to i64
  %3150 = getelementptr inbounds i32, ptr %3116, i64 %3149
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3150, align 4, !tbaa !105
  %3151 = getelementptr inbounds i32, ptr %3150, i64 4
  store <4 x i32> zeroinitializer, ptr %3151, align 4, !tbaa !105
  %3152 = getelementptr inbounds i32, ptr %3150, i64 8
  store <4 x i32> zeroinitializer, ptr %3152, align 4, !tbaa !105
  %3153 = getelementptr inbounds i32, ptr %3150, i64 12
  store <4 x i32> zeroinitializer, ptr %3153, align 4, !tbaa !105
  %3154 = getelementptr inbounds i32, ptr %3150, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3154, align 4, !tbaa !105
  %3155 = getelementptr inbounds i32, ptr %3150, i64 20
  store <4 x i32> zeroinitializer, ptr %3155, align 4, !tbaa !105
  %3156 = getelementptr inbounds i32, ptr %3150, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3156, align 4, !tbaa !105
  %3157 = getelementptr inbounds i32, ptr %3150, i64 28
  store <4 x i32> zeroinitializer, ptr %3157, align 4, !tbaa !105
  %3158 = getelementptr inbounds i32, ptr %3150, i64 32
  store <4 x i32> zeroinitializer, ptr %3158, align 4, !tbaa !105
  %3159 = getelementptr inbounds i32, ptr %3150, i64 36
  store <4 x i32> zeroinitializer, ptr %3159, align 4, !tbaa !105
  %3160 = getelementptr inbounds i32, ptr %3150, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3160, align 4, !tbaa !105
  %3161 = getelementptr inbounds i32, ptr %3150, i64 44
  store <4 x i32> zeroinitializer, ptr %3161, align 4, !tbaa !105
  %3162 = getelementptr inbounds i32, ptr %3150, i64 48
  store <4 x i32> zeroinitializer, ptr %3162, align 4, !tbaa !105
  %3163 = getelementptr inbounds i32, ptr %3150, i64 52
  store <4 x i32> zeroinitializer, ptr %3163, align 4, !tbaa !105
  %3164 = getelementptr inbounds i32, ptr %3150, i64 56
  store <4 x i32> zeroinitializer, ptr %3164, align 4, !tbaa !105
  %3165 = getelementptr inbounds i32, ptr %3150, i64 60
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3165, align 4, !tbaa !105
  %3166 = getelementptr inbounds i32, ptr %3150, i64 64
  store <4 x i32> zeroinitializer, ptr %3166, align 4, !tbaa !105
  %3167 = getelementptr inbounds i32, ptr %3150, i64 68
  store <4 x i32> zeroinitializer, ptr %3167, align 4, !tbaa !105
  %3168 = getelementptr inbounds i32, ptr %3150, i64 72
  store <4 x i32> zeroinitializer, ptr %3168, align 4, !tbaa !105
  %3169 = getelementptr inbounds i32, ptr %3150, i64 76
  store <4 x i32> zeroinitializer, ptr %3169, align 4, !tbaa !105
  %3170 = getelementptr inbounds i32, ptr %3150, i64 80
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3170, align 4, !tbaa !105
  %3171 = getelementptr inbounds i32, ptr %3150, i64 84
  store <4 x i32> zeroinitializer, ptr %3171, align 4, !tbaa !105
  %3172 = getelementptr inbounds i32, ptr %3150, i64 88
  store <4 x i32> zeroinitializer, ptr %3172, align 4, !tbaa !105
  %3173 = getelementptr inbounds i32, ptr %3150, i64 92
  store <4 x i32> zeroinitializer, ptr %3173, align 4, !tbaa !105
  %3174 = getelementptr inbounds i32, ptr %3150, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %3174, align 4, !tbaa !105
  %3175 = getelementptr inbounds i32, ptr %3150, i64 100
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 -1>, ptr %3175, align 4, !tbaa !105
  %3176 = getelementptr inbounds i32, ptr %3150, i64 104
  store <4 x i32> zeroinitializer, ptr %3176, align 4, !tbaa !105
  %3177 = getelementptr inbounds i32, ptr %3150, i64 108
  store <4 x i32> zeroinitializer, ptr %3177, align 4, !tbaa !105
  %3178 = getelementptr inbounds i32, ptr %3150, i64 112
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3178, align 4, !tbaa !105
  %3179 = getelementptr inbounds i32, ptr %3150, i64 116
  store <4 x i32> zeroinitializer, ptr %3179, align 4, !tbaa !105
  %3180 = getelementptr inbounds i32, ptr %3150, i64 120
  store i32 0, ptr %3180, align 4, !tbaa !105
  %3181 = getelementptr inbounds i32, ptr %3150, i64 121
  store i32 0, ptr %3181, align 4, !tbaa !105
  %3182 = load i32, ptr %33, align 8, !tbaa !292
  %3183 = sext i32 %3182 to i64
  %3184 = getelementptr inbounds i32, ptr %3150, i64 %3183
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3184, align 4, !tbaa !105
  %3185 = getelementptr inbounds i32, ptr %3184, i64 4
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3185, align 4, !tbaa !105
  %3186 = getelementptr inbounds i32, ptr %3184, i64 8
  store <4 x i32> zeroinitializer, ptr %3186, align 4, !tbaa !105
  %3187 = getelementptr inbounds i32, ptr %3184, i64 12
  store <4 x i32> zeroinitializer, ptr %3187, align 4, !tbaa !105
  %3188 = getelementptr inbounds i32, ptr %3184, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3188, align 4, !tbaa !105
  %3189 = getelementptr inbounds i32, ptr %3184, i64 20
  store <4 x i32> zeroinitializer, ptr %3189, align 4, !tbaa !105
  %3190 = getelementptr inbounds i32, ptr %3184, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3190, align 4, !tbaa !105
  %3191 = getelementptr inbounds i32, ptr %3184, i64 28
  store <4 x i32> zeroinitializer, ptr %3191, align 4, !tbaa !105
  %3192 = getelementptr inbounds i32, ptr %3184, i64 32
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3192, align 4, !tbaa !105
  %3193 = getelementptr inbounds i32, ptr %3184, i64 36
  store <4 x i32> zeroinitializer, ptr %3193, align 4, !tbaa !105
  %3194 = getelementptr inbounds i32, ptr %3184, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3194, align 4, !tbaa !105
  %3195 = getelementptr inbounds i32, ptr %3184, i64 44
  store <4 x i32> zeroinitializer, ptr %3195, align 4, !tbaa !105
  %3196 = getelementptr inbounds i32, ptr %3184, i64 48
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3196, align 4, !tbaa !105
  %3197 = getelementptr inbounds i32, ptr %3184, i64 52
  store <4 x i32> zeroinitializer, ptr %3197, align 4, !tbaa !105
  %3198 = getelementptr inbounds i32, ptr %3184, i64 56
  store <4 x i32> zeroinitializer, ptr %3198, align 4, !tbaa !105
  %3199 = getelementptr inbounds i32, ptr %3184, i64 60
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3199, align 4, !tbaa !105
  %3200 = getelementptr inbounds i32, ptr %3184, i64 64
  store <4 x i32> zeroinitializer, ptr %3200, align 4, !tbaa !105
  %3201 = getelementptr inbounds i32, ptr %3184, i64 68
  store <4 x i32> zeroinitializer, ptr %3201, align 4, !tbaa !105
  %3202 = getelementptr inbounds i32, ptr %3184, i64 72
  store <4 x i32> zeroinitializer, ptr %3202, align 4, !tbaa !105
  %3203 = getelementptr inbounds i32, ptr %3184, i64 76
  store <4 x i32> zeroinitializer, ptr %3203, align 4, !tbaa !105
  %3204 = getelementptr inbounds i32, ptr %3184, i64 80
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3204, align 4, !tbaa !105
  %3205 = getelementptr inbounds i32, ptr %3184, i64 84
  store <4 x i32> zeroinitializer, ptr %3205, align 4, !tbaa !105
  %3206 = getelementptr inbounds i32, ptr %3184, i64 88
  store <4 x i32> zeroinitializer, ptr %3206, align 4, !tbaa !105
  %3207 = getelementptr inbounds i32, ptr %3184, i64 92
  store <4 x i32> zeroinitializer, ptr %3207, align 4, !tbaa !105
  %3208 = getelementptr inbounds i32, ptr %3184, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %3208, align 4, !tbaa !105
  %3209 = getelementptr inbounds i32, ptr %3184, i64 100
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 -1>, ptr %3209, align 4, !tbaa !105
  %3210 = getelementptr inbounds i32, ptr %3184, i64 104
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3210, align 4, !tbaa !105
  %3211 = getelementptr inbounds i32, ptr %3184, i64 108
  store <4 x i32> zeroinitializer, ptr %3211, align 4, !tbaa !105
  %3212 = getelementptr inbounds i32, ptr %3184, i64 112
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3212, align 4, !tbaa !105
  %3213 = getelementptr inbounds i32, ptr %3184, i64 116
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3213, align 4, !tbaa !105
  %3214 = getelementptr inbounds i32, ptr %3184, i64 120
  store i32 0, ptr %3214, align 4, !tbaa !105
  %3215 = getelementptr inbounds i32, ptr %3184, i64 121
  store i32 0, ptr %3215, align 4, !tbaa !105
  %3216 = load i32, ptr %33, align 8, !tbaa !292
  %3217 = sext i32 %3216 to i64
  %3218 = getelementptr inbounds i32, ptr %3184, i64 %3217
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3218, align 4, !tbaa !105
  %3219 = getelementptr inbounds i32, ptr %3218, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3219, align 4, !tbaa !105
  %3220 = getelementptr inbounds i32, ptr %3218, i64 8
  store <4 x i32> zeroinitializer, ptr %3220, align 4, !tbaa !105
  %3221 = getelementptr inbounds i32, ptr %3218, i64 12
  store <4 x i32> zeroinitializer, ptr %3221, align 4, !tbaa !105
  %3222 = getelementptr inbounds i32, ptr %3218, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3222, align 4, !tbaa !105
  %3223 = getelementptr inbounds i32, ptr %3218, i64 20
  store <4 x i32> zeroinitializer, ptr %3223, align 4, !tbaa !105
  %3224 = getelementptr inbounds i32, ptr %3218, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3224, align 4, !tbaa !105
  %3225 = getelementptr inbounds i32, ptr %3218, i64 28
  store <4 x i32> zeroinitializer, ptr %3225, align 4, !tbaa !105
  %3226 = getelementptr inbounds i32, ptr %3218, i64 32
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3226, align 4, !tbaa !105
  %3227 = getelementptr inbounds i32, ptr %3218, i64 36
  store <4 x i32> zeroinitializer, ptr %3227, align 4, !tbaa !105
  %3228 = getelementptr inbounds i32, ptr %3218, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3228, align 4, !tbaa !105
  %3229 = getelementptr inbounds i32, ptr %3218, i64 44
  store <4 x i32> zeroinitializer, ptr %3229, align 4, !tbaa !105
  %3230 = getelementptr inbounds i32, ptr %3218, i64 48
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3230, align 4, !tbaa !105
  %3231 = getelementptr inbounds i32, ptr %3218, i64 52
  store <4 x i32> zeroinitializer, ptr %3231, align 4, !tbaa !105
  %3232 = getelementptr inbounds i32, ptr %3218, i64 56
  store <4 x i32> zeroinitializer, ptr %3232, align 4, !tbaa !105
  %3233 = getelementptr inbounds i32, ptr %3218, i64 60
  store <4 x i32> zeroinitializer, ptr %3233, align 4, !tbaa !105
  %3234 = getelementptr inbounds i32, ptr %3218, i64 64
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3234, align 4, !tbaa !105
  %3235 = getelementptr inbounds i32, ptr %3218, i64 68
  store <4 x i32> zeroinitializer, ptr %3235, align 4, !tbaa !105
  %3236 = getelementptr inbounds i32, ptr %3218, i64 72
  store <4 x i32> zeroinitializer, ptr %3236, align 4, !tbaa !105
  %3237 = getelementptr inbounds i32, ptr %3218, i64 76
  store <4 x i32> zeroinitializer, ptr %3237, align 4, !tbaa !105
  %3238 = getelementptr inbounds i32, ptr %3218, i64 80
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3238, align 4, !tbaa !105
  %3239 = getelementptr inbounds i32, ptr %3218, i64 84
  store <4 x i32> zeroinitializer, ptr %3239, align 4, !tbaa !105
  %3240 = getelementptr inbounds i32, ptr %3218, i64 88
  store <4 x i32> zeroinitializer, ptr %3240, align 4, !tbaa !105
  %3241 = getelementptr inbounds i32, ptr %3218, i64 92
  store <4 x i32> zeroinitializer, ptr %3241, align 4, !tbaa !105
  %3242 = getelementptr inbounds i32, ptr %3218, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %3242, align 4, !tbaa !105
  %3243 = getelementptr inbounds i32, ptr %3218, i64 100
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 -1>, ptr %3243, align 4, !tbaa !105
  %3244 = getelementptr inbounds i32, ptr %3218, i64 104
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3244, align 4, !tbaa !105
  %3245 = getelementptr inbounds i32, ptr %3218, i64 108
  store <4 x i32> zeroinitializer, ptr %3245, align 4, !tbaa !105
  %3246 = getelementptr inbounds i32, ptr %3218, i64 112
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3246, align 4, !tbaa !105
  %3247 = getelementptr inbounds i32, ptr %3218, i64 116
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3247, align 4, !tbaa !105
  %3248 = getelementptr inbounds i32, ptr %3218, i64 120
  store i32 0, ptr %3248, align 4, !tbaa !105
  %3249 = getelementptr inbounds i32, ptr %3218, i64 121
  store i32 0, ptr %3249, align 4, !tbaa !105
  %3250 = load i32, ptr %33, align 8, !tbaa !292
  %3251 = sext i32 %3250 to i64
  %3252 = getelementptr inbounds i32, ptr %3218, i64 %3251
  %3253 = add nsw i64 %3251, %3217
  %3254 = add nsw i64 %3253, %3183
  %3255 = add nsw i64 %3254, %3149
  %3256 = add nsw i64 %3255, %3115
  %3257 = add nsw i64 %3256, %3081
  %3258 = add nsw i64 %3257, %3047
  %3259 = add i64 %3258, %3013
  %3260 = add i64 %3259, %2979
  %3261 = add i64 %3260, %2945
  %3262 = add i64 %3261, %2911
  %3263 = add i64 %3262, %2907
  %3264 = shl i64 %3263, 2
  %3265 = add i64 %3264, 488
  %3266 = getelementptr i8, ptr %2906, i64 %3265
  %3267 = icmp uge ptr %3252, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342)
  %3268 = icmp ule ptr %3266, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220)
  %3269 = or i1 %3267, %3268
  br i1 %3269, label %3270, label %3300

3270:                                             ; preds = %2904
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3252, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3271 = getelementptr inbounds i32, ptr %3252, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3271, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3272 = getelementptr inbounds i32, ptr %3252, i64 8
  store <4 x i32> zeroinitializer, ptr %3272, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3273 = getelementptr inbounds i32, ptr %3252, i64 12
  store <4 x i32> zeroinitializer, ptr %3273, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3274 = getelementptr inbounds i32, ptr %3252, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3274, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3275 = getelementptr inbounds i32, ptr %3252, i64 20
  store <4 x i32> zeroinitializer, ptr %3275, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3276 = getelementptr inbounds i32, ptr %3252, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3276, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3277 = getelementptr inbounds i32, ptr %3252, i64 28
  store <4 x i32> zeroinitializer, ptr %3277, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3278 = getelementptr inbounds i32, ptr %3252, i64 32
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3278, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3279 = getelementptr inbounds i32, ptr %3252, i64 36
  store <4 x i32> zeroinitializer, ptr %3279, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3280 = getelementptr inbounds i32, ptr %3252, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3280, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3281 = getelementptr inbounds i32, ptr %3252, i64 44
  store <4 x i32> zeroinitializer, ptr %3281, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3282 = getelementptr inbounds i32, ptr %3252, i64 48
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3282, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3283 = getelementptr inbounds i32, ptr %3252, i64 52
  store <4 x i32> zeroinitializer, ptr %3283, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3284 = getelementptr inbounds i32, ptr %3252, i64 56
  store <4 x i32> zeroinitializer, ptr %3284, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3285 = getelementptr inbounds i32, ptr %3252, i64 60
  store <4 x i32> zeroinitializer, ptr %3285, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3286 = getelementptr inbounds i32, ptr %3252, i64 64
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3286, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3287 = getelementptr inbounds i32, ptr %3252, i64 68
  store <4 x i32> zeroinitializer, ptr %3287, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3288 = getelementptr inbounds i32, ptr %3252, i64 72
  store <4 x i32> zeroinitializer, ptr %3288, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3289 = getelementptr inbounds i32, ptr %3252, i64 76
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3289, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3290 = getelementptr inbounds i32, ptr %3252, i64 80
  store <4 x i32> zeroinitializer, ptr %3290, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3291 = getelementptr inbounds i32, ptr %3252, i64 84
  store <4 x i32> zeroinitializer, ptr %3291, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3292 = getelementptr inbounds i32, ptr %3252, i64 88
  store <4 x i32> zeroinitializer, ptr %3292, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3293 = getelementptr inbounds i32, ptr %3252, i64 92
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3293, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3294 = getelementptr inbounds i32, ptr %3252, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3294, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3295 = getelementptr inbounds i32, ptr %3252, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3295, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3296 = getelementptr inbounds i32, ptr %3252, i64 104
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3296, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3297 = getelementptr inbounds i32, ptr %3252, i64 108
  store <4 x i32> zeroinitializer, ptr %3297, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3298 = getelementptr inbounds i32, ptr %3252, i64 112
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3298, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  %3299 = getelementptr inbounds i32, ptr %3252, i64 116
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3299, align 4, !tbaa !105, !alias.scope !650, !noalias !653
  br label %3300

3300:                                             ; preds = %2904, %3270
  %3301 = phi i64 [ 0, %2904 ], [ 120, %3270 ]
  br label %3302

3302:                                             ; preds = %3302, %3300
  %3303 = phi i64 [ %3310, %3302 ], [ %3301, %3300 ]
  %3304 = phi i64 [ %3311, %3302 ], [ 0, %3300 ]
  %3305 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %3303
  %3306 = load i8, ptr %3305, align 1, !tbaa !46
  %3307 = icmp eq i8 %3306, 46
  %3308 = sext i1 %3307 to i32
  %3309 = getelementptr inbounds i32, ptr %3252, i64 %3303
  store i32 %3308, ptr %3309, align 4, !tbaa !105
  %3310 = add nuw nsw i64 %3303, 1
  %3311 = add i64 %3304, 1
  %3312 = icmp eq i64 %3311, 2
  br i1 %3312, label %3313, label %3302, !llvm.loop !655

3313:                                             ; preds = %3302
  br i1 %3269, label %3341, label %3314

3314:                                             ; preds = %3313, %3314
  %3315 = phi i64 [ %3339, %3314 ], [ %3310, %3313 ]
  %3316 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %3315
  %3317 = load i8, ptr %3316, align 1, !tbaa !46
  %3318 = icmp eq i8 %3317, 46
  %3319 = sext i1 %3318 to i32
  %3320 = getelementptr inbounds i32, ptr %3252, i64 %3315
  store i32 %3319, ptr %3320, align 4, !tbaa !105
  %3321 = add nuw nsw i64 %3315, 1
  %3322 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %3321
  %3323 = load i8, ptr %3322, align 1, !tbaa !46
  %3324 = icmp eq i8 %3323, 46
  %3325 = sext i1 %3324 to i32
  %3326 = getelementptr inbounds i32, ptr %3252, i64 %3321
  store i32 %3325, ptr %3326, align 4, !tbaa !105
  %3327 = add nuw nsw i64 %3315, 2
  %3328 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %3327
  %3329 = load i8, ptr %3328, align 1, !tbaa !46
  %3330 = icmp eq i8 %3329, 46
  %3331 = sext i1 %3330 to i32
  %3332 = getelementptr inbounds i32, ptr %3252, i64 %3327
  store i32 %3331, ptr %3332, align 4, !tbaa !105
  %3333 = add nuw nsw i64 %3315, 3
  %3334 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %3333
  %3335 = load i8, ptr %3334, align 1, !tbaa !46
  %3336 = icmp eq i8 %3335, 46
  %3337 = sext i1 %3336 to i32
  %3338 = getelementptr inbounds i32, ptr %3252, i64 %3333
  store i32 %3337, ptr %3338, align 4, !tbaa !105
  %3339 = add nuw nsw i64 %3315, 4
  %3340 = icmp eq i64 %3339, 122
  br i1 %3340, label %3341, label %3314, !llvm.loop !656

3341:                                             ; preds = %3314, %3313
  %3342 = load i32, ptr %33, align 8, !tbaa !292
  %3343 = sext i32 %3342 to i64
  %3344 = getelementptr inbounds i32, ptr %3252, i64 %3343
  %3345 = add nsw i64 %3343, %3251
  %3346 = add nsw i64 %3345, %3217
  %3347 = add nsw i64 %3346, %3183
  %3348 = add nsw i64 %3347, %3149
  %3349 = add nsw i64 %3348, %3115
  %3350 = add nsw i64 %3349, %3081
  %3351 = add i64 %3350, %3047
  %3352 = add i64 %3351, %3013
  %3353 = add i64 %3352, %2979
  %3354 = add i64 %3353, %2945
  %3355 = add i64 %3354, %2911
  %3356 = add i64 %3355, %2907
  %3357 = shl i64 %3356, 2
  %3358 = add i64 %3357, 488
  %3359 = getelementptr i8, ptr %2906, i64 %3358
  %3360 = icmp uge ptr %3344, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464)
  %3361 = icmp ule ptr %3359, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342)
  %3362 = or i1 %3360, %3361
  br i1 %3362, label %3363, label %3393

3363:                                             ; preds = %3341
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3344, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3364 = getelementptr inbounds i32, ptr %3344, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3364, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3365 = getelementptr inbounds i32, ptr %3344, i64 8
  store <4 x i32> zeroinitializer, ptr %3365, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3366 = getelementptr inbounds i32, ptr %3344, i64 12
  store <4 x i32> zeroinitializer, ptr %3366, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3367 = getelementptr inbounds i32, ptr %3344, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3367, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3368 = getelementptr inbounds i32, ptr %3344, i64 20
  store <4 x i32> zeroinitializer, ptr %3368, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3369 = getelementptr inbounds i32, ptr %3344, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3369, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3370 = getelementptr inbounds i32, ptr %3344, i64 28
  store <4 x i32> zeroinitializer, ptr %3370, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3371 = getelementptr inbounds i32, ptr %3344, i64 32
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3371, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3372 = getelementptr inbounds i32, ptr %3344, i64 36
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3372, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3373 = getelementptr inbounds i32, ptr %3344, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3373, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3374 = getelementptr inbounds i32, ptr %3344, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3374, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3375 = getelementptr inbounds i32, ptr %3344, i64 48
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3375, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3376 = getelementptr inbounds i32, ptr %3344, i64 52
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3376, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3377 = getelementptr inbounds i32, ptr %3344, i64 56
  store <4 x i32> zeroinitializer, ptr %3377, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3378 = getelementptr inbounds i32, ptr %3344, i64 60
  store <4 x i32> zeroinitializer, ptr %3378, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3379 = getelementptr inbounds i32, ptr %3344, i64 64
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3379, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3380 = getelementptr inbounds i32, ptr %3344, i64 68
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3380, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3381 = getelementptr inbounds i32, ptr %3344, i64 72
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3381, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3382 = getelementptr inbounds i32, ptr %3344, i64 76
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3382, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3383 = getelementptr inbounds i32, ptr %3344, i64 80
  store <4 x i32> zeroinitializer, ptr %3383, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3384 = getelementptr inbounds i32, ptr %3344, i64 84
  store <4 x i32> zeroinitializer, ptr %3384, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3385 = getelementptr inbounds i32, ptr %3344, i64 88
  store <4 x i32> zeroinitializer, ptr %3385, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3386 = getelementptr inbounds i32, ptr %3344, i64 92
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3386, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3387 = getelementptr inbounds i32, ptr %3344, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3387, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3388 = getelementptr inbounds i32, ptr %3344, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3388, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3389 = getelementptr inbounds i32, ptr %3344, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3389, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3390 = getelementptr inbounds i32, ptr %3344, i64 108
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3390, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3391 = getelementptr inbounds i32, ptr %3344, i64 112
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3391, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  %3392 = getelementptr inbounds i32, ptr %3344, i64 116
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3392, align 4, !tbaa !105, !alias.scope !657, !noalias !660
  br label %3393

3393:                                             ; preds = %3341, %3363
  %3394 = phi i64 [ 0, %3341 ], [ 120, %3363 ]
  br label %3395

3395:                                             ; preds = %3395, %3393
  %3396 = phi i64 [ %3403, %3395 ], [ %3394, %3393 ]
  %3397 = phi i64 [ %3404, %3395 ], [ 0, %3393 ]
  %3398 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %3396
  %3399 = load i8, ptr %3398, align 1, !tbaa !46
  %3400 = icmp eq i8 %3399, 46
  %3401 = sext i1 %3400 to i32
  %3402 = getelementptr inbounds i32, ptr %3344, i64 %3396
  store i32 %3401, ptr %3402, align 4, !tbaa !105
  %3403 = add nuw nsw i64 %3396, 1
  %3404 = add i64 %3397, 1
  %3405 = icmp eq i64 %3404, 2
  br i1 %3405, label %3406, label %3395, !llvm.loop !662

3406:                                             ; preds = %3395
  br i1 %3362, label %3434, label %3407

3407:                                             ; preds = %3406, %3407
  %3408 = phi i64 [ %3432, %3407 ], [ %3403, %3406 ]
  %3409 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %3408
  %3410 = load i8, ptr %3409, align 1, !tbaa !46
  %3411 = icmp eq i8 %3410, 46
  %3412 = sext i1 %3411 to i32
  %3413 = getelementptr inbounds i32, ptr %3344, i64 %3408
  store i32 %3412, ptr %3413, align 4, !tbaa !105
  %3414 = add nuw nsw i64 %3408, 1
  %3415 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %3414
  %3416 = load i8, ptr %3415, align 1, !tbaa !46
  %3417 = icmp eq i8 %3416, 46
  %3418 = sext i1 %3417 to i32
  %3419 = getelementptr inbounds i32, ptr %3344, i64 %3414
  store i32 %3418, ptr %3419, align 4, !tbaa !105
  %3420 = add nuw nsw i64 %3408, 2
  %3421 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %3420
  %3422 = load i8, ptr %3421, align 1, !tbaa !46
  %3423 = icmp eq i8 %3422, 46
  %3424 = sext i1 %3423 to i32
  %3425 = getelementptr inbounds i32, ptr %3344, i64 %3420
  store i32 %3424, ptr %3425, align 4, !tbaa !105
  %3426 = add nuw nsw i64 %3408, 3
  %3427 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %3426
  %3428 = load i8, ptr %3427, align 1, !tbaa !46
  %3429 = icmp eq i8 %3428, 46
  %3430 = sext i1 %3429 to i32
  %3431 = getelementptr inbounds i32, ptr %3344, i64 %3426
  store i32 %3430, ptr %3431, align 4, !tbaa !105
  %3432 = add nuw nsw i64 %3408, 4
  %3433 = icmp eq i64 %3432, 122
  br i1 %3433, label %3434, label %3407, !llvm.loop !663

3434:                                             ; preds = %3407, %3406
  %3435 = load i32, ptr %33, align 8, !tbaa !292
  %3436 = sext i32 %3435 to i64
  %3437 = getelementptr inbounds i32, ptr %3344, i64 %3436
  %3438 = add nsw i64 %3436, %3343
  %3439 = add nsw i64 %3438, %3251
  %3440 = add nsw i64 %3439, %3217
  %3441 = add nsw i64 %3440, %3183
  %3442 = add nsw i64 %3441, %3149
  %3443 = add nsw i64 %3442, %3115
  %3444 = add i64 %3443, %3081
  %3445 = add i64 %3444, %3047
  %3446 = add i64 %3445, %3013
  %3447 = add i64 %3446, %2979
  %3448 = add i64 %3447, %2945
  %3449 = add i64 %3448, %2911
  %3450 = add i64 %3449, %2907
  %3451 = shl i64 %3450, 2
  %3452 = add i64 %3451, 488
  %3453 = getelementptr i8, ptr %2906, i64 %3452
  %3454 = icmp uge ptr %3437, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586)
  %3455 = icmp ule ptr %3453, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464)
  %3456 = or i1 %3454, %3455
  br i1 %3456, label %3457, label %3487

3457:                                             ; preds = %3434
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3437, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3458 = getelementptr inbounds i32, ptr %3437, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3458, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3459 = getelementptr inbounds i32, ptr %3437, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3459, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3460 = getelementptr inbounds i32, ptr %3437, i64 12
  store <4 x i32> zeroinitializer, ptr %3460, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3461 = getelementptr inbounds i32, ptr %3437, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3461, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3462 = getelementptr inbounds i32, ptr %3437, i64 20
  store <4 x i32> zeroinitializer, ptr %3462, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3463 = getelementptr inbounds i32, ptr %3437, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3463, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3464 = getelementptr inbounds i32, ptr %3437, i64 28
  store <4 x i32> zeroinitializer, ptr %3464, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3465 = getelementptr inbounds i32, ptr %3437, i64 32
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3465, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3466 = getelementptr inbounds i32, ptr %3437, i64 36
  store <4 x i32> zeroinitializer, ptr %3466, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3467 = getelementptr inbounds i32, ptr %3437, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3467, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3468 = getelementptr inbounds i32, ptr %3437, i64 44
  store <4 x i32> zeroinitializer, ptr %3468, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3469 = getelementptr inbounds i32, ptr %3437, i64 48
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3469, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3470 = getelementptr inbounds i32, ptr %3437, i64 52
  store <4 x i32> zeroinitializer, ptr %3470, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3471 = getelementptr inbounds i32, ptr %3437, i64 56
  store <4 x i32> zeroinitializer, ptr %3471, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3472 = getelementptr inbounds i32, ptr %3437, i64 60
  store <4 x i32> zeroinitializer, ptr %3472, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3473 = getelementptr inbounds i32, ptr %3437, i64 64
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3473, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3474 = getelementptr inbounds i32, ptr %3437, i64 68
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3474, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3475 = getelementptr inbounds i32, ptr %3437, i64 72
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3475, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3476 = getelementptr inbounds i32, ptr %3437, i64 76
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3476, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3477 = getelementptr inbounds i32, ptr %3437, i64 80
  store <4 x i32> zeroinitializer, ptr %3477, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3478 = getelementptr inbounds i32, ptr %3437, i64 84
  store <4 x i32> zeroinitializer, ptr %3478, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3479 = getelementptr inbounds i32, ptr %3437, i64 88
  store <4 x i32> zeroinitializer, ptr %3479, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3480 = getelementptr inbounds i32, ptr %3437, i64 92
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3480, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3481 = getelementptr inbounds i32, ptr %3437, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3481, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3482 = getelementptr inbounds i32, ptr %3437, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3482, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3483 = getelementptr inbounds i32, ptr %3437, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3483, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3484 = getelementptr inbounds i32, ptr %3437, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3484, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3485 = getelementptr inbounds i32, ptr %3437, i64 112
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3485, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  %3486 = getelementptr inbounds i32, ptr %3437, i64 116
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3486, align 4, !tbaa !105, !alias.scope !664, !noalias !667
  br label %3487

3487:                                             ; preds = %3434, %3457
  %3488 = phi i64 [ 0, %3434 ], [ 120, %3457 ]
  br label %3489

3489:                                             ; preds = %3489, %3487
  %3490 = phi i64 [ %3497, %3489 ], [ %3488, %3487 ]
  %3491 = phi i64 [ %3498, %3489 ], [ 0, %3487 ]
  %3492 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %3490
  %3493 = load i8, ptr %3492, align 1, !tbaa !46
  %3494 = icmp eq i8 %3493, 46
  %3495 = sext i1 %3494 to i32
  %3496 = getelementptr inbounds i32, ptr %3437, i64 %3490
  store i32 %3495, ptr %3496, align 4, !tbaa !105
  %3497 = add nuw nsw i64 %3490, 1
  %3498 = add i64 %3491, 1
  %3499 = icmp eq i64 %3498, 2
  br i1 %3499, label %3500, label %3489, !llvm.loop !669

3500:                                             ; preds = %3489
  br i1 %3456, label %3528, label %3501

3501:                                             ; preds = %3500, %3501
  %3502 = phi i64 [ %3526, %3501 ], [ %3497, %3500 ]
  %3503 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %3502
  %3504 = load i8, ptr %3503, align 1, !tbaa !46
  %3505 = icmp eq i8 %3504, 46
  %3506 = sext i1 %3505 to i32
  %3507 = getelementptr inbounds i32, ptr %3437, i64 %3502
  store i32 %3506, ptr %3507, align 4, !tbaa !105
  %3508 = add nuw nsw i64 %3502, 1
  %3509 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %3508
  %3510 = load i8, ptr %3509, align 1, !tbaa !46
  %3511 = icmp eq i8 %3510, 46
  %3512 = sext i1 %3511 to i32
  %3513 = getelementptr inbounds i32, ptr %3437, i64 %3508
  store i32 %3512, ptr %3513, align 4, !tbaa !105
  %3514 = add nuw nsw i64 %3502, 2
  %3515 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %3514
  %3516 = load i8, ptr %3515, align 1, !tbaa !46
  %3517 = icmp eq i8 %3516, 46
  %3518 = sext i1 %3517 to i32
  %3519 = getelementptr inbounds i32, ptr %3437, i64 %3514
  store i32 %3518, ptr %3519, align 4, !tbaa !105
  %3520 = add nuw nsw i64 %3502, 3
  %3521 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %3520
  %3522 = load i8, ptr %3521, align 1, !tbaa !46
  %3523 = icmp eq i8 %3522, 46
  %3524 = sext i1 %3523 to i32
  %3525 = getelementptr inbounds i32, ptr %3437, i64 %3520
  store i32 %3524, ptr %3525, align 4, !tbaa !105
  %3526 = add nuw nsw i64 %3502, 4
  %3527 = icmp eq i64 %3526, 122
  br i1 %3527, label %3528, label %3501, !llvm.loop !670

3528:                                             ; preds = %3501, %3500
  %3529 = load i32, ptr %33, align 8, !tbaa !292
  %3530 = sext i32 %3529 to i64
  %3531 = getelementptr inbounds i32, ptr %3437, i64 %3530
  %3532 = add nsw i64 %3530, %3436
  %3533 = add nsw i64 %3532, %3343
  %3534 = add nsw i64 %3533, %3251
  %3535 = add nsw i64 %3534, %3217
  %3536 = add nsw i64 %3535, %3183
  %3537 = add nsw i64 %3536, %3149
  %3538 = add i64 %3537, %3115
  %3539 = add i64 %3538, %3081
  %3540 = add i64 %3539, %3047
  %3541 = add i64 %3540, %3013
  %3542 = add i64 %3541, %2979
  %3543 = add i64 %3542, %2945
  %3544 = add i64 %3543, %2911
  %3545 = add i64 %3544, %2907
  %3546 = shl i64 %3545, 2
  %3547 = add i64 %3546, 488
  %3548 = getelementptr i8, ptr %2906, i64 %3547
  %3549 = icmp uge ptr %3531, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708)
  %3550 = icmp ule ptr %3548, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586)
  %3551 = or i1 %3549, %3550
  br i1 %3551, label %3552, label %3582

3552:                                             ; preds = %3528
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3531, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3553 = getelementptr inbounds i32, ptr %3531, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3553, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3554 = getelementptr inbounds i32, ptr %3531, i64 8
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3554, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3555 = getelementptr inbounds i32, ptr %3531, i64 12
  store <4 x i32> zeroinitializer, ptr %3555, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3556 = getelementptr inbounds i32, ptr %3531, i64 16
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3556, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3557 = getelementptr inbounds i32, ptr %3531, i64 20
  store <4 x i32> zeroinitializer, ptr %3557, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3558 = getelementptr inbounds i32, ptr %3531, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3558, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3559 = getelementptr inbounds i32, ptr %3531, i64 28
  store <4 x i32> zeroinitializer, ptr %3559, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3560 = getelementptr inbounds i32, ptr %3531, i64 32
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3560, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3561 = getelementptr inbounds i32, ptr %3531, i64 36
  store <4 x i32> zeroinitializer, ptr %3561, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3562 = getelementptr inbounds i32, ptr %3531, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3562, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3563 = getelementptr inbounds i32, ptr %3531, i64 44
  store <4 x i32> zeroinitializer, ptr %3563, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3564 = getelementptr inbounds i32, ptr %3531, i64 48
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3564, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3565 = getelementptr inbounds i32, ptr %3531, i64 52
  store <4 x i32> zeroinitializer, ptr %3565, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3566 = getelementptr inbounds i32, ptr %3531, i64 56
  store <4 x i32> zeroinitializer, ptr %3566, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3567 = getelementptr inbounds i32, ptr %3531, i64 60
  store <4 x i32> zeroinitializer, ptr %3567, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3568 = getelementptr inbounds i32, ptr %3531, i64 64
  store <4 x i32> zeroinitializer, ptr %3568, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3569 = getelementptr inbounds i32, ptr %3531, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3569, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3570 = getelementptr inbounds i32, ptr %3531, i64 72
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3570, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3571 = getelementptr inbounds i32, ptr %3531, i64 76
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %3571, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3572 = getelementptr inbounds i32, ptr %3531, i64 80
  store <4 x i32> zeroinitializer, ptr %3572, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3573 = getelementptr inbounds i32, ptr %3531, i64 84
  store <4 x i32> zeroinitializer, ptr %3573, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3574 = getelementptr inbounds i32, ptr %3531, i64 88
  store <4 x i32> zeroinitializer, ptr %3574, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3575 = getelementptr inbounds i32, ptr %3531, i64 92
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3575, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3576 = getelementptr inbounds i32, ptr %3531, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3576, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3577 = getelementptr inbounds i32, ptr %3531, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3577, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3578 = getelementptr inbounds i32, ptr %3531, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3578, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3579 = getelementptr inbounds i32, ptr %3531, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3579, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3580 = getelementptr inbounds i32, ptr %3531, i64 112
  store <4 x i32> zeroinitializer, ptr %3580, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  %3581 = getelementptr inbounds i32, ptr %3531, i64 116
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3581, align 4, !tbaa !105, !alias.scope !671, !noalias !674
  br label %3582

3582:                                             ; preds = %3528, %3552
  %3583 = phi i64 [ 0, %3528 ], [ 120, %3552 ]
  br label %3584

3584:                                             ; preds = %3584, %3582
  %3585 = phi i64 [ %3592, %3584 ], [ %3583, %3582 ]
  %3586 = phi i64 [ %3593, %3584 ], [ 0, %3582 ]
  %3587 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %3585
  %3588 = load i8, ptr %3587, align 1, !tbaa !46
  %3589 = icmp eq i8 %3588, 46
  %3590 = sext i1 %3589 to i32
  %3591 = getelementptr inbounds i32, ptr %3531, i64 %3585
  store i32 %3590, ptr %3591, align 4, !tbaa !105
  %3592 = add nuw nsw i64 %3585, 1
  %3593 = add i64 %3586, 1
  %3594 = icmp eq i64 %3593, 2
  br i1 %3594, label %3595, label %3584, !llvm.loop !676

3595:                                             ; preds = %3584
  br i1 %3551, label %3623, label %3596

3596:                                             ; preds = %3595, %3596
  %3597 = phi i64 [ %3621, %3596 ], [ %3592, %3595 ]
  %3598 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %3597
  %3599 = load i8, ptr %3598, align 1, !tbaa !46
  %3600 = icmp eq i8 %3599, 46
  %3601 = sext i1 %3600 to i32
  %3602 = getelementptr inbounds i32, ptr %3531, i64 %3597
  store i32 %3601, ptr %3602, align 4, !tbaa !105
  %3603 = add nuw nsw i64 %3597, 1
  %3604 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %3603
  %3605 = load i8, ptr %3604, align 1, !tbaa !46
  %3606 = icmp eq i8 %3605, 46
  %3607 = sext i1 %3606 to i32
  %3608 = getelementptr inbounds i32, ptr %3531, i64 %3603
  store i32 %3607, ptr %3608, align 4, !tbaa !105
  %3609 = add nuw nsw i64 %3597, 2
  %3610 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %3609
  %3611 = load i8, ptr %3610, align 1, !tbaa !46
  %3612 = icmp eq i8 %3611, 46
  %3613 = sext i1 %3612 to i32
  %3614 = getelementptr inbounds i32, ptr %3531, i64 %3609
  store i32 %3613, ptr %3614, align 4, !tbaa !105
  %3615 = add nuw nsw i64 %3597, 3
  %3616 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %3615
  %3617 = load i8, ptr %3616, align 1, !tbaa !46
  %3618 = icmp eq i8 %3617, 46
  %3619 = sext i1 %3618 to i32
  %3620 = getelementptr inbounds i32, ptr %3531, i64 %3615
  store i32 %3619, ptr %3620, align 4, !tbaa !105
  %3621 = add nuw nsw i64 %3597, 4
  %3622 = icmp eq i64 %3621, 122
  br i1 %3622, label %3623, label %3596, !llvm.loop !677

3623:                                             ; preds = %3596, %3595
  %3624 = load i32, ptr %33, align 8, !tbaa !292
  %3625 = sext i32 %3624 to i64
  %3626 = getelementptr inbounds i32, ptr %3531, i64 %3625
  %3627 = add nsw i64 %3625, %3530
  %3628 = add nsw i64 %3627, %3436
  %3629 = add nsw i64 %3628, %3343
  %3630 = add nsw i64 %3629, %3251
  %3631 = add nsw i64 %3630, %3217
  %3632 = add nsw i64 %3631, %3183
  %3633 = add i64 %3632, %3149
  %3634 = add i64 %3633, %3115
  %3635 = add i64 %3634, %3081
  %3636 = add i64 %3635, %3047
  %3637 = add i64 %3636, %3013
  %3638 = add i64 %3637, %2979
  %3639 = add i64 %3638, %2945
  %3640 = add i64 %3639, %2911
  %3641 = add i64 %3640, %2907
  %3642 = shl i64 %3641, 2
  %3643 = add i64 %3642, 488
  %3644 = getelementptr i8, ptr %2906, i64 %3643
  %3645 = icmp uge ptr %3626, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830)
  %3646 = icmp ule ptr %3644, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708)
  %3647 = or i1 %3645, %3646
  br i1 %3647, label %3648, label %3678

3648:                                             ; preds = %3623
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3626, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3649 = getelementptr inbounds i32, ptr %3626, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3649, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3650 = getelementptr inbounds i32, ptr %3626, i64 8
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3650, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3651 = getelementptr inbounds i32, ptr %3626, i64 12
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3651, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3652 = getelementptr inbounds i32, ptr %3626, i64 16
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3652, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3653 = getelementptr inbounds i32, ptr %3626, i64 20
  store <4 x i32> zeroinitializer, ptr %3653, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3654 = getelementptr inbounds i32, ptr %3626, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3654, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3655 = getelementptr inbounds i32, ptr %3626, i64 28
  store <4 x i32> zeroinitializer, ptr %3655, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3656 = getelementptr inbounds i32, ptr %3626, i64 32
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3656, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3657 = getelementptr inbounds i32, ptr %3626, i64 36
  store <4 x i32> zeroinitializer, ptr %3657, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3658 = getelementptr inbounds i32, ptr %3626, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3658, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3659 = getelementptr inbounds i32, ptr %3626, i64 44
  store <4 x i32> zeroinitializer, ptr %3659, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3660 = getelementptr inbounds i32, ptr %3626, i64 48
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3660, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3661 = getelementptr inbounds i32, ptr %3626, i64 52
  store <4 x i32> zeroinitializer, ptr %3661, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3662 = getelementptr inbounds i32, ptr %3626, i64 56
  store <4 x i32> zeroinitializer, ptr %3662, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3663 = getelementptr inbounds i32, ptr %3626, i64 60
  store <4 x i32> zeroinitializer, ptr %3663, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3664 = getelementptr inbounds i32, ptr %3626, i64 64
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3664, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3665 = getelementptr inbounds i32, ptr %3626, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3665, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3666 = getelementptr inbounds i32, ptr %3626, i64 72
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3666, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3667 = getelementptr inbounds i32, ptr %3626, i64 76
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3667, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3668 = getelementptr inbounds i32, ptr %3626, i64 80
  store <4 x i32> zeroinitializer, ptr %3668, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3669 = getelementptr inbounds i32, ptr %3626, i64 84
  store <4 x i32> zeroinitializer, ptr %3669, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3670 = getelementptr inbounds i32, ptr %3626, i64 88
  store <4 x i32> zeroinitializer, ptr %3670, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3671 = getelementptr inbounds i32, ptr %3626, i64 92
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3671, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3672 = getelementptr inbounds i32, ptr %3626, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3672, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3673 = getelementptr inbounds i32, ptr %3626, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3673, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3674 = getelementptr inbounds i32, ptr %3626, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3674, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3675 = getelementptr inbounds i32, ptr %3626, i64 108
  store <4 x i32> zeroinitializer, ptr %3675, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3676 = getelementptr inbounds i32, ptr %3626, i64 112
  store <4 x i32> zeroinitializer, ptr %3676, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  %3677 = getelementptr inbounds i32, ptr %3626, i64 116
  store <4 x i32> zeroinitializer, ptr %3677, align 4, !tbaa !105, !alias.scope !678, !noalias !681
  br label %3678

3678:                                             ; preds = %3623, %3648
  %3679 = phi i64 [ 0, %3623 ], [ 120, %3648 ]
  br label %3680

3680:                                             ; preds = %3680, %3678
  %3681 = phi i64 [ %3688, %3680 ], [ %3679, %3678 ]
  %3682 = phi i64 [ %3689, %3680 ], [ 0, %3678 ]
  %3683 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %3681
  %3684 = load i8, ptr %3683, align 1, !tbaa !46
  %3685 = icmp eq i8 %3684, 46
  %3686 = sext i1 %3685 to i32
  %3687 = getelementptr inbounds i32, ptr %3626, i64 %3681
  store i32 %3686, ptr %3687, align 4, !tbaa !105
  %3688 = add nuw nsw i64 %3681, 1
  %3689 = add i64 %3682, 1
  %3690 = icmp eq i64 %3689, 2
  br i1 %3690, label %3691, label %3680, !llvm.loop !683

3691:                                             ; preds = %3680
  br i1 %3647, label %3719, label %3692

3692:                                             ; preds = %3691, %3692
  %3693 = phi i64 [ %3717, %3692 ], [ %3688, %3691 ]
  %3694 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %3693
  %3695 = load i8, ptr %3694, align 1, !tbaa !46
  %3696 = icmp eq i8 %3695, 46
  %3697 = sext i1 %3696 to i32
  %3698 = getelementptr inbounds i32, ptr %3626, i64 %3693
  store i32 %3697, ptr %3698, align 4, !tbaa !105
  %3699 = add nuw nsw i64 %3693, 1
  %3700 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %3699
  %3701 = load i8, ptr %3700, align 1, !tbaa !46
  %3702 = icmp eq i8 %3701, 46
  %3703 = sext i1 %3702 to i32
  %3704 = getelementptr inbounds i32, ptr %3626, i64 %3699
  store i32 %3703, ptr %3704, align 4, !tbaa !105
  %3705 = add nuw nsw i64 %3693, 2
  %3706 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %3705
  %3707 = load i8, ptr %3706, align 1, !tbaa !46
  %3708 = icmp eq i8 %3707, 46
  %3709 = sext i1 %3708 to i32
  %3710 = getelementptr inbounds i32, ptr %3626, i64 %3705
  store i32 %3709, ptr %3710, align 4, !tbaa !105
  %3711 = add nuw nsw i64 %3693, 3
  %3712 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %3711
  %3713 = load i8, ptr %3712, align 1, !tbaa !46
  %3714 = icmp eq i8 %3713, 46
  %3715 = sext i1 %3714 to i32
  %3716 = getelementptr inbounds i32, ptr %3626, i64 %3711
  store i32 %3715, ptr %3716, align 4, !tbaa !105
  %3717 = add nuw nsw i64 %3693, 4
  %3718 = icmp eq i64 %3717, 122
  br i1 %3718, label %3719, label %3692, !llvm.loop !684

3719:                                             ; preds = %3692, %3691
  %3720 = load i32, ptr %33, align 8, !tbaa !292
  %3721 = sext i32 %3720 to i64
  %3722 = getelementptr inbounds i32, ptr %3626, i64 %3721
  %3723 = add nsw i64 %3721, %3625
  %3724 = add nsw i64 %3723, %3530
  %3725 = add nsw i64 %3724, %3436
  %3726 = add nsw i64 %3725, %3343
  %3727 = add nsw i64 %3726, %3251
  %3728 = add nsw i64 %3727, %3217
  %3729 = add i64 %3728, %3183
  %3730 = add i64 %3729, %3149
  %3731 = add i64 %3730, %3115
  %3732 = add i64 %3731, %3081
  %3733 = add i64 %3732, %3047
  %3734 = add i64 %3733, %3013
  %3735 = add i64 %3734, %2979
  %3736 = add i64 %3735, %2945
  %3737 = add i64 %3736, %2911
  %3738 = add i64 %3737, %2907
  %3739 = shl i64 %3738, 2
  %3740 = add i64 %3739, 488
  %3741 = getelementptr i8, ptr %2906, i64 %3740
  %3742 = icmp uge ptr %3722, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952)
  %3743 = icmp ule ptr %3741, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830)
  %3744 = or i1 %3742, %3743
  br i1 %3744, label %3745, label %3775

3745:                                             ; preds = %3719
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3722, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3746 = getelementptr inbounds i32, ptr %3722, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3746, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3747 = getelementptr inbounds i32, ptr %3722, i64 8
  store <4 x i32> zeroinitializer, ptr %3747, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3748 = getelementptr inbounds i32, ptr %3722, i64 12
  store <4 x i32> zeroinitializer, ptr %3748, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3749 = getelementptr inbounds i32, ptr %3722, i64 16
  store <4 x i32> zeroinitializer, ptr %3749, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3750 = getelementptr inbounds i32, ptr %3722, i64 20
  store <4 x i32> zeroinitializer, ptr %3750, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3751 = getelementptr inbounds i32, ptr %3722, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3751, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3752 = getelementptr inbounds i32, ptr %3722, i64 28
  store <4 x i32> zeroinitializer, ptr %3752, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3753 = getelementptr inbounds i32, ptr %3722, i64 32
  store <4 x i32> zeroinitializer, ptr %3753, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3754 = getelementptr inbounds i32, ptr %3722, i64 36
  store <4 x i32> zeroinitializer, ptr %3754, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3755 = getelementptr inbounds i32, ptr %3722, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3755, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3756 = getelementptr inbounds i32, ptr %3722, i64 44
  store <4 x i32> zeroinitializer, ptr %3756, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3757 = getelementptr inbounds i32, ptr %3722, i64 48
  store <4 x i32> zeroinitializer, ptr %3757, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3758 = getelementptr inbounds i32, ptr %3722, i64 52
  store <4 x i32> zeroinitializer, ptr %3758, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3759 = getelementptr inbounds i32, ptr %3722, i64 56
  store <4 x i32> zeroinitializer, ptr %3759, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3760 = getelementptr inbounds i32, ptr %3722, i64 60
  store <4 x i32> zeroinitializer, ptr %3760, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3761 = getelementptr inbounds i32, ptr %3722, i64 64
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3761, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3762 = getelementptr inbounds i32, ptr %3722, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3762, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3763 = getelementptr inbounds i32, ptr %3722, i64 72
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3763, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3764 = getelementptr inbounds i32, ptr %3722, i64 76
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3764, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3765 = getelementptr inbounds i32, ptr %3722, i64 80
  store <4 x i32> zeroinitializer, ptr %3765, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3766 = getelementptr inbounds i32, ptr %3722, i64 84
  store <4 x i32> zeroinitializer, ptr %3766, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3767 = getelementptr inbounds i32, ptr %3722, i64 88
  store <4 x i32> zeroinitializer, ptr %3767, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3768 = getelementptr inbounds i32, ptr %3722, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3768, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3769 = getelementptr inbounds i32, ptr %3722, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3769, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3770 = getelementptr inbounds i32, ptr %3722, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3770, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3771 = getelementptr inbounds i32, ptr %3722, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %3771, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3772 = getelementptr inbounds i32, ptr %3722, i64 108
  store <4 x i32> zeroinitializer, ptr %3772, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3773 = getelementptr inbounds i32, ptr %3722, i64 112
  store <4 x i32> zeroinitializer, ptr %3773, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  %3774 = getelementptr inbounds i32, ptr %3722, i64 116
  store <4 x i32> zeroinitializer, ptr %3774, align 4, !tbaa !105, !alias.scope !685, !noalias !688
  br label %3775

3775:                                             ; preds = %3719, %3745
  %3776 = phi i64 [ 0, %3719 ], [ 120, %3745 ]
  br label %3777

3777:                                             ; preds = %3777, %3775
  %3778 = phi i64 [ %3785, %3777 ], [ %3776, %3775 ]
  %3779 = phi i64 [ %3786, %3777 ], [ 0, %3775 ]
  %3780 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %3778
  %3781 = load i8, ptr %3780, align 1, !tbaa !46
  %3782 = icmp eq i8 %3781, 46
  %3783 = sext i1 %3782 to i32
  %3784 = getelementptr inbounds i32, ptr %3722, i64 %3778
  store i32 %3783, ptr %3784, align 4, !tbaa !105
  %3785 = add nuw nsw i64 %3778, 1
  %3786 = add i64 %3779, 1
  %3787 = icmp eq i64 %3786, 2
  br i1 %3787, label %3788, label %3777, !llvm.loop !690

3788:                                             ; preds = %3777
  br i1 %3744, label %3816, label %3789

3789:                                             ; preds = %3788, %3789
  %3790 = phi i64 [ %3814, %3789 ], [ %3785, %3788 ]
  %3791 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %3790
  %3792 = load i8, ptr %3791, align 1, !tbaa !46
  %3793 = icmp eq i8 %3792, 46
  %3794 = sext i1 %3793 to i32
  %3795 = getelementptr inbounds i32, ptr %3722, i64 %3790
  store i32 %3794, ptr %3795, align 4, !tbaa !105
  %3796 = add nuw nsw i64 %3790, 1
  %3797 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %3796
  %3798 = load i8, ptr %3797, align 1, !tbaa !46
  %3799 = icmp eq i8 %3798, 46
  %3800 = sext i1 %3799 to i32
  %3801 = getelementptr inbounds i32, ptr %3722, i64 %3796
  store i32 %3800, ptr %3801, align 4, !tbaa !105
  %3802 = add nuw nsw i64 %3790, 2
  %3803 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %3802
  %3804 = load i8, ptr %3803, align 1, !tbaa !46
  %3805 = icmp eq i8 %3804, 46
  %3806 = sext i1 %3805 to i32
  %3807 = getelementptr inbounds i32, ptr %3722, i64 %3802
  store i32 %3806, ptr %3807, align 4, !tbaa !105
  %3808 = add nuw nsw i64 %3790, 3
  %3809 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %3808
  %3810 = load i8, ptr %3809, align 1, !tbaa !46
  %3811 = icmp eq i8 %3810, 46
  %3812 = sext i1 %3811 to i32
  %3813 = getelementptr inbounds i32, ptr %3722, i64 %3808
  store i32 %3812, ptr %3813, align 4, !tbaa !105
  %3814 = add nuw nsw i64 %3790, 4
  %3815 = icmp eq i64 %3814, 122
  br i1 %3815, label %3816, label %3789, !llvm.loop !691

3816:                                             ; preds = %3789, %3788
  %3817 = load i32, ptr %33, align 8, !tbaa !292
  %3818 = sext i32 %3817 to i64
  %3819 = getelementptr inbounds i32, ptr %3722, i64 %3818
  %3820 = add nsw i64 %3818, %3721
  %3821 = add nsw i64 %3820, %3625
  %3822 = add nsw i64 %3821, %3530
  %3823 = add nsw i64 %3822, %3436
  %3824 = add nsw i64 %3823, %3343
  %3825 = add nsw i64 %3824, %3251
  %3826 = add i64 %3825, %3217
  %3827 = add i64 %3826, %3183
  %3828 = add i64 %3827, %3149
  %3829 = add i64 %3828, %3115
  %3830 = add i64 %3829, %3081
  %3831 = add i64 %3830, %3047
  %3832 = add i64 %3831, %3013
  %3833 = add i64 %3832, %2979
  %3834 = add i64 %3833, %2945
  %3835 = add i64 %3834, %2911
  %3836 = add i64 %3835, %2907
  %3837 = shl i64 %3836, 2
  %3838 = add i64 %3837, 488
  %3839 = getelementptr i8, ptr %2906, i64 %3838
  %3840 = icmp uge ptr %3819, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074)
  %3841 = icmp ule ptr %3839, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952)
  %3842 = or i1 %3840, %3841
  br i1 %3842, label %3843, label %3873

3843:                                             ; preds = %3816
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %3819, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3844 = getelementptr inbounds i32, ptr %3819, i64 4
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3844, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3845 = getelementptr inbounds i32, ptr %3819, i64 8
  store <4 x i32> zeroinitializer, ptr %3845, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3846 = getelementptr inbounds i32, ptr %3819, i64 12
  store <4 x i32> zeroinitializer, ptr %3846, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3847 = getelementptr inbounds i32, ptr %3819, i64 16
  store <4 x i32> zeroinitializer, ptr %3847, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3848 = getelementptr inbounds i32, ptr %3819, i64 20
  store <4 x i32> zeroinitializer, ptr %3848, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3849 = getelementptr inbounds i32, ptr %3819, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3849, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3850 = getelementptr inbounds i32, ptr %3819, i64 28
  store <4 x i32> zeroinitializer, ptr %3850, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3851 = getelementptr inbounds i32, ptr %3819, i64 32
  store <4 x i32> zeroinitializer, ptr %3851, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3852 = getelementptr inbounds i32, ptr %3819, i64 36
  store <4 x i32> zeroinitializer, ptr %3852, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3853 = getelementptr inbounds i32, ptr %3819, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3853, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3854 = getelementptr inbounds i32, ptr %3819, i64 44
  store <4 x i32> zeroinitializer, ptr %3854, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3855 = getelementptr inbounds i32, ptr %3819, i64 48
  store <4 x i32> zeroinitializer, ptr %3855, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3856 = getelementptr inbounds i32, ptr %3819, i64 52
  store <4 x i32> zeroinitializer, ptr %3856, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3857 = getelementptr inbounds i32, ptr %3819, i64 56
  store <4 x i32> zeroinitializer, ptr %3857, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3858 = getelementptr inbounds i32, ptr %3819, i64 60
  store <4 x i32> zeroinitializer, ptr %3858, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3859 = getelementptr inbounds i32, ptr %3819, i64 64
  store <4 x i32> zeroinitializer, ptr %3859, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3860 = getelementptr inbounds i32, ptr %3819, i64 68
  store <4 x i32> zeroinitializer, ptr %3860, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3861 = getelementptr inbounds i32, ptr %3819, i64 72
  store <4 x i32> zeroinitializer, ptr %3861, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3862 = getelementptr inbounds i32, ptr %3819, i64 76
  store <4 x i32> zeroinitializer, ptr %3862, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3863 = getelementptr inbounds i32, ptr %3819, i64 80
  store <4 x i32> zeroinitializer, ptr %3863, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3864 = getelementptr inbounds i32, ptr %3819, i64 84
  store <4 x i32> zeroinitializer, ptr %3864, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3865 = getelementptr inbounds i32, ptr %3819, i64 88
  store <4 x i32> zeroinitializer, ptr %3865, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3866 = getelementptr inbounds i32, ptr %3819, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %3866, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3867 = getelementptr inbounds i32, ptr %3819, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3867, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3868 = getelementptr inbounds i32, ptr %3819, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3868, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3869 = getelementptr inbounds i32, ptr %3819, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3869, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3870 = getelementptr inbounds i32, ptr %3819, i64 108
  store <4 x i32> zeroinitializer, ptr %3870, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3871 = getelementptr inbounds i32, ptr %3819, i64 112
  store <4 x i32> zeroinitializer, ptr %3871, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  %3872 = getelementptr inbounds i32, ptr %3819, i64 116
  store <4 x i32> zeroinitializer, ptr %3872, align 4, !tbaa !105, !alias.scope !692, !noalias !695
  br label %3873

3873:                                             ; preds = %3816, %3843
  %3874 = phi i64 [ 0, %3816 ], [ 120, %3843 ]
  br label %3875

3875:                                             ; preds = %3875, %3873
  %3876 = phi i64 [ %3883, %3875 ], [ %3874, %3873 ]
  %3877 = phi i64 [ %3884, %3875 ], [ 0, %3873 ]
  %3878 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %3876
  %3879 = load i8, ptr %3878, align 1, !tbaa !46
  %3880 = icmp eq i8 %3879, 46
  %3881 = sext i1 %3880 to i32
  %3882 = getelementptr inbounds i32, ptr %3819, i64 %3876
  store i32 %3881, ptr %3882, align 4, !tbaa !105
  %3883 = add nuw nsw i64 %3876, 1
  %3884 = add i64 %3877, 1
  %3885 = icmp eq i64 %3884, 2
  br i1 %3885, label %3886, label %3875, !llvm.loop !697

3886:                                             ; preds = %3875
  br i1 %3842, label %3914, label %3887

3887:                                             ; preds = %3886, %3887
  %3888 = phi i64 [ %3912, %3887 ], [ %3883, %3886 ]
  %3889 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %3888
  %3890 = load i8, ptr %3889, align 1, !tbaa !46
  %3891 = icmp eq i8 %3890, 46
  %3892 = sext i1 %3891 to i32
  %3893 = getelementptr inbounds i32, ptr %3819, i64 %3888
  store i32 %3892, ptr %3893, align 4, !tbaa !105
  %3894 = add nuw nsw i64 %3888, 1
  %3895 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %3894
  %3896 = load i8, ptr %3895, align 1, !tbaa !46
  %3897 = icmp eq i8 %3896, 46
  %3898 = sext i1 %3897 to i32
  %3899 = getelementptr inbounds i32, ptr %3819, i64 %3894
  store i32 %3898, ptr %3899, align 4, !tbaa !105
  %3900 = add nuw nsw i64 %3888, 2
  %3901 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %3900
  %3902 = load i8, ptr %3901, align 1, !tbaa !46
  %3903 = icmp eq i8 %3902, 46
  %3904 = sext i1 %3903 to i32
  %3905 = getelementptr inbounds i32, ptr %3819, i64 %3900
  store i32 %3904, ptr %3905, align 4, !tbaa !105
  %3906 = add nuw nsw i64 %3888, 3
  %3907 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %3906
  %3908 = load i8, ptr %3907, align 1, !tbaa !46
  %3909 = icmp eq i8 %3908, 46
  %3910 = sext i1 %3909 to i32
  %3911 = getelementptr inbounds i32, ptr %3819, i64 %3906
  store i32 %3910, ptr %3911, align 4, !tbaa !105
  %3912 = add nuw nsw i64 %3888, 4
  %3913 = icmp eq i64 %3912, 122
  br i1 %3913, label %3914, label %3887, !llvm.loop !698

3914:                                             ; preds = %3887, %3886
  %3915 = load i32, ptr %33, align 8, !tbaa !292
  %3916 = sext i32 %3915 to i64
  %3917 = getelementptr inbounds i32, ptr %3819, i64 %3916
  %3918 = add nsw i64 %3916, %3818
  %3919 = add nsw i64 %3918, %3721
  %3920 = add nsw i64 %3919, %3625
  %3921 = add nsw i64 %3920, %3530
  %3922 = add nsw i64 %3921, %3436
  %3923 = add nsw i64 %3922, %3343
  %3924 = add i64 %3923, %3251
  %3925 = add i64 %3924, %3217
  %3926 = add i64 %3925, %3183
  %3927 = add i64 %3926, %3149
  %3928 = add i64 %3927, %3115
  %3929 = add i64 %3928, %3081
  %3930 = add i64 %3929, %3047
  %3931 = add i64 %3930, %3013
  %3932 = add i64 %3931, %2979
  %3933 = add i64 %3932, %2945
  %3934 = add i64 %3933, %2911
  %3935 = add i64 %3934, %2907
  %3936 = shl i64 %3935, 2
  %3937 = add i64 %3936, 488
  %3938 = getelementptr i8, ptr %2906, i64 %3937
  %3939 = icmp uge ptr %3917, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196)
  %3940 = icmp ule ptr %3938, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074)
  %3941 = or i1 %3939, %3940
  br i1 %3941, label %3942, label %3972

3942:                                             ; preds = %3914
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %3917, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3943 = getelementptr inbounds i32, ptr %3917, i64 4
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %3943, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3944 = getelementptr inbounds i32, ptr %3917, i64 8
  store <4 x i32> zeroinitializer, ptr %3944, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3945 = getelementptr inbounds i32, ptr %3917, i64 12
  store <4 x i32> zeroinitializer, ptr %3945, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3946 = getelementptr inbounds i32, ptr %3917, i64 16
  store <4 x i32> zeroinitializer, ptr %3946, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3947 = getelementptr inbounds i32, ptr %3917, i64 20
  store <4 x i32> zeroinitializer, ptr %3947, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3948 = getelementptr inbounds i32, ptr %3917, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %3948, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3949 = getelementptr inbounds i32, ptr %3917, i64 28
  store <4 x i32> zeroinitializer, ptr %3949, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3950 = getelementptr inbounds i32, ptr %3917, i64 32
  store <4 x i32> zeroinitializer, ptr %3950, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3951 = getelementptr inbounds i32, ptr %3917, i64 36
  store <4 x i32> zeroinitializer, ptr %3951, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3952 = getelementptr inbounds i32, ptr %3917, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %3952, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3953 = getelementptr inbounds i32, ptr %3917, i64 44
  store <4 x i32> zeroinitializer, ptr %3953, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3954 = getelementptr inbounds i32, ptr %3917, i64 48
  store <4 x i32> zeroinitializer, ptr %3954, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3955 = getelementptr inbounds i32, ptr %3917, i64 52
  store <4 x i32> zeroinitializer, ptr %3955, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3956 = getelementptr inbounds i32, ptr %3917, i64 56
  store <4 x i32> zeroinitializer, ptr %3956, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3957 = getelementptr inbounds i32, ptr %3917, i64 60
  store <4 x i32> zeroinitializer, ptr %3957, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3958 = getelementptr inbounds i32, ptr %3917, i64 64
  store <4 x i32> zeroinitializer, ptr %3958, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3959 = getelementptr inbounds i32, ptr %3917, i64 68
  store <4 x i32> zeroinitializer, ptr %3959, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3960 = getelementptr inbounds i32, ptr %3917, i64 72
  store <4 x i32> zeroinitializer, ptr %3960, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3961 = getelementptr inbounds i32, ptr %3917, i64 76
  store <4 x i32> zeroinitializer, ptr %3961, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3962 = getelementptr inbounds i32, ptr %3917, i64 80
  store <4 x i32> zeroinitializer, ptr %3962, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3963 = getelementptr inbounds i32, ptr %3917, i64 84
  store <4 x i32> zeroinitializer, ptr %3963, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3964 = getelementptr inbounds i32, ptr %3917, i64 88
  store <4 x i32> zeroinitializer, ptr %3964, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3965 = getelementptr inbounds i32, ptr %3917, i64 92
  store <4 x i32> zeroinitializer, ptr %3965, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3966 = getelementptr inbounds i32, ptr %3917, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3966, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3967 = getelementptr inbounds i32, ptr %3917, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %3967, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3968 = getelementptr inbounds i32, ptr %3917, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %3968, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3969 = getelementptr inbounds i32, ptr %3917, i64 108
  store <4 x i32> zeroinitializer, ptr %3969, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3970 = getelementptr inbounds i32, ptr %3917, i64 112
  store <4 x i32> zeroinitializer, ptr %3970, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  %3971 = getelementptr inbounds i32, ptr %3917, i64 116
  store <4 x i32> zeroinitializer, ptr %3971, align 4, !tbaa !105, !alias.scope !699, !noalias !702
  br label %3972

3972:                                             ; preds = %3914, %3942
  %3973 = phi i64 [ 0, %3914 ], [ 120, %3942 ]
  br label %3974

3974:                                             ; preds = %3974, %3972
  %3975 = phi i64 [ %3982, %3974 ], [ %3973, %3972 ]
  %3976 = phi i64 [ %3983, %3974 ], [ 0, %3972 ]
  %3977 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %3975
  %3978 = load i8, ptr %3977, align 1, !tbaa !46
  %3979 = icmp eq i8 %3978, 46
  %3980 = sext i1 %3979 to i32
  %3981 = getelementptr inbounds i32, ptr %3917, i64 %3975
  store i32 %3980, ptr %3981, align 4, !tbaa !105
  %3982 = add nuw nsw i64 %3975, 1
  %3983 = add i64 %3976, 1
  %3984 = icmp eq i64 %3983, 2
  br i1 %3984, label %3985, label %3974, !llvm.loop !704

3985:                                             ; preds = %3974
  br i1 %3941, label %4013, label %3986

3986:                                             ; preds = %3985, %3986
  %3987 = phi i64 [ %4011, %3986 ], [ %3982, %3985 ]
  %3988 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %3987
  %3989 = load i8, ptr %3988, align 1, !tbaa !46
  %3990 = icmp eq i8 %3989, 46
  %3991 = sext i1 %3990 to i32
  %3992 = getelementptr inbounds i32, ptr %3917, i64 %3987
  store i32 %3991, ptr %3992, align 4, !tbaa !105
  %3993 = add nuw nsw i64 %3987, 1
  %3994 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %3993
  %3995 = load i8, ptr %3994, align 1, !tbaa !46
  %3996 = icmp eq i8 %3995, 46
  %3997 = sext i1 %3996 to i32
  %3998 = getelementptr inbounds i32, ptr %3917, i64 %3993
  store i32 %3997, ptr %3998, align 4, !tbaa !105
  %3999 = add nuw nsw i64 %3987, 2
  %4000 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %3999
  %4001 = load i8, ptr %4000, align 1, !tbaa !46
  %4002 = icmp eq i8 %4001, 46
  %4003 = sext i1 %4002 to i32
  %4004 = getelementptr inbounds i32, ptr %3917, i64 %3999
  store i32 %4003, ptr %4004, align 4, !tbaa !105
  %4005 = add nuw nsw i64 %3987, 3
  %4006 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %4005
  %4007 = load i8, ptr %4006, align 1, !tbaa !46
  %4008 = icmp eq i8 %4007, 46
  %4009 = sext i1 %4008 to i32
  %4010 = getelementptr inbounds i32, ptr %3917, i64 %4005
  store i32 %4009, ptr %4010, align 4, !tbaa !105
  %4011 = add nuw nsw i64 %3987, 4
  %4012 = icmp eq i64 %4011, 122
  br i1 %4012, label %4013, label %3986, !llvm.loop !705

4013:                                             ; preds = %3986, %3985
  %4014 = load i32, ptr %33, align 8, !tbaa !292
  %4015 = sext i32 %4014 to i64
  %4016 = getelementptr inbounds i32, ptr %3917, i64 %4015
  %4017 = add nsw i64 %4015, %3916
  %4018 = add nsw i64 %4017, %3818
  %4019 = add nsw i64 %4018, %3721
  %4020 = add nsw i64 %4019, %3625
  %4021 = add nsw i64 %4020, %3530
  %4022 = add nsw i64 %4021, %3436
  %4023 = add i64 %4022, %3343
  %4024 = add i64 %4023, %3251
  %4025 = add i64 %4024, %3217
  %4026 = add i64 %4025, %3183
  %4027 = add i64 %4026, %3149
  %4028 = add i64 %4027, %3115
  %4029 = add i64 %4028, %3081
  %4030 = add i64 %4029, %3047
  %4031 = add i64 %4030, %3013
  %4032 = add i64 %4031, %2979
  %4033 = add i64 %4032, %2945
  %4034 = add i64 %4033, %2911
  %4035 = add i64 %4034, %2907
  %4036 = shl i64 %4035, 2
  %4037 = add i64 %4036, 488
  %4038 = getelementptr i8, ptr %2906, i64 %4037
  %4039 = icmp uge ptr %4016, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318)
  %4040 = icmp ule ptr %4038, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196)
  %4041 = or i1 %4039, %4040
  br i1 %4041, label %4042, label %4072

4042:                                             ; preds = %4013
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %4016, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4043 = getelementptr inbounds i32, ptr %4016, i64 4
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %4043, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4044 = getelementptr inbounds i32, ptr %4016, i64 8
  store <4 x i32> zeroinitializer, ptr %4044, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4045 = getelementptr inbounds i32, ptr %4016, i64 12
  store <4 x i32> zeroinitializer, ptr %4045, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4046 = getelementptr inbounds i32, ptr %4016, i64 16
  store <4 x i32> zeroinitializer, ptr %4046, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4047 = getelementptr inbounds i32, ptr %4016, i64 20
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %4047, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4048 = getelementptr inbounds i32, ptr %4016, i64 24
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4048, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4049 = getelementptr inbounds i32, ptr %4016, i64 28
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4049, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4050 = getelementptr inbounds i32, ptr %4016, i64 32
  store <4 x i32> zeroinitializer, ptr %4050, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4051 = getelementptr inbounds i32, ptr %4016, i64 36
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4051, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4052 = getelementptr inbounds i32, ptr %4016, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4052, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4053 = getelementptr inbounds i32, ptr %4016, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %4053, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4054 = getelementptr inbounds i32, ptr %4016, i64 48
  store <4 x i32> zeroinitializer, ptr %4054, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4055 = getelementptr inbounds i32, ptr %4016, i64 52
  store <4 x i32> zeroinitializer, ptr %4055, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4056 = getelementptr inbounds i32, ptr %4016, i64 56
  store <4 x i32> zeroinitializer, ptr %4056, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4057 = getelementptr inbounds i32, ptr %4016, i64 60
  store <4 x i32> zeroinitializer, ptr %4057, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4058 = getelementptr inbounds i32, ptr %4016, i64 64
  store <4 x i32> zeroinitializer, ptr %4058, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4059 = getelementptr inbounds i32, ptr %4016, i64 68
  store <4 x i32> zeroinitializer, ptr %4059, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4060 = getelementptr inbounds i32, ptr %4016, i64 72
  store <4 x i32> zeroinitializer, ptr %4060, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4061 = getelementptr inbounds i32, ptr %4016, i64 76
  store <4 x i32> zeroinitializer, ptr %4061, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4062 = getelementptr inbounds i32, ptr %4016, i64 80
  store <4 x i32> zeroinitializer, ptr %4062, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4063 = getelementptr inbounds i32, ptr %4016, i64 84
  store <4 x i32> zeroinitializer, ptr %4063, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4064 = getelementptr inbounds i32, ptr %4016, i64 88
  store <4 x i32> zeroinitializer, ptr %4064, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4065 = getelementptr inbounds i32, ptr %4016, i64 92
  store <4 x i32> zeroinitializer, ptr %4065, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4066 = getelementptr inbounds i32, ptr %4016, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4066, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4067 = getelementptr inbounds i32, ptr %4016, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4067, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4068 = getelementptr inbounds i32, ptr %4016, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %4068, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4069 = getelementptr inbounds i32, ptr %4016, i64 108
  store <4 x i32> zeroinitializer, ptr %4069, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4070 = getelementptr inbounds i32, ptr %4016, i64 112
  store <4 x i32> zeroinitializer, ptr %4070, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  %4071 = getelementptr inbounds i32, ptr %4016, i64 116
  store <4 x i32> zeroinitializer, ptr %4071, align 4, !tbaa !105, !alias.scope !706, !noalias !709
  br label %4072

4072:                                             ; preds = %4013, %4042
  %4073 = phi i64 [ 0, %4013 ], [ 120, %4042 ]
  br label %4074

4074:                                             ; preds = %4074, %4072
  %4075 = phi i64 [ %4082, %4074 ], [ %4073, %4072 ]
  %4076 = phi i64 [ %4083, %4074 ], [ 0, %4072 ]
  %4077 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %4075
  %4078 = load i8, ptr %4077, align 1, !tbaa !46
  %4079 = icmp eq i8 %4078, 46
  %4080 = sext i1 %4079 to i32
  %4081 = getelementptr inbounds i32, ptr %4016, i64 %4075
  store i32 %4080, ptr %4081, align 4, !tbaa !105
  %4082 = add nuw nsw i64 %4075, 1
  %4083 = add i64 %4076, 1
  %4084 = icmp eq i64 %4083, 2
  br i1 %4084, label %4085, label %4074, !llvm.loop !711

4085:                                             ; preds = %4074
  br i1 %4041, label %4113, label %4086

4086:                                             ; preds = %4085, %4086
  %4087 = phi i64 [ %4111, %4086 ], [ %4082, %4085 ]
  %4088 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %4087
  %4089 = load i8, ptr %4088, align 1, !tbaa !46
  %4090 = icmp eq i8 %4089, 46
  %4091 = sext i1 %4090 to i32
  %4092 = getelementptr inbounds i32, ptr %4016, i64 %4087
  store i32 %4091, ptr %4092, align 4, !tbaa !105
  %4093 = add nuw nsw i64 %4087, 1
  %4094 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %4093
  %4095 = load i8, ptr %4094, align 1, !tbaa !46
  %4096 = icmp eq i8 %4095, 46
  %4097 = sext i1 %4096 to i32
  %4098 = getelementptr inbounds i32, ptr %4016, i64 %4093
  store i32 %4097, ptr %4098, align 4, !tbaa !105
  %4099 = add nuw nsw i64 %4087, 2
  %4100 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %4099
  %4101 = load i8, ptr %4100, align 1, !tbaa !46
  %4102 = icmp eq i8 %4101, 46
  %4103 = sext i1 %4102 to i32
  %4104 = getelementptr inbounds i32, ptr %4016, i64 %4099
  store i32 %4103, ptr %4104, align 4, !tbaa !105
  %4105 = add nuw nsw i64 %4087, 3
  %4106 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %4105
  %4107 = load i8, ptr %4106, align 1, !tbaa !46
  %4108 = icmp eq i8 %4107, 46
  %4109 = sext i1 %4108 to i32
  %4110 = getelementptr inbounds i32, ptr %4016, i64 %4105
  store i32 %4109, ptr %4110, align 4, !tbaa !105
  %4111 = add nuw nsw i64 %4087, 4
  %4112 = icmp eq i64 %4111, 122
  br i1 %4112, label %4113, label %4086, !llvm.loop !712

4113:                                             ; preds = %4086, %4085
  %4114 = load i32, ptr %33, align 8, !tbaa !292
  %4115 = sext i32 %4114 to i64
  %4116 = getelementptr inbounds i32, ptr %4016, i64 %4115
  %4117 = add nsw i64 %4115, %4015
  %4118 = add nsw i64 %4117, %3916
  %4119 = add nsw i64 %4118, %3818
  %4120 = add nsw i64 %4119, %3721
  %4121 = add nsw i64 %4120, %3625
  %4122 = add nsw i64 %4121, %3530
  %4123 = add i64 %4122, %3436
  %4124 = add i64 %4123, %3343
  %4125 = add i64 %4124, %3251
  %4126 = add i64 %4125, %3217
  %4127 = add i64 %4126, %3183
  %4128 = add i64 %4127, %3149
  %4129 = add i64 %4128, %3115
  %4130 = add i64 %4129, %3081
  %4131 = add i64 %4130, %3047
  %4132 = add i64 %4131, %3013
  %4133 = add i64 %4132, %2979
  %4134 = add i64 %4133, %2945
  %4135 = add i64 %4134, %2911
  %4136 = add i64 %4135, %2907
  %4137 = shl i64 %4136, 2
  %4138 = add i64 %4137, 488
  %4139 = getelementptr i8, ptr %2906, i64 %4138
  %4140 = icmp uge ptr %4116, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440)
  %4141 = icmp ule ptr %4139, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318)
  %4142 = or i1 %4140, %4141
  br i1 %4142, label %4143, label %4173

4143:                                             ; preds = %4113
  store <4 x i32> zeroinitializer, ptr %4116, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4144 = getelementptr inbounds i32, ptr %4116, i64 4
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4144, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4145 = getelementptr inbounds i32, ptr %4116, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4145, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4146 = getelementptr inbounds i32, ptr %4116, i64 12
  store <4 x i32> zeroinitializer, ptr %4146, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4147 = getelementptr inbounds i32, ptr %4116, i64 16
  store <4 x i32> zeroinitializer, ptr %4147, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4148 = getelementptr inbounds i32, ptr %4116, i64 20
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4148, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4149 = getelementptr inbounds i32, ptr %4116, i64 24
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4149, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4150 = getelementptr inbounds i32, ptr %4116, i64 28
  store <4 x i32> zeroinitializer, ptr %4150, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4151 = getelementptr inbounds i32, ptr %4116, i64 32
  store <4 x i32> zeroinitializer, ptr %4151, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4152 = getelementptr inbounds i32, ptr %4116, i64 36
  store <4 x i32> zeroinitializer, ptr %4152, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4153 = getelementptr inbounds i32, ptr %4116, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4153, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4154 = getelementptr inbounds i32, ptr %4116, i64 44
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4154, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4155 = getelementptr inbounds i32, ptr %4116, i64 48
  store <4 x i32> zeroinitializer, ptr %4155, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4156 = getelementptr inbounds i32, ptr %4116, i64 52
  store <4 x i32> zeroinitializer, ptr %4156, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4157 = getelementptr inbounds i32, ptr %4116, i64 56
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4157, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4158 = getelementptr inbounds i32, ptr %4116, i64 60
  store <4 x i32> zeroinitializer, ptr %4158, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4159 = getelementptr inbounds i32, ptr %4116, i64 64
  store <4 x i32> zeroinitializer, ptr %4159, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4160 = getelementptr inbounds i32, ptr %4116, i64 68
  store <4 x i32> zeroinitializer, ptr %4160, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4161 = getelementptr inbounds i32, ptr %4116, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %4161, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4162 = getelementptr inbounds i32, ptr %4116, i64 76
  store <4 x i32> zeroinitializer, ptr %4162, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4163 = getelementptr inbounds i32, ptr %4116, i64 80
  store <4 x i32> zeroinitializer, ptr %4163, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4164 = getelementptr inbounds i32, ptr %4116, i64 84
  store <4 x i32> zeroinitializer, ptr %4164, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4165 = getelementptr inbounds i32, ptr %4116, i64 88
  store <4 x i32> zeroinitializer, ptr %4165, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4166 = getelementptr inbounds i32, ptr %4116, i64 92
  store <4 x i32> zeroinitializer, ptr %4166, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4167 = getelementptr inbounds i32, ptr %4116, i64 96
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4167, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4168 = getelementptr inbounds i32, ptr %4116, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4168, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4169 = getelementptr inbounds i32, ptr %4116, i64 104
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4169, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4170 = getelementptr inbounds i32, ptr %4116, i64 108
  store <4 x i32> zeroinitializer, ptr %4170, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4171 = getelementptr inbounds i32, ptr %4116, i64 112
  store <4 x i32> zeroinitializer, ptr %4171, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  %4172 = getelementptr inbounds i32, ptr %4116, i64 116
  store <4 x i32> zeroinitializer, ptr %4172, align 4, !tbaa !105, !alias.scope !713, !noalias !716
  br label %4173

4173:                                             ; preds = %4113, %4143
  %4174 = phi i64 [ 0, %4113 ], [ 120, %4143 ]
  br label %4175

4175:                                             ; preds = %4175, %4173
  %4176 = phi i64 [ %4183, %4175 ], [ %4174, %4173 ]
  %4177 = phi i64 [ %4184, %4175 ], [ 0, %4173 ]
  %4178 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %4176
  %4179 = load i8, ptr %4178, align 1, !tbaa !46
  %4180 = icmp eq i8 %4179, 46
  %4181 = sext i1 %4180 to i32
  %4182 = getelementptr inbounds i32, ptr %4116, i64 %4176
  store i32 %4181, ptr %4182, align 4, !tbaa !105
  %4183 = add nuw nsw i64 %4176, 1
  %4184 = add i64 %4177, 1
  %4185 = icmp eq i64 %4184, 2
  br i1 %4185, label %4186, label %4175, !llvm.loop !718

4186:                                             ; preds = %4175
  br i1 %4142, label %4214, label %4187

4187:                                             ; preds = %4186, %4187
  %4188 = phi i64 [ %4212, %4187 ], [ %4183, %4186 ]
  %4189 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %4188
  %4190 = load i8, ptr %4189, align 1, !tbaa !46
  %4191 = icmp eq i8 %4190, 46
  %4192 = sext i1 %4191 to i32
  %4193 = getelementptr inbounds i32, ptr %4116, i64 %4188
  store i32 %4192, ptr %4193, align 4, !tbaa !105
  %4194 = add nuw nsw i64 %4188, 1
  %4195 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %4194
  %4196 = load i8, ptr %4195, align 1, !tbaa !46
  %4197 = icmp eq i8 %4196, 46
  %4198 = sext i1 %4197 to i32
  %4199 = getelementptr inbounds i32, ptr %4116, i64 %4194
  store i32 %4198, ptr %4199, align 4, !tbaa !105
  %4200 = add nuw nsw i64 %4188, 2
  %4201 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %4200
  %4202 = load i8, ptr %4201, align 1, !tbaa !46
  %4203 = icmp eq i8 %4202, 46
  %4204 = sext i1 %4203 to i32
  %4205 = getelementptr inbounds i32, ptr %4116, i64 %4200
  store i32 %4204, ptr %4205, align 4, !tbaa !105
  %4206 = add nuw nsw i64 %4188, 3
  %4207 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %4206
  %4208 = load i8, ptr %4207, align 1, !tbaa !46
  %4209 = icmp eq i8 %4208, 46
  %4210 = sext i1 %4209 to i32
  %4211 = getelementptr inbounds i32, ptr %4116, i64 %4206
  store i32 %4210, ptr %4211, align 4, !tbaa !105
  %4212 = add nuw nsw i64 %4188, 4
  %4213 = icmp eq i64 %4212, 122
  br i1 %4213, label %4214, label %4187, !llvm.loop !719

4214:                                             ; preds = %4187, %4186
  %4215 = load i32, ptr %33, align 8, !tbaa !292
  %4216 = sext i32 %4215 to i64
  %4217 = getelementptr inbounds i32, ptr %4116, i64 %4216
  %4218 = add nsw i64 %4216, %4115
  %4219 = add nsw i64 %4218, %4015
  %4220 = add nsw i64 %4219, %3916
  %4221 = add nsw i64 %4220, %3818
  %4222 = add nsw i64 %4221, %3721
  %4223 = add nsw i64 %4222, %3625
  %4224 = add i64 %4223, %3530
  %4225 = add i64 %4224, %3436
  %4226 = add i64 %4225, %3343
  %4227 = add i64 %4226, %3251
  %4228 = add i64 %4227, %3217
  %4229 = add i64 %4228, %3183
  %4230 = add i64 %4229, %3149
  %4231 = add i64 %4230, %3115
  %4232 = add i64 %4231, %3081
  %4233 = add i64 %4232, %3047
  %4234 = add i64 %4233, %3013
  %4235 = add i64 %4234, %2979
  %4236 = add i64 %4235, %2945
  %4237 = add i64 %4236, %2911
  %4238 = add i64 %4237, %2907
  %4239 = shl i64 %4238, 2
  %4240 = add i64 %4239, 488
  %4241 = getelementptr i8, ptr %2906, i64 %4240
  %4242 = icmp uge ptr %4217, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562)
  %4243 = icmp ule ptr %4241, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440)
  %4244 = or i1 %4242, %4243
  br i1 %4244, label %4245, label %4275

4245:                                             ; preds = %4214
  store <4 x i32> zeroinitializer, ptr %4217, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4246 = getelementptr inbounds i32, ptr %4217, i64 4
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4246, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4247 = getelementptr inbounds i32, ptr %4217, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4247, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4248 = getelementptr inbounds i32, ptr %4217, i64 12
  store <4 x i32> zeroinitializer, ptr %4248, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4249 = getelementptr inbounds i32, ptr %4217, i64 16
  store <4 x i32> zeroinitializer, ptr %4249, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4250 = getelementptr inbounds i32, ptr %4217, i64 20
  store <4 x i32> zeroinitializer, ptr %4250, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4251 = getelementptr inbounds i32, ptr %4217, i64 24
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %4251, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4252 = getelementptr inbounds i32, ptr %4217, i64 28
  store <4 x i32> zeroinitializer, ptr %4252, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4253 = getelementptr inbounds i32, ptr %4217, i64 32
  store <4 x i32> zeroinitializer, ptr %4253, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4254 = getelementptr inbounds i32, ptr %4217, i64 36
  store <4 x i32> zeroinitializer, ptr %4254, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4255 = getelementptr inbounds i32, ptr %4217, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4255, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4256 = getelementptr inbounds i32, ptr %4217, i64 44
  store <4 x i32> zeroinitializer, ptr %4256, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4257 = getelementptr inbounds i32, ptr %4217, i64 48
  store <4 x i32> zeroinitializer, ptr %4257, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4258 = getelementptr inbounds i32, ptr %4217, i64 52
  store <4 x i32> zeroinitializer, ptr %4258, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4259 = getelementptr inbounds i32, ptr %4217, i64 56
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %4259, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4260 = getelementptr inbounds i32, ptr %4217, i64 60
  store <4 x i32> zeroinitializer, ptr %4260, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4261 = getelementptr inbounds i32, ptr %4217, i64 64
  store <4 x i32> zeroinitializer, ptr %4261, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4262 = getelementptr inbounds i32, ptr %4217, i64 68
  store <4 x i32> zeroinitializer, ptr %4262, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4263 = getelementptr inbounds i32, ptr %4217, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %4263, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4264 = getelementptr inbounds i32, ptr %4217, i64 76
  store <4 x i32> zeroinitializer, ptr %4264, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4265 = getelementptr inbounds i32, ptr %4217, i64 80
  store <4 x i32> zeroinitializer, ptr %4265, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4266 = getelementptr inbounds i32, ptr %4217, i64 84
  store <4 x i32> zeroinitializer, ptr %4266, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4267 = getelementptr inbounds i32, ptr %4217, i64 88
  store <4 x i32> zeroinitializer, ptr %4267, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4268 = getelementptr inbounds i32, ptr %4217, i64 92
  store <4 x i32> zeroinitializer, ptr %4268, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4269 = getelementptr inbounds i32, ptr %4217, i64 96
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4269, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4270 = getelementptr inbounds i32, ptr %4217, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4270, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4271 = getelementptr inbounds i32, ptr %4217, i64 104
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4271, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4272 = getelementptr inbounds i32, ptr %4217, i64 108
  store <4 x i32> zeroinitializer, ptr %4272, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4273 = getelementptr inbounds i32, ptr %4217, i64 112
  store <4 x i32> zeroinitializer, ptr %4273, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  %4274 = getelementptr inbounds i32, ptr %4217, i64 116
  store <4 x i32> zeroinitializer, ptr %4274, align 4, !tbaa !105, !alias.scope !720, !noalias !723
  br label %4275

4275:                                             ; preds = %4214, %4245
  %4276 = phi i64 [ 0, %4214 ], [ 120, %4245 ]
  br label %4277

4277:                                             ; preds = %4277, %4275
  %4278 = phi i64 [ %4285, %4277 ], [ %4276, %4275 ]
  %4279 = phi i64 [ %4286, %4277 ], [ 0, %4275 ]
  %4280 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %4278
  %4281 = load i8, ptr %4280, align 1, !tbaa !46
  %4282 = icmp eq i8 %4281, 46
  %4283 = sext i1 %4282 to i32
  %4284 = getelementptr inbounds i32, ptr %4217, i64 %4278
  store i32 %4283, ptr %4284, align 4, !tbaa !105
  %4285 = add nuw nsw i64 %4278, 1
  %4286 = add i64 %4279, 1
  %4287 = icmp eq i64 %4286, 2
  br i1 %4287, label %4288, label %4277, !llvm.loop !725

4288:                                             ; preds = %4277
  br i1 %4244, label %4316, label %4289

4289:                                             ; preds = %4288, %4289
  %4290 = phi i64 [ %4314, %4289 ], [ %4285, %4288 ]
  %4291 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %4290
  %4292 = load i8, ptr %4291, align 1, !tbaa !46
  %4293 = icmp eq i8 %4292, 46
  %4294 = sext i1 %4293 to i32
  %4295 = getelementptr inbounds i32, ptr %4217, i64 %4290
  store i32 %4294, ptr %4295, align 4, !tbaa !105
  %4296 = add nuw nsw i64 %4290, 1
  %4297 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %4296
  %4298 = load i8, ptr %4297, align 1, !tbaa !46
  %4299 = icmp eq i8 %4298, 46
  %4300 = sext i1 %4299 to i32
  %4301 = getelementptr inbounds i32, ptr %4217, i64 %4296
  store i32 %4300, ptr %4301, align 4, !tbaa !105
  %4302 = add nuw nsw i64 %4290, 2
  %4303 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %4302
  %4304 = load i8, ptr %4303, align 1, !tbaa !46
  %4305 = icmp eq i8 %4304, 46
  %4306 = sext i1 %4305 to i32
  %4307 = getelementptr inbounds i32, ptr %4217, i64 %4302
  store i32 %4306, ptr %4307, align 4, !tbaa !105
  %4308 = add nuw nsw i64 %4290, 3
  %4309 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %4308
  %4310 = load i8, ptr %4309, align 1, !tbaa !46
  %4311 = icmp eq i8 %4310, 46
  %4312 = sext i1 %4311 to i32
  %4313 = getelementptr inbounds i32, ptr %4217, i64 %4308
  store i32 %4312, ptr %4313, align 4, !tbaa !105
  %4314 = add nuw nsw i64 %4290, 4
  %4315 = icmp eq i64 %4314, 122
  br i1 %4315, label %4316, label %4289, !llvm.loop !726

4316:                                             ; preds = %4289, %4288
  %4317 = load i32, ptr %33, align 8, !tbaa !292
  %4318 = sext i32 %4317 to i64
  %4319 = getelementptr inbounds i32, ptr %4217, i64 %4318
  %4320 = add nsw i64 %4318, %4216
  %4321 = add nsw i64 %4320, %4115
  %4322 = add nsw i64 %4321, %4015
  %4323 = add nsw i64 %4322, %3916
  %4324 = add nsw i64 %4323, %3818
  %4325 = add nsw i64 %4324, %3721
  %4326 = add i64 %4325, %3625
  %4327 = add i64 %4326, %3530
  %4328 = add i64 %4327, %3436
  %4329 = add i64 %4328, %3343
  %4330 = add i64 %4329, %3251
  %4331 = add i64 %4330, %3217
  %4332 = add i64 %4331, %3183
  %4333 = add i64 %4332, %3149
  %4334 = add i64 %4333, %3115
  %4335 = add i64 %4334, %3081
  %4336 = add i64 %4335, %3047
  %4337 = add i64 %4336, %3013
  %4338 = add i64 %4337, %2979
  %4339 = add i64 %4338, %2945
  %4340 = add i64 %4339, %2911
  %4341 = add i64 %4340, %2907
  %4342 = shl i64 %4341, 2
  %4343 = add i64 %4342, 488
  %4344 = getelementptr i8, ptr %2906, i64 %4343
  %4345 = icmp uge ptr %4319, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684)
  %4346 = icmp ule ptr %4344, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562)
  %4347 = or i1 %4345, %4346
  br i1 %4347, label %4348, label %4378

4348:                                             ; preds = %4316
  store <4 x i32> zeroinitializer, ptr %4319, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4349 = getelementptr inbounds i32, ptr %4319, i64 4
  store <4 x i32> zeroinitializer, ptr %4349, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4350 = getelementptr inbounds i32, ptr %4319, i64 8
  store <4 x i32> zeroinitializer, ptr %4350, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4351 = getelementptr inbounds i32, ptr %4319, i64 12
  store <4 x i32> zeroinitializer, ptr %4351, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4352 = getelementptr inbounds i32, ptr %4319, i64 16
  store <4 x i32> zeroinitializer, ptr %4352, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4353 = getelementptr inbounds i32, ptr %4319, i64 20
  store <4 x i32> zeroinitializer, ptr %4353, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4354 = getelementptr inbounds i32, ptr %4319, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %4354, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4355 = getelementptr inbounds i32, ptr %4319, i64 28
  store <4 x i32> zeroinitializer, ptr %4355, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4356 = getelementptr inbounds i32, ptr %4319, i64 32
  store <4 x i32> zeroinitializer, ptr %4356, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4357 = getelementptr inbounds i32, ptr %4319, i64 36
  store <4 x i32> zeroinitializer, ptr %4357, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4358 = getelementptr inbounds i32, ptr %4319, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %4358, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4359 = getelementptr inbounds i32, ptr %4319, i64 44
  store <4 x i32> zeroinitializer, ptr %4359, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4360 = getelementptr inbounds i32, ptr %4319, i64 48
  store <4 x i32> zeroinitializer, ptr %4360, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4361 = getelementptr inbounds i32, ptr %4319, i64 52
  store <4 x i32> zeroinitializer, ptr %4361, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4362 = getelementptr inbounds i32, ptr %4319, i64 56
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4362, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4363 = getelementptr inbounds i32, ptr %4319, i64 60
  store <4 x i32> zeroinitializer, ptr %4363, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4364 = getelementptr inbounds i32, ptr %4319, i64 64
  store <4 x i32> zeroinitializer, ptr %4364, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4365 = getelementptr inbounds i32, ptr %4319, i64 68
  store <4 x i32> zeroinitializer, ptr %4365, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4366 = getelementptr inbounds i32, ptr %4319, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4366, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4367 = getelementptr inbounds i32, ptr %4319, i64 76
  store <4 x i32> zeroinitializer, ptr %4367, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4368 = getelementptr inbounds i32, ptr %4319, i64 80
  store <4 x i32> zeroinitializer, ptr %4368, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4369 = getelementptr inbounds i32, ptr %4319, i64 84
  store <4 x i32> zeroinitializer, ptr %4369, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4370 = getelementptr inbounds i32, ptr %4319, i64 88
  store <4 x i32> zeroinitializer, ptr %4370, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4371 = getelementptr inbounds i32, ptr %4319, i64 92
  store <4 x i32> zeroinitializer, ptr %4371, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4372 = getelementptr inbounds i32, ptr %4319, i64 96
  store <4 x i32> zeroinitializer, ptr %4372, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4373 = getelementptr inbounds i32, ptr %4319, i64 100
  store <4 x i32> zeroinitializer, ptr %4373, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4374 = getelementptr inbounds i32, ptr %4319, i64 104
  store <4 x i32> zeroinitializer, ptr %4374, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4375 = getelementptr inbounds i32, ptr %4319, i64 108
  store <4 x i32> zeroinitializer, ptr %4375, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4376 = getelementptr inbounds i32, ptr %4319, i64 112
  store <4 x i32> zeroinitializer, ptr %4376, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  %4377 = getelementptr inbounds i32, ptr %4319, i64 116
  store <4 x i32> zeroinitializer, ptr %4377, align 4, !tbaa !105, !alias.scope !727, !noalias !730
  br label %4378

4378:                                             ; preds = %4316, %4348
  %4379 = phi i64 [ 0, %4316 ], [ 120, %4348 ]
  br label %4380

4380:                                             ; preds = %4380, %4378
  %4381 = phi i64 [ %4388, %4380 ], [ %4379, %4378 ]
  %4382 = phi i64 [ %4389, %4380 ], [ 0, %4378 ]
  %4383 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %4381
  %4384 = load i8, ptr %4383, align 1, !tbaa !46
  %4385 = icmp eq i8 %4384, 46
  %4386 = sext i1 %4385 to i32
  %4387 = getelementptr inbounds i32, ptr %4319, i64 %4381
  store i32 %4386, ptr %4387, align 4, !tbaa !105
  %4388 = add nuw nsw i64 %4381, 1
  %4389 = add i64 %4382, 1
  %4390 = icmp eq i64 %4389, 2
  br i1 %4390, label %4391, label %4380, !llvm.loop !732

4391:                                             ; preds = %4380
  br i1 %4347, label %4419, label %4392

4392:                                             ; preds = %4391, %4392
  %4393 = phi i64 [ %4417, %4392 ], [ %4388, %4391 ]
  %4394 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %4393
  %4395 = load i8, ptr %4394, align 1, !tbaa !46
  %4396 = icmp eq i8 %4395, 46
  %4397 = sext i1 %4396 to i32
  %4398 = getelementptr inbounds i32, ptr %4319, i64 %4393
  store i32 %4397, ptr %4398, align 4, !tbaa !105
  %4399 = add nuw nsw i64 %4393, 1
  %4400 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %4399
  %4401 = load i8, ptr %4400, align 1, !tbaa !46
  %4402 = icmp eq i8 %4401, 46
  %4403 = sext i1 %4402 to i32
  %4404 = getelementptr inbounds i32, ptr %4319, i64 %4399
  store i32 %4403, ptr %4404, align 4, !tbaa !105
  %4405 = add nuw nsw i64 %4393, 2
  %4406 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %4405
  %4407 = load i8, ptr %4406, align 1, !tbaa !46
  %4408 = icmp eq i8 %4407, 46
  %4409 = sext i1 %4408 to i32
  %4410 = getelementptr inbounds i32, ptr %4319, i64 %4405
  store i32 %4409, ptr %4410, align 4, !tbaa !105
  %4411 = add nuw nsw i64 %4393, 3
  %4412 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %4411
  %4413 = load i8, ptr %4412, align 1, !tbaa !46
  %4414 = icmp eq i8 %4413, 46
  %4415 = sext i1 %4414 to i32
  %4416 = getelementptr inbounds i32, ptr %4319, i64 %4411
  store i32 %4415, ptr %4416, align 4, !tbaa !105
  %4417 = add nuw nsw i64 %4393, 4
  %4418 = icmp eq i64 %4417, 122
  br i1 %4418, label %4419, label %4392, !llvm.loop !733

4419:                                             ; preds = %4392, %4391
  %4420 = load i32, ptr %33, align 8, !tbaa !292
  %4421 = sext i32 %4420 to i64
  %4422 = getelementptr inbounds i32, ptr %4319, i64 %4421
  %4423 = add nsw i64 %4421, %4318
  %4424 = add nsw i64 %4423, %4216
  %4425 = add nsw i64 %4424, %4115
  %4426 = add nsw i64 %4425, %4015
  %4427 = add nsw i64 %4426, %3916
  %4428 = add nsw i64 %4427, %3818
  %4429 = add i64 %4428, %3721
  %4430 = add i64 %4429, %3625
  %4431 = add i64 %4430, %3530
  %4432 = add i64 %4431, %3436
  %4433 = add i64 %4432, %3343
  %4434 = add i64 %4433, %3251
  %4435 = add i64 %4434, %3217
  %4436 = add i64 %4435, %3183
  %4437 = add i64 %4436, %3149
  %4438 = add i64 %4437, %3115
  %4439 = add i64 %4438, %3081
  %4440 = add i64 %4439, %3047
  %4441 = add i64 %4440, %3013
  %4442 = add i64 %4441, %2979
  %4443 = add i64 %4442, %2945
  %4444 = add i64 %4443, %2911
  %4445 = add i64 %4444, %2907
  %4446 = shl i64 %4445, 2
  %4447 = add i64 %4446, 488
  %4448 = getelementptr i8, ptr %2906, i64 %4447
  %4449 = icmp uge ptr %4422, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806)
  %4450 = icmp ule ptr %4448, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684)
  %4451 = or i1 %4449, %4450
  br i1 %4451, label %4452, label %4482

4452:                                             ; preds = %4419
  store <4 x i32> zeroinitializer, ptr %4422, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4453 = getelementptr inbounds i32, ptr %4422, i64 4
  store <4 x i32> zeroinitializer, ptr %4453, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4454 = getelementptr inbounds i32, ptr %4422, i64 8
  store <4 x i32> zeroinitializer, ptr %4454, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4455 = getelementptr inbounds i32, ptr %4422, i64 12
  store <4 x i32> zeroinitializer, ptr %4455, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4456 = getelementptr inbounds i32, ptr %4422, i64 16
  store <4 x i32> zeroinitializer, ptr %4456, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4457 = getelementptr inbounds i32, ptr %4422, i64 20
  store <4 x i32> zeroinitializer, ptr %4457, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4458 = getelementptr inbounds i32, ptr %4422, i64 24
  store <4 x i32> zeroinitializer, ptr %4458, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4459 = getelementptr inbounds i32, ptr %4422, i64 28
  store <4 x i32> zeroinitializer, ptr %4459, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4460 = getelementptr inbounds i32, ptr %4422, i64 32
  store <4 x i32> zeroinitializer, ptr %4460, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4461 = getelementptr inbounds i32, ptr %4422, i64 36
  store <4 x i32> zeroinitializer, ptr %4461, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4462 = getelementptr inbounds i32, ptr %4422, i64 40
  store <4 x i32> zeroinitializer, ptr %4462, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4463 = getelementptr inbounds i32, ptr %4422, i64 44
  store <4 x i32> zeroinitializer, ptr %4463, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4464 = getelementptr inbounds i32, ptr %4422, i64 48
  store <4 x i32> zeroinitializer, ptr %4464, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4465 = getelementptr inbounds i32, ptr %4422, i64 52
  store <4 x i32> zeroinitializer, ptr %4465, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4466 = getelementptr inbounds i32, ptr %4422, i64 56
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4466, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4467 = getelementptr inbounds i32, ptr %4422, i64 60
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4467, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4468 = getelementptr inbounds i32, ptr %4422, i64 64
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4468, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4469 = getelementptr inbounds i32, ptr %4422, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4469, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4470 = getelementptr inbounds i32, ptr %4422, i64 72
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4470, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4471 = getelementptr inbounds i32, ptr %4422, i64 76
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %4471, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4472 = getelementptr inbounds i32, ptr %4422, i64 80
  store <4 x i32> zeroinitializer, ptr %4472, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4473 = getelementptr inbounds i32, ptr %4422, i64 84
  store <4 x i32> zeroinitializer, ptr %4473, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4474 = getelementptr inbounds i32, ptr %4422, i64 88
  store <4 x i32> zeroinitializer, ptr %4474, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4475 = getelementptr inbounds i32, ptr %4422, i64 92
  store <4 x i32> zeroinitializer, ptr %4475, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4476 = getelementptr inbounds i32, ptr %4422, i64 96
  store <4 x i32> zeroinitializer, ptr %4476, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4477 = getelementptr inbounds i32, ptr %4422, i64 100
  store <4 x i32> zeroinitializer, ptr %4477, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4478 = getelementptr inbounds i32, ptr %4422, i64 104
  store <4 x i32> zeroinitializer, ptr %4478, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4479 = getelementptr inbounds i32, ptr %4422, i64 108
  store <4 x i32> zeroinitializer, ptr %4479, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4480 = getelementptr inbounds i32, ptr %4422, i64 112
  store <4 x i32> zeroinitializer, ptr %4480, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  %4481 = getelementptr inbounds i32, ptr %4422, i64 116
  store <4 x i32> zeroinitializer, ptr %4481, align 4, !tbaa !105, !alias.scope !734, !noalias !737
  br label %4482

4482:                                             ; preds = %4419, %4452
  %4483 = phi i64 [ 0, %4419 ], [ 120, %4452 ]
  br label %4484

4484:                                             ; preds = %4484, %4482
  %4485 = phi i64 [ %4492, %4484 ], [ %4483, %4482 ]
  %4486 = phi i64 [ %4493, %4484 ], [ 0, %4482 ]
  %4487 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %4485
  %4488 = load i8, ptr %4487, align 1, !tbaa !46
  %4489 = icmp eq i8 %4488, 46
  %4490 = sext i1 %4489 to i32
  %4491 = getelementptr inbounds i32, ptr %4422, i64 %4485
  store i32 %4490, ptr %4491, align 4, !tbaa !105
  %4492 = add nuw nsw i64 %4485, 1
  %4493 = add i64 %4486, 1
  %4494 = icmp eq i64 %4493, 2
  br i1 %4494, label %4495, label %4484, !llvm.loop !739

4495:                                             ; preds = %4484
  br i1 %4451, label %4523, label %4496

4496:                                             ; preds = %4495, %4496
  %4497 = phi i64 [ %4521, %4496 ], [ %4492, %4495 ]
  %4498 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %4497
  %4499 = load i8, ptr %4498, align 1, !tbaa !46
  %4500 = icmp eq i8 %4499, 46
  %4501 = sext i1 %4500 to i32
  %4502 = getelementptr inbounds i32, ptr %4422, i64 %4497
  store i32 %4501, ptr %4502, align 4, !tbaa !105
  %4503 = add nuw nsw i64 %4497, 1
  %4504 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %4503
  %4505 = load i8, ptr %4504, align 1, !tbaa !46
  %4506 = icmp eq i8 %4505, 46
  %4507 = sext i1 %4506 to i32
  %4508 = getelementptr inbounds i32, ptr %4422, i64 %4503
  store i32 %4507, ptr %4508, align 4, !tbaa !105
  %4509 = add nuw nsw i64 %4497, 2
  %4510 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %4509
  %4511 = load i8, ptr %4510, align 1, !tbaa !46
  %4512 = icmp eq i8 %4511, 46
  %4513 = sext i1 %4512 to i32
  %4514 = getelementptr inbounds i32, ptr %4422, i64 %4509
  store i32 %4513, ptr %4514, align 4, !tbaa !105
  %4515 = add nuw nsw i64 %4497, 3
  %4516 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %4515
  %4517 = load i8, ptr %4516, align 1, !tbaa !46
  %4518 = icmp eq i8 %4517, 46
  %4519 = sext i1 %4518 to i32
  %4520 = getelementptr inbounds i32, ptr %4422, i64 %4515
  store i32 %4519, ptr %4520, align 4, !tbaa !105
  %4521 = add nuw nsw i64 %4497, 4
  %4522 = icmp eq i64 %4521, 122
  br i1 %4522, label %4523, label %4496, !llvm.loop !740

4523:                                             ; preds = %4496, %4495
  %4524 = load i32, ptr %33, align 8, !tbaa !292
  %4525 = sext i32 %4524 to i64
  %4526 = getelementptr inbounds i32, ptr %4422, i64 %4525
  %4527 = add nsw i64 %4525, %4421
  %4528 = add nsw i64 %4527, %4318
  %4529 = add nsw i64 %4528, %4216
  %4530 = add nsw i64 %4529, %4115
  %4531 = add nsw i64 %4530, %4015
  %4532 = add nsw i64 %4531, %3916
  %4533 = add i64 %4532, %3818
  %4534 = add i64 %4533, %3721
  %4535 = add i64 %4534, %3625
  %4536 = add i64 %4535, %3530
  %4537 = add i64 %4536, %3436
  %4538 = add i64 %4537, %3343
  %4539 = add i64 %4538, %3251
  %4540 = add i64 %4539, %3217
  %4541 = add i64 %4540, %3183
  %4542 = add i64 %4541, %3149
  %4543 = add i64 %4542, %3115
  %4544 = add i64 %4543, %3081
  %4545 = add i64 %4544, %3047
  %4546 = add i64 %4545, %3013
  %4547 = add i64 %4546, %2979
  %4548 = add i64 %4547, %2945
  %4549 = add i64 %4548, %2911
  %4550 = add i64 %4549, %2907
  %4551 = shl i64 %4550, 2
  %4552 = add i64 %4551, 488
  %4553 = getelementptr i8, ptr %2906, i64 %4552
  %4554 = icmp uge ptr %4526, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928)
  %4555 = icmp ule ptr %4553, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806)
  %4556 = or i1 %4554, %4555
  br i1 %4556, label %4557, label %4587

4557:                                             ; preds = %4523
  store <4 x i32> zeroinitializer, ptr %4526, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4558 = getelementptr inbounds i32, ptr %4526, i64 4
  store <4 x i32> zeroinitializer, ptr %4558, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4559 = getelementptr inbounds i32, ptr %4526, i64 8
  store <4 x i32> zeroinitializer, ptr %4559, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4560 = getelementptr inbounds i32, ptr %4526, i64 12
  store <4 x i32> zeroinitializer, ptr %4560, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4561 = getelementptr inbounds i32, ptr %4526, i64 16
  store <4 x i32> zeroinitializer, ptr %4561, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4562 = getelementptr inbounds i32, ptr %4526, i64 20
  store <4 x i32> zeroinitializer, ptr %4562, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4563 = getelementptr inbounds i32, ptr %4526, i64 24
  store <4 x i32> zeroinitializer, ptr %4563, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4564 = getelementptr inbounds i32, ptr %4526, i64 28
  store <4 x i32> zeroinitializer, ptr %4564, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4565 = getelementptr inbounds i32, ptr %4526, i64 32
  store <4 x i32> zeroinitializer, ptr %4565, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4566 = getelementptr inbounds i32, ptr %4526, i64 36
  store <4 x i32> zeroinitializer, ptr %4566, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4567 = getelementptr inbounds i32, ptr %4526, i64 40
  store <4 x i32> zeroinitializer, ptr %4567, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4568 = getelementptr inbounds i32, ptr %4526, i64 44
  store <4 x i32> zeroinitializer, ptr %4568, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4569 = getelementptr inbounds i32, ptr %4526, i64 48
  store <4 x i32> zeroinitializer, ptr %4569, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4570 = getelementptr inbounds i32, ptr %4526, i64 52
  store <4 x i32> zeroinitializer, ptr %4570, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4571 = getelementptr inbounds i32, ptr %4526, i64 56
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4571, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4572 = getelementptr inbounds i32, ptr %4526, i64 60
  store <4 x i32> zeroinitializer, ptr %4572, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4573 = getelementptr inbounds i32, ptr %4526, i64 64
  store <4 x i32> zeroinitializer, ptr %4573, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4574 = getelementptr inbounds i32, ptr %4526, i64 68
  store <4 x i32> zeroinitializer, ptr %4574, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4575 = getelementptr inbounds i32, ptr %4526, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4575, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4576 = getelementptr inbounds i32, ptr %4526, i64 76
  store <4 x i32> zeroinitializer, ptr %4576, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4577 = getelementptr inbounds i32, ptr %4526, i64 80
  store <4 x i32> zeroinitializer, ptr %4577, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4578 = getelementptr inbounds i32, ptr %4526, i64 84
  store <4 x i32> zeroinitializer, ptr %4578, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4579 = getelementptr inbounds i32, ptr %4526, i64 88
  store <4 x i32> zeroinitializer, ptr %4579, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4580 = getelementptr inbounds i32, ptr %4526, i64 92
  store <4 x i32> zeroinitializer, ptr %4580, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4581 = getelementptr inbounds i32, ptr %4526, i64 96
  store <4 x i32> zeroinitializer, ptr %4581, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4582 = getelementptr inbounds i32, ptr %4526, i64 100
  store <4 x i32> zeroinitializer, ptr %4582, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4583 = getelementptr inbounds i32, ptr %4526, i64 104
  store <4 x i32> zeroinitializer, ptr %4583, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4584 = getelementptr inbounds i32, ptr %4526, i64 108
  store <4 x i32> zeroinitializer, ptr %4584, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4585 = getelementptr inbounds i32, ptr %4526, i64 112
  store <4 x i32> zeroinitializer, ptr %4585, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  %4586 = getelementptr inbounds i32, ptr %4526, i64 116
  store <4 x i32> zeroinitializer, ptr %4586, align 4, !tbaa !105, !alias.scope !741, !noalias !744
  br label %4587

4587:                                             ; preds = %4523, %4557
  %4588 = phi i64 [ 0, %4523 ], [ 120, %4557 ]
  br label %4589

4589:                                             ; preds = %4589, %4587
  %4590 = phi i64 [ %4597, %4589 ], [ %4588, %4587 ]
  %4591 = phi i64 [ %4598, %4589 ], [ 0, %4587 ]
  %4592 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %4590
  %4593 = load i8, ptr %4592, align 1, !tbaa !46
  %4594 = icmp eq i8 %4593, 46
  %4595 = sext i1 %4594 to i32
  %4596 = getelementptr inbounds i32, ptr %4526, i64 %4590
  store i32 %4595, ptr %4596, align 4, !tbaa !105
  %4597 = add nuw nsw i64 %4590, 1
  %4598 = add i64 %4591, 1
  %4599 = icmp eq i64 %4598, 2
  br i1 %4599, label %4600, label %4589, !llvm.loop !746

4600:                                             ; preds = %4589
  br i1 %4556, label %4628, label %4601

4601:                                             ; preds = %4600, %4601
  %4602 = phi i64 [ %4626, %4601 ], [ %4597, %4600 ]
  %4603 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %4602
  %4604 = load i8, ptr %4603, align 1, !tbaa !46
  %4605 = icmp eq i8 %4604, 46
  %4606 = sext i1 %4605 to i32
  %4607 = getelementptr inbounds i32, ptr %4526, i64 %4602
  store i32 %4606, ptr %4607, align 4, !tbaa !105
  %4608 = add nuw nsw i64 %4602, 1
  %4609 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %4608
  %4610 = load i8, ptr %4609, align 1, !tbaa !46
  %4611 = icmp eq i8 %4610, 46
  %4612 = sext i1 %4611 to i32
  %4613 = getelementptr inbounds i32, ptr %4526, i64 %4608
  store i32 %4612, ptr %4613, align 4, !tbaa !105
  %4614 = add nuw nsw i64 %4602, 2
  %4615 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %4614
  %4616 = load i8, ptr %4615, align 1, !tbaa !46
  %4617 = icmp eq i8 %4616, 46
  %4618 = sext i1 %4617 to i32
  %4619 = getelementptr inbounds i32, ptr %4526, i64 %4614
  store i32 %4618, ptr %4619, align 4, !tbaa !105
  %4620 = add nuw nsw i64 %4602, 3
  %4621 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %4620
  %4622 = load i8, ptr %4621, align 1, !tbaa !46
  %4623 = icmp eq i8 %4622, 46
  %4624 = sext i1 %4623 to i32
  %4625 = getelementptr inbounds i32, ptr %4526, i64 %4620
  store i32 %4624, ptr %4625, align 4, !tbaa !105
  %4626 = add nuw nsw i64 %4602, 4
  %4627 = icmp eq i64 %4626, 122
  br i1 %4627, label %4628, label %4601, !llvm.loop !747

4628:                                             ; preds = %4601, %4600
  %4629 = load i32, ptr %33, align 8, !tbaa !292
  %4630 = sext i32 %4629 to i64
  %4631 = getelementptr inbounds i32, ptr %4526, i64 %4630
  %4632 = add nsw i64 %4630, %4525
  %4633 = add nsw i64 %4632, %4421
  %4634 = add nsw i64 %4633, %4318
  %4635 = add nsw i64 %4634, %4216
  %4636 = add nsw i64 %4635, %4115
  %4637 = add nsw i64 %4636, %4015
  %4638 = add i64 %4637, %3916
  %4639 = add i64 %4638, %3818
  %4640 = add i64 %4639, %3721
  %4641 = add i64 %4640, %3625
  %4642 = add i64 %4641, %3530
  %4643 = add i64 %4642, %3436
  %4644 = add i64 %4643, %3343
  %4645 = add i64 %4644, %3251
  %4646 = add i64 %4645, %3217
  %4647 = add i64 %4646, %3183
  %4648 = add i64 %4647, %3149
  %4649 = add i64 %4648, %3115
  %4650 = add i64 %4649, %3081
  %4651 = add i64 %4650, %3047
  %4652 = add i64 %4651, %3013
  %4653 = add i64 %4652, %2979
  %4654 = add i64 %4653, %2945
  %4655 = add i64 %4654, %2911
  %4656 = add i64 %4655, %2907
  %4657 = shl i64 %4656, 2
  %4658 = add i64 %4657, 488
  %4659 = getelementptr i8, ptr %2906, i64 %4658
  %4660 = icmp uge ptr %4631, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050)
  %4661 = icmp ule ptr %4659, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928)
  %4662 = or i1 %4660, %4661
  br i1 %4662, label %4663, label %4693

4663:                                             ; preds = %4628
  store <4 x i32> zeroinitializer, ptr %4631, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4664 = getelementptr inbounds i32, ptr %4631, i64 4
  store <4 x i32> zeroinitializer, ptr %4664, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4665 = getelementptr inbounds i32, ptr %4631, i64 8
  store <4 x i32> zeroinitializer, ptr %4665, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4666 = getelementptr inbounds i32, ptr %4631, i64 12
  store <4 x i32> zeroinitializer, ptr %4666, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4667 = getelementptr inbounds i32, ptr %4631, i64 16
  store <4 x i32> zeroinitializer, ptr %4667, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4668 = getelementptr inbounds i32, ptr %4631, i64 20
  store <4 x i32> zeroinitializer, ptr %4668, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4669 = getelementptr inbounds i32, ptr %4631, i64 24
  store <4 x i32> zeroinitializer, ptr %4669, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4670 = getelementptr inbounds i32, ptr %4631, i64 28
  store <4 x i32> zeroinitializer, ptr %4670, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4671 = getelementptr inbounds i32, ptr %4631, i64 32
  store <4 x i32> zeroinitializer, ptr %4671, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4672 = getelementptr inbounds i32, ptr %4631, i64 36
  store <4 x i32> zeroinitializer, ptr %4672, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4673 = getelementptr inbounds i32, ptr %4631, i64 40
  store <4 x i32> zeroinitializer, ptr %4673, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4674 = getelementptr inbounds i32, ptr %4631, i64 44
  store <4 x i32> zeroinitializer, ptr %4674, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4675 = getelementptr inbounds i32, ptr %4631, i64 48
  store <4 x i32> zeroinitializer, ptr %4675, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4676 = getelementptr inbounds i32, ptr %4631, i64 52
  store <4 x i32> zeroinitializer, ptr %4676, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4677 = getelementptr inbounds i32, ptr %4631, i64 56
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %4677, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4678 = getelementptr inbounds i32, ptr %4631, i64 60
  store <4 x i32> zeroinitializer, ptr %4678, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4679 = getelementptr inbounds i32, ptr %4631, i64 64
  store <4 x i32> zeroinitializer, ptr %4679, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4680 = getelementptr inbounds i32, ptr %4631, i64 68
  store <4 x i32> zeroinitializer, ptr %4680, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4681 = getelementptr inbounds i32, ptr %4631, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %4681, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4682 = getelementptr inbounds i32, ptr %4631, i64 76
  store <4 x i32> zeroinitializer, ptr %4682, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4683 = getelementptr inbounds i32, ptr %4631, i64 80
  store <4 x i32> zeroinitializer, ptr %4683, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4684 = getelementptr inbounds i32, ptr %4631, i64 84
  store <4 x i32> zeroinitializer, ptr %4684, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4685 = getelementptr inbounds i32, ptr %4631, i64 88
  store <4 x i32> zeroinitializer, ptr %4685, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4686 = getelementptr inbounds i32, ptr %4631, i64 92
  store <4 x i32> zeroinitializer, ptr %4686, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4687 = getelementptr inbounds i32, ptr %4631, i64 96
  store <4 x i32> zeroinitializer, ptr %4687, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4688 = getelementptr inbounds i32, ptr %4631, i64 100
  store <4 x i32> zeroinitializer, ptr %4688, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4689 = getelementptr inbounds i32, ptr %4631, i64 104
  store <4 x i32> zeroinitializer, ptr %4689, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4690 = getelementptr inbounds i32, ptr %4631, i64 108
  store <4 x i32> zeroinitializer, ptr %4690, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4691 = getelementptr inbounds i32, ptr %4631, i64 112
  store <4 x i32> zeroinitializer, ptr %4691, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  %4692 = getelementptr inbounds i32, ptr %4631, i64 116
  store <4 x i32> zeroinitializer, ptr %4692, align 4, !tbaa !105, !alias.scope !748, !noalias !751
  br label %4693

4693:                                             ; preds = %4628, %4663
  %4694 = phi i64 [ 0, %4628 ], [ 120, %4663 ]
  br label %4695

4695:                                             ; preds = %4695, %4693
  %4696 = phi i64 [ %4703, %4695 ], [ %4694, %4693 ]
  %4697 = phi i64 [ %4704, %4695 ], [ 0, %4693 ]
  %4698 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %4696
  %4699 = load i8, ptr %4698, align 1, !tbaa !46
  %4700 = icmp eq i8 %4699, 46
  %4701 = sext i1 %4700 to i32
  %4702 = getelementptr inbounds i32, ptr %4631, i64 %4696
  store i32 %4701, ptr %4702, align 4, !tbaa !105
  %4703 = add nuw nsw i64 %4696, 1
  %4704 = add i64 %4697, 1
  %4705 = icmp eq i64 %4704, 2
  br i1 %4705, label %4706, label %4695, !llvm.loop !753

4706:                                             ; preds = %4695
  br i1 %4662, label %4734, label %4707

4707:                                             ; preds = %4706, %4707
  %4708 = phi i64 [ %4732, %4707 ], [ %4703, %4706 ]
  %4709 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %4708
  %4710 = load i8, ptr %4709, align 1, !tbaa !46
  %4711 = icmp eq i8 %4710, 46
  %4712 = sext i1 %4711 to i32
  %4713 = getelementptr inbounds i32, ptr %4631, i64 %4708
  store i32 %4712, ptr %4713, align 4, !tbaa !105
  %4714 = add nuw nsw i64 %4708, 1
  %4715 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %4714
  %4716 = load i8, ptr %4715, align 1, !tbaa !46
  %4717 = icmp eq i8 %4716, 46
  %4718 = sext i1 %4717 to i32
  %4719 = getelementptr inbounds i32, ptr %4631, i64 %4714
  store i32 %4718, ptr %4719, align 4, !tbaa !105
  %4720 = add nuw nsw i64 %4708, 2
  %4721 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %4720
  %4722 = load i8, ptr %4721, align 1, !tbaa !46
  %4723 = icmp eq i8 %4722, 46
  %4724 = sext i1 %4723 to i32
  %4725 = getelementptr inbounds i32, ptr %4631, i64 %4720
  store i32 %4724, ptr %4725, align 4, !tbaa !105
  %4726 = add nuw nsw i64 %4708, 3
  %4727 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %4726
  %4728 = load i8, ptr %4727, align 1, !tbaa !46
  %4729 = icmp eq i8 %4728, 46
  %4730 = sext i1 %4729 to i32
  %4731 = getelementptr inbounds i32, ptr %4631, i64 %4726
  store i32 %4730, ptr %4731, align 4, !tbaa !105
  %4732 = add nuw nsw i64 %4708, 4
  %4733 = icmp eq i64 %4732, 122
  br i1 %4733, label %4734, label %4707, !llvm.loop !754

4734:                                             ; preds = %4707, %4706
  %4735 = load i32, ptr %33, align 8, !tbaa !292
  %4736 = sext i32 %4735 to i64
  %4737 = getelementptr inbounds i32, ptr %4631, i64 %4736
  %4738 = add nsw i64 %4736, %4630
  %4739 = add nsw i64 %4738, %4525
  %4740 = add nsw i64 %4739, %4421
  %4741 = add nsw i64 %4740, %4318
  %4742 = add nsw i64 %4741, %4216
  %4743 = add nsw i64 %4742, %4115
  %4744 = add i64 %4743, %4015
  %4745 = add i64 %4744, %3916
  %4746 = add i64 %4745, %3818
  %4747 = add i64 %4746, %3721
  %4748 = add i64 %4747, %3625
  %4749 = add i64 %4748, %3530
  %4750 = add i64 %4749, %3436
  %4751 = add i64 %4750, %3343
  %4752 = add i64 %4751, %3251
  %4753 = add i64 %4752, %3217
  %4754 = add i64 %4753, %3183
  %4755 = add i64 %4754, %3149
  %4756 = add i64 %4755, %3115
  %4757 = add i64 %4756, %3081
  %4758 = add i64 %4757, %3047
  %4759 = add i64 %4758, %3013
  %4760 = add i64 %4759, %2979
  %4761 = add i64 %4760, %2945
  %4762 = add i64 %4761, %2911
  %4763 = add i64 %4762, %2907
  %4764 = shl i64 %4763, 2
  %4765 = add i64 %4764, 488
  %4766 = getelementptr i8, ptr %2906, i64 %4765
  %4767 = icmp uge ptr %4737, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172)
  %4768 = icmp ule ptr %4766, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050)
  %4769 = or i1 %4767, %4768
  br i1 %4769, label %4770, label %4800

4770:                                             ; preds = %4734
  store <4 x i32> zeroinitializer, ptr %4737, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4771 = getelementptr inbounds i32, ptr %4737, i64 4
  store <4 x i32> zeroinitializer, ptr %4771, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4772 = getelementptr inbounds i32, ptr %4737, i64 8
  store <4 x i32> zeroinitializer, ptr %4772, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4773 = getelementptr inbounds i32, ptr %4737, i64 12
  store <4 x i32> zeroinitializer, ptr %4773, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4774 = getelementptr inbounds i32, ptr %4737, i64 16
  store <4 x i32> zeroinitializer, ptr %4774, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4775 = getelementptr inbounds i32, ptr %4737, i64 20
  store <4 x i32> zeroinitializer, ptr %4775, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4776 = getelementptr inbounds i32, ptr %4737, i64 24
  store <4 x i32> zeroinitializer, ptr %4776, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4777 = getelementptr inbounds i32, ptr %4737, i64 28
  store <4 x i32> zeroinitializer, ptr %4777, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4778 = getelementptr inbounds i32, ptr %4737, i64 32
  store <4 x i32> zeroinitializer, ptr %4778, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4779 = getelementptr inbounds i32, ptr %4737, i64 36
  store <4 x i32> zeroinitializer, ptr %4779, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4780 = getelementptr inbounds i32, ptr %4737, i64 40
  store <4 x i32> zeroinitializer, ptr %4780, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4781 = getelementptr inbounds i32, ptr %4737, i64 44
  store <4 x i32> zeroinitializer, ptr %4781, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4782 = getelementptr inbounds i32, ptr %4737, i64 48
  store <4 x i32> zeroinitializer, ptr %4782, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4783 = getelementptr inbounds i32, ptr %4737, i64 52
  store <4 x i32> zeroinitializer, ptr %4783, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4784 = getelementptr inbounds i32, ptr %4737, i64 56
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4784, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4785 = getelementptr inbounds i32, ptr %4737, i64 60
  store <4 x i32> zeroinitializer, ptr %4785, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4786 = getelementptr inbounds i32, ptr %4737, i64 64
  store <4 x i32> zeroinitializer, ptr %4786, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4787 = getelementptr inbounds i32, ptr %4737, i64 68
  store <4 x i32> zeroinitializer, ptr %4787, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4788 = getelementptr inbounds i32, ptr %4737, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %4788, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4789 = getelementptr inbounds i32, ptr %4737, i64 76
  store <4 x i32> zeroinitializer, ptr %4789, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4790 = getelementptr inbounds i32, ptr %4737, i64 80
  store <4 x i32> zeroinitializer, ptr %4790, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4791 = getelementptr inbounds i32, ptr %4737, i64 84
  store <4 x i32> zeroinitializer, ptr %4791, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4792 = getelementptr inbounds i32, ptr %4737, i64 88
  store <4 x i32> zeroinitializer, ptr %4792, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4793 = getelementptr inbounds i32, ptr %4737, i64 92
  store <4 x i32> zeroinitializer, ptr %4793, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4794 = getelementptr inbounds i32, ptr %4737, i64 96
  store <4 x i32> zeroinitializer, ptr %4794, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4795 = getelementptr inbounds i32, ptr %4737, i64 100
  store <4 x i32> zeroinitializer, ptr %4795, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4796 = getelementptr inbounds i32, ptr %4737, i64 104
  store <4 x i32> zeroinitializer, ptr %4796, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4797 = getelementptr inbounds i32, ptr %4737, i64 108
  store <4 x i32> zeroinitializer, ptr %4797, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4798 = getelementptr inbounds i32, ptr %4737, i64 112
  store <4 x i32> zeroinitializer, ptr %4798, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  %4799 = getelementptr inbounds i32, ptr %4737, i64 116
  store <4 x i32> zeroinitializer, ptr %4799, align 4, !tbaa !105, !alias.scope !755, !noalias !758
  br label %4800

4800:                                             ; preds = %4734, %4770
  %4801 = phi i64 [ 0, %4734 ], [ 120, %4770 ]
  br label %4802

4802:                                             ; preds = %4802, %4800
  %4803 = phi i64 [ %4810, %4802 ], [ %4801, %4800 ]
  %4804 = phi i64 [ %4811, %4802 ], [ 0, %4800 ]
  %4805 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %4803
  %4806 = load i8, ptr %4805, align 1, !tbaa !46
  %4807 = icmp eq i8 %4806, 46
  %4808 = sext i1 %4807 to i32
  %4809 = getelementptr inbounds i32, ptr %4737, i64 %4803
  store i32 %4808, ptr %4809, align 4, !tbaa !105
  %4810 = add nuw nsw i64 %4803, 1
  %4811 = add i64 %4804, 1
  %4812 = icmp eq i64 %4811, 2
  br i1 %4812, label %4813, label %4802, !llvm.loop !760

4813:                                             ; preds = %4802
  br i1 %4769, label %4841, label %4814

4814:                                             ; preds = %4813, %4814
  %4815 = phi i64 [ %4839, %4814 ], [ %4810, %4813 ]
  %4816 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %4815
  %4817 = load i8, ptr %4816, align 1, !tbaa !46
  %4818 = icmp eq i8 %4817, 46
  %4819 = sext i1 %4818 to i32
  %4820 = getelementptr inbounds i32, ptr %4737, i64 %4815
  store i32 %4819, ptr %4820, align 4, !tbaa !105
  %4821 = add nuw nsw i64 %4815, 1
  %4822 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %4821
  %4823 = load i8, ptr %4822, align 1, !tbaa !46
  %4824 = icmp eq i8 %4823, 46
  %4825 = sext i1 %4824 to i32
  %4826 = getelementptr inbounds i32, ptr %4737, i64 %4821
  store i32 %4825, ptr %4826, align 4, !tbaa !105
  %4827 = add nuw nsw i64 %4815, 2
  %4828 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %4827
  %4829 = load i8, ptr %4828, align 1, !tbaa !46
  %4830 = icmp eq i8 %4829, 46
  %4831 = sext i1 %4830 to i32
  %4832 = getelementptr inbounds i32, ptr %4737, i64 %4827
  store i32 %4831, ptr %4832, align 4, !tbaa !105
  %4833 = add nuw nsw i64 %4815, 3
  %4834 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %4833
  %4835 = load i8, ptr %4834, align 1, !tbaa !46
  %4836 = icmp eq i8 %4835, 46
  %4837 = sext i1 %4836 to i32
  %4838 = getelementptr inbounds i32, ptr %4737, i64 %4833
  store i32 %4837, ptr %4838, align 4, !tbaa !105
  %4839 = add nuw nsw i64 %4815, 4
  %4840 = icmp eq i64 %4839, 122
  br i1 %4840, label %4841, label %4814, !llvm.loop !761

4841:                                             ; preds = %4814, %4813
  %4842 = load i32, ptr %33, align 8, !tbaa !292
  %4843 = sext i32 %4842 to i64
  %4844 = getelementptr inbounds i32, ptr %4737, i64 %4843
  %4845 = add nsw i64 %4843, %4736
  %4846 = add nsw i64 %4845, %4630
  %4847 = add nsw i64 %4846, %4525
  %4848 = add nsw i64 %4847, %4421
  %4849 = add nsw i64 %4848, %4318
  %4850 = add nsw i64 %4849, %4216
  %4851 = add i64 %4850, %4115
  %4852 = add i64 %4851, %4015
  %4853 = add i64 %4852, %3916
  %4854 = add i64 %4853, %3818
  %4855 = add i64 %4854, %3721
  %4856 = add i64 %4855, %3625
  %4857 = add i64 %4856, %3530
  %4858 = add i64 %4857, %3436
  %4859 = add i64 %4858, %3343
  %4860 = add i64 %4859, %3251
  %4861 = add i64 %4860, %3217
  %4862 = add i64 %4861, %3183
  %4863 = add i64 %4862, %3149
  %4864 = add i64 %4863, %3115
  %4865 = add i64 %4864, %3081
  %4866 = add i64 %4865, %3047
  %4867 = add i64 %4866, %3013
  %4868 = add i64 %4867, %2979
  %4869 = add i64 %4868, %2945
  %4870 = add i64 %4869, %2911
  %4871 = add i64 %4870, %2907
  %4872 = shl i64 %4871, 2
  %4873 = add i64 %4872, 488
  %4874 = getelementptr i8, ptr %2906, i64 %4873
  %4875 = icmp uge ptr %4844, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3294)
  %4876 = icmp ule ptr %4874, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172)
  %4877 = or i1 %4875, %4876
  br i1 %4877, label %4878, label %4908

4878:                                             ; preds = %4841
  store <4 x i32> zeroinitializer, ptr %4844, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4879 = getelementptr inbounds i32, ptr %4844, i64 4
  store <4 x i32> zeroinitializer, ptr %4879, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4880 = getelementptr inbounds i32, ptr %4844, i64 8
  store <4 x i32> zeroinitializer, ptr %4880, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4881 = getelementptr inbounds i32, ptr %4844, i64 12
  store <4 x i32> zeroinitializer, ptr %4881, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4882 = getelementptr inbounds i32, ptr %4844, i64 16
  store <4 x i32> zeroinitializer, ptr %4882, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4883 = getelementptr inbounds i32, ptr %4844, i64 20
  store <4 x i32> zeroinitializer, ptr %4883, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4884 = getelementptr inbounds i32, ptr %4844, i64 24
  store <4 x i32> zeroinitializer, ptr %4884, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4885 = getelementptr inbounds i32, ptr %4844, i64 28
  store <4 x i32> zeroinitializer, ptr %4885, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4886 = getelementptr inbounds i32, ptr %4844, i64 32
  store <4 x i32> zeroinitializer, ptr %4886, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4887 = getelementptr inbounds i32, ptr %4844, i64 36
  store <4 x i32> zeroinitializer, ptr %4887, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4888 = getelementptr inbounds i32, ptr %4844, i64 40
  store <4 x i32> zeroinitializer, ptr %4888, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4889 = getelementptr inbounds i32, ptr %4844, i64 44
  store <4 x i32> zeroinitializer, ptr %4889, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4890 = getelementptr inbounds i32, ptr %4844, i64 48
  store <4 x i32> zeroinitializer, ptr %4890, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4891 = getelementptr inbounds i32, ptr %4844, i64 52
  store <4 x i32> zeroinitializer, ptr %4891, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4892 = getelementptr inbounds i32, ptr %4844, i64 56
  store <4 x i32> zeroinitializer, ptr %4892, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4893 = getelementptr inbounds i32, ptr %4844, i64 60
  store <4 x i32> zeroinitializer, ptr %4893, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4894 = getelementptr inbounds i32, ptr %4844, i64 64
  store <4 x i32> zeroinitializer, ptr %4894, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4895 = getelementptr inbounds i32, ptr %4844, i64 68
  store <4 x i32> zeroinitializer, ptr %4895, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4896 = getelementptr inbounds i32, ptr %4844, i64 72
  store <4 x i32> zeroinitializer, ptr %4896, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4897 = getelementptr inbounds i32, ptr %4844, i64 76
  store <4 x i32> zeroinitializer, ptr %4897, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4898 = getelementptr inbounds i32, ptr %4844, i64 80
  store <4 x i32> zeroinitializer, ptr %4898, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4899 = getelementptr inbounds i32, ptr %4844, i64 84
  store <4 x i32> zeroinitializer, ptr %4899, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4900 = getelementptr inbounds i32, ptr %4844, i64 88
  store <4 x i32> zeroinitializer, ptr %4900, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4901 = getelementptr inbounds i32, ptr %4844, i64 92
  store <4 x i32> zeroinitializer, ptr %4901, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4902 = getelementptr inbounds i32, ptr %4844, i64 96
  store <4 x i32> zeroinitializer, ptr %4902, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4903 = getelementptr inbounds i32, ptr %4844, i64 100
  store <4 x i32> zeroinitializer, ptr %4903, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4904 = getelementptr inbounds i32, ptr %4844, i64 104
  store <4 x i32> zeroinitializer, ptr %4904, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4905 = getelementptr inbounds i32, ptr %4844, i64 108
  store <4 x i32> zeroinitializer, ptr %4905, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4906 = getelementptr inbounds i32, ptr %4844, i64 112
  store <4 x i32> zeroinitializer, ptr %4906, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  %4907 = getelementptr inbounds i32, ptr %4844, i64 116
  store <4 x i32> zeroinitializer, ptr %4907, align 4, !tbaa !105, !alias.scope !762, !noalias !765
  br label %4908

4908:                                             ; preds = %4841, %4878
  %4909 = phi i64 [ 0, %4841 ], [ 120, %4878 ]
  br label %4910

4910:                                             ; preds = %4910, %4908
  %4911 = phi i64 [ %4918, %4910 ], [ %4909, %4908 ]
  %4912 = phi i64 [ %4919, %4910 ], [ 0, %4908 ]
  %4913 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %4911
  %4914 = load i8, ptr %4913, align 1, !tbaa !46
  %4915 = icmp eq i8 %4914, 46
  %4916 = sext i1 %4915 to i32
  %4917 = getelementptr inbounds i32, ptr %4844, i64 %4911
  store i32 %4916, ptr %4917, align 4, !tbaa !105
  %4918 = add nuw nsw i64 %4911, 1
  %4919 = add i64 %4912, 1
  %4920 = icmp eq i64 %4919, 2
  br i1 %4920, label %4921, label %4910, !llvm.loop !767

4921:                                             ; preds = %4910
  br i1 %4877, label %4949, label %4922

4922:                                             ; preds = %4921, %4922
  %4923 = phi i64 [ %4947, %4922 ], [ %4918, %4921 ]
  %4924 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %4923
  %4925 = load i8, ptr %4924, align 1, !tbaa !46
  %4926 = icmp eq i8 %4925, 46
  %4927 = sext i1 %4926 to i32
  %4928 = getelementptr inbounds i32, ptr %4844, i64 %4923
  store i32 %4927, ptr %4928, align 4, !tbaa !105
  %4929 = add nuw nsw i64 %4923, 1
  %4930 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %4929
  %4931 = load i8, ptr %4930, align 1, !tbaa !46
  %4932 = icmp eq i8 %4931, 46
  %4933 = sext i1 %4932 to i32
  %4934 = getelementptr inbounds i32, ptr %4844, i64 %4929
  store i32 %4933, ptr %4934, align 4, !tbaa !105
  %4935 = add nuw nsw i64 %4923, 2
  %4936 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %4935
  %4937 = load i8, ptr %4936, align 1, !tbaa !46
  %4938 = icmp eq i8 %4937, 46
  %4939 = sext i1 %4938 to i32
  %4940 = getelementptr inbounds i32, ptr %4844, i64 %4935
  store i32 %4939, ptr %4940, align 4, !tbaa !105
  %4941 = add nuw nsw i64 %4923, 3
  %4942 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %4941
  %4943 = load i8, ptr %4942, align 1, !tbaa !46
  %4944 = icmp eq i8 %4943, 46
  %4945 = sext i1 %4944 to i32
  %4946 = getelementptr inbounds i32, ptr %4844, i64 %4941
  store i32 %4945, ptr %4946, align 4, !tbaa !105
  %4947 = add nuw nsw i64 %4923, 4
  %4948 = icmp eq i64 %4947, 122
  br i1 %4948, label %4949, label %4922, !llvm.loop !768

4949:                                             ; preds = %4922, %4921
  %4950 = load i32, ptr %33, align 8, !tbaa !292
  %4951 = load i16, ptr %54, align 2, !tbaa !348
  %4952 = zext i16 %4951 to i32
  %4953 = add nuw nsw i32 %50, 245
  %4954 = icmp sgt i32 %4953, %4950
  br i1 %4954, label %4955, label %4956

4955:                                             ; preds = %4949
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EG@KOLNNAOF@?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA?5?$AA?$CL?$AA?5?$AAw?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2658)
  br label %4956

4956:                                             ; preds = %4955, %4949
  %4957 = add nuw nsw i32 %4952, 27
  %4958 = load i32, ptr %2900, align 4, !tbaa !293
  %4959 = icmp sgt i32 %4957, %4958
  br i1 %4959, label %4960, label %4961

4960:                                             ; preds = %4956
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EI@CHFOHLGN@?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAy?$AA?5?$AA?$CL?$AA?5?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs?$AA?9?$AA?$DO?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2659)
  br label %4961

4961:                                             ; preds = %4960, %4956
  %4962 = load ptr, ptr %2905, align 8, !tbaa !274
  %4963 = zext i32 %51 to i64
  %4964 = getelementptr inbounds i32, ptr %4962, i64 %4963
  %4965 = load i32, ptr %33, align 8, !tbaa !292
  %4966 = mul nsw i32 %4965, %4952
  %4967 = sext i32 %4966 to i64
  %4968 = getelementptr inbounds i32, ptr %4964, i64 %4967
  store <4 x i32> zeroinitializer, ptr %4968, align 4, !tbaa !105
  %4969 = getelementptr inbounds i32, ptr %4968, i64 4
  store <4 x i32> zeroinitializer, ptr %4969, align 4, !tbaa !105
  %4970 = getelementptr inbounds i32, ptr %4968, i64 8
  store <4 x i32> zeroinitializer, ptr %4970, align 4, !tbaa !105
  %4971 = getelementptr inbounds i32, ptr %4968, i64 12
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %4971, align 4, !tbaa !105
  %4972 = getelementptr inbounds i32, ptr %4968, i64 16
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4972, align 4, !tbaa !105
  %4973 = getelementptr inbounds i32, ptr %4968, i64 20
  store <4 x i32> zeroinitializer, ptr %4973, align 4, !tbaa !105
  %4974 = getelementptr inbounds i32, ptr %4968, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %4974, align 4, !tbaa !105
  %4975 = getelementptr inbounds i32, ptr %4968, i64 28
  store <4 x i32> zeroinitializer, ptr %4975, align 4, !tbaa !105
  %4976 = getelementptr inbounds i32, ptr %4968, i64 32
  store <4 x i32> zeroinitializer, ptr %4976, align 4, !tbaa !105
  %4977 = getelementptr inbounds i32, ptr %4968, i64 36
  store <4 x i32> zeroinitializer, ptr %4977, align 4, !tbaa !105
  %4978 = getelementptr inbounds i32, ptr %4968, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %4978, align 4, !tbaa !105
  %4979 = getelementptr inbounds i32, ptr %4968, i64 44
  store <4 x i32> zeroinitializer, ptr %4979, align 4, !tbaa !105
  %4980 = getelementptr inbounds i32, ptr %4968, i64 48
  store <4 x i32> zeroinitializer, ptr %4980, align 4, !tbaa !105
  %4981 = getelementptr inbounds i32, ptr %4968, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4981, align 4, !tbaa !105
  %4982 = getelementptr inbounds i32, ptr %4968, i64 56
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4982, align 4, !tbaa !105
  %4983 = getelementptr inbounds i32, ptr %4968, i64 60
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %4983, align 4, !tbaa !105
  %4984 = getelementptr inbounds i32, ptr %4968, i64 64
  store <4 x i32> zeroinitializer, ptr %4984, align 4, !tbaa !105
  %4985 = getelementptr inbounds i32, ptr %4968, i64 68
  store <4 x i32> zeroinitializer, ptr %4985, align 4, !tbaa !105
  %4986 = getelementptr inbounds i32, ptr %4968, i64 72
  store <4 x i32> zeroinitializer, ptr %4986, align 4, !tbaa !105
  %4987 = getelementptr inbounds i32, ptr %4968, i64 76
  store <4 x i32> zeroinitializer, ptr %4987, align 4, !tbaa !105
  %4988 = getelementptr inbounds i32, ptr %4968, i64 80
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4988, align 4, !tbaa !105
  %4989 = getelementptr inbounds i32, ptr %4968, i64 84
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %4989, align 4, !tbaa !105
  %4990 = getelementptr inbounds i32, ptr %4968, i64 88
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %4990, align 4, !tbaa !105
  %4991 = getelementptr inbounds i32, ptr %4968, i64 92
  store <4 x i32> zeroinitializer, ptr %4991, align 4, !tbaa !105
  %4992 = getelementptr inbounds i32, ptr %4968, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %4992, align 4, !tbaa !105
  %4993 = getelementptr inbounds i32, ptr %4968, i64 100
  store <4 x i32> zeroinitializer, ptr %4993, align 4, !tbaa !105
  %4994 = getelementptr inbounds i32, ptr %4968, i64 104
  store <4 x i32> zeroinitializer, ptr %4994, align 4, !tbaa !105
  %4995 = getelementptr inbounds i32, ptr %4968, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %4995, align 4, !tbaa !105
  %4996 = getelementptr inbounds i32, ptr %4968, i64 112
  store <4 x i32> zeroinitializer, ptr %4996, align 4, !tbaa !105
  %4997 = getelementptr inbounds i32, ptr %4968, i64 116
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %4997, align 4, !tbaa !105
  %4998 = getelementptr inbounds i32, ptr %4968, i64 120
  store i32 -1, ptr %4998, align 4, !tbaa !105
  %4999 = getelementptr inbounds i32, ptr %4968, i64 121
  store i32 0, ptr %4999, align 4, !tbaa !105
  %5000 = load i32, ptr %33, align 8, !tbaa !292
  %5001 = sext i32 %5000 to i64
  %5002 = getelementptr inbounds i32, ptr %4968, i64 %5001
  store <4 x i32> zeroinitializer, ptr %5002, align 4, !tbaa !105
  %5003 = getelementptr inbounds i32, ptr %5002, i64 4
  store <4 x i32> zeroinitializer, ptr %5003, align 4, !tbaa !105
  %5004 = getelementptr inbounds i32, ptr %5002, i64 8
  store <4 x i32> zeroinitializer, ptr %5004, align 4, !tbaa !105
  %5005 = getelementptr inbounds i32, ptr %5002, i64 12
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5005, align 4, !tbaa !105
  %5006 = getelementptr inbounds i32, ptr %5002, i64 16
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5006, align 4, !tbaa !105
  %5007 = getelementptr inbounds i32, ptr %5002, i64 20
  store <4 x i32> zeroinitializer, ptr %5007, align 4, !tbaa !105
  %5008 = getelementptr inbounds i32, ptr %5002, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5008, align 4, !tbaa !105
  %5009 = getelementptr inbounds i32, ptr %5002, i64 28
  store <4 x i32> zeroinitializer, ptr %5009, align 4, !tbaa !105
  %5010 = getelementptr inbounds i32, ptr %5002, i64 32
  store <4 x i32> zeroinitializer, ptr %5010, align 4, !tbaa !105
  %5011 = getelementptr inbounds i32, ptr %5002, i64 36
  store <4 x i32> zeroinitializer, ptr %5011, align 4, !tbaa !105
  %5012 = getelementptr inbounds i32, ptr %5002, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5012, align 4, !tbaa !105
  %5013 = getelementptr inbounds i32, ptr %5002, i64 44
  store <4 x i32> zeroinitializer, ptr %5013, align 4, !tbaa !105
  %5014 = getelementptr inbounds i32, ptr %5002, i64 48
  store <4 x i32> zeroinitializer, ptr %5014, align 4, !tbaa !105
  %5015 = getelementptr inbounds i32, ptr %5002, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5015, align 4, !tbaa !105
  %5016 = getelementptr inbounds i32, ptr %5002, i64 56
  store <4 x i32> zeroinitializer, ptr %5016, align 4, !tbaa !105
  %5017 = getelementptr inbounds i32, ptr %5002, i64 60
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5017, align 4, !tbaa !105
  %5018 = getelementptr inbounds i32, ptr %5002, i64 64
  store <4 x i32> zeroinitializer, ptr %5018, align 4, !tbaa !105
  %5019 = getelementptr inbounds i32, ptr %5002, i64 68
  store <4 x i32> zeroinitializer, ptr %5019, align 4, !tbaa !105
  %5020 = getelementptr inbounds i32, ptr %5002, i64 72
  store <4 x i32> zeroinitializer, ptr %5020, align 4, !tbaa !105
  %5021 = getelementptr inbounds i32, ptr %5002, i64 76
  store <4 x i32> zeroinitializer, ptr %5021, align 4, !tbaa !105
  %5022 = getelementptr inbounds i32, ptr %5002, i64 80
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5022, align 4, !tbaa !105
  %5023 = getelementptr inbounds i32, ptr %5002, i64 84
  store <4 x i32> zeroinitializer, ptr %5023, align 4, !tbaa !105
  %5024 = getelementptr inbounds i32, ptr %5002, i64 88
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5024, align 4, !tbaa !105
  %5025 = getelementptr inbounds i32, ptr %5002, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5025, align 4, !tbaa !105
  %5026 = getelementptr inbounds i32, ptr %5002, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5026, align 4, !tbaa !105
  %5027 = getelementptr inbounds i32, ptr %5002, i64 100
  store <4 x i32> zeroinitializer, ptr %5027, align 4, !tbaa !105
  %5028 = getelementptr inbounds i32, ptr %5002, i64 104
  store <4 x i32> zeroinitializer, ptr %5028, align 4, !tbaa !105
  %5029 = getelementptr inbounds i32, ptr %5002, i64 108
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5029, align 4, !tbaa !105
  %5030 = getelementptr inbounds i32, ptr %5002, i64 112
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5030, align 4, !tbaa !105
  %5031 = getelementptr inbounds i32, ptr %5002, i64 116
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5031, align 4, !tbaa !105
  %5032 = getelementptr inbounds i32, ptr %5002, i64 120
  store i32 0, ptr %5032, align 4, !tbaa !105
  %5033 = getelementptr inbounds i32, ptr %5002, i64 121
  store i32 -1, ptr %5033, align 4, !tbaa !105
  %5034 = load i32, ptr %33, align 8, !tbaa !292
  %5035 = sext i32 %5034 to i64
  %5036 = getelementptr inbounds i32, ptr %5002, i64 %5035
  store <4 x i32> zeroinitializer, ptr %5036, align 4, !tbaa !105
  %5037 = getelementptr inbounds i32, ptr %5036, i64 4
  store <4 x i32> zeroinitializer, ptr %5037, align 4, !tbaa !105
  %5038 = getelementptr inbounds i32, ptr %5036, i64 8
  store <4 x i32> zeroinitializer, ptr %5038, align 4, !tbaa !105
  %5039 = getelementptr inbounds i32, ptr %5036, i64 12
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5039, align 4, !tbaa !105
  %5040 = getelementptr inbounds i32, ptr %5036, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5040, align 4, !tbaa !105
  %5041 = getelementptr inbounds i32, ptr %5036, i64 20
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5041, align 4, !tbaa !105
  %5042 = getelementptr inbounds i32, ptr %5036, i64 24
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5042, align 4, !tbaa !105
  %5043 = getelementptr inbounds i32, ptr %5036, i64 28
  store <4 x i32> zeroinitializer, ptr %5043, align 4, !tbaa !105
  %5044 = getelementptr inbounds i32, ptr %5036, i64 32
  store <4 x i32> zeroinitializer, ptr %5044, align 4, !tbaa !105
  %5045 = getelementptr inbounds i32, ptr %5036, i64 36
  store <4 x i32> zeroinitializer, ptr %5045, align 4, !tbaa !105
  %5046 = getelementptr inbounds i32, ptr %5036, i64 40
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5046, align 4, !tbaa !105
  %5047 = getelementptr inbounds i32, ptr %5036, i64 44
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5047, align 4, !tbaa !105
  %5048 = getelementptr inbounds i32, ptr %5036, i64 48
  store <4 x i32> zeroinitializer, ptr %5048, align 4, !tbaa !105
  %5049 = getelementptr inbounds i32, ptr %5036, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5049, align 4, !tbaa !105
  %5050 = getelementptr inbounds i32, ptr %5036, i64 56
  store <4 x i32> zeroinitializer, ptr %5050, align 4, !tbaa !105
  %5051 = getelementptr inbounds i32, ptr %5036, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5051, align 4, !tbaa !105
  %5052 = getelementptr inbounds i32, ptr %5036, i64 64
  store <4 x i32> zeroinitializer, ptr %5052, align 4, !tbaa !105
  %5053 = getelementptr inbounds i32, ptr %5036, i64 68
  store <4 x i32> zeroinitializer, ptr %5053, align 4, !tbaa !105
  %5054 = getelementptr inbounds i32, ptr %5036, i64 72
  store <4 x i32> zeroinitializer, ptr %5054, align 4, !tbaa !105
  %5055 = getelementptr inbounds i32, ptr %5036, i64 76
  store <4 x i32> zeroinitializer, ptr %5055, align 4, !tbaa !105
  %5056 = getelementptr inbounds i32, ptr %5036, i64 80
  store <4 x i32> zeroinitializer, ptr %5056, align 4, !tbaa !105
  %5057 = getelementptr inbounds i32, ptr %5036, i64 84
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5057, align 4, !tbaa !105
  %5058 = getelementptr inbounds i32, ptr %5036, i64 88
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5058, align 4, !tbaa !105
  %5059 = getelementptr inbounds i32, ptr %5036, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5059, align 4, !tbaa !105
  %5060 = getelementptr inbounds i32, ptr %5036, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5060, align 4, !tbaa !105
  %5061 = getelementptr inbounds i32, ptr %5036, i64 100
  store <4 x i32> zeroinitializer, ptr %5061, align 4, !tbaa !105
  %5062 = getelementptr inbounds i32, ptr %5036, i64 104
  store <4 x i32> zeroinitializer, ptr %5062, align 4, !tbaa !105
  %5063 = getelementptr inbounds i32, ptr %5036, i64 108
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5063, align 4, !tbaa !105
  %5064 = getelementptr inbounds i32, ptr %5036, i64 112
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5064, align 4, !tbaa !105
  %5065 = getelementptr inbounds i32, ptr %5036, i64 116
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5065, align 4, !tbaa !105
  %5066 = getelementptr inbounds i32, ptr %5036, i64 120
  store i32 0, ptr %5066, align 4, !tbaa !105
  %5067 = getelementptr inbounds i32, ptr %5036, i64 121
  store i32 -1, ptr %5067, align 4, !tbaa !105
  %5068 = load i32, ptr %33, align 8, !tbaa !292
  %5069 = sext i32 %5068 to i64
  %5070 = getelementptr inbounds i32, ptr %5036, i64 %5069
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5070, align 4, !tbaa !105
  %5071 = getelementptr inbounds i32, ptr %5070, i64 4
  store <4 x i32> zeroinitializer, ptr %5071, align 4, !tbaa !105
  %5072 = getelementptr inbounds i32, ptr %5070, i64 8
  store <4 x i32> zeroinitializer, ptr %5072, align 4, !tbaa !105
  %5073 = getelementptr inbounds i32, ptr %5070, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5073, align 4, !tbaa !105
  %5074 = getelementptr inbounds i32, ptr %5070, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5074, align 4, !tbaa !105
  %5075 = getelementptr inbounds i32, ptr %5070, i64 20
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5075, align 4, !tbaa !105
  %5076 = getelementptr inbounds i32, ptr %5070, i64 24
  store <4 x i32> zeroinitializer, ptr %5076, align 4, !tbaa !105
  %5077 = getelementptr inbounds i32, ptr %5070, i64 28
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5077, align 4, !tbaa !105
  %5078 = getelementptr inbounds i32, ptr %5070, i64 32
  store <4 x i32> zeroinitializer, ptr %5078, align 4, !tbaa !105
  %5079 = getelementptr inbounds i32, ptr %5070, i64 36
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5079, align 4, !tbaa !105
  %5080 = getelementptr inbounds i32, ptr %5070, i64 40
  store <4 x i32> zeroinitializer, ptr %5080, align 4, !tbaa !105
  %5081 = getelementptr inbounds i32, ptr %5070, i64 44
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5081, align 4, !tbaa !105
  %5082 = getelementptr inbounds i32, ptr %5070, i64 48
  store <4 x i32> zeroinitializer, ptr %5082, align 4, !tbaa !105
  %5083 = getelementptr inbounds i32, ptr %5070, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5083, align 4, !tbaa !105
  %5084 = getelementptr inbounds i32, ptr %5070, i64 56
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5084, align 4, !tbaa !105
  %5085 = getelementptr inbounds i32, ptr %5070, i64 60
  store <4 x i32> zeroinitializer, ptr %5085, align 4, !tbaa !105
  %5086 = getelementptr inbounds i32, ptr %5070, i64 64
  store <4 x i32> zeroinitializer, ptr %5086, align 4, !tbaa !105
  %5087 = getelementptr inbounds i32, ptr %5070, i64 68
  store <4 x i32> zeroinitializer, ptr %5087, align 4, !tbaa !105
  %5088 = getelementptr inbounds i32, ptr %5070, i64 72
  store <4 x i32> zeroinitializer, ptr %5088, align 4, !tbaa !105
  %5089 = getelementptr inbounds i32, ptr %5070, i64 76
  store <4 x i32> zeroinitializer, ptr %5089, align 4, !tbaa !105
  %5090 = getelementptr inbounds i32, ptr %5070, i64 80
  store <4 x i32> zeroinitializer, ptr %5090, align 4, !tbaa !105
  %5091 = getelementptr inbounds i32, ptr %5070, i64 84
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5091, align 4, !tbaa !105
  %5092 = getelementptr inbounds i32, ptr %5070, i64 88
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5092, align 4, !tbaa !105
  %5093 = getelementptr inbounds i32, ptr %5070, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5093, align 4, !tbaa !105
  %5094 = getelementptr inbounds i32, ptr %5070, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5094, align 4, !tbaa !105
  %5095 = getelementptr inbounds i32, ptr %5070, i64 100
  store <4 x i32> zeroinitializer, ptr %5095, align 4, !tbaa !105
  %5096 = getelementptr inbounds i32, ptr %5070, i64 104
  store <4 x i32> zeroinitializer, ptr %5096, align 4, !tbaa !105
  %5097 = getelementptr inbounds i32, ptr %5070, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5097, align 4, !tbaa !105
  %5098 = getelementptr inbounds i32, ptr %5070, i64 112
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5098, align 4, !tbaa !105
  %5099 = getelementptr inbounds i32, ptr %5070, i64 116
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5099, align 4, !tbaa !105
  %5100 = getelementptr inbounds i32, ptr %5070, i64 120
  store i32 -1, ptr %5100, align 4, !tbaa !105
  %5101 = getelementptr inbounds i32, ptr %5070, i64 121
  store i32 0, ptr %5101, align 4, !tbaa !105
  %5102 = load i32, ptr %33, align 8, !tbaa !292
  %5103 = sext i32 %5102 to i64
  %5104 = getelementptr inbounds i32, ptr %5070, i64 %5103
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %5104, align 4, !tbaa !105
  %5105 = getelementptr inbounds i32, ptr %5104, i64 4
  store <4 x i32> zeroinitializer, ptr %5105, align 4, !tbaa !105
  %5106 = getelementptr inbounds i32, ptr %5104, i64 8
  store <4 x i32> zeroinitializer, ptr %5106, align 4, !tbaa !105
  %5107 = getelementptr inbounds i32, ptr %5104, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5107, align 4, !tbaa !105
  %5108 = getelementptr inbounds i32, ptr %5104, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5108, align 4, !tbaa !105
  %5109 = getelementptr inbounds i32, ptr %5104, i64 20
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5109, align 4, !tbaa !105
  %5110 = getelementptr inbounds i32, ptr %5104, i64 24
  store <4 x i32> zeroinitializer, ptr %5110, align 4, !tbaa !105
  %5111 = getelementptr inbounds i32, ptr %5104, i64 28
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5111, align 4, !tbaa !105
  %5112 = getelementptr inbounds i32, ptr %5104, i64 32
  store <4 x i32> zeroinitializer, ptr %5112, align 4, !tbaa !105
  %5113 = getelementptr inbounds i32, ptr %5104, i64 36
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5113, align 4, !tbaa !105
  %5114 = getelementptr inbounds i32, ptr %5104, i64 40
  store <4 x i32> zeroinitializer, ptr %5114, align 4, !tbaa !105
  %5115 = getelementptr inbounds i32, ptr %5104, i64 44
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5115, align 4, !tbaa !105
  %5116 = getelementptr inbounds i32, ptr %5104, i64 48
  store <4 x i32> zeroinitializer, ptr %5116, align 4, !tbaa !105
  %5117 = getelementptr inbounds i32, ptr %5104, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5117, align 4, !tbaa !105
  %5118 = getelementptr inbounds i32, ptr %5104, i64 56
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5118, align 4, !tbaa !105
  %5119 = getelementptr inbounds i32, ptr %5104, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5119, align 4, !tbaa !105
  %5120 = getelementptr inbounds i32, ptr %5104, i64 64
  store <4 x i32> zeroinitializer, ptr %5120, align 4, !tbaa !105
  %5121 = getelementptr inbounds i32, ptr %5104, i64 68
  store <4 x i32> zeroinitializer, ptr %5121, align 4, !tbaa !105
  %5122 = getelementptr inbounds i32, ptr %5104, i64 72
  store <4 x i32> zeroinitializer, ptr %5122, align 4, !tbaa !105
  %5123 = getelementptr inbounds i32, ptr %5104, i64 76
  store <4 x i32> zeroinitializer, ptr %5123, align 4, !tbaa !105
  %5124 = getelementptr inbounds i32, ptr %5104, i64 80
  store <4 x i32> zeroinitializer, ptr %5124, align 4, !tbaa !105
  %5125 = getelementptr inbounds i32, ptr %5104, i64 84
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5125, align 4, !tbaa !105
  %5126 = getelementptr inbounds i32, ptr %5104, i64 88
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5126, align 4, !tbaa !105
  %5127 = getelementptr inbounds i32, ptr %5104, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5127, align 4, !tbaa !105
  %5128 = getelementptr inbounds i32, ptr %5104, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5128, align 4, !tbaa !105
  %5129 = getelementptr inbounds i32, ptr %5104, i64 100
  store <4 x i32> zeroinitializer, ptr %5129, align 4, !tbaa !105
  %5130 = getelementptr inbounds i32, ptr %5104, i64 104
  store <4 x i32> zeroinitializer, ptr %5130, align 4, !tbaa !105
  %5131 = getelementptr inbounds i32, ptr %5104, i64 108
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5131, align 4, !tbaa !105
  %5132 = getelementptr inbounds i32, ptr %5104, i64 112
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5132, align 4, !tbaa !105
  %5133 = getelementptr inbounds i32, ptr %5104, i64 116
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5133, align 4, !tbaa !105
  %5134 = getelementptr inbounds i32, ptr %5104, i64 120
  store i32 0, ptr %5134, align 4, !tbaa !105
  %5135 = getelementptr inbounds i32, ptr %5104, i64 121
  store i32 0, ptr %5135, align 4, !tbaa !105
  %5136 = load i32, ptr %33, align 8, !tbaa !292
  %5137 = sext i32 %5136 to i64
  %5138 = getelementptr inbounds i32, ptr %5104, i64 %5137
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5138, align 4, !tbaa !105
  %5139 = getelementptr inbounds i32, ptr %5138, i64 4
  store <4 x i32> zeroinitializer, ptr %5139, align 4, !tbaa !105
  %5140 = getelementptr inbounds i32, ptr %5138, i64 8
  store <4 x i32> zeroinitializer, ptr %5140, align 4, !tbaa !105
  %5141 = getelementptr inbounds i32, ptr %5138, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5141, align 4, !tbaa !105
  %5142 = getelementptr inbounds i32, ptr %5138, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5142, align 4, !tbaa !105
  %5143 = getelementptr inbounds i32, ptr %5138, i64 20
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5143, align 4, !tbaa !105
  %5144 = getelementptr inbounds i32, ptr %5138, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 -1>, ptr %5144, align 4, !tbaa !105
  %5145 = getelementptr inbounds i32, ptr %5138, i64 28
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %5145, align 4, !tbaa !105
  %5146 = getelementptr inbounds i32, ptr %5138, i64 32
  store <4 x i32> zeroinitializer, ptr %5146, align 4, !tbaa !105
  %5147 = getelementptr inbounds i32, ptr %5138, i64 36
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %5147, align 4, !tbaa !105
  %5148 = getelementptr inbounds i32, ptr %5138, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %5148, align 4, !tbaa !105
  %5149 = getelementptr inbounds i32, ptr %5138, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %5149, align 4, !tbaa !105
  %5150 = getelementptr inbounds i32, ptr %5138, i64 48
  store <4 x i32> zeroinitializer, ptr %5150, align 4, !tbaa !105
  %5151 = getelementptr inbounds i32, ptr %5138, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5151, align 4, !tbaa !105
  %5152 = getelementptr inbounds i32, ptr %5138, i64 56
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5152, align 4, !tbaa !105
  %5153 = getelementptr inbounds i32, ptr %5138, i64 60
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5153, align 4, !tbaa !105
  %5154 = getelementptr inbounds i32, ptr %5138, i64 64
  store <4 x i32> zeroinitializer, ptr %5154, align 4, !tbaa !105
  %5155 = getelementptr inbounds i32, ptr %5138, i64 68
  store <4 x i32> zeroinitializer, ptr %5155, align 4, !tbaa !105
  %5156 = getelementptr inbounds i32, ptr %5138, i64 72
  store <4 x i32> zeroinitializer, ptr %5156, align 4, !tbaa !105
  %5157 = getelementptr inbounds i32, ptr %5138, i64 76
  store <4 x i32> zeroinitializer, ptr %5157, align 4, !tbaa !105
  %5158 = getelementptr inbounds i32, ptr %5138, i64 80
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5158, align 4, !tbaa !105
  %5159 = getelementptr inbounds i32, ptr %5138, i64 84
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5159, align 4, !tbaa !105
  %5160 = getelementptr inbounds i32, ptr %5138, i64 88
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5160, align 4, !tbaa !105
  %5161 = getelementptr inbounds i32, ptr %5138, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5161, align 4, !tbaa !105
  %5162 = getelementptr inbounds i32, ptr %5138, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %5162, align 4, !tbaa !105
  %5163 = getelementptr inbounds i32, ptr %5138, i64 100
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5163, align 4, !tbaa !105
  %5164 = getelementptr inbounds i32, ptr %5138, i64 104
  store <4 x i32> zeroinitializer, ptr %5164, align 4, !tbaa !105
  %5165 = getelementptr inbounds i32, ptr %5138, i64 108
  store <4 x i32> zeroinitializer, ptr %5165, align 4, !tbaa !105
  %5166 = getelementptr inbounds i32, ptr %5138, i64 112
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5166, align 4, !tbaa !105
  %5167 = getelementptr inbounds i32, ptr %5138, i64 116
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5167, align 4, !tbaa !105
  %5168 = getelementptr inbounds i32, ptr %5138, i64 120
  store i32 0, ptr %5168, align 4, !tbaa !105
  %5169 = getelementptr inbounds i32, ptr %5138, i64 121
  store i32 0, ptr %5169, align 4, !tbaa !105
  %5170 = load i32, ptr %33, align 8, !tbaa !292
  %5171 = sext i32 %5170 to i64
  %5172 = getelementptr inbounds i32, ptr %5138, i64 %5171
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5172, align 4, !tbaa !105
  %5173 = getelementptr inbounds i32, ptr %5172, i64 4
  store <4 x i32> zeroinitializer, ptr %5173, align 4, !tbaa !105
  %5174 = getelementptr inbounds i32, ptr %5172, i64 8
  store <4 x i32> zeroinitializer, ptr %5174, align 4, !tbaa !105
  %5175 = getelementptr inbounds i32, ptr %5172, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5175, align 4, !tbaa !105
  %5176 = getelementptr inbounds i32, ptr %5172, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5176, align 4, !tbaa !105
  %5177 = getelementptr inbounds i32, ptr %5172, i64 20
  store <4 x i32> zeroinitializer, ptr %5177, align 4, !tbaa !105
  %5178 = getelementptr inbounds i32, ptr %5172, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5178, align 4, !tbaa !105
  %5179 = getelementptr inbounds i32, ptr %5172, i64 28
  store <4 x i32> zeroinitializer, ptr %5179, align 4, !tbaa !105
  %5180 = getelementptr inbounds i32, ptr %5172, i64 32
  store <4 x i32> zeroinitializer, ptr %5180, align 4, !tbaa !105
  %5181 = getelementptr inbounds i32, ptr %5172, i64 36
  store <4 x i32> zeroinitializer, ptr %5181, align 4, !tbaa !105
  %5182 = getelementptr inbounds i32, ptr %5172, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5182, align 4, !tbaa !105
  %5183 = getelementptr inbounds i32, ptr %5172, i64 44
  store <4 x i32> zeroinitializer, ptr %5183, align 4, !tbaa !105
  %5184 = getelementptr inbounds i32, ptr %5172, i64 48
  store <4 x i32> zeroinitializer, ptr %5184, align 4, !tbaa !105
  %5185 = getelementptr inbounds i32, ptr %5172, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5185, align 4, !tbaa !105
  %5186 = getelementptr inbounds i32, ptr %5172, i64 56
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5186, align 4, !tbaa !105
  %5187 = getelementptr inbounds i32, ptr %5172, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5187, align 4, !tbaa !105
  %5188 = getelementptr inbounds i32, ptr %5172, i64 64
  store <4 x i32> zeroinitializer, ptr %5188, align 4, !tbaa !105
  %5189 = getelementptr inbounds i32, ptr %5172, i64 68
  store <4 x i32> zeroinitializer, ptr %5189, align 4, !tbaa !105
  %5190 = getelementptr inbounds i32, ptr %5172, i64 72
  store <4 x i32> zeroinitializer, ptr %5190, align 4, !tbaa !105
  %5191 = getelementptr inbounds i32, ptr %5172, i64 76
  store <4 x i32> zeroinitializer, ptr %5191, align 4, !tbaa !105
  %5192 = getelementptr inbounds i32, ptr %5172, i64 80
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5192, align 4, !tbaa !105
  %5193 = getelementptr inbounds i32, ptr %5172, i64 84
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5193, align 4, !tbaa !105
  %5194 = getelementptr inbounds i32, ptr %5172, i64 88
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %5194, align 4, !tbaa !105
  %5195 = getelementptr inbounds i32, ptr %5172, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5195, align 4, !tbaa !105
  %5196 = getelementptr inbounds i32, ptr %5172, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5196, align 4, !tbaa !105
  %5197 = getelementptr inbounds i32, ptr %5172, i64 100
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5197, align 4, !tbaa !105
  %5198 = getelementptr inbounds i32, ptr %5172, i64 104
  store <4 x i32> zeroinitializer, ptr %5198, align 4, !tbaa !105
  %5199 = getelementptr inbounds i32, ptr %5172, i64 108
  store <4 x i32> zeroinitializer, ptr %5199, align 4, !tbaa !105
  %5200 = getelementptr inbounds i32, ptr %5172, i64 112
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5200, align 4, !tbaa !105
  %5201 = getelementptr inbounds i32, ptr %5172, i64 116
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5201, align 4, !tbaa !105
  %5202 = getelementptr inbounds i32, ptr %5172, i64 120
  store i32 0, ptr %5202, align 4, !tbaa !105
  %5203 = getelementptr inbounds i32, ptr %5172, i64 121
  store i32 0, ptr %5203, align 4, !tbaa !105
  %5204 = load i32, ptr %33, align 8, !tbaa !292
  %5205 = sext i32 %5204 to i64
  %5206 = getelementptr inbounds i32, ptr %5172, i64 %5205
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5206, align 4, !tbaa !105
  %5207 = getelementptr inbounds i32, ptr %5206, i64 4
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5207, align 4, !tbaa !105
  %5208 = getelementptr inbounds i32, ptr %5206, i64 8
  store <4 x i32> zeroinitializer, ptr %5208, align 4, !tbaa !105
  %5209 = getelementptr inbounds i32, ptr %5206, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5209, align 4, !tbaa !105
  %5210 = getelementptr inbounds i32, ptr %5206, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5210, align 4, !tbaa !105
  %5211 = getelementptr inbounds i32, ptr %5206, i64 20
  store <4 x i32> zeroinitializer, ptr %5211, align 4, !tbaa !105
  %5212 = getelementptr inbounds i32, ptr %5206, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5212, align 4, !tbaa !105
  %5213 = getelementptr inbounds i32, ptr %5206, i64 28
  store <4 x i32> zeroinitializer, ptr %5213, align 4, !tbaa !105
  %5214 = getelementptr inbounds i32, ptr %5206, i64 32
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5214, align 4, !tbaa !105
  %5215 = getelementptr inbounds i32, ptr %5206, i64 36
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5215, align 4, !tbaa !105
  %5216 = getelementptr inbounds i32, ptr %5206, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5216, align 4, !tbaa !105
  %5217 = getelementptr inbounds i32, ptr %5206, i64 44
  store <4 x i32> zeroinitializer, ptr %5217, align 4, !tbaa !105
  %5218 = getelementptr inbounds i32, ptr %5206, i64 48
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %5218, align 4, !tbaa !105
  %5219 = getelementptr inbounds i32, ptr %5206, i64 52
  store <4 x i32> zeroinitializer, ptr %5219, align 4, !tbaa !105
  %5220 = getelementptr inbounds i32, ptr %5206, i64 56
  store <4 x i32> zeroinitializer, ptr %5220, align 4, !tbaa !105
  %5221 = getelementptr inbounds i32, ptr %5206, i64 60
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5221, align 4, !tbaa !105
  %5222 = getelementptr inbounds i32, ptr %5206, i64 64
  store <4 x i32> zeroinitializer, ptr %5222, align 4, !tbaa !105
  %5223 = getelementptr inbounds i32, ptr %5206, i64 68
  store <4 x i32> zeroinitializer, ptr %5223, align 4, !tbaa !105
  %5224 = getelementptr inbounds i32, ptr %5206, i64 72
  store <4 x i32> zeroinitializer, ptr %5224, align 4, !tbaa !105
  %5225 = getelementptr inbounds i32, ptr %5206, i64 76
  store <4 x i32> zeroinitializer, ptr %5225, align 4, !tbaa !105
  %5226 = getelementptr inbounds i32, ptr %5206, i64 80
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5226, align 4, !tbaa !105
  %5227 = getelementptr inbounds i32, ptr %5206, i64 84
  store <4 x i32> zeroinitializer, ptr %5227, align 4, !tbaa !105
  %5228 = getelementptr inbounds i32, ptr %5206, i64 88
  store <4 x i32> zeroinitializer, ptr %5228, align 4, !tbaa !105
  %5229 = getelementptr inbounds i32, ptr %5206, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5229, align 4, !tbaa !105
  %5230 = getelementptr inbounds i32, ptr %5206, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5230, align 4, !tbaa !105
  %5231 = getelementptr inbounds i32, ptr %5206, i64 100
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5231, align 4, !tbaa !105
  %5232 = getelementptr inbounds i32, ptr %5206, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %5232, align 4, !tbaa !105
  %5233 = getelementptr inbounds i32, ptr %5206, i64 108
  store <4 x i32> zeroinitializer, ptr %5233, align 4, !tbaa !105
  %5234 = getelementptr inbounds i32, ptr %5206, i64 112
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5234, align 4, !tbaa !105
  %5235 = getelementptr inbounds i32, ptr %5206, i64 116
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5235, align 4, !tbaa !105
  %5236 = getelementptr inbounds i32, ptr %5206, i64 120
  store i32 0, ptr %5236, align 4, !tbaa !105
  %5237 = getelementptr inbounds i32, ptr %5206, i64 121
  store i32 0, ptr %5237, align 4, !tbaa !105
  %5238 = load i32, ptr %33, align 8, !tbaa !292
  %5239 = sext i32 %5238 to i64
  %5240 = getelementptr inbounds i32, ptr %5206, i64 %5239
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5240, align 4, !tbaa !105
  %5241 = getelementptr inbounds i32, ptr %5240, i64 4
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5241, align 4, !tbaa !105
  %5242 = getelementptr inbounds i32, ptr %5240, i64 8
  store <4 x i32> zeroinitializer, ptr %5242, align 4, !tbaa !105
  %5243 = getelementptr inbounds i32, ptr %5240, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5243, align 4, !tbaa !105
  %5244 = getelementptr inbounds i32, ptr %5240, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5244, align 4, !tbaa !105
  %5245 = getelementptr inbounds i32, ptr %5240, i64 20
  store <4 x i32> zeroinitializer, ptr %5245, align 4, !tbaa !105
  %5246 = getelementptr inbounds i32, ptr %5240, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5246, align 4, !tbaa !105
  %5247 = getelementptr inbounds i32, ptr %5240, i64 28
  store <4 x i32> zeroinitializer, ptr %5247, align 4, !tbaa !105
  %5248 = getelementptr inbounds i32, ptr %5240, i64 32
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5248, align 4, !tbaa !105
  %5249 = getelementptr inbounds i32, ptr %5240, i64 36
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5249, align 4, !tbaa !105
  %5250 = getelementptr inbounds i32, ptr %5240, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5250, align 4, !tbaa !105
  %5251 = getelementptr inbounds i32, ptr %5240, i64 44
  store <4 x i32> zeroinitializer, ptr %5251, align 4, !tbaa !105
  %5252 = getelementptr inbounds i32, ptr %5240, i64 48
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5252, align 4, !tbaa !105
  %5253 = getelementptr inbounds i32, ptr %5240, i64 52
  store <4 x i32> zeroinitializer, ptr %5253, align 4, !tbaa !105
  %5254 = getelementptr inbounds i32, ptr %5240, i64 56
  store <4 x i32> zeroinitializer, ptr %5254, align 4, !tbaa !105
  %5255 = getelementptr inbounds i32, ptr %5240, i64 60
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5255, align 4, !tbaa !105
  %5256 = getelementptr inbounds i32, ptr %5240, i64 64
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5256, align 4, !tbaa !105
  %5257 = getelementptr inbounds i32, ptr %5240, i64 68
  store <4 x i32> zeroinitializer, ptr %5257, align 4, !tbaa !105
  %5258 = getelementptr inbounds i32, ptr %5240, i64 72
  store <4 x i32> zeroinitializer, ptr %5258, align 4, !tbaa !105
  %5259 = getelementptr inbounds i32, ptr %5240, i64 76
  store <4 x i32> zeroinitializer, ptr %5259, align 4, !tbaa !105
  %5260 = getelementptr inbounds i32, ptr %5240, i64 80
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5260, align 4, !tbaa !105
  %5261 = getelementptr inbounds i32, ptr %5240, i64 84
  store <4 x i32> zeroinitializer, ptr %5261, align 4, !tbaa !105
  %5262 = getelementptr inbounds i32, ptr %5240, i64 88
  store <4 x i32> zeroinitializer, ptr %5262, align 4, !tbaa !105
  %5263 = getelementptr inbounds i32, ptr %5240, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5263, align 4, !tbaa !105
  %5264 = getelementptr inbounds i32, ptr %5240, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5264, align 4, !tbaa !105
  %5265 = getelementptr inbounds i32, ptr %5240, i64 100
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5265, align 4, !tbaa !105
  %5266 = getelementptr inbounds i32, ptr %5240, i64 104
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5266, align 4, !tbaa !105
  %5267 = getelementptr inbounds i32, ptr %5240, i64 108
  store <4 x i32> zeroinitializer, ptr %5267, align 4, !tbaa !105
  %5268 = getelementptr inbounds i32, ptr %5240, i64 112
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5268, align 4, !tbaa !105
  %5269 = getelementptr inbounds i32, ptr %5240, i64 116
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5269, align 4, !tbaa !105
  %5270 = getelementptr inbounds i32, ptr %5240, i64 120
  store i32 0, ptr %5270, align 4, !tbaa !105
  %5271 = getelementptr inbounds i32, ptr %5240, i64 121
  store i32 0, ptr %5271, align 4, !tbaa !105
  %5272 = load i32, ptr %33, align 8, !tbaa !292
  %5273 = sext i32 %5272 to i64
  %5274 = getelementptr inbounds i32, ptr %5240, i64 %5273
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5274, align 4, !tbaa !105
  %5275 = getelementptr inbounds i32, ptr %5274, i64 4
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5275, align 4, !tbaa !105
  %5276 = getelementptr inbounds i32, ptr %5274, i64 8
  store <4 x i32> zeroinitializer, ptr %5276, align 4, !tbaa !105
  %5277 = getelementptr inbounds i32, ptr %5274, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5277, align 4, !tbaa !105
  %5278 = getelementptr inbounds i32, ptr %5274, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5278, align 4, !tbaa !105
  %5279 = getelementptr inbounds i32, ptr %5274, i64 20
  store <4 x i32> zeroinitializer, ptr %5279, align 4, !tbaa !105
  %5280 = getelementptr inbounds i32, ptr %5274, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5280, align 4, !tbaa !105
  %5281 = getelementptr inbounds i32, ptr %5274, i64 28
  store <4 x i32> zeroinitializer, ptr %5281, align 4, !tbaa !105
  %5282 = getelementptr inbounds i32, ptr %5274, i64 32
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5282, align 4, !tbaa !105
  %5283 = getelementptr inbounds i32, ptr %5274, i64 36
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5283, align 4, !tbaa !105
  %5284 = getelementptr inbounds i32, ptr %5274, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5284, align 4, !tbaa !105
  %5285 = getelementptr inbounds i32, ptr %5274, i64 44
  store <4 x i32> zeroinitializer, ptr %5285, align 4, !tbaa !105
  %5286 = getelementptr inbounds i32, ptr %5274, i64 48
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5286, align 4, !tbaa !105
  %5287 = getelementptr inbounds i32, ptr %5274, i64 52
  store <4 x i32> zeroinitializer, ptr %5287, align 4, !tbaa !105
  %5288 = getelementptr inbounds i32, ptr %5274, i64 56
  store <4 x i32> zeroinitializer, ptr %5288, align 4, !tbaa !105
  %5289 = getelementptr inbounds i32, ptr %5274, i64 60
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5289, align 4, !tbaa !105
  %5290 = getelementptr inbounds i32, ptr %5274, i64 64
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5290, align 4, !tbaa !105
  %5291 = getelementptr inbounds i32, ptr %5274, i64 68
  store <4 x i32> zeroinitializer, ptr %5291, align 4, !tbaa !105
  %5292 = getelementptr inbounds i32, ptr %5274, i64 72
  store <4 x i32> zeroinitializer, ptr %5292, align 4, !tbaa !105
  %5293 = getelementptr inbounds i32, ptr %5274, i64 76
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5293, align 4, !tbaa !105
  %5294 = getelementptr inbounds i32, ptr %5274, i64 80
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5294, align 4, !tbaa !105
  %5295 = getelementptr inbounds i32, ptr %5274, i64 84
  store <4 x i32> zeroinitializer, ptr %5295, align 4, !tbaa !105
  %5296 = getelementptr inbounds i32, ptr %5274, i64 88
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5296, align 4, !tbaa !105
  %5297 = getelementptr inbounds i32, ptr %5274, i64 92
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %5297, align 4, !tbaa !105
  %5298 = getelementptr inbounds i32, ptr %5274, i64 96
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5298, align 4, !tbaa !105
  %5299 = getelementptr inbounds i32, ptr %5274, i64 100
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5299, align 4, !tbaa !105
  %5300 = getelementptr inbounds i32, ptr %5274, i64 104
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5300, align 4, !tbaa !105
  %5301 = getelementptr inbounds i32, ptr %5274, i64 108
  store <4 x i32> zeroinitializer, ptr %5301, align 4, !tbaa !105
  %5302 = getelementptr inbounds i32, ptr %5274, i64 112
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5302, align 4, !tbaa !105
  %5303 = getelementptr inbounds i32, ptr %5274, i64 116
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5303, align 4, !tbaa !105
  %5304 = getelementptr inbounds i32, ptr %5274, i64 120
  store i32 0, ptr %5304, align 4, !tbaa !105
  %5305 = getelementptr inbounds i32, ptr %5274, i64 121
  store i32 0, ptr %5305, align 4, !tbaa !105
  %5306 = load i32, ptr %33, align 8, !tbaa !292
  %5307 = sext i32 %5306 to i64
  %5308 = getelementptr inbounds i32, ptr %5274, i64 %5307
  %5309 = add nsw i64 %5307, %5273
  %5310 = add nsw i64 %5309, %5239
  %5311 = add nsw i64 %5310, %5205
  %5312 = add nsw i64 %5311, %5171
  %5313 = add nsw i64 %5312, %5137
  %5314 = add nsw i64 %5313, %5103
  %5315 = add i64 %5314, %5069
  %5316 = add i64 %5315, %5035
  %5317 = add i64 %5316, %5001
  %5318 = add i64 %5317, %4967
  %5319 = add i64 %5318, %2907
  %5320 = shl i64 %5319, 2
  %5321 = add i64 %5320, 980
  %5322 = getelementptr i8, ptr %4962, i64 %5321
  %5323 = icmp uge ptr %5308, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342)
  %5324 = icmp ule ptr %5322, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220)
  %5325 = or i1 %5323, %5324
  br i1 %5325, label %5326, label %5356

5326:                                             ; preds = %4961
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5308, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5327 = getelementptr inbounds i32, ptr %5308, i64 4
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5327, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5328 = getelementptr inbounds i32, ptr %5308, i64 8
  store <4 x i32> zeroinitializer, ptr %5328, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5329 = getelementptr inbounds i32, ptr %5308, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5329, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5330 = getelementptr inbounds i32, ptr %5308, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5330, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5331 = getelementptr inbounds i32, ptr %5308, i64 20
  store <4 x i32> zeroinitializer, ptr %5331, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5332 = getelementptr inbounds i32, ptr %5308, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5332, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5333 = getelementptr inbounds i32, ptr %5308, i64 28
  store <4 x i32> zeroinitializer, ptr %5333, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5334 = getelementptr inbounds i32, ptr %5308, i64 32
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5334, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5335 = getelementptr inbounds i32, ptr %5308, i64 36
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5335, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5336 = getelementptr inbounds i32, ptr %5308, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %5336, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5337 = getelementptr inbounds i32, ptr %5308, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5337, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5338 = getelementptr inbounds i32, ptr %5308, i64 48
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5338, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5339 = getelementptr inbounds i32, ptr %5308, i64 52
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5339, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5340 = getelementptr inbounds i32, ptr %5308, i64 56
  store <4 x i32> zeroinitializer, ptr %5340, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5341 = getelementptr inbounds i32, ptr %5308, i64 60
  store <4 x i32> zeroinitializer, ptr %5341, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5342 = getelementptr inbounds i32, ptr %5308, i64 64
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5342, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5343 = getelementptr inbounds i32, ptr %5308, i64 68
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %5343, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5344 = getelementptr inbounds i32, ptr %5308, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 0>, ptr %5344, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5345 = getelementptr inbounds i32, ptr %5308, i64 76
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5345, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5346 = getelementptr inbounds i32, ptr %5308, i64 80
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5346, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5347 = getelementptr inbounds i32, ptr %5308, i64 84
  store <4 x i32> zeroinitializer, ptr %5347, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5348 = getelementptr inbounds i32, ptr %5308, i64 88
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5348, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5349 = getelementptr inbounds i32, ptr %5308, i64 92
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %5349, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5350 = getelementptr inbounds i32, ptr %5308, i64 96
  store <4 x i32> zeroinitializer, ptr %5350, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5351 = getelementptr inbounds i32, ptr %5308, i64 100
  store <4 x i32> zeroinitializer, ptr %5351, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5352 = getelementptr inbounds i32, ptr %5308, i64 104
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5352, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5353 = getelementptr inbounds i32, ptr %5308, i64 108
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5353, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5354 = getelementptr inbounds i32, ptr %5308, i64 112
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5354, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  %5355 = getelementptr inbounds i32, ptr %5308, i64 116
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5355, align 4, !tbaa !105, !alias.scope !769, !noalias !772
  br label %5356

5356:                                             ; preds = %4961, %5326
  %5357 = phi i64 [ 0, %4961 ], [ 120, %5326 ]
  br label %5358

5358:                                             ; preds = %5358, %5356
  %5359 = phi i64 [ %5366, %5358 ], [ %5357, %5356 ]
  %5360 = phi i64 [ %5367, %5358 ], [ 0, %5356 ]
  %5361 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %5359
  %5362 = load i8, ptr %5361, align 1, !tbaa !46
  %5363 = icmp eq i8 %5362, 88
  %5364 = sext i1 %5363 to i32
  %5365 = getelementptr inbounds i32, ptr %5308, i64 %5359
  store i32 %5364, ptr %5365, align 4, !tbaa !105
  %5366 = add nuw nsw i64 %5359, 1
  %5367 = add i64 %5360, 1
  %5368 = icmp eq i64 %5367, 2
  br i1 %5368, label %5369, label %5358, !llvm.loop !774

5369:                                             ; preds = %5358
  br i1 %5325, label %5397, label %5370

5370:                                             ; preds = %5369, %5370
  %5371 = phi i64 [ %5395, %5370 ], [ %5366, %5369 ]
  %5372 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %5371
  %5373 = load i8, ptr %5372, align 1, !tbaa !46
  %5374 = icmp eq i8 %5373, 88
  %5375 = sext i1 %5374 to i32
  %5376 = getelementptr inbounds i32, ptr %5308, i64 %5371
  store i32 %5375, ptr %5376, align 4, !tbaa !105
  %5377 = add nuw nsw i64 %5371, 1
  %5378 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %5377
  %5379 = load i8, ptr %5378, align 1, !tbaa !46
  %5380 = icmp eq i8 %5379, 88
  %5381 = sext i1 %5380 to i32
  %5382 = getelementptr inbounds i32, ptr %5308, i64 %5377
  store i32 %5381, ptr %5382, align 4, !tbaa !105
  %5383 = add nuw nsw i64 %5371, 2
  %5384 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %5383
  %5385 = load i8, ptr %5384, align 1, !tbaa !46
  %5386 = icmp eq i8 %5385, 88
  %5387 = sext i1 %5386 to i32
  %5388 = getelementptr inbounds i32, ptr %5308, i64 %5383
  store i32 %5387, ptr %5388, align 4, !tbaa !105
  %5389 = add nuw nsw i64 %5371, 3
  %5390 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1220), i64 %5389
  %5391 = load i8, ptr %5390, align 1, !tbaa !46
  %5392 = icmp eq i8 %5391, 88
  %5393 = sext i1 %5392 to i32
  %5394 = getelementptr inbounds i32, ptr %5308, i64 %5389
  store i32 %5393, ptr %5394, align 4, !tbaa !105
  %5395 = add nuw nsw i64 %5371, 4
  %5396 = icmp eq i64 %5395, 122
  br i1 %5396, label %5397, label %5370, !llvm.loop !775

5397:                                             ; preds = %5370, %5369
  %5398 = load i32, ptr %33, align 8, !tbaa !292
  %5399 = sext i32 %5398 to i64
  %5400 = getelementptr inbounds i32, ptr %5308, i64 %5399
  %5401 = add nsw i64 %5399, %5307
  %5402 = add nsw i64 %5401, %5273
  %5403 = add nsw i64 %5402, %5239
  %5404 = add nsw i64 %5403, %5205
  %5405 = add nsw i64 %5404, %5171
  %5406 = add nsw i64 %5405, %5137
  %5407 = add i64 %5406, %5103
  %5408 = add i64 %5407, %5069
  %5409 = add i64 %5408, %5035
  %5410 = add i64 %5409, %5001
  %5411 = add i64 %5410, %4967
  %5412 = add i64 %5411, %2907
  %5413 = shl i64 %5412, 2
  %5414 = add i64 %5413, 980
  %5415 = getelementptr i8, ptr %4962, i64 %5414
  %5416 = icmp uge ptr %5400, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464)
  %5417 = icmp ule ptr %5415, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342)
  %5418 = or i1 %5416, %5417
  br i1 %5418, label %5419, label %5449

5419:                                             ; preds = %5397
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5400, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5420 = getelementptr inbounds i32, ptr %5400, i64 4
  store <4 x i32> zeroinitializer, ptr %5420, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5421 = getelementptr inbounds i32, ptr %5400, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5421, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5422 = getelementptr inbounds i32, ptr %5400, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5422, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5423 = getelementptr inbounds i32, ptr %5400, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5423, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5424 = getelementptr inbounds i32, ptr %5400, i64 20
  store <4 x i32> zeroinitializer, ptr %5424, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5425 = getelementptr inbounds i32, ptr %5400, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5425, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5426 = getelementptr inbounds i32, ptr %5400, i64 28
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5426, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5427 = getelementptr inbounds i32, ptr %5400, i64 32
  store <4 x i32> zeroinitializer, ptr %5427, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5428 = getelementptr inbounds i32, ptr %5400, i64 36
  store <4 x i32> zeroinitializer, ptr %5428, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5429 = getelementptr inbounds i32, ptr %5400, i64 40
  store <4 x i32> zeroinitializer, ptr %5429, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5430 = getelementptr inbounds i32, ptr %5400, i64 44
  store <4 x i32> zeroinitializer, ptr %5430, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5431 = getelementptr inbounds i32, ptr %5400, i64 48
  store <4 x i32> zeroinitializer, ptr %5431, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5432 = getelementptr inbounds i32, ptr %5400, i64 52
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5432, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5433 = getelementptr inbounds i32, ptr %5400, i64 56
  store <4 x i32> zeroinitializer, ptr %5433, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5434 = getelementptr inbounds i32, ptr %5400, i64 60
  store <4 x i32> zeroinitializer, ptr %5434, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5435 = getelementptr inbounds i32, ptr %5400, i64 64
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5435, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5436 = getelementptr inbounds i32, ptr %5400, i64 68
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5436, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5437 = getelementptr inbounds i32, ptr %5400, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5437, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5438 = getelementptr inbounds i32, ptr %5400, i64 76
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5438, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5439 = getelementptr inbounds i32, ptr %5400, i64 80
  store <4 x i32> zeroinitializer, ptr %5439, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5440 = getelementptr inbounds i32, ptr %5400, i64 84
  store <4 x i32> zeroinitializer, ptr %5440, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5441 = getelementptr inbounds i32, ptr %5400, i64 88
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5441, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5442 = getelementptr inbounds i32, ptr %5400, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5442, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5443 = getelementptr inbounds i32, ptr %5400, i64 96
  store <4 x i32> zeroinitializer, ptr %5443, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5444 = getelementptr inbounds i32, ptr %5400, i64 100
  store <4 x i32> zeroinitializer, ptr %5444, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5445 = getelementptr inbounds i32, ptr %5400, i64 104
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5445, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5446 = getelementptr inbounds i32, ptr %5400, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5446, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5447 = getelementptr inbounds i32, ptr %5400, i64 112
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5447, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  %5448 = getelementptr inbounds i32, ptr %5400, i64 116
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5448, align 4, !tbaa !105, !alias.scope !776, !noalias !779
  br label %5449

5449:                                             ; preds = %5397, %5419
  %5450 = phi i64 [ 0, %5397 ], [ 120, %5419 ]
  br label %5451

5451:                                             ; preds = %5451, %5449
  %5452 = phi i64 [ %5459, %5451 ], [ %5450, %5449 ]
  %5453 = phi i64 [ %5460, %5451 ], [ 0, %5449 ]
  %5454 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %5452
  %5455 = load i8, ptr %5454, align 1, !tbaa !46
  %5456 = icmp eq i8 %5455, 88
  %5457 = sext i1 %5456 to i32
  %5458 = getelementptr inbounds i32, ptr %5400, i64 %5452
  store i32 %5457, ptr %5458, align 4, !tbaa !105
  %5459 = add nuw nsw i64 %5452, 1
  %5460 = add i64 %5453, 1
  %5461 = icmp eq i64 %5460, 2
  br i1 %5461, label %5462, label %5451, !llvm.loop !781

5462:                                             ; preds = %5451
  br i1 %5418, label %5490, label %5463

5463:                                             ; preds = %5462, %5463
  %5464 = phi i64 [ %5488, %5463 ], [ %5459, %5462 ]
  %5465 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %5464
  %5466 = load i8, ptr %5465, align 1, !tbaa !46
  %5467 = icmp eq i8 %5466, 88
  %5468 = sext i1 %5467 to i32
  %5469 = getelementptr inbounds i32, ptr %5400, i64 %5464
  store i32 %5468, ptr %5469, align 4, !tbaa !105
  %5470 = add nuw nsw i64 %5464, 1
  %5471 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %5470
  %5472 = load i8, ptr %5471, align 1, !tbaa !46
  %5473 = icmp eq i8 %5472, 88
  %5474 = sext i1 %5473 to i32
  %5475 = getelementptr inbounds i32, ptr %5400, i64 %5470
  store i32 %5474, ptr %5475, align 4, !tbaa !105
  %5476 = add nuw nsw i64 %5464, 2
  %5477 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %5476
  %5478 = load i8, ptr %5477, align 1, !tbaa !46
  %5479 = icmp eq i8 %5478, 88
  %5480 = sext i1 %5479 to i32
  %5481 = getelementptr inbounds i32, ptr %5400, i64 %5476
  store i32 %5480, ptr %5481, align 4, !tbaa !105
  %5482 = add nuw nsw i64 %5464, 3
  %5483 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1342), i64 %5482
  %5484 = load i8, ptr %5483, align 1, !tbaa !46
  %5485 = icmp eq i8 %5484, 88
  %5486 = sext i1 %5485 to i32
  %5487 = getelementptr inbounds i32, ptr %5400, i64 %5482
  store i32 %5486, ptr %5487, align 4, !tbaa !105
  %5488 = add nuw nsw i64 %5464, 4
  %5489 = icmp eq i64 %5488, 122
  br i1 %5489, label %5490, label %5463, !llvm.loop !782

5490:                                             ; preds = %5463, %5462
  %5491 = load i32, ptr %33, align 8, !tbaa !292
  %5492 = sext i32 %5491 to i64
  %5493 = getelementptr inbounds i32, ptr %5400, i64 %5492
  %5494 = add nsw i64 %5492, %5399
  %5495 = add nsw i64 %5494, %5307
  %5496 = add nsw i64 %5495, %5273
  %5497 = add nsw i64 %5496, %5239
  %5498 = add nsw i64 %5497, %5205
  %5499 = add nsw i64 %5498, %5171
  %5500 = add i64 %5499, %5137
  %5501 = add i64 %5500, %5103
  %5502 = add i64 %5501, %5069
  %5503 = add i64 %5502, %5035
  %5504 = add i64 %5503, %5001
  %5505 = add i64 %5504, %4967
  %5506 = add i64 %5505, %2907
  %5507 = shl i64 %5506, 2
  %5508 = add i64 %5507, 980
  %5509 = getelementptr i8, ptr %4962, i64 %5508
  %5510 = icmp uge ptr %5493, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586)
  %5511 = icmp ule ptr %5509, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464)
  %5512 = or i1 %5510, %5511
  br i1 %5512, label %5513, label %5543

5513:                                             ; preds = %5490
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5493, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5514 = getelementptr inbounds i32, ptr %5493, i64 4
  store <4 x i32> zeroinitializer, ptr %5514, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5515 = getelementptr inbounds i32, ptr %5493, i64 8
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5515, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5516 = getelementptr inbounds i32, ptr %5493, i64 12
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5516, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5517 = getelementptr inbounds i32, ptr %5493, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5517, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5518 = getelementptr inbounds i32, ptr %5493, i64 20
  store <4 x i32> zeroinitializer, ptr %5518, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5519 = getelementptr inbounds i32, ptr %5493, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5519, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5520 = getelementptr inbounds i32, ptr %5493, i64 28
  store <4 x i32> zeroinitializer, ptr %5520, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5521 = getelementptr inbounds i32, ptr %5493, i64 32
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5521, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5522 = getelementptr inbounds i32, ptr %5493, i64 36
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5522, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5523 = getelementptr inbounds i32, ptr %5493, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %5523, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5524 = getelementptr inbounds i32, ptr %5493, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5524, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5525 = getelementptr inbounds i32, ptr %5493, i64 48
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5525, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5526 = getelementptr inbounds i32, ptr %5493, i64 52
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5526, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5527 = getelementptr inbounds i32, ptr %5493, i64 56
  store <4 x i32> zeroinitializer, ptr %5527, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5528 = getelementptr inbounds i32, ptr %5493, i64 60
  store <4 x i32> zeroinitializer, ptr %5528, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5529 = getelementptr inbounds i32, ptr %5493, i64 64
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5529, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5530 = getelementptr inbounds i32, ptr %5493, i64 68
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5530, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5531 = getelementptr inbounds i32, ptr %5493, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5531, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5532 = getelementptr inbounds i32, ptr %5493, i64 76
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5532, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5533 = getelementptr inbounds i32, ptr %5493, i64 80
  store <4 x i32> zeroinitializer, ptr %5533, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5534 = getelementptr inbounds i32, ptr %5493, i64 84
  store <4 x i32> zeroinitializer, ptr %5534, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5535 = getelementptr inbounds i32, ptr %5493, i64 88
  store <4 x i32> zeroinitializer, ptr %5535, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5536 = getelementptr inbounds i32, ptr %5493, i64 92
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5536, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5537 = getelementptr inbounds i32, ptr %5493, i64 96
  store <4 x i32> zeroinitializer, ptr %5537, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5538 = getelementptr inbounds i32, ptr %5493, i64 100
  store <4 x i32> zeroinitializer, ptr %5538, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5539 = getelementptr inbounds i32, ptr %5493, i64 104
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5539, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5540 = getelementptr inbounds i32, ptr %5493, i64 108
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5540, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5541 = getelementptr inbounds i32, ptr %5493, i64 112
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5541, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  %5542 = getelementptr inbounds i32, ptr %5493, i64 116
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5542, align 4, !tbaa !105, !alias.scope !783, !noalias !786
  br label %5543

5543:                                             ; preds = %5490, %5513
  %5544 = phi i64 [ 0, %5490 ], [ 120, %5513 ]
  br label %5545

5545:                                             ; preds = %5545, %5543
  %5546 = phi i64 [ %5553, %5545 ], [ %5544, %5543 ]
  %5547 = phi i64 [ %5554, %5545 ], [ 0, %5543 ]
  %5548 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %5546
  %5549 = load i8, ptr %5548, align 1, !tbaa !46
  %5550 = icmp eq i8 %5549, 88
  %5551 = sext i1 %5550 to i32
  %5552 = getelementptr inbounds i32, ptr %5493, i64 %5546
  store i32 %5551, ptr %5552, align 4, !tbaa !105
  %5553 = add nuw nsw i64 %5546, 1
  %5554 = add i64 %5547, 1
  %5555 = icmp eq i64 %5554, 2
  br i1 %5555, label %5556, label %5545, !llvm.loop !788

5556:                                             ; preds = %5545
  br i1 %5512, label %5584, label %5557

5557:                                             ; preds = %5556, %5557
  %5558 = phi i64 [ %5582, %5557 ], [ %5553, %5556 ]
  %5559 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %5558
  %5560 = load i8, ptr %5559, align 1, !tbaa !46
  %5561 = icmp eq i8 %5560, 88
  %5562 = sext i1 %5561 to i32
  %5563 = getelementptr inbounds i32, ptr %5493, i64 %5558
  store i32 %5562, ptr %5563, align 4, !tbaa !105
  %5564 = add nuw nsw i64 %5558, 1
  %5565 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %5564
  %5566 = load i8, ptr %5565, align 1, !tbaa !46
  %5567 = icmp eq i8 %5566, 88
  %5568 = sext i1 %5567 to i32
  %5569 = getelementptr inbounds i32, ptr %5493, i64 %5564
  store i32 %5568, ptr %5569, align 4, !tbaa !105
  %5570 = add nuw nsw i64 %5558, 2
  %5571 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %5570
  %5572 = load i8, ptr %5571, align 1, !tbaa !46
  %5573 = icmp eq i8 %5572, 88
  %5574 = sext i1 %5573 to i32
  %5575 = getelementptr inbounds i32, ptr %5493, i64 %5570
  store i32 %5574, ptr %5575, align 4, !tbaa !105
  %5576 = add nuw nsw i64 %5558, 3
  %5577 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1464), i64 %5576
  %5578 = load i8, ptr %5577, align 1, !tbaa !46
  %5579 = icmp eq i8 %5578, 88
  %5580 = sext i1 %5579 to i32
  %5581 = getelementptr inbounds i32, ptr %5493, i64 %5576
  store i32 %5580, ptr %5581, align 4, !tbaa !105
  %5582 = add nuw nsw i64 %5558, 4
  %5583 = icmp eq i64 %5582, 122
  br i1 %5583, label %5584, label %5557, !llvm.loop !789

5584:                                             ; preds = %5557, %5556
  %5585 = load i32, ptr %33, align 8, !tbaa !292
  %5586 = sext i32 %5585 to i64
  %5587 = getelementptr inbounds i32, ptr %5493, i64 %5586
  %5588 = add nsw i64 %5586, %5492
  %5589 = add nsw i64 %5588, %5399
  %5590 = add nsw i64 %5589, %5307
  %5591 = add nsw i64 %5590, %5273
  %5592 = add nsw i64 %5591, %5239
  %5593 = add nsw i64 %5592, %5205
  %5594 = add i64 %5593, %5171
  %5595 = add i64 %5594, %5137
  %5596 = add i64 %5595, %5103
  %5597 = add i64 %5596, %5069
  %5598 = add i64 %5597, %5035
  %5599 = add i64 %5598, %5001
  %5600 = add i64 %5599, %4967
  %5601 = add i64 %5600, %2907
  %5602 = shl i64 %5601, 2
  %5603 = add i64 %5602, 980
  %5604 = getelementptr i8, ptr %4962, i64 %5603
  %5605 = icmp uge ptr %5587, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708)
  %5606 = icmp ule ptr %5604, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586)
  %5607 = or i1 %5605, %5606
  br i1 %5607, label %5608, label %5638

5608:                                             ; preds = %5584
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5587, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5609 = getelementptr inbounds i32, ptr %5587, i64 4
  store <4 x i32> zeroinitializer, ptr %5609, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5610 = getelementptr inbounds i32, ptr %5587, i64 8
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5610, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5611 = getelementptr inbounds i32, ptr %5587, i64 12
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5611, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5612 = getelementptr inbounds i32, ptr %5587, i64 16
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5612, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5613 = getelementptr inbounds i32, ptr %5587, i64 20
  store <4 x i32> zeroinitializer, ptr %5613, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5614 = getelementptr inbounds i32, ptr %5587, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5614, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5615 = getelementptr inbounds i32, ptr %5587, i64 28
  store <4 x i32> zeroinitializer, ptr %5615, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5616 = getelementptr inbounds i32, ptr %5587, i64 32
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5616, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5617 = getelementptr inbounds i32, ptr %5587, i64 36
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5617, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5618 = getelementptr inbounds i32, ptr %5587, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5618, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5619 = getelementptr inbounds i32, ptr %5587, i64 44
  store <4 x i32> zeroinitializer, ptr %5619, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5620 = getelementptr inbounds i32, ptr %5587, i64 48
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5620, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5621 = getelementptr inbounds i32, ptr %5587, i64 52
  store <4 x i32> zeroinitializer, ptr %5621, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5622 = getelementptr inbounds i32, ptr %5587, i64 56
  store <4 x i32> zeroinitializer, ptr %5622, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5623 = getelementptr inbounds i32, ptr %5587, i64 60
  store <4 x i32> zeroinitializer, ptr %5623, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5624 = getelementptr inbounds i32, ptr %5587, i64 64
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5624, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5625 = getelementptr inbounds i32, ptr %5587, i64 68
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5625, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5626 = getelementptr inbounds i32, ptr %5587, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5626, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5627 = getelementptr inbounds i32, ptr %5587, i64 76
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5627, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5628 = getelementptr inbounds i32, ptr %5587, i64 80
  store <4 x i32> zeroinitializer, ptr %5628, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5629 = getelementptr inbounds i32, ptr %5587, i64 84
  store <4 x i32> zeroinitializer, ptr %5629, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5630 = getelementptr inbounds i32, ptr %5587, i64 88
  store <4 x i32> zeroinitializer, ptr %5630, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5631 = getelementptr inbounds i32, ptr %5587, i64 92
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5631, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5632 = getelementptr inbounds i32, ptr %5587, i64 96
  store <4 x i32> zeroinitializer, ptr %5632, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5633 = getelementptr inbounds i32, ptr %5587, i64 100
  store <4 x i32> zeroinitializer, ptr %5633, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5634 = getelementptr inbounds i32, ptr %5587, i64 104
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5634, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5635 = getelementptr inbounds i32, ptr %5587, i64 108
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5635, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5636 = getelementptr inbounds i32, ptr %5587, i64 112
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5636, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  %5637 = getelementptr inbounds i32, ptr %5587, i64 116
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5637, align 4, !tbaa !105, !alias.scope !790, !noalias !793
  br label %5638

5638:                                             ; preds = %5584, %5608
  %5639 = phi i64 [ 0, %5584 ], [ 120, %5608 ]
  br label %5640

5640:                                             ; preds = %5640, %5638
  %5641 = phi i64 [ %5648, %5640 ], [ %5639, %5638 ]
  %5642 = phi i64 [ %5649, %5640 ], [ 0, %5638 ]
  %5643 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %5641
  %5644 = load i8, ptr %5643, align 1, !tbaa !46
  %5645 = icmp eq i8 %5644, 88
  %5646 = sext i1 %5645 to i32
  %5647 = getelementptr inbounds i32, ptr %5587, i64 %5641
  store i32 %5646, ptr %5647, align 4, !tbaa !105
  %5648 = add nuw nsw i64 %5641, 1
  %5649 = add i64 %5642, 1
  %5650 = icmp eq i64 %5649, 2
  br i1 %5650, label %5651, label %5640, !llvm.loop !795

5651:                                             ; preds = %5640
  br i1 %5607, label %5679, label %5652

5652:                                             ; preds = %5651, %5652
  %5653 = phi i64 [ %5677, %5652 ], [ %5648, %5651 ]
  %5654 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %5653
  %5655 = load i8, ptr %5654, align 1, !tbaa !46
  %5656 = icmp eq i8 %5655, 88
  %5657 = sext i1 %5656 to i32
  %5658 = getelementptr inbounds i32, ptr %5587, i64 %5653
  store i32 %5657, ptr %5658, align 4, !tbaa !105
  %5659 = add nuw nsw i64 %5653, 1
  %5660 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %5659
  %5661 = load i8, ptr %5660, align 1, !tbaa !46
  %5662 = icmp eq i8 %5661, 88
  %5663 = sext i1 %5662 to i32
  %5664 = getelementptr inbounds i32, ptr %5587, i64 %5659
  store i32 %5663, ptr %5664, align 4, !tbaa !105
  %5665 = add nuw nsw i64 %5653, 2
  %5666 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %5665
  %5667 = load i8, ptr %5666, align 1, !tbaa !46
  %5668 = icmp eq i8 %5667, 88
  %5669 = sext i1 %5668 to i32
  %5670 = getelementptr inbounds i32, ptr %5587, i64 %5665
  store i32 %5669, ptr %5670, align 4, !tbaa !105
  %5671 = add nuw nsw i64 %5653, 3
  %5672 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1586), i64 %5671
  %5673 = load i8, ptr %5672, align 1, !tbaa !46
  %5674 = icmp eq i8 %5673, 88
  %5675 = sext i1 %5674 to i32
  %5676 = getelementptr inbounds i32, ptr %5587, i64 %5671
  store i32 %5675, ptr %5676, align 4, !tbaa !105
  %5677 = add nuw nsw i64 %5653, 4
  %5678 = icmp eq i64 %5677, 122
  br i1 %5678, label %5679, label %5652, !llvm.loop !796

5679:                                             ; preds = %5652, %5651
  %5680 = load i32, ptr %33, align 8, !tbaa !292
  %5681 = sext i32 %5680 to i64
  %5682 = getelementptr inbounds i32, ptr %5587, i64 %5681
  %5683 = add nsw i64 %5681, %5586
  %5684 = add nsw i64 %5683, %5492
  %5685 = add nsw i64 %5684, %5399
  %5686 = add nsw i64 %5685, %5307
  %5687 = add nsw i64 %5686, %5273
  %5688 = add nsw i64 %5687, %5239
  %5689 = add i64 %5688, %5205
  %5690 = add i64 %5689, %5171
  %5691 = add i64 %5690, %5137
  %5692 = add i64 %5691, %5103
  %5693 = add i64 %5692, %5069
  %5694 = add i64 %5693, %5035
  %5695 = add i64 %5694, %5001
  %5696 = add i64 %5695, %4967
  %5697 = add i64 %5696, %2907
  %5698 = shl i64 %5697, 2
  %5699 = add i64 %5698, 980
  %5700 = getelementptr i8, ptr %4962, i64 %5699
  %5701 = icmp uge ptr %5682, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830)
  %5702 = icmp ule ptr %5700, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708)
  %5703 = or i1 %5701, %5702
  br i1 %5703, label %5704, label %5734

5704:                                             ; preds = %5679
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5682, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5705 = getelementptr inbounds i32, ptr %5682, i64 4
  store <4 x i32> zeroinitializer, ptr %5705, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5706 = getelementptr inbounds i32, ptr %5682, i64 8
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5706, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5707 = getelementptr inbounds i32, ptr %5682, i64 12
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5707, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5708 = getelementptr inbounds i32, ptr %5682, i64 16
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5708, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5709 = getelementptr inbounds i32, ptr %5682, i64 20
  store <4 x i32> zeroinitializer, ptr %5709, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5710 = getelementptr inbounds i32, ptr %5682, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5710, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5711 = getelementptr inbounds i32, ptr %5682, i64 28
  store <4 x i32> zeroinitializer, ptr %5711, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5712 = getelementptr inbounds i32, ptr %5682, i64 32
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5712, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5713 = getelementptr inbounds i32, ptr %5682, i64 36
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5713, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5714 = getelementptr inbounds i32, ptr %5682, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5714, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5715 = getelementptr inbounds i32, ptr %5682, i64 44
  store <4 x i32> zeroinitializer, ptr %5715, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5716 = getelementptr inbounds i32, ptr %5682, i64 48
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5716, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5717 = getelementptr inbounds i32, ptr %5682, i64 52
  store <4 x i32> zeroinitializer, ptr %5717, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5718 = getelementptr inbounds i32, ptr %5682, i64 56
  store <4 x i32> zeroinitializer, ptr %5718, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5719 = getelementptr inbounds i32, ptr %5682, i64 60
  store <4 x i32> zeroinitializer, ptr %5719, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5720 = getelementptr inbounds i32, ptr %5682, i64 64
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5720, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5721 = getelementptr inbounds i32, ptr %5682, i64 68
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5721, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5722 = getelementptr inbounds i32, ptr %5682, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5722, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5723 = getelementptr inbounds i32, ptr %5682, i64 76
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5723, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5724 = getelementptr inbounds i32, ptr %5682, i64 80
  store <4 x i32> zeroinitializer, ptr %5724, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5725 = getelementptr inbounds i32, ptr %5682, i64 84
  store <4 x i32> zeroinitializer, ptr %5725, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5726 = getelementptr inbounds i32, ptr %5682, i64 88
  store <4 x i32> zeroinitializer, ptr %5726, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5727 = getelementptr inbounds i32, ptr %5682, i64 92
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5727, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5728 = getelementptr inbounds i32, ptr %5682, i64 96
  store <4 x i32> zeroinitializer, ptr %5728, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5729 = getelementptr inbounds i32, ptr %5682, i64 100
  store <4 x i32> zeroinitializer, ptr %5729, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5730 = getelementptr inbounds i32, ptr %5682, i64 104
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5730, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5731 = getelementptr inbounds i32, ptr %5682, i64 108
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %5731, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5732 = getelementptr inbounds i32, ptr %5682, i64 112
  store <4 x i32> zeroinitializer, ptr %5732, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  %5733 = getelementptr inbounds i32, ptr %5682, i64 116
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5733, align 4, !tbaa !105, !alias.scope !797, !noalias !800
  br label %5734

5734:                                             ; preds = %5679, %5704
  %5735 = phi i64 [ 0, %5679 ], [ 120, %5704 ]
  br label %5736

5736:                                             ; preds = %5736, %5734
  %5737 = phi i64 [ %5744, %5736 ], [ %5735, %5734 ]
  %5738 = phi i64 [ %5745, %5736 ], [ 0, %5734 ]
  %5739 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %5737
  %5740 = load i8, ptr %5739, align 1, !tbaa !46
  %5741 = icmp eq i8 %5740, 88
  %5742 = sext i1 %5741 to i32
  %5743 = getelementptr inbounds i32, ptr %5682, i64 %5737
  store i32 %5742, ptr %5743, align 4, !tbaa !105
  %5744 = add nuw nsw i64 %5737, 1
  %5745 = add i64 %5738, 1
  %5746 = icmp eq i64 %5745, 2
  br i1 %5746, label %5747, label %5736, !llvm.loop !802

5747:                                             ; preds = %5736
  br i1 %5703, label %5775, label %5748

5748:                                             ; preds = %5747, %5748
  %5749 = phi i64 [ %5773, %5748 ], [ %5744, %5747 ]
  %5750 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %5749
  %5751 = load i8, ptr %5750, align 1, !tbaa !46
  %5752 = icmp eq i8 %5751, 88
  %5753 = sext i1 %5752 to i32
  %5754 = getelementptr inbounds i32, ptr %5682, i64 %5749
  store i32 %5753, ptr %5754, align 4, !tbaa !105
  %5755 = add nuw nsw i64 %5749, 1
  %5756 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %5755
  %5757 = load i8, ptr %5756, align 1, !tbaa !46
  %5758 = icmp eq i8 %5757, 88
  %5759 = sext i1 %5758 to i32
  %5760 = getelementptr inbounds i32, ptr %5682, i64 %5755
  store i32 %5759, ptr %5760, align 4, !tbaa !105
  %5761 = add nuw nsw i64 %5749, 2
  %5762 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %5761
  %5763 = load i8, ptr %5762, align 1, !tbaa !46
  %5764 = icmp eq i8 %5763, 88
  %5765 = sext i1 %5764 to i32
  %5766 = getelementptr inbounds i32, ptr %5682, i64 %5761
  store i32 %5765, ptr %5766, align 4, !tbaa !105
  %5767 = add nuw nsw i64 %5749, 3
  %5768 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1708), i64 %5767
  %5769 = load i8, ptr %5768, align 1, !tbaa !46
  %5770 = icmp eq i8 %5769, 88
  %5771 = sext i1 %5770 to i32
  %5772 = getelementptr inbounds i32, ptr %5682, i64 %5767
  store i32 %5771, ptr %5772, align 4, !tbaa !105
  %5773 = add nuw nsw i64 %5749, 4
  %5774 = icmp eq i64 %5773, 122
  br i1 %5774, label %5775, label %5748, !llvm.loop !803

5775:                                             ; preds = %5748, %5747
  %5776 = load i32, ptr %33, align 8, !tbaa !292
  %5777 = sext i32 %5776 to i64
  %5778 = getelementptr inbounds i32, ptr %5682, i64 %5777
  %5779 = add nsw i64 %5777, %5681
  %5780 = add nsw i64 %5779, %5586
  %5781 = add nsw i64 %5780, %5492
  %5782 = add nsw i64 %5781, %5399
  %5783 = add nsw i64 %5782, %5307
  %5784 = add nsw i64 %5783, %5273
  %5785 = add i64 %5784, %5239
  %5786 = add i64 %5785, %5205
  %5787 = add i64 %5786, %5171
  %5788 = add i64 %5787, %5137
  %5789 = add i64 %5788, %5103
  %5790 = add i64 %5789, %5069
  %5791 = add i64 %5790, %5035
  %5792 = add i64 %5791, %5001
  %5793 = add i64 %5792, %4967
  %5794 = add i64 %5793, %2907
  %5795 = shl i64 %5794, 2
  %5796 = add i64 %5795, 980
  %5797 = getelementptr i8, ptr %4962, i64 %5796
  %5798 = icmp uge ptr %5778, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952)
  %5799 = icmp ule ptr %5797, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830)
  %5800 = or i1 %5798, %5799
  br i1 %5800, label %5801, label %5831

5801:                                             ; preds = %5775
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5778, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5802 = getelementptr inbounds i32, ptr %5778, i64 4
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5802, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5803 = getelementptr inbounds i32, ptr %5778, i64 8
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5803, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5804 = getelementptr inbounds i32, ptr %5778, i64 12
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5804, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5805 = getelementptr inbounds i32, ptr %5778, i64 16
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5805, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5806 = getelementptr inbounds i32, ptr %5778, i64 20
  store <4 x i32> zeroinitializer, ptr %5806, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5807 = getelementptr inbounds i32, ptr %5778, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5807, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5808 = getelementptr inbounds i32, ptr %5778, i64 28
  store <4 x i32> zeroinitializer, ptr %5808, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5809 = getelementptr inbounds i32, ptr %5778, i64 32
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5809, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5810 = getelementptr inbounds i32, ptr %5778, i64 36
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5810, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5811 = getelementptr inbounds i32, ptr %5778, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5811, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5812 = getelementptr inbounds i32, ptr %5778, i64 44
  store <4 x i32> zeroinitializer, ptr %5812, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5813 = getelementptr inbounds i32, ptr %5778, i64 48
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %5813, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5814 = getelementptr inbounds i32, ptr %5778, i64 52
  store <4 x i32> zeroinitializer, ptr %5814, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5815 = getelementptr inbounds i32, ptr %5778, i64 56
  store <4 x i32> zeroinitializer, ptr %5815, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5816 = getelementptr inbounds i32, ptr %5778, i64 60
  store <4 x i32> zeroinitializer, ptr %5816, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5817 = getelementptr inbounds i32, ptr %5778, i64 64
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5817, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5818 = getelementptr inbounds i32, ptr %5778, i64 68
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5818, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5819 = getelementptr inbounds i32, ptr %5778, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5819, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5820 = getelementptr inbounds i32, ptr %5778, i64 76
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5820, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5821 = getelementptr inbounds i32, ptr %5778, i64 80
  store <4 x i32> zeroinitializer, ptr %5821, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5822 = getelementptr inbounds i32, ptr %5778, i64 84
  store <4 x i32> zeroinitializer, ptr %5822, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5823 = getelementptr inbounds i32, ptr %5778, i64 88
  store <4 x i32> zeroinitializer, ptr %5823, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5824 = getelementptr inbounds i32, ptr %5778, i64 92
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5824, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5825 = getelementptr inbounds i32, ptr %5778, i64 96
  store <4 x i32> zeroinitializer, ptr %5825, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5826 = getelementptr inbounds i32, ptr %5778, i64 100
  store <4 x i32> zeroinitializer, ptr %5826, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5827 = getelementptr inbounds i32, ptr %5778, i64 104
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %5827, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5828 = getelementptr inbounds i32, ptr %5778, i64 108
  store <4 x i32> zeroinitializer, ptr %5828, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5829 = getelementptr inbounds i32, ptr %5778, i64 112
  store <4 x i32> zeroinitializer, ptr %5829, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  %5830 = getelementptr inbounds i32, ptr %5778, i64 116
  store <4 x i32> zeroinitializer, ptr %5830, align 4, !tbaa !105, !alias.scope !804, !noalias !807
  br label %5831

5831:                                             ; preds = %5775, %5801
  %5832 = phi i64 [ 0, %5775 ], [ 120, %5801 ]
  br label %5833

5833:                                             ; preds = %5833, %5831
  %5834 = phi i64 [ %5841, %5833 ], [ %5832, %5831 ]
  %5835 = phi i64 [ %5842, %5833 ], [ 0, %5831 ]
  %5836 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %5834
  %5837 = load i8, ptr %5836, align 1, !tbaa !46
  %5838 = icmp eq i8 %5837, 88
  %5839 = sext i1 %5838 to i32
  %5840 = getelementptr inbounds i32, ptr %5778, i64 %5834
  store i32 %5839, ptr %5840, align 4, !tbaa !105
  %5841 = add nuw nsw i64 %5834, 1
  %5842 = add i64 %5835, 1
  %5843 = icmp eq i64 %5842, 2
  br i1 %5843, label %5844, label %5833, !llvm.loop !809

5844:                                             ; preds = %5833
  br i1 %5800, label %5872, label %5845

5845:                                             ; preds = %5844, %5845
  %5846 = phi i64 [ %5870, %5845 ], [ %5841, %5844 ]
  %5847 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %5846
  %5848 = load i8, ptr %5847, align 1, !tbaa !46
  %5849 = icmp eq i8 %5848, 88
  %5850 = sext i1 %5849 to i32
  %5851 = getelementptr inbounds i32, ptr %5778, i64 %5846
  store i32 %5850, ptr %5851, align 4, !tbaa !105
  %5852 = add nuw nsw i64 %5846, 1
  %5853 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %5852
  %5854 = load i8, ptr %5853, align 1, !tbaa !46
  %5855 = icmp eq i8 %5854, 88
  %5856 = sext i1 %5855 to i32
  %5857 = getelementptr inbounds i32, ptr %5778, i64 %5852
  store i32 %5856, ptr %5857, align 4, !tbaa !105
  %5858 = add nuw nsw i64 %5846, 2
  %5859 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %5858
  %5860 = load i8, ptr %5859, align 1, !tbaa !46
  %5861 = icmp eq i8 %5860, 88
  %5862 = sext i1 %5861 to i32
  %5863 = getelementptr inbounds i32, ptr %5778, i64 %5858
  store i32 %5862, ptr %5863, align 4, !tbaa !105
  %5864 = add nuw nsw i64 %5846, 3
  %5865 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1830), i64 %5864
  %5866 = load i8, ptr %5865, align 1, !tbaa !46
  %5867 = icmp eq i8 %5866, 88
  %5868 = sext i1 %5867 to i32
  %5869 = getelementptr inbounds i32, ptr %5778, i64 %5864
  store i32 %5868, ptr %5869, align 4, !tbaa !105
  %5870 = add nuw nsw i64 %5846, 4
  %5871 = icmp eq i64 %5870, 122
  br i1 %5871, label %5872, label %5845, !llvm.loop !810

5872:                                             ; preds = %5845, %5844
  %5873 = load i32, ptr %33, align 8, !tbaa !292
  %5874 = sext i32 %5873 to i64
  %5875 = getelementptr inbounds i32, ptr %5778, i64 %5874
  %5876 = add nsw i64 %5874, %5777
  %5877 = add nsw i64 %5876, %5681
  %5878 = add nsw i64 %5877, %5586
  %5879 = add nsw i64 %5878, %5492
  %5880 = add nsw i64 %5879, %5399
  %5881 = add nsw i64 %5880, %5307
  %5882 = add i64 %5881, %5273
  %5883 = add i64 %5882, %5239
  %5884 = add i64 %5883, %5205
  %5885 = add i64 %5884, %5171
  %5886 = add i64 %5885, %5137
  %5887 = add i64 %5886, %5103
  %5888 = add i64 %5887, %5069
  %5889 = add i64 %5888, %5035
  %5890 = add i64 %5889, %5001
  %5891 = add i64 %5890, %4967
  %5892 = add i64 %5891, %2907
  %5893 = shl i64 %5892, 2
  %5894 = add i64 %5893, 980
  %5895 = getelementptr i8, ptr %4962, i64 %5894
  %5896 = icmp uge ptr %5875, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074)
  %5897 = icmp ule ptr %5895, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952)
  %5898 = or i1 %5896, %5897
  br i1 %5898, label %5899, label %5929

5899:                                             ; preds = %5872
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %5875, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5900 = getelementptr inbounds i32, ptr %5875, i64 4
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5900, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5901 = getelementptr inbounds i32, ptr %5875, i64 8
  store <4 x i32> zeroinitializer, ptr %5901, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5902 = getelementptr inbounds i32, ptr %5875, i64 12
  store <4 x i32> zeroinitializer, ptr %5902, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5903 = getelementptr inbounds i32, ptr %5875, i64 16
  store <4 x i32> zeroinitializer, ptr %5903, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5904 = getelementptr inbounds i32, ptr %5875, i64 20
  store <4 x i32> zeroinitializer, ptr %5904, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5905 = getelementptr inbounds i32, ptr %5875, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %5905, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5906 = getelementptr inbounds i32, ptr %5875, i64 28
  store <4 x i32> zeroinitializer, ptr %5906, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5907 = getelementptr inbounds i32, ptr %5875, i64 32
  store <4 x i32> zeroinitializer, ptr %5907, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5908 = getelementptr inbounds i32, ptr %5875, i64 36
  store <4 x i32> zeroinitializer, ptr %5908, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5909 = getelementptr inbounds i32, ptr %5875, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %5909, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5910 = getelementptr inbounds i32, ptr %5875, i64 44
  store <4 x i32> zeroinitializer, ptr %5910, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5911 = getelementptr inbounds i32, ptr %5875, i64 48
  store <4 x i32> zeroinitializer, ptr %5911, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5912 = getelementptr inbounds i32, ptr %5875, i64 52
  store <4 x i32> zeroinitializer, ptr %5912, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5913 = getelementptr inbounds i32, ptr %5875, i64 56
  store <4 x i32> zeroinitializer, ptr %5913, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5914 = getelementptr inbounds i32, ptr %5875, i64 60
  store <4 x i32> zeroinitializer, ptr %5914, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5915 = getelementptr inbounds i32, ptr %5875, i64 64
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5915, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5916 = getelementptr inbounds i32, ptr %5875, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5916, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5917 = getelementptr inbounds i32, ptr %5875, i64 72
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %5917, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5918 = getelementptr inbounds i32, ptr %5875, i64 76
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %5918, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5919 = getelementptr inbounds i32, ptr %5875, i64 80
  store <4 x i32> zeroinitializer, ptr %5919, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5920 = getelementptr inbounds i32, ptr %5875, i64 84
  store <4 x i32> zeroinitializer, ptr %5920, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5921 = getelementptr inbounds i32, ptr %5875, i64 88
  store <4 x i32> zeroinitializer, ptr %5921, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5922 = getelementptr inbounds i32, ptr %5875, i64 92
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5922, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5923 = getelementptr inbounds i32, ptr %5875, i64 96
  store <4 x i32> zeroinitializer, ptr %5923, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5924 = getelementptr inbounds i32, ptr %5875, i64 100
  store <4 x i32> zeroinitializer, ptr %5924, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5925 = getelementptr inbounds i32, ptr %5875, i64 104
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %5925, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5926 = getelementptr inbounds i32, ptr %5875, i64 108
  store <4 x i32> zeroinitializer, ptr %5926, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5927 = getelementptr inbounds i32, ptr %5875, i64 112
  store <4 x i32> zeroinitializer, ptr %5927, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  %5928 = getelementptr inbounds i32, ptr %5875, i64 116
  store <4 x i32> zeroinitializer, ptr %5928, align 4, !tbaa !105, !alias.scope !811, !noalias !814
  br label %5929

5929:                                             ; preds = %5872, %5899
  %5930 = phi i64 [ 0, %5872 ], [ 120, %5899 ]
  br label %5931

5931:                                             ; preds = %5931, %5929
  %5932 = phi i64 [ %5939, %5931 ], [ %5930, %5929 ]
  %5933 = phi i64 [ %5940, %5931 ], [ 0, %5929 ]
  %5934 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %5932
  %5935 = load i8, ptr %5934, align 1, !tbaa !46
  %5936 = icmp eq i8 %5935, 88
  %5937 = sext i1 %5936 to i32
  %5938 = getelementptr inbounds i32, ptr %5875, i64 %5932
  store i32 %5937, ptr %5938, align 4, !tbaa !105
  %5939 = add nuw nsw i64 %5932, 1
  %5940 = add i64 %5933, 1
  %5941 = icmp eq i64 %5940, 2
  br i1 %5941, label %5942, label %5931, !llvm.loop !816

5942:                                             ; preds = %5931
  br i1 %5898, label %5970, label %5943

5943:                                             ; preds = %5942, %5943
  %5944 = phi i64 [ %5968, %5943 ], [ %5939, %5942 ]
  %5945 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %5944
  %5946 = load i8, ptr %5945, align 1, !tbaa !46
  %5947 = icmp eq i8 %5946, 88
  %5948 = sext i1 %5947 to i32
  %5949 = getelementptr inbounds i32, ptr %5875, i64 %5944
  store i32 %5948, ptr %5949, align 4, !tbaa !105
  %5950 = add nuw nsw i64 %5944, 1
  %5951 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %5950
  %5952 = load i8, ptr %5951, align 1, !tbaa !46
  %5953 = icmp eq i8 %5952, 88
  %5954 = sext i1 %5953 to i32
  %5955 = getelementptr inbounds i32, ptr %5875, i64 %5950
  store i32 %5954, ptr %5955, align 4, !tbaa !105
  %5956 = add nuw nsw i64 %5944, 2
  %5957 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %5956
  %5958 = load i8, ptr %5957, align 1, !tbaa !46
  %5959 = icmp eq i8 %5958, 88
  %5960 = sext i1 %5959 to i32
  %5961 = getelementptr inbounds i32, ptr %5875, i64 %5956
  store i32 %5960, ptr %5961, align 4, !tbaa !105
  %5962 = add nuw nsw i64 %5944, 3
  %5963 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 1952), i64 %5962
  %5964 = load i8, ptr %5963, align 1, !tbaa !46
  %5965 = icmp eq i8 %5964, 88
  %5966 = sext i1 %5965 to i32
  %5967 = getelementptr inbounds i32, ptr %5875, i64 %5962
  store i32 %5966, ptr %5967, align 4, !tbaa !105
  %5968 = add nuw nsw i64 %5944, 4
  %5969 = icmp eq i64 %5968, 122
  br i1 %5969, label %5970, label %5943, !llvm.loop !817

5970:                                             ; preds = %5943, %5942
  %5971 = load i32, ptr %33, align 8, !tbaa !292
  %5972 = sext i32 %5971 to i64
  %5973 = getelementptr inbounds i32, ptr %5875, i64 %5972
  %5974 = add nsw i64 %5972, %5874
  %5975 = add nsw i64 %5974, %5777
  %5976 = add nsw i64 %5975, %5681
  %5977 = add nsw i64 %5976, %5586
  %5978 = add nsw i64 %5977, %5492
  %5979 = add nsw i64 %5978, %5399
  %5980 = add i64 %5979, %5307
  %5981 = add i64 %5980, %5273
  %5982 = add i64 %5981, %5239
  %5983 = add i64 %5982, %5205
  %5984 = add i64 %5983, %5171
  %5985 = add i64 %5984, %5137
  %5986 = add i64 %5985, %5103
  %5987 = add i64 %5986, %5069
  %5988 = add i64 %5987, %5035
  %5989 = add i64 %5988, %5001
  %5990 = add i64 %5989, %4967
  %5991 = add i64 %5990, %2907
  %5992 = shl i64 %5991, 2
  %5993 = add i64 %5992, 980
  %5994 = getelementptr i8, ptr %4962, i64 %5993
  %5995 = icmp uge ptr %5973, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196)
  %5996 = icmp ule ptr %5994, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074)
  %5997 = or i1 %5995, %5996
  br i1 %5997, label %5998, label %6028

5998:                                             ; preds = %5970
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %5973, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %5999 = getelementptr inbounds i32, ptr %5973, i64 4
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %5999, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6000 = getelementptr inbounds i32, ptr %5973, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6000, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6001 = getelementptr inbounds i32, ptr %5973, i64 12
  store <4 x i32> zeroinitializer, ptr %6001, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6002 = getelementptr inbounds i32, ptr %5973, i64 16
  store <4 x i32> zeroinitializer, ptr %6002, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6003 = getelementptr inbounds i32, ptr %5973, i64 20
  store <4 x i32> <i32 0, i32 -1, i32 -1, i32 -1>, ptr %6003, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6004 = getelementptr inbounds i32, ptr %5973, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 -1>, ptr %6004, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6005 = getelementptr inbounds i32, ptr %5973, i64 28
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %6005, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6006 = getelementptr inbounds i32, ptr %5973, i64 32
  store <4 x i32> zeroinitializer, ptr %6006, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6007 = getelementptr inbounds i32, ptr %5973, i64 36
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, ptr %6007, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6008 = getelementptr inbounds i32, ptr %5973, i64 40
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 -1>, ptr %6008, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6009 = getelementptr inbounds i32, ptr %5973, i64 44
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, ptr %6009, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6010 = getelementptr inbounds i32, ptr %5973, i64 48
  store <4 x i32> zeroinitializer, ptr %6010, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6011 = getelementptr inbounds i32, ptr %5973, i64 52
  store <4 x i32> zeroinitializer, ptr %6011, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6012 = getelementptr inbounds i32, ptr %5973, i64 56
  store <4 x i32> zeroinitializer, ptr %6012, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6013 = getelementptr inbounds i32, ptr %5973, i64 60
  store <4 x i32> zeroinitializer, ptr %6013, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6014 = getelementptr inbounds i32, ptr %5973, i64 64
  store <4 x i32> zeroinitializer, ptr %6014, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6015 = getelementptr inbounds i32, ptr %5973, i64 68
  store <4 x i32> zeroinitializer, ptr %6015, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6016 = getelementptr inbounds i32, ptr %5973, i64 72
  store <4 x i32> zeroinitializer, ptr %6016, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6017 = getelementptr inbounds i32, ptr %5973, i64 76
  store <4 x i32> zeroinitializer, ptr %6017, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6018 = getelementptr inbounds i32, ptr %5973, i64 80
  store <4 x i32> zeroinitializer, ptr %6018, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6019 = getelementptr inbounds i32, ptr %5973, i64 84
  store <4 x i32> zeroinitializer, ptr %6019, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6020 = getelementptr inbounds i32, ptr %5973, i64 88
  store <4 x i32> zeroinitializer, ptr %6020, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6021 = getelementptr inbounds i32, ptr %5973, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6021, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6022 = getelementptr inbounds i32, ptr %5973, i64 96
  store <4 x i32> zeroinitializer, ptr %6022, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6023 = getelementptr inbounds i32, ptr %5973, i64 100
  store <4 x i32> zeroinitializer, ptr %6023, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6024 = getelementptr inbounds i32, ptr %5973, i64 104
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6024, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6025 = getelementptr inbounds i32, ptr %5973, i64 108
  store <4 x i32> zeroinitializer, ptr %6025, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6026 = getelementptr inbounds i32, ptr %5973, i64 112
  store <4 x i32> zeroinitializer, ptr %6026, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  %6027 = getelementptr inbounds i32, ptr %5973, i64 116
  store <4 x i32> zeroinitializer, ptr %6027, align 4, !tbaa !105, !alias.scope !818, !noalias !821
  br label %6028

6028:                                             ; preds = %5970, %5998
  %6029 = phi i64 [ 0, %5970 ], [ 120, %5998 ]
  br label %6030

6030:                                             ; preds = %6030, %6028
  %6031 = phi i64 [ %6038, %6030 ], [ %6029, %6028 ]
  %6032 = phi i64 [ %6039, %6030 ], [ 0, %6028 ]
  %6033 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %6031
  %6034 = load i8, ptr %6033, align 1, !tbaa !46
  %6035 = icmp eq i8 %6034, 88
  %6036 = sext i1 %6035 to i32
  %6037 = getelementptr inbounds i32, ptr %5973, i64 %6031
  store i32 %6036, ptr %6037, align 4, !tbaa !105
  %6038 = add nuw nsw i64 %6031, 1
  %6039 = add i64 %6032, 1
  %6040 = icmp eq i64 %6039, 2
  br i1 %6040, label %6041, label %6030, !llvm.loop !823

6041:                                             ; preds = %6030
  br i1 %5997, label %6069, label %6042

6042:                                             ; preds = %6041, %6042
  %6043 = phi i64 [ %6067, %6042 ], [ %6038, %6041 ]
  %6044 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %6043
  %6045 = load i8, ptr %6044, align 1, !tbaa !46
  %6046 = icmp eq i8 %6045, 88
  %6047 = sext i1 %6046 to i32
  %6048 = getelementptr inbounds i32, ptr %5973, i64 %6043
  store i32 %6047, ptr %6048, align 4, !tbaa !105
  %6049 = add nuw nsw i64 %6043, 1
  %6050 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %6049
  %6051 = load i8, ptr %6050, align 1, !tbaa !46
  %6052 = icmp eq i8 %6051, 88
  %6053 = sext i1 %6052 to i32
  %6054 = getelementptr inbounds i32, ptr %5973, i64 %6049
  store i32 %6053, ptr %6054, align 4, !tbaa !105
  %6055 = add nuw nsw i64 %6043, 2
  %6056 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %6055
  %6057 = load i8, ptr %6056, align 1, !tbaa !46
  %6058 = icmp eq i8 %6057, 88
  %6059 = sext i1 %6058 to i32
  %6060 = getelementptr inbounds i32, ptr %5973, i64 %6055
  store i32 %6059, ptr %6060, align 4, !tbaa !105
  %6061 = add nuw nsw i64 %6043, 3
  %6062 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2074), i64 %6061
  %6063 = load i8, ptr %6062, align 1, !tbaa !46
  %6064 = icmp eq i8 %6063, 88
  %6065 = sext i1 %6064 to i32
  %6066 = getelementptr inbounds i32, ptr %5973, i64 %6061
  store i32 %6065, ptr %6066, align 4, !tbaa !105
  %6067 = add nuw nsw i64 %6043, 4
  %6068 = icmp eq i64 %6067, 122
  br i1 %6068, label %6069, label %6042, !llvm.loop !824

6069:                                             ; preds = %6042, %6041
  %6070 = load i32, ptr %33, align 8, !tbaa !292
  %6071 = sext i32 %6070 to i64
  %6072 = getelementptr inbounds i32, ptr %5973, i64 %6071
  %6073 = add nsw i64 %6071, %5972
  %6074 = add nsw i64 %6073, %5874
  %6075 = add nsw i64 %6074, %5777
  %6076 = add nsw i64 %6075, %5681
  %6077 = add nsw i64 %6076, %5586
  %6078 = add nsw i64 %6077, %5492
  %6079 = add i64 %6078, %5399
  %6080 = add i64 %6079, %5307
  %6081 = add i64 %6080, %5273
  %6082 = add i64 %6081, %5239
  %6083 = add i64 %6082, %5205
  %6084 = add i64 %6083, %5171
  %6085 = add i64 %6084, %5137
  %6086 = add i64 %6085, %5103
  %6087 = add i64 %6086, %5069
  %6088 = add i64 %6087, %5035
  %6089 = add i64 %6088, %5001
  %6090 = add i64 %6089, %4967
  %6091 = add i64 %6090, %2907
  %6092 = shl i64 %6091, 2
  %6093 = add i64 %6092, 980
  %6094 = getelementptr i8, ptr %4962, i64 %6093
  %6095 = icmp uge ptr %6072, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318)
  %6096 = icmp ule ptr %6094, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196)
  %6097 = or i1 %6095, %6096
  br i1 %6097, label %6098, label %6128

6098:                                             ; preds = %6069
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %6072, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6099 = getelementptr inbounds i32, ptr %6072, i64 4
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6099, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6100 = getelementptr inbounds i32, ptr %6072, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6100, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6101 = getelementptr inbounds i32, ptr %6072, i64 12
  store <4 x i32> zeroinitializer, ptr %6101, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6102 = getelementptr inbounds i32, ptr %6072, i64 16
  store <4 x i32> zeroinitializer, ptr %6102, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6103 = getelementptr inbounds i32, ptr %6072, i64 20
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6103, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6104 = getelementptr inbounds i32, ptr %6072, i64 24
  store <4 x i32> zeroinitializer, ptr %6104, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6105 = getelementptr inbounds i32, ptr %6072, i64 28
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6105, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6106 = getelementptr inbounds i32, ptr %6072, i64 32
  store <4 x i32> zeroinitializer, ptr %6106, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6107 = getelementptr inbounds i32, ptr %6072, i64 36
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6107, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6108 = getelementptr inbounds i32, ptr %6072, i64 40
  store <4 x i32> zeroinitializer, ptr %6108, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6109 = getelementptr inbounds i32, ptr %6072, i64 44
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6109, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6110 = getelementptr inbounds i32, ptr %6072, i64 48
  store <4 x i32> zeroinitializer, ptr %6110, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6111 = getelementptr inbounds i32, ptr %6072, i64 52
  store <4 x i32> zeroinitializer, ptr %6111, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6112 = getelementptr inbounds i32, ptr %6072, i64 56
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6112, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6113 = getelementptr inbounds i32, ptr %6072, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6113, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6114 = getelementptr inbounds i32, ptr %6072, i64 64
  store <4 x i32> zeroinitializer, ptr %6114, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6115 = getelementptr inbounds i32, ptr %6072, i64 68
  store <4 x i32> zeroinitializer, ptr %6115, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6116 = getelementptr inbounds i32, ptr %6072, i64 72
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %6116, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6117 = getelementptr inbounds i32, ptr %6072, i64 76
  store <4 x i32> zeroinitializer, ptr %6117, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6118 = getelementptr inbounds i32, ptr %6072, i64 80
  store <4 x i32> zeroinitializer, ptr %6118, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6119 = getelementptr inbounds i32, ptr %6072, i64 84
  store <4 x i32> zeroinitializer, ptr %6119, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6120 = getelementptr inbounds i32, ptr %6072, i64 88
  store <4 x i32> zeroinitializer, ptr %6120, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6121 = getelementptr inbounds i32, ptr %6072, i64 92
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6121, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6122 = getelementptr inbounds i32, ptr %6072, i64 96
  store <4 x i32> zeroinitializer, ptr %6122, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6123 = getelementptr inbounds i32, ptr %6072, i64 100
  store <4 x i32> zeroinitializer, ptr %6123, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6124 = getelementptr inbounds i32, ptr %6072, i64 104
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6124, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6125 = getelementptr inbounds i32, ptr %6072, i64 108
  store <4 x i32> zeroinitializer, ptr %6125, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6126 = getelementptr inbounds i32, ptr %6072, i64 112
  store <4 x i32> zeroinitializer, ptr %6126, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  %6127 = getelementptr inbounds i32, ptr %6072, i64 116
  store <4 x i32> zeroinitializer, ptr %6127, align 4, !tbaa !105, !alias.scope !825, !noalias !828
  br label %6128

6128:                                             ; preds = %6069, %6098
  %6129 = phi i64 [ 0, %6069 ], [ 120, %6098 ]
  br label %6130

6130:                                             ; preds = %6130, %6128
  %6131 = phi i64 [ %6138, %6130 ], [ %6129, %6128 ]
  %6132 = phi i64 [ %6139, %6130 ], [ 0, %6128 ]
  %6133 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %6131
  %6134 = load i8, ptr %6133, align 1, !tbaa !46
  %6135 = icmp eq i8 %6134, 88
  %6136 = sext i1 %6135 to i32
  %6137 = getelementptr inbounds i32, ptr %6072, i64 %6131
  store i32 %6136, ptr %6137, align 4, !tbaa !105
  %6138 = add nuw nsw i64 %6131, 1
  %6139 = add i64 %6132, 1
  %6140 = icmp eq i64 %6139, 2
  br i1 %6140, label %6141, label %6130, !llvm.loop !830

6141:                                             ; preds = %6130
  br i1 %6097, label %6169, label %6142

6142:                                             ; preds = %6141, %6142
  %6143 = phi i64 [ %6167, %6142 ], [ %6138, %6141 ]
  %6144 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %6143
  %6145 = load i8, ptr %6144, align 1, !tbaa !46
  %6146 = icmp eq i8 %6145, 88
  %6147 = sext i1 %6146 to i32
  %6148 = getelementptr inbounds i32, ptr %6072, i64 %6143
  store i32 %6147, ptr %6148, align 4, !tbaa !105
  %6149 = add nuw nsw i64 %6143, 1
  %6150 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %6149
  %6151 = load i8, ptr %6150, align 1, !tbaa !46
  %6152 = icmp eq i8 %6151, 88
  %6153 = sext i1 %6152 to i32
  %6154 = getelementptr inbounds i32, ptr %6072, i64 %6149
  store i32 %6153, ptr %6154, align 4, !tbaa !105
  %6155 = add nuw nsw i64 %6143, 2
  %6156 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %6155
  %6157 = load i8, ptr %6156, align 1, !tbaa !46
  %6158 = icmp eq i8 %6157, 88
  %6159 = sext i1 %6158 to i32
  %6160 = getelementptr inbounds i32, ptr %6072, i64 %6155
  store i32 %6159, ptr %6160, align 4, !tbaa !105
  %6161 = add nuw nsw i64 %6143, 3
  %6162 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2196), i64 %6161
  %6163 = load i8, ptr %6162, align 1, !tbaa !46
  %6164 = icmp eq i8 %6163, 88
  %6165 = sext i1 %6164 to i32
  %6166 = getelementptr inbounds i32, ptr %6072, i64 %6161
  store i32 %6165, ptr %6166, align 4, !tbaa !105
  %6167 = add nuw nsw i64 %6143, 4
  %6168 = icmp eq i64 %6167, 122
  br i1 %6168, label %6169, label %6142, !llvm.loop !831

6169:                                             ; preds = %6142, %6141
  %6170 = load i32, ptr %33, align 8, !tbaa !292
  %6171 = sext i32 %6170 to i64
  %6172 = getelementptr inbounds i32, ptr %6072, i64 %6171
  %6173 = add nsw i64 %6171, %6071
  %6174 = add nsw i64 %6173, %5972
  %6175 = add nsw i64 %6174, %5874
  %6176 = add nsw i64 %6175, %5777
  %6177 = add nsw i64 %6176, %5681
  %6178 = add nsw i64 %6177, %5586
  %6179 = add i64 %6178, %5492
  %6180 = add i64 %6179, %5399
  %6181 = add i64 %6180, %5307
  %6182 = add i64 %6181, %5273
  %6183 = add i64 %6182, %5239
  %6184 = add i64 %6183, %5205
  %6185 = add i64 %6184, %5171
  %6186 = add i64 %6185, %5137
  %6187 = add i64 %6186, %5103
  %6188 = add i64 %6187, %5069
  %6189 = add i64 %6188, %5035
  %6190 = add i64 %6189, %5001
  %6191 = add i64 %6190, %4967
  %6192 = add i64 %6191, %2907
  %6193 = shl i64 %6192, 2
  %6194 = add i64 %6193, 980
  %6195 = getelementptr i8, ptr %4962, i64 %6194
  %6196 = icmp uge ptr %6172, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440)
  %6197 = icmp ule ptr %6195, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318)
  %6198 = or i1 %6196, %6197
  br i1 %6198, label %6199, label %6229

6199:                                             ; preds = %6169
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %6172, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6200 = getelementptr inbounds i32, ptr %6172, i64 4
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6200, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6201 = getelementptr inbounds i32, ptr %6172, i64 8
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6201, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6202 = getelementptr inbounds i32, ptr %6172, i64 12
  store <4 x i32> zeroinitializer, ptr %6202, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6203 = getelementptr inbounds i32, ptr %6172, i64 16
  store <4 x i32> zeroinitializer, ptr %6203, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6204 = getelementptr inbounds i32, ptr %6172, i64 20
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6204, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6205 = getelementptr inbounds i32, ptr %6172, i64 24
  store <4 x i32> zeroinitializer, ptr %6205, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6206 = getelementptr inbounds i32, ptr %6172, i64 28
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6206, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6207 = getelementptr inbounds i32, ptr %6172, i64 32
  store <4 x i32> zeroinitializer, ptr %6207, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6208 = getelementptr inbounds i32, ptr %6172, i64 36
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6208, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6209 = getelementptr inbounds i32, ptr %6172, i64 40
  store <4 x i32> zeroinitializer, ptr %6209, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6210 = getelementptr inbounds i32, ptr %6172, i64 44
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6210, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6211 = getelementptr inbounds i32, ptr %6172, i64 48
  store <4 x i32> zeroinitializer, ptr %6211, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6212 = getelementptr inbounds i32, ptr %6172, i64 52
  store <4 x i32> zeroinitializer, ptr %6212, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6213 = getelementptr inbounds i32, ptr %6172, i64 56
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6213, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6214 = getelementptr inbounds i32, ptr %6172, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6214, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6215 = getelementptr inbounds i32, ptr %6172, i64 64
  store <4 x i32> zeroinitializer, ptr %6215, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6216 = getelementptr inbounds i32, ptr %6172, i64 68
  store <4 x i32> zeroinitializer, ptr %6216, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6217 = getelementptr inbounds i32, ptr %6172, i64 72
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %6217, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6218 = getelementptr inbounds i32, ptr %6172, i64 76
  store <4 x i32> zeroinitializer, ptr %6218, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6219 = getelementptr inbounds i32, ptr %6172, i64 80
  store <4 x i32> zeroinitializer, ptr %6219, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6220 = getelementptr inbounds i32, ptr %6172, i64 84
  store <4 x i32> zeroinitializer, ptr %6220, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6221 = getelementptr inbounds i32, ptr %6172, i64 88
  store <4 x i32> zeroinitializer, ptr %6221, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6222 = getelementptr inbounds i32, ptr %6172, i64 92
  store <4 x i32> zeroinitializer, ptr %6222, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6223 = getelementptr inbounds i32, ptr %6172, i64 96
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6223, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6224 = getelementptr inbounds i32, ptr %6172, i64 100
  store <4 x i32> zeroinitializer, ptr %6224, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6225 = getelementptr inbounds i32, ptr %6172, i64 104
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6225, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6226 = getelementptr inbounds i32, ptr %6172, i64 108
  store <4 x i32> zeroinitializer, ptr %6226, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6227 = getelementptr inbounds i32, ptr %6172, i64 112
  store <4 x i32> zeroinitializer, ptr %6227, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  %6228 = getelementptr inbounds i32, ptr %6172, i64 116
  store <4 x i32> zeroinitializer, ptr %6228, align 4, !tbaa !105, !alias.scope !832, !noalias !835
  br label %6229

6229:                                             ; preds = %6169, %6199
  %6230 = phi i64 [ 0, %6169 ], [ 120, %6199 ]
  br label %6231

6231:                                             ; preds = %6231, %6229
  %6232 = phi i64 [ %6239, %6231 ], [ %6230, %6229 ]
  %6233 = phi i64 [ %6240, %6231 ], [ 0, %6229 ]
  %6234 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %6232
  %6235 = load i8, ptr %6234, align 1, !tbaa !46
  %6236 = icmp eq i8 %6235, 88
  %6237 = sext i1 %6236 to i32
  %6238 = getelementptr inbounds i32, ptr %6172, i64 %6232
  store i32 %6237, ptr %6238, align 4, !tbaa !105
  %6239 = add nuw nsw i64 %6232, 1
  %6240 = add i64 %6233, 1
  %6241 = icmp eq i64 %6240, 2
  br i1 %6241, label %6242, label %6231, !llvm.loop !837

6242:                                             ; preds = %6231
  br i1 %6198, label %6270, label %6243

6243:                                             ; preds = %6242, %6243
  %6244 = phi i64 [ %6268, %6243 ], [ %6239, %6242 ]
  %6245 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %6244
  %6246 = load i8, ptr %6245, align 1, !tbaa !46
  %6247 = icmp eq i8 %6246, 88
  %6248 = sext i1 %6247 to i32
  %6249 = getelementptr inbounds i32, ptr %6172, i64 %6244
  store i32 %6248, ptr %6249, align 4, !tbaa !105
  %6250 = add nuw nsw i64 %6244, 1
  %6251 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %6250
  %6252 = load i8, ptr %6251, align 1, !tbaa !46
  %6253 = icmp eq i8 %6252, 88
  %6254 = sext i1 %6253 to i32
  %6255 = getelementptr inbounds i32, ptr %6172, i64 %6250
  store i32 %6254, ptr %6255, align 4, !tbaa !105
  %6256 = add nuw nsw i64 %6244, 2
  %6257 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %6256
  %6258 = load i8, ptr %6257, align 1, !tbaa !46
  %6259 = icmp eq i8 %6258, 88
  %6260 = sext i1 %6259 to i32
  %6261 = getelementptr inbounds i32, ptr %6172, i64 %6256
  store i32 %6260, ptr %6261, align 4, !tbaa !105
  %6262 = add nuw nsw i64 %6244, 3
  %6263 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2318), i64 %6262
  %6264 = load i8, ptr %6263, align 1, !tbaa !46
  %6265 = icmp eq i8 %6264, 88
  %6266 = sext i1 %6265 to i32
  %6267 = getelementptr inbounds i32, ptr %6172, i64 %6262
  store i32 %6266, ptr %6267, align 4, !tbaa !105
  %6268 = add nuw nsw i64 %6244, 4
  %6269 = icmp eq i64 %6268, 122
  br i1 %6269, label %6270, label %6243, !llvm.loop !838

6270:                                             ; preds = %6243, %6242
  %6271 = load i32, ptr %33, align 8, !tbaa !292
  %6272 = sext i32 %6271 to i64
  %6273 = getelementptr inbounds i32, ptr %6172, i64 %6272
  %6274 = add nsw i64 %6272, %6171
  %6275 = add nsw i64 %6274, %6071
  %6276 = add nsw i64 %6275, %5972
  %6277 = add nsw i64 %6276, %5874
  %6278 = add nsw i64 %6277, %5777
  %6279 = add nsw i64 %6278, %5681
  %6280 = add i64 %6279, %5586
  %6281 = add i64 %6280, %5492
  %6282 = add i64 %6281, %5399
  %6283 = add i64 %6282, %5307
  %6284 = add i64 %6283, %5273
  %6285 = add i64 %6284, %5239
  %6286 = add i64 %6285, %5205
  %6287 = add i64 %6286, %5171
  %6288 = add i64 %6287, %5137
  %6289 = add i64 %6288, %5103
  %6290 = add i64 %6289, %5069
  %6291 = add i64 %6290, %5035
  %6292 = add i64 %6291, %5001
  %6293 = add i64 %6292, %4967
  %6294 = add i64 %6293, %2907
  %6295 = shl i64 %6294, 2
  %6296 = add i64 %6295, 980
  %6297 = getelementptr i8, ptr %4962, i64 %6296
  %6298 = icmp uge ptr %6273, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562)
  %6299 = icmp ule ptr %6297, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440)
  %6300 = or i1 %6298, %6299
  br i1 %6300, label %6301, label %6331

6301:                                             ; preds = %6270
  store <4 x i32> zeroinitializer, ptr %6273, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6302 = getelementptr inbounds i32, ptr %6273, i64 4
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6302, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6303 = getelementptr inbounds i32, ptr %6273, i64 8
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6303, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6304 = getelementptr inbounds i32, ptr %6273, i64 12
  store <4 x i32> zeroinitializer, ptr %6304, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6305 = getelementptr inbounds i32, ptr %6273, i64 16
  store <4 x i32> zeroinitializer, ptr %6305, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6306 = getelementptr inbounds i32, ptr %6273, i64 20
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6306, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6307 = getelementptr inbounds i32, ptr %6273, i64 24
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6307, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6308 = getelementptr inbounds i32, ptr %6273, i64 28
  store <4 x i32> zeroinitializer, ptr %6308, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6309 = getelementptr inbounds i32, ptr %6273, i64 32
  store <4 x i32> zeroinitializer, ptr %6309, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6310 = getelementptr inbounds i32, ptr %6273, i64 36
  store <4 x i32> zeroinitializer, ptr %6310, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6311 = getelementptr inbounds i32, ptr %6273, i64 40
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6311, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6312 = getelementptr inbounds i32, ptr %6273, i64 44
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6312, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6313 = getelementptr inbounds i32, ptr %6273, i64 48
  store <4 x i32> zeroinitializer, ptr %6313, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6314 = getelementptr inbounds i32, ptr %6273, i64 52
  store <4 x i32> zeroinitializer, ptr %6314, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6315 = getelementptr inbounds i32, ptr %6273, i64 56
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6315, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6316 = getelementptr inbounds i32, ptr %6273, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6316, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6317 = getelementptr inbounds i32, ptr %6273, i64 64
  store <4 x i32> zeroinitializer, ptr %6317, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6318 = getelementptr inbounds i32, ptr %6273, i64 68
  store <4 x i32> zeroinitializer, ptr %6318, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6319 = getelementptr inbounds i32, ptr %6273, i64 72
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %6319, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6320 = getelementptr inbounds i32, ptr %6273, i64 76
  store <4 x i32> zeroinitializer, ptr %6320, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6321 = getelementptr inbounds i32, ptr %6273, i64 80
  store <4 x i32> zeroinitializer, ptr %6321, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6322 = getelementptr inbounds i32, ptr %6273, i64 84
  store <4 x i32> zeroinitializer, ptr %6322, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6323 = getelementptr inbounds i32, ptr %6273, i64 88
  store <4 x i32> zeroinitializer, ptr %6323, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6324 = getelementptr inbounds i32, ptr %6273, i64 92
  store <4 x i32> zeroinitializer, ptr %6324, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6325 = getelementptr inbounds i32, ptr %6273, i64 96
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6325, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6326 = getelementptr inbounds i32, ptr %6273, i64 100
  store <4 x i32> zeroinitializer, ptr %6326, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6327 = getelementptr inbounds i32, ptr %6273, i64 104
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6327, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6328 = getelementptr inbounds i32, ptr %6273, i64 108
  store <4 x i32> zeroinitializer, ptr %6328, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6329 = getelementptr inbounds i32, ptr %6273, i64 112
  store <4 x i32> zeroinitializer, ptr %6329, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  %6330 = getelementptr inbounds i32, ptr %6273, i64 116
  store <4 x i32> zeroinitializer, ptr %6330, align 4, !tbaa !105, !alias.scope !839, !noalias !842
  br label %6331

6331:                                             ; preds = %6270, %6301
  %6332 = phi i64 [ 0, %6270 ], [ 120, %6301 ]
  br label %6333

6333:                                             ; preds = %6333, %6331
  %6334 = phi i64 [ %6341, %6333 ], [ %6332, %6331 ]
  %6335 = phi i64 [ %6342, %6333 ], [ 0, %6331 ]
  %6336 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %6334
  %6337 = load i8, ptr %6336, align 1, !tbaa !46
  %6338 = icmp eq i8 %6337, 88
  %6339 = sext i1 %6338 to i32
  %6340 = getelementptr inbounds i32, ptr %6273, i64 %6334
  store i32 %6339, ptr %6340, align 4, !tbaa !105
  %6341 = add nuw nsw i64 %6334, 1
  %6342 = add i64 %6335, 1
  %6343 = icmp eq i64 %6342, 2
  br i1 %6343, label %6344, label %6333, !llvm.loop !844

6344:                                             ; preds = %6333
  br i1 %6300, label %6372, label %6345

6345:                                             ; preds = %6344, %6345
  %6346 = phi i64 [ %6370, %6345 ], [ %6341, %6344 ]
  %6347 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %6346
  %6348 = load i8, ptr %6347, align 1, !tbaa !46
  %6349 = icmp eq i8 %6348, 88
  %6350 = sext i1 %6349 to i32
  %6351 = getelementptr inbounds i32, ptr %6273, i64 %6346
  store i32 %6350, ptr %6351, align 4, !tbaa !105
  %6352 = add nuw nsw i64 %6346, 1
  %6353 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %6352
  %6354 = load i8, ptr %6353, align 1, !tbaa !46
  %6355 = icmp eq i8 %6354, 88
  %6356 = sext i1 %6355 to i32
  %6357 = getelementptr inbounds i32, ptr %6273, i64 %6352
  store i32 %6356, ptr %6357, align 4, !tbaa !105
  %6358 = add nuw nsw i64 %6346, 2
  %6359 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %6358
  %6360 = load i8, ptr %6359, align 1, !tbaa !46
  %6361 = icmp eq i8 %6360, 88
  %6362 = sext i1 %6361 to i32
  %6363 = getelementptr inbounds i32, ptr %6273, i64 %6358
  store i32 %6362, ptr %6363, align 4, !tbaa !105
  %6364 = add nuw nsw i64 %6346, 3
  %6365 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2440), i64 %6364
  %6366 = load i8, ptr %6365, align 1, !tbaa !46
  %6367 = icmp eq i8 %6366, 88
  %6368 = sext i1 %6367 to i32
  %6369 = getelementptr inbounds i32, ptr %6273, i64 %6364
  store i32 %6368, ptr %6369, align 4, !tbaa !105
  %6370 = add nuw nsw i64 %6346, 4
  %6371 = icmp eq i64 %6370, 122
  br i1 %6371, label %6372, label %6345, !llvm.loop !845

6372:                                             ; preds = %6345, %6344
  %6373 = load i32, ptr %33, align 8, !tbaa !292
  %6374 = sext i32 %6373 to i64
  %6375 = getelementptr inbounds i32, ptr %6273, i64 %6374
  %6376 = add nsw i64 %6374, %6272
  %6377 = add nsw i64 %6376, %6171
  %6378 = add nsw i64 %6377, %6071
  %6379 = add nsw i64 %6378, %5972
  %6380 = add nsw i64 %6379, %5874
  %6381 = add nsw i64 %6380, %5777
  %6382 = add i64 %6381, %5681
  %6383 = add i64 %6382, %5586
  %6384 = add i64 %6383, %5492
  %6385 = add i64 %6384, %5399
  %6386 = add i64 %6385, %5307
  %6387 = add i64 %6386, %5273
  %6388 = add i64 %6387, %5239
  %6389 = add i64 %6388, %5205
  %6390 = add i64 %6389, %5171
  %6391 = add i64 %6390, %5137
  %6392 = add i64 %6391, %5103
  %6393 = add i64 %6392, %5069
  %6394 = add i64 %6393, %5035
  %6395 = add i64 %6394, %5001
  %6396 = add i64 %6395, %4967
  %6397 = add i64 %6396, %2907
  %6398 = shl i64 %6397, 2
  %6399 = add i64 %6398, 980
  %6400 = getelementptr i8, ptr %4962, i64 %6399
  %6401 = icmp uge ptr %6375, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684)
  %6402 = icmp ule ptr %6400, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562)
  %6403 = or i1 %6401, %6402
  br i1 %6403, label %6404, label %6434

6404:                                             ; preds = %6372
  store <4 x i32> zeroinitializer, ptr %6375, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6405 = getelementptr inbounds i32, ptr %6375, i64 4
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6405, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6406 = getelementptr inbounds i32, ptr %6375, i64 8
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6406, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6407 = getelementptr inbounds i32, ptr %6375, i64 12
  store <4 x i32> zeroinitializer, ptr %6407, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6408 = getelementptr inbounds i32, ptr %6375, i64 16
  store <4 x i32> zeroinitializer, ptr %6408, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6409 = getelementptr inbounds i32, ptr %6375, i64 20
  store <4 x i32> zeroinitializer, ptr %6409, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6410 = getelementptr inbounds i32, ptr %6375, i64 24
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %6410, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6411 = getelementptr inbounds i32, ptr %6375, i64 28
  store <4 x i32> zeroinitializer, ptr %6411, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6412 = getelementptr inbounds i32, ptr %6375, i64 32
  store <4 x i32> zeroinitializer, ptr %6412, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6413 = getelementptr inbounds i32, ptr %6375, i64 36
  store <4 x i32> zeroinitializer, ptr %6413, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6414 = getelementptr inbounds i32, ptr %6375, i64 40
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, ptr %6414, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6415 = getelementptr inbounds i32, ptr %6375, i64 44
  store <4 x i32> zeroinitializer, ptr %6415, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6416 = getelementptr inbounds i32, ptr %6375, i64 48
  store <4 x i32> zeroinitializer, ptr %6416, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6417 = getelementptr inbounds i32, ptr %6375, i64 52
  store <4 x i32> zeroinitializer, ptr %6417, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6418 = getelementptr inbounds i32, ptr %6375, i64 56
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6418, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6419 = getelementptr inbounds i32, ptr %6375, i64 60
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6419, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6420 = getelementptr inbounds i32, ptr %6375, i64 64
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6420, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6421 = getelementptr inbounds i32, ptr %6375, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6421, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6422 = getelementptr inbounds i32, ptr %6375, i64 72
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6422, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6423 = getelementptr inbounds i32, ptr %6375, i64 76
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6423, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6424 = getelementptr inbounds i32, ptr %6375, i64 80
  store <4 x i32> zeroinitializer, ptr %6424, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6425 = getelementptr inbounds i32, ptr %6375, i64 84
  store <4 x i32> zeroinitializer, ptr %6425, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6426 = getelementptr inbounds i32, ptr %6375, i64 88
  store <4 x i32> zeroinitializer, ptr %6426, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6427 = getelementptr inbounds i32, ptr %6375, i64 92
  store <4 x i32> zeroinitializer, ptr %6427, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6428 = getelementptr inbounds i32, ptr %6375, i64 96
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6428, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6429 = getelementptr inbounds i32, ptr %6375, i64 100
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6429, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6430 = getelementptr inbounds i32, ptr %6375, i64 104
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %6430, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6431 = getelementptr inbounds i32, ptr %6375, i64 108
  store <4 x i32> zeroinitializer, ptr %6431, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6432 = getelementptr inbounds i32, ptr %6375, i64 112
  store <4 x i32> zeroinitializer, ptr %6432, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  %6433 = getelementptr inbounds i32, ptr %6375, i64 116
  store <4 x i32> zeroinitializer, ptr %6433, align 4, !tbaa !105, !alias.scope !846, !noalias !849
  br label %6434

6434:                                             ; preds = %6372, %6404
  %6435 = phi i64 [ 0, %6372 ], [ 120, %6404 ]
  br label %6436

6436:                                             ; preds = %6436, %6434
  %6437 = phi i64 [ %6444, %6436 ], [ %6435, %6434 ]
  %6438 = phi i64 [ %6445, %6436 ], [ 0, %6434 ]
  %6439 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %6437
  %6440 = load i8, ptr %6439, align 1, !tbaa !46
  %6441 = icmp eq i8 %6440, 88
  %6442 = sext i1 %6441 to i32
  %6443 = getelementptr inbounds i32, ptr %6375, i64 %6437
  store i32 %6442, ptr %6443, align 4, !tbaa !105
  %6444 = add nuw nsw i64 %6437, 1
  %6445 = add i64 %6438, 1
  %6446 = icmp eq i64 %6445, 2
  br i1 %6446, label %6447, label %6436, !llvm.loop !851

6447:                                             ; preds = %6436
  br i1 %6403, label %6475, label %6448

6448:                                             ; preds = %6447, %6448
  %6449 = phi i64 [ %6473, %6448 ], [ %6444, %6447 ]
  %6450 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %6449
  %6451 = load i8, ptr %6450, align 1, !tbaa !46
  %6452 = icmp eq i8 %6451, 88
  %6453 = sext i1 %6452 to i32
  %6454 = getelementptr inbounds i32, ptr %6375, i64 %6449
  store i32 %6453, ptr %6454, align 4, !tbaa !105
  %6455 = add nuw nsw i64 %6449, 1
  %6456 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %6455
  %6457 = load i8, ptr %6456, align 1, !tbaa !46
  %6458 = icmp eq i8 %6457, 88
  %6459 = sext i1 %6458 to i32
  %6460 = getelementptr inbounds i32, ptr %6375, i64 %6455
  store i32 %6459, ptr %6460, align 4, !tbaa !105
  %6461 = add nuw nsw i64 %6449, 2
  %6462 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %6461
  %6463 = load i8, ptr %6462, align 1, !tbaa !46
  %6464 = icmp eq i8 %6463, 88
  %6465 = sext i1 %6464 to i32
  %6466 = getelementptr inbounds i32, ptr %6375, i64 %6461
  store i32 %6465, ptr %6466, align 4, !tbaa !105
  %6467 = add nuw nsw i64 %6449, 3
  %6468 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2562), i64 %6467
  %6469 = load i8, ptr %6468, align 1, !tbaa !46
  %6470 = icmp eq i8 %6469, 88
  %6471 = sext i1 %6470 to i32
  %6472 = getelementptr inbounds i32, ptr %6375, i64 %6467
  store i32 %6471, ptr %6472, align 4, !tbaa !105
  %6473 = add nuw nsw i64 %6449, 4
  %6474 = icmp eq i64 %6473, 122
  br i1 %6474, label %6475, label %6448, !llvm.loop !852

6475:                                             ; preds = %6448, %6447
  %6476 = load i32, ptr %33, align 8, !tbaa !292
  %6477 = sext i32 %6476 to i64
  %6478 = getelementptr inbounds i32, ptr %6375, i64 %6477
  %6479 = add nsw i64 %6477, %6374
  %6480 = add nsw i64 %6479, %6272
  %6481 = add nsw i64 %6480, %6171
  %6482 = add nsw i64 %6481, %6071
  %6483 = add nsw i64 %6482, %5972
  %6484 = add nsw i64 %6483, %5874
  %6485 = add i64 %6484, %5777
  %6486 = add i64 %6485, %5681
  %6487 = add i64 %6486, %5586
  %6488 = add i64 %6487, %5492
  %6489 = add i64 %6488, %5399
  %6490 = add i64 %6489, %5307
  %6491 = add i64 %6490, %5273
  %6492 = add i64 %6491, %5239
  %6493 = add i64 %6492, %5205
  %6494 = add i64 %6493, %5171
  %6495 = add i64 %6494, %5137
  %6496 = add i64 %6495, %5103
  %6497 = add i64 %6496, %5069
  %6498 = add i64 %6497, %5035
  %6499 = add i64 %6498, %5001
  %6500 = add i64 %6499, %4967
  %6501 = add i64 %6500, %2907
  %6502 = shl i64 %6501, 2
  %6503 = add i64 %6502, 980
  %6504 = getelementptr i8, ptr %4962, i64 %6503
  %6505 = icmp uge ptr %6478, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806)
  %6506 = icmp ule ptr %6504, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684)
  %6507 = or i1 %6505, %6506
  br i1 %6507, label %6508, label %6538

6508:                                             ; preds = %6475
  store <4 x i32> zeroinitializer, ptr %6478, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6509 = getelementptr inbounds i32, ptr %6478, i64 4
  store <4 x i32> zeroinitializer, ptr %6509, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6510 = getelementptr inbounds i32, ptr %6478, i64 8
  store <4 x i32> zeroinitializer, ptr %6510, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6511 = getelementptr inbounds i32, ptr %6478, i64 12
  store <4 x i32> zeroinitializer, ptr %6511, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6512 = getelementptr inbounds i32, ptr %6478, i64 16
  store <4 x i32> zeroinitializer, ptr %6512, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6513 = getelementptr inbounds i32, ptr %6478, i64 20
  store <4 x i32> zeroinitializer, ptr %6513, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6514 = getelementptr inbounds i32, ptr %6478, i64 24
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6514, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6515 = getelementptr inbounds i32, ptr %6478, i64 28
  store <4 x i32> zeroinitializer, ptr %6515, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6516 = getelementptr inbounds i32, ptr %6478, i64 32
  store <4 x i32> zeroinitializer, ptr %6516, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6517 = getelementptr inbounds i32, ptr %6478, i64 36
  store <4 x i32> zeroinitializer, ptr %6517, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6518 = getelementptr inbounds i32, ptr %6478, i64 40
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6518, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6519 = getelementptr inbounds i32, ptr %6478, i64 44
  store <4 x i32> zeroinitializer, ptr %6519, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6520 = getelementptr inbounds i32, ptr %6478, i64 48
  store <4 x i32> zeroinitializer, ptr %6520, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6521 = getelementptr inbounds i32, ptr %6478, i64 52
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6521, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6522 = getelementptr inbounds i32, ptr %6478, i64 56
  store <4 x i32> zeroinitializer, ptr %6522, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6523 = getelementptr inbounds i32, ptr %6478, i64 60
  store <4 x i32> zeroinitializer, ptr %6523, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6524 = getelementptr inbounds i32, ptr %6478, i64 64
  store <4 x i32> zeroinitializer, ptr %6524, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6525 = getelementptr inbounds i32, ptr %6478, i64 68
  store <4 x i32> zeroinitializer, ptr %6525, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6526 = getelementptr inbounds i32, ptr %6478, i64 72
  store <4 x i32> zeroinitializer, ptr %6526, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6527 = getelementptr inbounds i32, ptr %6478, i64 76
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6527, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6528 = getelementptr inbounds i32, ptr %6478, i64 80
  store <4 x i32> zeroinitializer, ptr %6528, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6529 = getelementptr inbounds i32, ptr %6478, i64 84
  store <4 x i32> zeroinitializer, ptr %6529, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6530 = getelementptr inbounds i32, ptr %6478, i64 88
  store <4 x i32> zeroinitializer, ptr %6530, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6531 = getelementptr inbounds i32, ptr %6478, i64 92
  store <4 x i32> zeroinitializer, ptr %6531, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6532 = getelementptr inbounds i32, ptr %6478, i64 96
  store <4 x i32> zeroinitializer, ptr %6532, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6533 = getelementptr inbounds i32, ptr %6478, i64 100
  store <4 x i32> zeroinitializer, ptr %6533, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6534 = getelementptr inbounds i32, ptr %6478, i64 104
  store <4 x i32> zeroinitializer, ptr %6534, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6535 = getelementptr inbounds i32, ptr %6478, i64 108
  store <4 x i32> zeroinitializer, ptr %6535, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6536 = getelementptr inbounds i32, ptr %6478, i64 112
  store <4 x i32> zeroinitializer, ptr %6536, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  %6537 = getelementptr inbounds i32, ptr %6478, i64 116
  store <4 x i32> zeroinitializer, ptr %6537, align 4, !tbaa !105, !alias.scope !853, !noalias !856
  br label %6538

6538:                                             ; preds = %6475, %6508
  %6539 = phi i64 [ 0, %6475 ], [ 120, %6508 ]
  br label %6540

6540:                                             ; preds = %6540, %6538
  %6541 = phi i64 [ %6548, %6540 ], [ %6539, %6538 ]
  %6542 = phi i64 [ %6549, %6540 ], [ 0, %6538 ]
  %6543 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %6541
  %6544 = load i8, ptr %6543, align 1, !tbaa !46
  %6545 = icmp eq i8 %6544, 88
  %6546 = sext i1 %6545 to i32
  %6547 = getelementptr inbounds i32, ptr %6478, i64 %6541
  store i32 %6546, ptr %6547, align 4, !tbaa !105
  %6548 = add nuw nsw i64 %6541, 1
  %6549 = add i64 %6542, 1
  %6550 = icmp eq i64 %6549, 2
  br i1 %6550, label %6551, label %6540, !llvm.loop !858

6551:                                             ; preds = %6540
  br i1 %6507, label %6579, label %6552

6552:                                             ; preds = %6551, %6552
  %6553 = phi i64 [ %6577, %6552 ], [ %6548, %6551 ]
  %6554 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %6553
  %6555 = load i8, ptr %6554, align 1, !tbaa !46
  %6556 = icmp eq i8 %6555, 88
  %6557 = sext i1 %6556 to i32
  %6558 = getelementptr inbounds i32, ptr %6478, i64 %6553
  store i32 %6557, ptr %6558, align 4, !tbaa !105
  %6559 = add nuw nsw i64 %6553, 1
  %6560 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %6559
  %6561 = load i8, ptr %6560, align 1, !tbaa !46
  %6562 = icmp eq i8 %6561, 88
  %6563 = sext i1 %6562 to i32
  %6564 = getelementptr inbounds i32, ptr %6478, i64 %6559
  store i32 %6563, ptr %6564, align 4, !tbaa !105
  %6565 = add nuw nsw i64 %6553, 2
  %6566 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %6565
  %6567 = load i8, ptr %6566, align 1, !tbaa !46
  %6568 = icmp eq i8 %6567, 88
  %6569 = sext i1 %6568 to i32
  %6570 = getelementptr inbounds i32, ptr %6478, i64 %6565
  store i32 %6569, ptr %6570, align 4, !tbaa !105
  %6571 = add nuw nsw i64 %6553, 3
  %6572 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2684), i64 %6571
  %6573 = load i8, ptr %6572, align 1, !tbaa !46
  %6574 = icmp eq i8 %6573, 88
  %6575 = sext i1 %6574 to i32
  %6576 = getelementptr inbounds i32, ptr %6478, i64 %6571
  store i32 %6575, ptr %6576, align 4, !tbaa !105
  %6577 = add nuw nsw i64 %6553, 4
  %6578 = icmp eq i64 %6577, 122
  br i1 %6578, label %6579, label %6552, !llvm.loop !859

6579:                                             ; preds = %6552, %6551
  %6580 = load i32, ptr %33, align 8, !tbaa !292
  %6581 = sext i32 %6580 to i64
  %6582 = getelementptr inbounds i32, ptr %6478, i64 %6581
  %6583 = add nsw i64 %6581, %6477
  %6584 = add nsw i64 %6583, %6374
  %6585 = add nsw i64 %6584, %6272
  %6586 = add nsw i64 %6585, %6171
  %6587 = add nsw i64 %6586, %6071
  %6588 = add nsw i64 %6587, %5972
  %6589 = add i64 %6588, %5874
  %6590 = add i64 %6589, %5777
  %6591 = add i64 %6590, %5681
  %6592 = add i64 %6591, %5586
  %6593 = add i64 %6592, %5492
  %6594 = add i64 %6593, %5399
  %6595 = add i64 %6594, %5307
  %6596 = add i64 %6595, %5273
  %6597 = add i64 %6596, %5239
  %6598 = add i64 %6597, %5205
  %6599 = add i64 %6598, %5171
  %6600 = add i64 %6599, %5137
  %6601 = add i64 %6600, %5103
  %6602 = add i64 %6601, %5069
  %6603 = add i64 %6602, %5035
  %6604 = add i64 %6603, %5001
  %6605 = add i64 %6604, %4967
  %6606 = add i64 %6605, %2907
  %6607 = shl i64 %6606, 2
  %6608 = add i64 %6607, 980
  %6609 = getelementptr i8, ptr %4962, i64 %6608
  %6610 = icmp uge ptr %6582, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928)
  %6611 = icmp ule ptr %6609, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806)
  %6612 = or i1 %6610, %6611
  br i1 %6612, label %6613, label %6643

6613:                                             ; preds = %6579
  store <4 x i32> zeroinitializer, ptr %6582, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6614 = getelementptr inbounds i32, ptr %6582, i64 4
  store <4 x i32> zeroinitializer, ptr %6614, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6615 = getelementptr inbounds i32, ptr %6582, i64 8
  store <4 x i32> zeroinitializer, ptr %6615, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6616 = getelementptr inbounds i32, ptr %6582, i64 12
  store <4 x i32> zeroinitializer, ptr %6616, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6617 = getelementptr inbounds i32, ptr %6582, i64 16
  store <4 x i32> zeroinitializer, ptr %6617, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6618 = getelementptr inbounds i32, ptr %6582, i64 20
  store <4 x i32> zeroinitializer, ptr %6618, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6619 = getelementptr inbounds i32, ptr %6582, i64 24
  store <4 x i32> zeroinitializer, ptr %6619, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6620 = getelementptr inbounds i32, ptr %6582, i64 28
  store <4 x i32> zeroinitializer, ptr %6620, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6621 = getelementptr inbounds i32, ptr %6582, i64 32
  store <4 x i32> zeroinitializer, ptr %6621, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6622 = getelementptr inbounds i32, ptr %6582, i64 36
  store <4 x i32> zeroinitializer, ptr %6622, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6623 = getelementptr inbounds i32, ptr %6582, i64 40
  store <4 x i32> zeroinitializer, ptr %6623, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6624 = getelementptr inbounds i32, ptr %6582, i64 44
  store <4 x i32> zeroinitializer, ptr %6624, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6625 = getelementptr inbounds i32, ptr %6582, i64 48
  store <4 x i32> zeroinitializer, ptr %6625, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6626 = getelementptr inbounds i32, ptr %6582, i64 52
  store <4 x i32> zeroinitializer, ptr %6626, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6627 = getelementptr inbounds i32, ptr %6582, i64 56
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6627, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6628 = getelementptr inbounds i32, ptr %6582, i64 60
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6628, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6629 = getelementptr inbounds i32, ptr %6582, i64 64
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6629, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6630 = getelementptr inbounds i32, ptr %6582, i64 68
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %6630, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6631 = getelementptr inbounds i32, ptr %6582, i64 72
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6631, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6632 = getelementptr inbounds i32, ptr %6582, i64 76
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6632, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6633 = getelementptr inbounds i32, ptr %6582, i64 80
  store <4 x i32> zeroinitializer, ptr %6633, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6634 = getelementptr inbounds i32, ptr %6582, i64 84
  store <4 x i32> zeroinitializer, ptr %6634, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6635 = getelementptr inbounds i32, ptr %6582, i64 88
  store <4 x i32> zeroinitializer, ptr %6635, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6636 = getelementptr inbounds i32, ptr %6582, i64 92
  store <4 x i32> zeroinitializer, ptr %6636, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6637 = getelementptr inbounds i32, ptr %6582, i64 96
  store <4 x i32> zeroinitializer, ptr %6637, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6638 = getelementptr inbounds i32, ptr %6582, i64 100
  store <4 x i32> zeroinitializer, ptr %6638, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6639 = getelementptr inbounds i32, ptr %6582, i64 104
  store <4 x i32> zeroinitializer, ptr %6639, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6640 = getelementptr inbounds i32, ptr %6582, i64 108
  store <4 x i32> zeroinitializer, ptr %6640, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6641 = getelementptr inbounds i32, ptr %6582, i64 112
  store <4 x i32> zeroinitializer, ptr %6641, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  %6642 = getelementptr inbounds i32, ptr %6582, i64 116
  store <4 x i32> zeroinitializer, ptr %6642, align 4, !tbaa !105, !alias.scope !860, !noalias !863
  br label %6643

6643:                                             ; preds = %6579, %6613
  %6644 = phi i64 [ 0, %6579 ], [ 120, %6613 ]
  br label %6645

6645:                                             ; preds = %6645, %6643
  %6646 = phi i64 [ %6653, %6645 ], [ %6644, %6643 ]
  %6647 = phi i64 [ %6654, %6645 ], [ 0, %6643 ]
  %6648 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %6646
  %6649 = load i8, ptr %6648, align 1, !tbaa !46
  %6650 = icmp eq i8 %6649, 88
  %6651 = sext i1 %6650 to i32
  %6652 = getelementptr inbounds i32, ptr %6582, i64 %6646
  store i32 %6651, ptr %6652, align 4, !tbaa !105
  %6653 = add nuw nsw i64 %6646, 1
  %6654 = add i64 %6647, 1
  %6655 = icmp eq i64 %6654, 2
  br i1 %6655, label %6656, label %6645, !llvm.loop !865

6656:                                             ; preds = %6645
  br i1 %6612, label %6684, label %6657

6657:                                             ; preds = %6656, %6657
  %6658 = phi i64 [ %6682, %6657 ], [ %6653, %6656 ]
  %6659 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %6658
  %6660 = load i8, ptr %6659, align 1, !tbaa !46
  %6661 = icmp eq i8 %6660, 88
  %6662 = sext i1 %6661 to i32
  %6663 = getelementptr inbounds i32, ptr %6582, i64 %6658
  store i32 %6662, ptr %6663, align 4, !tbaa !105
  %6664 = add nuw nsw i64 %6658, 1
  %6665 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %6664
  %6666 = load i8, ptr %6665, align 1, !tbaa !46
  %6667 = icmp eq i8 %6666, 88
  %6668 = sext i1 %6667 to i32
  %6669 = getelementptr inbounds i32, ptr %6582, i64 %6664
  store i32 %6668, ptr %6669, align 4, !tbaa !105
  %6670 = add nuw nsw i64 %6658, 2
  %6671 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %6670
  %6672 = load i8, ptr %6671, align 1, !tbaa !46
  %6673 = icmp eq i8 %6672, 88
  %6674 = sext i1 %6673 to i32
  %6675 = getelementptr inbounds i32, ptr %6582, i64 %6670
  store i32 %6674, ptr %6675, align 4, !tbaa !105
  %6676 = add nuw nsw i64 %6658, 3
  %6677 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2806), i64 %6676
  %6678 = load i8, ptr %6677, align 1, !tbaa !46
  %6679 = icmp eq i8 %6678, 88
  %6680 = sext i1 %6679 to i32
  %6681 = getelementptr inbounds i32, ptr %6582, i64 %6676
  store i32 %6680, ptr %6681, align 4, !tbaa !105
  %6682 = add nuw nsw i64 %6658, 4
  %6683 = icmp eq i64 %6682, 122
  br i1 %6683, label %6684, label %6657, !llvm.loop !866

6684:                                             ; preds = %6657, %6656
  %6685 = load i32, ptr %33, align 8, !tbaa !292
  %6686 = sext i32 %6685 to i64
  %6687 = getelementptr inbounds i32, ptr %6582, i64 %6686
  %6688 = add nsw i64 %6686, %6581
  %6689 = add nsw i64 %6688, %6477
  %6690 = add nsw i64 %6689, %6374
  %6691 = add nsw i64 %6690, %6272
  %6692 = add nsw i64 %6691, %6171
  %6693 = add nsw i64 %6692, %6071
  %6694 = add i64 %6693, %5972
  %6695 = add i64 %6694, %5874
  %6696 = add i64 %6695, %5777
  %6697 = add i64 %6696, %5681
  %6698 = add i64 %6697, %5586
  %6699 = add i64 %6698, %5492
  %6700 = add i64 %6699, %5399
  %6701 = add i64 %6700, %5307
  %6702 = add i64 %6701, %5273
  %6703 = add i64 %6702, %5239
  %6704 = add i64 %6703, %5205
  %6705 = add i64 %6704, %5171
  %6706 = add i64 %6705, %5137
  %6707 = add i64 %6706, %5103
  %6708 = add i64 %6707, %5069
  %6709 = add i64 %6708, %5035
  %6710 = add i64 %6709, %5001
  %6711 = add i64 %6710, %4967
  %6712 = add i64 %6711, %2907
  %6713 = shl i64 %6712, 2
  %6714 = add i64 %6713, 980
  %6715 = getelementptr i8, ptr %4962, i64 %6714
  %6716 = icmp uge ptr %6687, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050)
  %6717 = icmp ule ptr %6715, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928)
  %6718 = or i1 %6716, %6717
  br i1 %6718, label %6719, label %6749

6719:                                             ; preds = %6684
  store <4 x i32> zeroinitializer, ptr %6687, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6720 = getelementptr inbounds i32, ptr %6687, i64 4
  store <4 x i32> zeroinitializer, ptr %6720, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6721 = getelementptr inbounds i32, ptr %6687, i64 8
  store <4 x i32> zeroinitializer, ptr %6721, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6722 = getelementptr inbounds i32, ptr %6687, i64 12
  store <4 x i32> zeroinitializer, ptr %6722, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6723 = getelementptr inbounds i32, ptr %6687, i64 16
  store <4 x i32> zeroinitializer, ptr %6723, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6724 = getelementptr inbounds i32, ptr %6687, i64 20
  store <4 x i32> zeroinitializer, ptr %6724, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6725 = getelementptr inbounds i32, ptr %6687, i64 24
  store <4 x i32> zeroinitializer, ptr %6725, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6726 = getelementptr inbounds i32, ptr %6687, i64 28
  store <4 x i32> zeroinitializer, ptr %6726, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6727 = getelementptr inbounds i32, ptr %6687, i64 32
  store <4 x i32> zeroinitializer, ptr %6727, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6728 = getelementptr inbounds i32, ptr %6687, i64 36
  store <4 x i32> zeroinitializer, ptr %6728, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6729 = getelementptr inbounds i32, ptr %6687, i64 40
  store <4 x i32> zeroinitializer, ptr %6729, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6730 = getelementptr inbounds i32, ptr %6687, i64 44
  store <4 x i32> zeroinitializer, ptr %6730, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6731 = getelementptr inbounds i32, ptr %6687, i64 48
  store <4 x i32> zeroinitializer, ptr %6731, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6732 = getelementptr inbounds i32, ptr %6687, i64 52
  store <4 x i32> zeroinitializer, ptr %6732, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6733 = getelementptr inbounds i32, ptr %6687, i64 56
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 0>, ptr %6733, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6734 = getelementptr inbounds i32, ptr %6687, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6734, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6735 = getelementptr inbounds i32, ptr %6687, i64 64
  store <4 x i32> zeroinitializer, ptr %6735, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6736 = getelementptr inbounds i32, ptr %6687, i64 68
  store <4 x i32> zeroinitializer, ptr %6736, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6737 = getelementptr inbounds i32, ptr %6687, i64 72
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 -1>, ptr %6737, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6738 = getelementptr inbounds i32, ptr %6687, i64 76
  store <4 x i32> zeroinitializer, ptr %6738, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6739 = getelementptr inbounds i32, ptr %6687, i64 80
  store <4 x i32> zeroinitializer, ptr %6739, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6740 = getelementptr inbounds i32, ptr %6687, i64 84
  store <4 x i32> zeroinitializer, ptr %6740, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6741 = getelementptr inbounds i32, ptr %6687, i64 88
  store <4 x i32> zeroinitializer, ptr %6741, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6742 = getelementptr inbounds i32, ptr %6687, i64 92
  store <4 x i32> zeroinitializer, ptr %6742, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6743 = getelementptr inbounds i32, ptr %6687, i64 96
  store <4 x i32> zeroinitializer, ptr %6743, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6744 = getelementptr inbounds i32, ptr %6687, i64 100
  store <4 x i32> zeroinitializer, ptr %6744, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6745 = getelementptr inbounds i32, ptr %6687, i64 104
  store <4 x i32> zeroinitializer, ptr %6745, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6746 = getelementptr inbounds i32, ptr %6687, i64 108
  store <4 x i32> zeroinitializer, ptr %6746, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6747 = getelementptr inbounds i32, ptr %6687, i64 112
  store <4 x i32> zeroinitializer, ptr %6747, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  %6748 = getelementptr inbounds i32, ptr %6687, i64 116
  store <4 x i32> zeroinitializer, ptr %6748, align 4, !tbaa !105, !alias.scope !867, !noalias !870
  br label %6749

6749:                                             ; preds = %6684, %6719
  %6750 = phi i64 [ 0, %6684 ], [ 120, %6719 ]
  br label %6751

6751:                                             ; preds = %6751, %6749
  %6752 = phi i64 [ %6759, %6751 ], [ %6750, %6749 ]
  %6753 = phi i64 [ %6760, %6751 ], [ 0, %6749 ]
  %6754 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %6752
  %6755 = load i8, ptr %6754, align 1, !tbaa !46
  %6756 = icmp eq i8 %6755, 88
  %6757 = sext i1 %6756 to i32
  %6758 = getelementptr inbounds i32, ptr %6687, i64 %6752
  store i32 %6757, ptr %6758, align 4, !tbaa !105
  %6759 = add nuw nsw i64 %6752, 1
  %6760 = add i64 %6753, 1
  %6761 = icmp eq i64 %6760, 2
  br i1 %6761, label %6762, label %6751, !llvm.loop !872

6762:                                             ; preds = %6751
  br i1 %6718, label %6790, label %6763

6763:                                             ; preds = %6762, %6763
  %6764 = phi i64 [ %6788, %6763 ], [ %6759, %6762 ]
  %6765 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %6764
  %6766 = load i8, ptr %6765, align 1, !tbaa !46
  %6767 = icmp eq i8 %6766, 88
  %6768 = sext i1 %6767 to i32
  %6769 = getelementptr inbounds i32, ptr %6687, i64 %6764
  store i32 %6768, ptr %6769, align 4, !tbaa !105
  %6770 = add nuw nsw i64 %6764, 1
  %6771 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %6770
  %6772 = load i8, ptr %6771, align 1, !tbaa !46
  %6773 = icmp eq i8 %6772, 88
  %6774 = sext i1 %6773 to i32
  %6775 = getelementptr inbounds i32, ptr %6687, i64 %6770
  store i32 %6774, ptr %6775, align 4, !tbaa !105
  %6776 = add nuw nsw i64 %6764, 2
  %6777 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %6776
  %6778 = load i8, ptr %6777, align 1, !tbaa !46
  %6779 = icmp eq i8 %6778, 88
  %6780 = sext i1 %6779 to i32
  %6781 = getelementptr inbounds i32, ptr %6687, i64 %6776
  store i32 %6780, ptr %6781, align 4, !tbaa !105
  %6782 = add nuw nsw i64 %6764, 3
  %6783 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 2928), i64 %6782
  %6784 = load i8, ptr %6783, align 1, !tbaa !46
  %6785 = icmp eq i8 %6784, 88
  %6786 = sext i1 %6785 to i32
  %6787 = getelementptr inbounds i32, ptr %6687, i64 %6782
  store i32 %6786, ptr %6787, align 4, !tbaa !105
  %6788 = add nuw nsw i64 %6764, 4
  %6789 = icmp eq i64 %6788, 122
  br i1 %6789, label %6790, label %6763, !llvm.loop !873

6790:                                             ; preds = %6763, %6762
  %6791 = load i32, ptr %33, align 8, !tbaa !292
  %6792 = sext i32 %6791 to i64
  %6793 = getelementptr inbounds i32, ptr %6687, i64 %6792
  %6794 = add nsw i64 %6792, %6686
  %6795 = add nsw i64 %6794, %6581
  %6796 = add nsw i64 %6795, %6477
  %6797 = add nsw i64 %6796, %6374
  %6798 = add nsw i64 %6797, %6272
  %6799 = add nsw i64 %6798, %6171
  %6800 = add i64 %6799, %6071
  %6801 = add i64 %6800, %5972
  %6802 = add i64 %6801, %5874
  %6803 = add i64 %6802, %5777
  %6804 = add i64 %6803, %5681
  %6805 = add i64 %6804, %5586
  %6806 = add i64 %6805, %5492
  %6807 = add i64 %6806, %5399
  %6808 = add i64 %6807, %5307
  %6809 = add i64 %6808, %5273
  %6810 = add i64 %6809, %5239
  %6811 = add i64 %6810, %5205
  %6812 = add i64 %6811, %5171
  %6813 = add i64 %6812, %5137
  %6814 = add i64 %6813, %5103
  %6815 = add i64 %6814, %5069
  %6816 = add i64 %6815, %5035
  %6817 = add i64 %6816, %5001
  %6818 = add i64 %6817, %4967
  %6819 = add i64 %6818, %2907
  %6820 = shl i64 %6819, 2
  %6821 = add i64 %6820, 980
  %6822 = getelementptr i8, ptr %4962, i64 %6821
  %6823 = icmp uge ptr %6793, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172)
  %6824 = icmp ule ptr %6822, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050)
  %6825 = or i1 %6823, %6824
  br i1 %6825, label %6826, label %6856

6826:                                             ; preds = %6790
  store <4 x i32> zeroinitializer, ptr %6793, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6827 = getelementptr inbounds i32, ptr %6793, i64 4
  store <4 x i32> zeroinitializer, ptr %6827, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6828 = getelementptr inbounds i32, ptr %6793, i64 8
  store <4 x i32> zeroinitializer, ptr %6828, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6829 = getelementptr inbounds i32, ptr %6793, i64 12
  store <4 x i32> zeroinitializer, ptr %6829, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6830 = getelementptr inbounds i32, ptr %6793, i64 16
  store <4 x i32> zeroinitializer, ptr %6830, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6831 = getelementptr inbounds i32, ptr %6793, i64 20
  store <4 x i32> zeroinitializer, ptr %6831, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6832 = getelementptr inbounds i32, ptr %6793, i64 24
  store <4 x i32> zeroinitializer, ptr %6832, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6833 = getelementptr inbounds i32, ptr %6793, i64 28
  store <4 x i32> zeroinitializer, ptr %6833, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6834 = getelementptr inbounds i32, ptr %6793, i64 32
  store <4 x i32> zeroinitializer, ptr %6834, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6835 = getelementptr inbounds i32, ptr %6793, i64 36
  store <4 x i32> zeroinitializer, ptr %6835, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6836 = getelementptr inbounds i32, ptr %6793, i64 40
  store <4 x i32> zeroinitializer, ptr %6836, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6837 = getelementptr inbounds i32, ptr %6793, i64 44
  store <4 x i32> zeroinitializer, ptr %6837, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6838 = getelementptr inbounds i32, ptr %6793, i64 48
  store <4 x i32> zeroinitializer, ptr %6838, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6839 = getelementptr inbounds i32, ptr %6793, i64 52
  store <4 x i32> zeroinitializer, ptr %6839, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6840 = getelementptr inbounds i32, ptr %6793, i64 56
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, ptr %6840, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6841 = getelementptr inbounds i32, ptr %6793, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6841, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6842 = getelementptr inbounds i32, ptr %6793, i64 64
  store <4 x i32> zeroinitializer, ptr %6842, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6843 = getelementptr inbounds i32, ptr %6793, i64 68
  store <4 x i32> zeroinitializer, ptr %6843, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6844 = getelementptr inbounds i32, ptr %6793, i64 72
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 0>, ptr %6844, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6845 = getelementptr inbounds i32, ptr %6793, i64 76
  store <4 x i32> zeroinitializer, ptr %6845, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6846 = getelementptr inbounds i32, ptr %6793, i64 80
  store <4 x i32> zeroinitializer, ptr %6846, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6847 = getelementptr inbounds i32, ptr %6793, i64 84
  store <4 x i32> zeroinitializer, ptr %6847, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6848 = getelementptr inbounds i32, ptr %6793, i64 88
  store <4 x i32> zeroinitializer, ptr %6848, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6849 = getelementptr inbounds i32, ptr %6793, i64 92
  store <4 x i32> zeroinitializer, ptr %6849, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6850 = getelementptr inbounds i32, ptr %6793, i64 96
  store <4 x i32> zeroinitializer, ptr %6850, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6851 = getelementptr inbounds i32, ptr %6793, i64 100
  store <4 x i32> zeroinitializer, ptr %6851, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6852 = getelementptr inbounds i32, ptr %6793, i64 104
  store <4 x i32> zeroinitializer, ptr %6852, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6853 = getelementptr inbounds i32, ptr %6793, i64 108
  store <4 x i32> zeroinitializer, ptr %6853, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6854 = getelementptr inbounds i32, ptr %6793, i64 112
  store <4 x i32> zeroinitializer, ptr %6854, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  %6855 = getelementptr inbounds i32, ptr %6793, i64 116
  store <4 x i32> zeroinitializer, ptr %6855, align 4, !tbaa !105, !alias.scope !874, !noalias !877
  br label %6856

6856:                                             ; preds = %6790, %6826
  %6857 = phi i64 [ 0, %6790 ], [ 120, %6826 ]
  br label %6858

6858:                                             ; preds = %6858, %6856
  %6859 = phi i64 [ %6866, %6858 ], [ %6857, %6856 ]
  %6860 = phi i64 [ %6867, %6858 ], [ 0, %6856 ]
  %6861 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %6859
  %6862 = load i8, ptr %6861, align 1, !tbaa !46
  %6863 = icmp eq i8 %6862, 88
  %6864 = sext i1 %6863 to i32
  %6865 = getelementptr inbounds i32, ptr %6793, i64 %6859
  store i32 %6864, ptr %6865, align 4, !tbaa !105
  %6866 = add nuw nsw i64 %6859, 1
  %6867 = add i64 %6860, 1
  %6868 = icmp eq i64 %6867, 2
  br i1 %6868, label %6869, label %6858, !llvm.loop !879

6869:                                             ; preds = %6858
  br i1 %6825, label %6897, label %6870

6870:                                             ; preds = %6869, %6870
  %6871 = phi i64 [ %6895, %6870 ], [ %6866, %6869 ]
  %6872 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %6871
  %6873 = load i8, ptr %6872, align 1, !tbaa !46
  %6874 = icmp eq i8 %6873, 88
  %6875 = sext i1 %6874 to i32
  %6876 = getelementptr inbounds i32, ptr %6793, i64 %6871
  store i32 %6875, ptr %6876, align 4, !tbaa !105
  %6877 = add nuw nsw i64 %6871, 1
  %6878 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %6877
  %6879 = load i8, ptr %6878, align 1, !tbaa !46
  %6880 = icmp eq i8 %6879, 88
  %6881 = sext i1 %6880 to i32
  %6882 = getelementptr inbounds i32, ptr %6793, i64 %6877
  store i32 %6881, ptr %6882, align 4, !tbaa !105
  %6883 = add nuw nsw i64 %6871, 2
  %6884 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %6883
  %6885 = load i8, ptr %6884, align 1, !tbaa !46
  %6886 = icmp eq i8 %6885, 88
  %6887 = sext i1 %6886 to i32
  %6888 = getelementptr inbounds i32, ptr %6793, i64 %6883
  store i32 %6887, ptr %6888, align 4, !tbaa !105
  %6889 = add nuw nsw i64 %6871, 3
  %6890 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3050), i64 %6889
  %6891 = load i8, ptr %6890, align 1, !tbaa !46
  %6892 = icmp eq i8 %6891, 88
  %6893 = sext i1 %6892 to i32
  %6894 = getelementptr inbounds i32, ptr %6793, i64 %6889
  store i32 %6893, ptr %6894, align 4, !tbaa !105
  %6895 = add nuw nsw i64 %6871, 4
  %6896 = icmp eq i64 %6895, 122
  br i1 %6896, label %6897, label %6870, !llvm.loop !880

6897:                                             ; preds = %6870, %6869
  %6898 = load i32, ptr %33, align 8, !tbaa !292
  %6899 = sext i32 %6898 to i64
  %6900 = getelementptr inbounds i32, ptr %6793, i64 %6899
  %6901 = add nsw i64 %6899, %6792
  %6902 = add nsw i64 %6901, %6686
  %6903 = add nsw i64 %6902, %6581
  %6904 = add nsw i64 %6903, %6477
  %6905 = add nsw i64 %6904, %6374
  %6906 = add nsw i64 %6905, %6272
  %6907 = add i64 %6906, %6171
  %6908 = add i64 %6907, %6071
  %6909 = add i64 %6908, %5972
  %6910 = add i64 %6909, %5874
  %6911 = add i64 %6910, %5777
  %6912 = add i64 %6911, %5681
  %6913 = add i64 %6912, %5586
  %6914 = add i64 %6913, %5492
  %6915 = add i64 %6914, %5399
  %6916 = add i64 %6915, %5307
  %6917 = add i64 %6916, %5273
  %6918 = add i64 %6917, %5239
  %6919 = add i64 %6918, %5205
  %6920 = add i64 %6919, %5171
  %6921 = add i64 %6920, %5137
  %6922 = add i64 %6921, %5103
  %6923 = add i64 %6922, %5069
  %6924 = add i64 %6923, %5035
  %6925 = add i64 %6924, %5001
  %6926 = add i64 %6925, %4967
  %6927 = add i64 %6926, %2907
  %6928 = shl i64 %6927, 2
  %6929 = add i64 %6928, 980
  %6930 = getelementptr i8, ptr %4962, i64 %6929
  %6931 = icmp uge ptr %6900, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3294)
  %6932 = icmp ule ptr %6930, getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172)
  %6933 = or i1 %6931, %6932
  br i1 %6933, label %6934, label %6964

6934:                                             ; preds = %6897
  store <4 x i32> zeroinitializer, ptr %6900, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6935 = getelementptr inbounds i32, ptr %6900, i64 4
  store <4 x i32> zeroinitializer, ptr %6935, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6936 = getelementptr inbounds i32, ptr %6900, i64 8
  store <4 x i32> zeroinitializer, ptr %6936, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6937 = getelementptr inbounds i32, ptr %6900, i64 12
  store <4 x i32> zeroinitializer, ptr %6937, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6938 = getelementptr inbounds i32, ptr %6900, i64 16
  store <4 x i32> zeroinitializer, ptr %6938, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6939 = getelementptr inbounds i32, ptr %6900, i64 20
  store <4 x i32> zeroinitializer, ptr %6939, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6940 = getelementptr inbounds i32, ptr %6900, i64 24
  store <4 x i32> zeroinitializer, ptr %6940, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6941 = getelementptr inbounds i32, ptr %6900, i64 28
  store <4 x i32> zeroinitializer, ptr %6941, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6942 = getelementptr inbounds i32, ptr %6900, i64 32
  store <4 x i32> zeroinitializer, ptr %6942, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6943 = getelementptr inbounds i32, ptr %6900, i64 36
  store <4 x i32> zeroinitializer, ptr %6943, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6944 = getelementptr inbounds i32, ptr %6900, i64 40
  store <4 x i32> zeroinitializer, ptr %6944, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6945 = getelementptr inbounds i32, ptr %6900, i64 44
  store <4 x i32> zeroinitializer, ptr %6945, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6946 = getelementptr inbounds i32, ptr %6900, i64 48
  store <4 x i32> zeroinitializer, ptr %6946, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6947 = getelementptr inbounds i32, ptr %6900, i64 52
  store <4 x i32> zeroinitializer, ptr %6947, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6948 = getelementptr inbounds i32, ptr %6900, i64 56
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, ptr %6948, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6949 = getelementptr inbounds i32, ptr %6900, i64 60
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, ptr %6949, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6950 = getelementptr inbounds i32, ptr %6900, i64 64
  store <4 x i32> zeroinitializer, ptr %6950, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6951 = getelementptr inbounds i32, ptr %6900, i64 68
  store <4 x i32> zeroinitializer, ptr %6951, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6952 = getelementptr inbounds i32, ptr %6900, i64 72
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 0>, ptr %6952, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6953 = getelementptr inbounds i32, ptr %6900, i64 76
  store <4 x i32> zeroinitializer, ptr %6953, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6954 = getelementptr inbounds i32, ptr %6900, i64 80
  store <4 x i32> zeroinitializer, ptr %6954, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6955 = getelementptr inbounds i32, ptr %6900, i64 84
  store <4 x i32> zeroinitializer, ptr %6955, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6956 = getelementptr inbounds i32, ptr %6900, i64 88
  store <4 x i32> zeroinitializer, ptr %6956, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6957 = getelementptr inbounds i32, ptr %6900, i64 92
  store <4 x i32> zeroinitializer, ptr %6957, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6958 = getelementptr inbounds i32, ptr %6900, i64 96
  store <4 x i32> zeroinitializer, ptr %6958, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6959 = getelementptr inbounds i32, ptr %6900, i64 100
  store <4 x i32> zeroinitializer, ptr %6959, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6960 = getelementptr inbounds i32, ptr %6900, i64 104
  store <4 x i32> zeroinitializer, ptr %6960, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6961 = getelementptr inbounds i32, ptr %6900, i64 108
  store <4 x i32> zeroinitializer, ptr %6961, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6962 = getelementptr inbounds i32, ptr %6900, i64 112
  store <4 x i32> zeroinitializer, ptr %6962, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  %6963 = getelementptr inbounds i32, ptr %6900, i64 116
  store <4 x i32> zeroinitializer, ptr %6963, align 4, !tbaa !105, !alias.scope !881, !noalias !884
  br label %6964

6964:                                             ; preds = %6897, %6934
  %6965 = phi i64 [ 0, %6897 ], [ 120, %6934 ]
  br label %6966

6966:                                             ; preds = %6966, %6964
  %6967 = phi i64 [ %6974, %6966 ], [ %6965, %6964 ]
  %6968 = phi i64 [ %6975, %6966 ], [ 0, %6964 ]
  %6969 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %6967
  %6970 = load i8, ptr %6969, align 1, !tbaa !46
  %6971 = icmp eq i8 %6970, 88
  %6972 = sext i1 %6971 to i32
  %6973 = getelementptr inbounds i32, ptr %6900, i64 %6967
  store i32 %6972, ptr %6973, align 4, !tbaa !105
  %6974 = add nuw nsw i64 %6967, 1
  %6975 = add i64 %6968, 1
  %6976 = icmp eq i64 %6975, 2
  br i1 %6976, label %6977, label %6966, !llvm.loop !886

6977:                                             ; preds = %6966
  br i1 %6933, label %7049, label %6978

6978:                                             ; preds = %6977, %6978
  %6979 = phi i64 [ %7003, %6978 ], [ %6974, %6977 ]
  %6980 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %6979
  %6981 = load i8, ptr %6980, align 1, !tbaa !46
  %6982 = icmp eq i8 %6981, 88
  %6983 = sext i1 %6982 to i32
  %6984 = getelementptr inbounds i32, ptr %6900, i64 %6979
  store i32 %6983, ptr %6984, align 4, !tbaa !105
  %6985 = add nuw nsw i64 %6979, 1
  %6986 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %6985
  %6987 = load i8, ptr %6986, align 1, !tbaa !46
  %6988 = icmp eq i8 %6987, 88
  %6989 = sext i1 %6988 to i32
  %6990 = getelementptr inbounds i32, ptr %6900, i64 %6985
  store i32 %6989, ptr %6990, align 4, !tbaa !105
  %6991 = add nuw nsw i64 %6979, 2
  %6992 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %6991
  %6993 = load i8, ptr %6992, align 1, !tbaa !46
  %6994 = icmp eq i8 %6993, 88
  %6995 = sext i1 %6994 to i32
  %6996 = getelementptr inbounds i32, ptr %6900, i64 %6991
  store i32 %6995, ptr %6996, align 4, !tbaa !105
  %6997 = add nuw nsw i64 %6979, 3
  %6998 = getelementptr inbounds i8, ptr getelementptr inbounds ([3295 x i8], ptr @FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, i64 0, i64 3172), i64 %6997
  %6999 = load i8, ptr %6998, align 1, !tbaa !46
  %7000 = icmp eq i8 %6999, 88
  %7001 = sext i1 %7000 to i32
  %7002 = getelementptr inbounds i32, ptr %6900, i64 %6997
  store i32 %7001, ptr %7002, align 4, !tbaa !105
  %7003 = add nuw nsw i64 %6979, 4
  %7004 = icmp eq i64 %7003, 122
  br i1 %7004, label %7049, label %6978, !llvm.loop !887

7005:                                             ; preds = %32
  %7006 = icmp eq i16 %38, 2
  br i1 %7006, label %7007, label %7011

7007:                                             ; preds = %7005
  %7008 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %25, i64 %26, i32 1
  %7009 = load i16, ptr %7008, align 2, !tbaa !550
  %7010 = icmp eq i16 %7009, 2
  br i1 %7010, label %7012, label %7011

7011:                                             ; preds = %7007, %7005
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EA@DBHHBIED@?$AAr?$AA?9?$AA?$DO?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AA?9?$AA?$DO?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2692)
  br label %7012

7012:                                             ; preds = %7011, %7007
  %7013 = load i16, ptr %28, align 4, !tbaa !346
  %7014 = zext i16 %7013 to i32
  %7015 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %25, i64 %26, i32 3
  %7016 = load i16, ptr %7015, align 2, !tbaa !348
  %7017 = zext i16 %7016 to i32
  %7018 = mul nsw i32 %34, %7017
  %7019 = add nsw i32 %7018, %7014
  %7020 = load ptr, ptr %2, align 8, !tbaa !273
  %7021 = icmp eq ptr %7020, null
  %7022 = add nsw i32 %7019, 1
  %7023 = sext i32 %7022 to i64
  br i1 %7021, label %7037, label %7024

7024:                                             ; preds = %7012
  %7025 = add nsw i32 %7019, %34
  %7026 = add nsw i32 %7025, 1
  %7027 = sext i32 %7026 to i64
  %7028 = getelementptr inbounds i8, ptr %7020, i64 %7027
  store i8 -1, ptr %7028, align 1, !tbaa !46
  %7029 = load ptr, ptr %2, align 8, !tbaa !273
  %7030 = sext i32 %7025 to i64
  %7031 = getelementptr inbounds i8, ptr %7029, i64 %7030
  store i8 -1, ptr %7031, align 1, !tbaa !46
  %7032 = load ptr, ptr %2, align 8, !tbaa !273
  %7033 = getelementptr inbounds i8, ptr %7032, i64 %7023
  store i8 -1, ptr %7033, align 1, !tbaa !46
  %7034 = load ptr, ptr %2, align 8, !tbaa !273
  %7035 = sext i32 %7019 to i64
  %7036 = getelementptr inbounds i8, ptr %7034, i64 %7035
  store i8 -1, ptr %7036, align 1, !tbaa !46
  br label %7049

7037:                                             ; preds = %7012
  %7038 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  %7039 = load ptr, ptr %7038, align 8, !tbaa !274
  %7040 = add nsw i32 %7019, %34
  %7041 = add nsw i32 %7040, 1
  %7042 = sext i32 %7041 to i64
  %7043 = getelementptr inbounds i32, ptr %7039, i64 %7042
  store i32 -1, ptr %7043, align 4, !tbaa !105
  %7044 = sext i32 %7040 to i64
  %7045 = getelementptr inbounds i32, ptr %7039, i64 %7044
  store i32 -1, ptr %7045, align 4, !tbaa !105
  %7046 = getelementptr inbounds i32, ptr %7039, i64 %7023
  store i32 -1, ptr %7046, align 4, !tbaa !105
  %7047 = sext i32 %7019 to i64
  %7048 = getelementptr inbounds i32, ptr %7039, i64 %7047
  store i32 -1, ptr %7048, align 4, !tbaa !105
  br label %7049

7049:                                             ; preds = %2868, %2869, %6977, %6978, %7024, %7037
  %7050 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 12
  %7051 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 12, i32 1
  %7052 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 13
  %7053 = load <2 x i16>, ptr %28, align 4, !tbaa !121
  %7054 = uitofp <2 x i16> %7053 to <2 x float>
  %7055 = fadd fast <2 x float> %7054, <float 5.000000e-01, float 5.000000e-01>
  %7056 = load <2 x float>, ptr %7050, align 8, !tbaa !6
  %7057 = fmul fast <2 x float> %7055, %7056
  store <2 x float> %7057, ptr %7052, align 8
  %7058 = load i32, ptr %0, align 8, !tbaa !349
  %7059 = and i32 %7058, 4
  %7060 = icmp eq i32 %7059, 0
  br i1 %7060, label %7061, label %7235

7061:                                             ; preds = %7049
  %7062 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 21
  %7063 = load i32, ptr %7062, align 8, !tbaa !265
  %7064 = icmp sgt i32 %7063, -1
  br i1 %7064, label %7067, label %7065

7065:                                             ; preds = %7061
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BG@HMJJDGFN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2856)
  %7066 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  br label %7071

7067:                                             ; preds = %7061
  %7068 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %7069 = load i32, ptr %7068, align 8
  %7070 = icmp sgt i32 %7069, %7063
  br i1 %7070, label %7073, label %7071

7071:                                             ; preds = %7067, %7065
  %7072 = phi ptr [ %7066, %7065 ], [ %7068, %7067 ]
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %7073

7073:                                             ; preds = %7071, %7067
  %7074 = phi ptr [ %7068, %7067 ], [ %7072, %7071 ]
  %7075 = getelementptr inbounds %struct.ImVector.3, ptr %7074, i64 0, i32 2
  %7076 = load ptr, ptr %7075, align 8, !tbaa !271
  %7077 = sext i32 %7063 to i64
  %7078 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7076, i64 %7077
  %7079 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7076, i64 %7077, i32 2
  %7080 = load i16, ptr %7079, align 4, !tbaa !346
  %7081 = icmp eq i16 %7080, -1
  br i1 %7081, label %7082, label %7083

7082:                                             ; preds = %7073
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BM@DDBMCGAE@?$AAr?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2713)
  br label %7083

7083:                                             ; preds = %7082, %7073
  %7084 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7076, i64 %7077, i32 1
  %7085 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7076, i64 %7077, i32 3
  %7086 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 9
  br label %7087

7087:                                             ; preds = %7203, %7083
  %7088 = phi i32 [ %7234, %7203 ], [ 0, %7083 ]
  %7089 = phi i64 [ %7218, %7203 ], [ 0, %7083 ]
  %7090 = shl nuw nsw i64 %7089, 2
  %7091 = load i16, ptr %7078, align 8, !tbaa !549
  %7092 = zext i16 %7091 to i32
  %7093 = trunc i64 %7089 to i32
  %7094 = sub nsw i32 %7092, %7093
  %7095 = lshr i32 %7094, 1
  %7096 = add i32 %7095, %7093
  %7097 = sub i32 %7092, %7096
  %7098 = load i16, ptr %7084, align 2, !tbaa !550
  %7099 = zext i16 %7098 to i64
  %7100 = icmp ult i64 %7089, %7099
  br i1 %7100, label %7102, label %7101

7101:                                             ; preds = %7087
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1HO@DLMJCKJA@?$AAp?$AAa?$AAd?$AA_?$AAl?$AAe?$AAf?$AAt?$AA?5?$AA?$CL?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA_?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$CL?$AA?5?$AAp?$AAa?$AAd?$AA_?$AAr?$AAi?$AAg?$AAh@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2723)
  br label %7102

7102:                                             ; preds = %7101, %7087
  %7103 = load ptr, ptr %2, align 8, !tbaa !273
  %7104 = icmp eq ptr %7103, null
  br i1 %7104, label %7133, label %7105

7105:                                             ; preds = %7102
  %7106 = load i16, ptr %7079, align 4, !tbaa !346
  %7107 = zext i16 %7106 to i32
  %7108 = load i16, ptr %7085, align 2, !tbaa !348
  %7109 = zext i16 %7108 to i32
  %7110 = add nuw nsw i32 %7109, %7093
  %7111 = load i32, ptr %33, align 8, !tbaa !292
  %7112 = mul i32 %7110, %7111
  %7113 = add i32 %7112, %7107
  %7114 = zext i32 %7113 to i64
  %7115 = getelementptr i8, ptr %7103, i64 %7114
  %7116 = icmp ult i32 %7094, 2
  br i1 %7116, label %7120, label %7117

7117:                                             ; preds = %7105
  %7118 = tail call i32 @llvm.umax.i32(i32 %7095, i32 1)
  %7119 = zext i32 %7118 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %7115, i8 0, i64 %7119, i1 false), !tbaa !46
  br label %7120

7120:                                             ; preds = %7117, %7105
  %7121 = icmp eq i64 %7089, 0
  br i1 %7121, label %7125, label %7122

7122:                                             ; preds = %7120
  %7123 = zext i32 %7095 to i64
  %7124 = getelementptr inbounds i8, ptr %7115, i64 %7123
  tail call void @llvm.memset.p0.i64(ptr align 1 %7124, i8 -1, i64 %7089, i1 false), !tbaa !46
  br label %7125

7125:                                             ; preds = %7122, %7120
  %7126 = icmp eq i32 %7096, %7092
  br i1 %7126, label %7203, label %7127

7127:                                             ; preds = %7125
  %7128 = zext i32 %7095 to i64
  %7129 = getelementptr inbounds i8, ptr %7115, i64 %7128
  %7130 = getelementptr inbounds i8, ptr %7129, i64 %7089
  %7131 = tail call i32 @llvm.umax.i32(i32 %7097, i32 1)
  %7132 = zext i32 %7131 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %7130, i8 0, i64 %7132, i1 false), !tbaa !46
  br label %7203

7133:                                             ; preds = %7102
  %7134 = load ptr, ptr %7086, align 8, !tbaa !274
  %7135 = load i16, ptr %7079, align 4, !tbaa !346
  %7136 = zext i16 %7135 to i32
  %7137 = load i16, ptr %7085, align 2, !tbaa !348
  %7138 = zext i16 %7137 to i32
  %7139 = add nuw nsw i32 %7138, %7093
  %7140 = load i32, ptr %33, align 8, !tbaa !292
  %7141 = mul i32 %7139, %7140
  %7142 = add i32 %7141, %7136
  %7143 = zext i32 %7142 to i64
  %7144 = getelementptr inbounds i32, ptr %7134, i64 %7143
  %7145 = icmp ult i32 %7094, 2
  br i1 %7145, label %7164, label %7146

7146:                                             ; preds = %7133
  %7147 = add i32 %7088, %7092
  %7148 = lshr i32 %7147, 1
  %7149 = tail call i32 @llvm.umax.i32(i32 %7148, i32 1)
  %7150 = zext i32 %7149 to i64
  %7151 = icmp ult i32 %7149, 8
  br i1 %7151, label %7162, label %7152

7152:                                             ; preds = %7146
  %7153 = and i64 %7150, 2147483640
  br label %7154

7154:                                             ; preds = %7154, %7152
  %7155 = phi i64 [ 0, %7152 ], [ %7158, %7154 ]
  %7156 = getelementptr inbounds i32, ptr %7144, i64 %7155
  store <4 x i32> <i32 16777215, i32 16777215, i32 16777215, i32 16777215>, ptr %7156, align 4, !tbaa !105
  %7157 = getelementptr inbounds i32, ptr %7156, i64 4
  store <4 x i32> <i32 16777215, i32 16777215, i32 16777215, i32 16777215>, ptr %7157, align 4, !tbaa !105
  %7158 = add nuw i64 %7155, 8
  %7159 = icmp eq i64 %7158, %7153
  br i1 %7159, label %7160, label %7154, !llvm.loop !888

7160:                                             ; preds = %7154
  %7161 = icmp eq i64 %7153, %7150
  br i1 %7161, label %7164, label %7162

7162:                                             ; preds = %7146, %7160
  %7163 = phi i64 [ 0, %7146 ], [ %7153, %7160 ]
  br label %7169

7164:                                             ; preds = %7169, %7160, %7133
  %7165 = icmp eq i64 %7089, 0
  br i1 %7165, label %7174, label %7166

7166:                                             ; preds = %7164
  %7167 = zext i32 %7095 to i64
  %7168 = getelementptr inbounds i32, ptr %7144, i64 %7167
  tail call void @llvm.memset.p0.i64(ptr align 4 %7168, i8 -1, i64 %7090, i1 false), !tbaa !105
  br label %7174

7169:                                             ; preds = %7162, %7169
  %7170 = phi i64 [ %7172, %7169 ], [ %7163, %7162 ]
  %7171 = getelementptr inbounds i32, ptr %7144, i64 %7170
  store i32 16777215, ptr %7171, align 4, !tbaa !105
  %7172 = add nuw nsw i64 %7170, 1
  %7173 = icmp eq i64 %7172, %7150
  br i1 %7173, label %7164, label %7169, !llvm.loop !889

7174:                                             ; preds = %7166, %7164
  %7175 = icmp eq i32 %7096, %7092
  br i1 %7175, label %7203, label %7176

7176:                                             ; preds = %7174
  %7177 = zext i32 %7095 to i64
  %7178 = getelementptr inbounds i32, ptr %7144, i64 %7177
  %7179 = getelementptr inbounds i32, ptr %7178, i64 %7089
  %7180 = add i32 %7088, %7092
  %7181 = lshr i32 %7180, 1
  %7182 = sub i32 %7180, %7181
  %7183 = tail call i32 @llvm.umax.i32(i32 %7182, i32 1)
  %7184 = zext i32 %7183 to i64
  %7185 = icmp ult i32 %7183, 8
  br i1 %7185, label %7196, label %7186

7186:                                             ; preds = %7176
  %7187 = and i64 %7184, 4294967288
  br label %7188

7188:                                             ; preds = %7188, %7186
  %7189 = phi i64 [ 0, %7186 ], [ %7192, %7188 ]
  %7190 = getelementptr inbounds i32, ptr %7179, i64 %7189
  store <4 x i32> <i32 16777215, i32 16777215, i32 16777215, i32 16777215>, ptr %7190, align 4, !tbaa !105
  %7191 = getelementptr inbounds i32, ptr %7190, i64 4
  store <4 x i32> <i32 16777215, i32 16777215, i32 16777215, i32 16777215>, ptr %7191, align 4, !tbaa !105
  %7192 = add nuw i64 %7189, 8
  %7193 = icmp eq i64 %7192, %7187
  br i1 %7193, label %7194, label %7188, !llvm.loop !890

7194:                                             ; preds = %7188
  %7195 = icmp eq i64 %7187, %7184
  br i1 %7195, label %7203, label %7196

7196:                                             ; preds = %7176, %7194
  %7197 = phi i64 [ 0, %7176 ], [ %7187, %7194 ]
  br label %7198

7198:                                             ; preds = %7196, %7198
  %7199 = phi i64 [ %7201, %7198 ], [ %7197, %7196 ]
  %7200 = getelementptr inbounds i32, ptr %7179, i64 %7199
  store i32 16777215, ptr %7200, align 4, !tbaa !105
  %7201 = add nuw nsw i64 %7199, 1
  %7202 = icmp eq i64 %7201, %7184
  br i1 %7202, label %7203, label %7198, !llvm.loop !891

7203:                                             ; preds = %7198, %7194, %7174, %7127, %7125
  %7204 = load i16, ptr %7085, align 2, !tbaa !348
  %7205 = zext i16 %7204 to i32
  %7206 = add i32 %7205, %7093
  %7207 = uitofp i32 %7206 to float
  %7208 = load i16, ptr %7079, align 4, !tbaa !346
  %7209 = zext i16 %7208 to i32
  %7210 = add nuw i32 %7095, %7209
  %7211 = add i32 %7210, -1
  %7212 = uitofp i32 %7211 to float
  %7213 = load float, ptr %7050, align 4, !tbaa !113
  %7214 = load float, ptr %7051, align 4, !tbaa !112
  %7215 = fmul fast float %7213, %7212
  %7216 = add i32 %7206, 1
  %7217 = uitofp i32 %7216 to float
  %7218 = add nuw nsw i64 %7089, 1
  %7219 = trunc i64 %7218 to i32
  %7220 = add i32 %7210, %7219
  %7221 = uitofp i32 %7220 to float
  %7222 = fadd fast float %7217, %7207
  %7223 = fmul fast float %7214, 5.000000e-01
  %7224 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 17, i64 %7089
  store float %7215, ptr %7224, align 8, !tbaa.struct !5
  %7225 = getelementptr inbounds i8, ptr %7224, i64 4
  %7226 = insertelement <2 x float> poison, float %7223, i64 0
  %7227 = insertelement <2 x float> %7226, float %7213, i64 1
  %7228 = insertelement <2 x float> poison, float %7222, i64 0
  %7229 = insertelement <2 x float> %7228, float %7221, i64 1
  %7230 = fmul fast <2 x float> %7227, %7229
  store <2 x float> %7230, ptr %7225, align 4
  %7231 = getelementptr inbounds i8, ptr %7224, i64 12
  %7232 = extractelement <2 x float> %7230, i64 0
  store float %7232, ptr %7231, align 4, !tbaa.struct !15
  %7233 = icmp eq i64 %7218, 64
  %7234 = add nsw i32 %7088, -1
  br i1 %7233, label %7235, label %7087, !llvm.loop !892

7235:                                             ; preds = %7203, %7049
  %7236 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15
  %7237 = load i32, ptr %7236, align 8, !tbaa !893
  %7238 = icmp sgt i32 %7237, 0
  br i1 %7238, label %7239, label %7242

7239:                                             ; preds = %7235
  %7240 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 15, i32 2
  %7241 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 11
  br label %7248

7242:                                             ; preds = %7315, %7235
  %7243 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14
  %7244 = load i32, ptr %7243, align 8, !tbaa !281
  %7245 = icmp sgt i32 %7244, 0
  br i1 %7245, label %7246, label %7320

7246:                                             ; preds = %7242
  %7247 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 14, i32 2
  br label %7322

7248:                                             ; preds = %7239, %7315
  %7249 = phi i32 [ %7237, %7239 ], [ %7316, %7315 ]
  %7250 = phi i64 [ 0, %7239 ], [ %7317, %7315 ]
  %7251 = load ptr, ptr %7240, align 8, !tbaa !271
  %7252 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250
  %7253 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 7
  %7254 = load ptr, ptr %7253, align 8, !tbaa !894
  %7255 = icmp eq ptr %7254, null
  br i1 %7255, label %7315, label %7256

7256:                                             ; preds = %7248
  %7257 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 4
  %7258 = load i32, ptr %7257, align 8, !tbaa !895
  %7259 = icmp eq i32 %7258, 0
  br i1 %7259, label %7315, label %7260

7260:                                             ; preds = %7256
  %7261 = getelementptr inbounds %struct.ImFont, ptr %7254, i64 0, i32 6
  %7262 = load ptr, ptr %7261, align 8, !tbaa !171
  %7263 = icmp eq ptr %7262, %0
  br i1 %7263, label %7265, label %7264

7264:                                             ; preds = %7260
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EC@BJJINGAO@?$AAr?$AA?9?$AA?$DO?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAC?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AAA?$AAt?$AAl?$AAa?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAt?$AAl?$AAa?$AAs@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2794)
  br label %7265

7265:                                             ; preds = %7264, %7260
  %7266 = load i32, ptr %33, align 8, !tbaa !292
  %7267 = icmp sgt i32 %7266, 0
  %7268 = load i32, ptr %7241, align 4
  %7269 = icmp sgt i32 %7268, 0
  %7270 = select i1 %7267, i1 %7269, i1 false
  br i1 %7270, label %7272, label %7271

7271:                                             ; preds = %7265
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DM@CMBJAGBP@?$AAT?$AAe?$AAx?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAT?$AAe?$AAx?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2226)
  br label %7272

7272:                                             ; preds = %7271, %7265
  %7273 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 2
  %7274 = load i16, ptr %7273, align 4, !tbaa !346
  %7275 = icmp eq i16 %7274, -1
  br i1 %7275, label %7276, label %7278

7276:                                             ; preds = %7272
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@DEJIAPCP@?$AAr?$AAe?$AAc?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAP?$AAa?$AAc?$AAk?$AAe?$AAd?$AA?$CI?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 2227)
  %7277 = load i16, ptr %7273, align 4, !tbaa !346
  br label %7278

7278:                                             ; preds = %7272, %7276
  %7279 = phi i16 [ %7277, %7276 ], [ %7274, %7272 ]
  %7280 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 3
  %7281 = load i16, ptr %7280, align 2, !tbaa !348
  %7282 = uitofp i16 %7281 to float
  %7283 = load float, ptr %7051, align 4, !tbaa !896
  %7284 = fmul fast float %7283, %7282
  %7285 = uitofp i16 %7279 to float
  %7286 = load float, ptr %7050, align 8, !tbaa !897
  %7287 = fmul fast float %7286, %7285
  %7288 = zext i16 %7281 to i32
  %7289 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 1
  %7290 = load i16, ptr %7289, align 2, !tbaa !550
  %7291 = zext i16 %7290 to i32
  %7292 = add nuw nsw i32 %7291, %7288
  %7293 = sitofp i32 %7292 to float
  %7294 = fmul fast float %7283, %7293
  %7295 = zext i16 %7279 to i32
  %7296 = load i16, ptr %7252, align 8, !tbaa !549
  %7297 = zext i16 %7296 to i32
  %7298 = add nuw nsw i32 %7297, %7295
  %7299 = sitofp i32 %7298 to float
  %7300 = fmul fast float %7286, %7299
  %7301 = load ptr, ptr %7253, align 8, !tbaa !894
  %7302 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 5
  %7303 = load float, ptr %7302, align 4, !tbaa !898
  %7304 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 6
  %7305 = getelementptr inbounds %struct.ImFontAtlasCustomRect, ptr %7251, i64 %7250, i32 6, i32 1
  %7306 = load float, ptr %7305, align 4, !tbaa !899
  %7307 = uitofp i16 %7290 to float
  %7308 = fadd fast float %7306, %7307
  %7309 = load float, ptr %7304, align 8, !tbaa !900
  %7310 = uitofp i16 %7296 to float
  %7311 = fadd fast float %7309, %7310
  %7312 = load i32, ptr %7257, align 8, !tbaa !895
  %7313 = trunc i32 %7312 to i16
  tail call void @"?AddGlyph@ImFont@@QEAAXPEBUImFontConfig@@GMMMMMMMMM@Z"(ptr noundef nonnull align 8 dereferenceable(120) %7301, ptr noundef null, i16 noundef %7313, float noundef %7309, float noundef %7306, float noundef %7311, float noundef %7308, float noundef %7287, float noundef %7284, float noundef %7300, float noundef %7294, float noundef %7303)
  %7314 = load i32, ptr %7236, align 8, !tbaa !893
  br label %7315

7315:                                             ; preds = %7248, %7256, %7278
  %7316 = phi i32 [ %7249, %7248 ], [ %7249, %7256 ], [ %7314, %7278 ]
  %7317 = add nuw nsw i64 %7250, 1
  %7318 = sext i32 %7316 to i64
  %7319 = icmp slt i64 %7317, %7318
  br i1 %7319, label %7248, label %7242, !llvm.loop !901

7320:                                             ; preds = %7341, %7242
  %7321 = getelementptr inbounds %struct.ImFontAtlas, ptr %0, i64 0, i32 6
  store i8 1, ptr %7321, align 8, !tbaa !279
  ret void

7322:                                             ; preds = %7246, %7341
  %7323 = phi i32 [ %7244, %7246 ], [ %7342, %7341 ]
  %7324 = phi i64 [ 0, %7246 ], [ %7343, %7341 ]
  %7325 = load ptr, ptr %7247, align 8, !tbaa !272
  %7326 = getelementptr inbounds ptr, ptr %7325, i64 %7324
  %7327 = load ptr, ptr %7326, align 8, !tbaa !117
  %7328 = getelementptr inbounds %struct.ImFont, ptr %7327, i64 0, i32 14
  %7329 = load i8, ptr %7328, align 8, !tbaa !539, !range !268, !noundef !269
  %7330 = icmp eq i8 %7329, 0
  br i1 %7330, label %7341, label %7331

7331:                                             ; preds = %7322
  %7332 = sext i32 %7323 to i64
  %7333 = icmp slt i64 %7324, %7332
  br i1 %7333, label %7338, label %7334

7334:                                             ; preds = %7331
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %7335 = load ptr, ptr %7247, align 8, !tbaa !272
  %7336 = getelementptr inbounds ptr, ptr %7335, i64 %7324
  %7337 = load ptr, ptr %7336, align 8, !tbaa !117
  br label %7338

7338:                                             ; preds = %7331, %7334
  %7339 = phi ptr [ %7327, %7331 ], [ %7337, %7334 ]
  tail call void @"?BuildLookupTable@ImFont@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(120) %7339)
  %7340 = load i32, ptr %7243, align 8, !tbaa !281
  br label %7341

7341:                                             ; preds = %7322, %7338
  %7342 = phi i32 [ %7323, %7322 ], [ %7340, %7338 ]
  %7343 = add nuw nsw i64 %7324, 1
  %7344 = sext i32 %7342 to i64
  %7345 = icmp slt i64 %7343, %7344
  br i1 %7345, label %7322, label %7320, !llvm.loop !902
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddGlyph@ImFont@@QEAAXPEBUImFontConfig@@GMMMMMMMMM@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(120) %0, ptr noundef readonly %1, i16 noundef %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6, float noundef %7, float noundef %8, float noundef %9, float noundef %10, float noundef %11) local_unnamed_addr #7 align 2 {
  %13 = icmp eq ptr %1, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 12
  %16 = load float, ptr %15, align 4, !tbaa !261
  %17 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 11
  %18 = load float, ptr %17, align 8, !tbaa !903
  %19 = fcmp fast ogt float %18, %11
  %20 = tail call fast float @llvm.minnum.f32(float %16, float %11)
  %21 = select fast i1 %19, float %18, float %20
  %22 = fcmp fast une float %21, %11
  %23 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 7
  %24 = load i8, ptr %23, align 8, !tbaa !294, !range !268
  br i1 %22, label %25, label %34

25:                                               ; preds = %14
  %26 = icmp eq i8 %24, 0
  %27 = fsub fast float %21, %11
  %28 = fmul fast float %27, 5.000000e-01
  %29 = fptosi float %28 to i32
  %30 = sitofp i32 %29 to float
  %31 = select fast i1 %26, float %28, float %30
  %32 = fadd fast float %31, %3
  %33 = fadd fast float %31, %5
  br label %34

34:                                               ; preds = %14, %25
  %35 = phi float [ %32, %25 ], [ %3, %14 ]
  %36 = phi float [ %33, %25 ], [ %5, %14 ]
  %37 = icmp eq i8 %24, 0
  %38 = fadd fast float %21, 5.000000e-01
  %39 = fptosi float %38 to i32
  %40 = sitofp i32 %39 to float
  %41 = select i1 %37, float %21, float %40
  %42 = getelementptr inbounds %struct.ImFontConfig, ptr %1, i64 0, i32 8
  %43 = load float, ptr %42, align 4, !tbaa !904
  %44 = fadd fast float %41, %43
  br label %45

45:                                               ; preds = %34, %12
  %46 = phi float [ %35, %34 ], [ %3, %12 ]
  %47 = phi float [ %36, %34 ], [ %5, %12 ]
  %48 = phi float [ %44, %34 ], [ %11, %12 ]
  %49 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4
  %50 = load i32, ptr %49, align 8, !tbaa !905
  %51 = add nsw i32 %50, 1
  %52 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 1
  %53 = load i32, ptr %52, align 4, !tbaa !534
  %54 = icmp sgt i32 %53, %50
  br i1 %54, label %77, label %55

55:                                               ; preds = %45
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = sdiv i32 %53, 2
  %59 = add nsw i32 %58, %53
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i32 [ %59, %57 ], [ 8, %55 ]
  %62 = tail call i32 @llvm.smax.i32(i32 %61, i32 %51)
  %63 = icmp slt i32 %53, %62
  br i1 %63, label %64, label %77

64:                                               ; preds = %60
  %65 = sext i32 %62 to i64
  %66 = mul nsw i64 %65, 40
  %67 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %66)
  %68 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !533
  %70 = icmp eq ptr %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = load i32, ptr %49, align 8, !tbaa !535
  %73 = sext i32 %72 to i64
  %74 = mul nsw i64 %73, 40
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %67, ptr nonnull align 4 %69, i64 %74, i1 false)
  %75 = load ptr, ptr %68, align 8, !tbaa !533
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %75)
  br label %76

76:                                               ; preds = %71, %64
  store ptr %67, ptr %68, align 8, !tbaa !533
  store i32 %62, ptr %52, align 4, !tbaa !534
  br label %77

77:                                               ; preds = %45, %60, %76
  store i32 %51, ptr %49, align 8, !tbaa !535
  %78 = icmp sgt i32 %50, -1
  br i1 %78, label %82, label %79

79:                                               ; preds = %77
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %80 = load i32, ptr %49, align 8, !tbaa !535
  %81 = add nsw i32 %80, -1
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi i32 [ %81, %79 ], [ %50, %77 ]
  %84 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %85 = load ptr, ptr %84, align 8, !tbaa !533
  %86 = sext i32 %83 to i64
  %87 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86
  %88 = zext i16 %2 to i32
  %89 = shl nuw nsw i32 %88, 2
  %90 = fcmp fast une float %46, %47
  %91 = fcmp fast une float %4, %6
  %92 = select i1 %90, i1 %91, i1 false
  %93 = select i1 %92, i32 2, i32 0
  %94 = or i32 %93, %89
  store i32 %94, ptr %87, align 4
  %95 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 2
  store float %46, ptr %95, align 4, !tbaa !192
  %96 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 3
  store float %4, ptr %96, align 4, !tbaa !194
  %97 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 4
  store float %47, ptr %97, align 4, !tbaa !193
  %98 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 5
  store float %6, ptr %98, align 4, !tbaa !195
  %99 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 6
  store float %7, ptr %99, align 4, !tbaa !197
  %100 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 7
  store float %8, ptr %100, align 4, !tbaa !198
  %101 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 8
  store float %9, ptr %101, align 4, !tbaa !199
  %102 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 9
  store float %10, ptr %102, align 4, !tbaa !200
  %103 = getelementptr inbounds %struct.ImFontGlyph, ptr %85, i64 %86, i32 1
  store float %48, ptr %103, align 4, !tbaa !190
  %104 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 6
  %105 = load ptr, ptr %104, align 8, !tbaa !171
  %106 = getelementptr inbounds %struct.ImFontAtlas, ptr %105, i64 0, i32 3
  %107 = load i32, ptr %106, align 4, !tbaa !264
  %108 = sitofp i32 %107 to float
  %109 = fadd fast float %108, 0x3FEFAE1480000000
  %110 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 14
  store i8 1, ptr %110, align 8, !tbaa !539
  %111 = fsub fast float %9, %7
  %112 = getelementptr inbounds %struct.ImFontAtlas, ptr %105, i64 0, i32 10
  %113 = load i32, ptr %112, align 8, !tbaa !292
  %114 = sitofp i32 %113 to float
  %115 = fmul fast float %111, %114
  %116 = fadd fast float %115, %109
  %117 = fptosi float %116 to i32
  %118 = fsub fast float %10, %8
  %119 = getelementptr inbounds %struct.ImFontAtlas, ptr %105, i64 0, i32 11
  %120 = load i32, ptr %119, align 4, !tbaa !293
  %121 = sitofp i32 %120 to float
  %122 = fmul fast float %118, %121
  %123 = fadd fast float %122, %109
  %124 = fptosi float %123 to i32
  %125 = mul nsw i32 %124, %117
  %126 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 18
  %127 = load i32, ptr %126, align 8, !tbaa !540
  %128 = add nsw i32 %125, %127
  store i32 %128, ptr %126, align 8, !tbaa !540
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?BuildLookupTable@ImFont@@QEAAXXZ"(ptr noundef nonnull align 8 dereferenceable(120) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4
  %3 = load i32, ptr %2, align 8, !tbaa !905
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  br label %9

7:                                                ; preds = %17
  %8 = icmp slt i32 %18, 65535
  br i1 %8, label %28, label %27

9:                                                ; preds = %5, %17
  %10 = phi i32 [ %3, %5 ], [ %18, %17 ]
  %11 = phi i64 [ 0, %5 ], [ %24, %17 ]
  %12 = phi i32 [ 0, %5 ], [ %23, %17 ]
  %13 = sext i32 %10 to i64
  %14 = icmp slt i64 %11, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %16 = load i32, ptr %2, align 8, !tbaa !905
  br label %17

17:                                               ; preds = %9, %15
  %18 = phi i32 [ %10, %9 ], [ %16, %15 ]
  %19 = load ptr, ptr %6, align 8, !tbaa !533
  %20 = getelementptr inbounds %struct.ImFontGlyph, ptr %19, i64 %11
  %21 = load i32, ptr %20, align 4
  %22 = lshr i32 %21, 2
  %23 = tail call i32 @llvm.smax.i32(i32 %12, i32 %22)
  %24 = add nuw i64 %11, 1
  %25 = zext i32 %18 to i64
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %7, label %9, !llvm.loop !906

27:                                               ; preds = %7
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CK@FHBHHKB@?$AAG?$AAl?$AAy?$AAp?$AAh?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx?$AAF?$AAF?$AAF?$AAF?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3168)
  br label %28

28:                                               ; preds = %1, %27, %7
  %29 = phi i32 [ %23, %27 ], [ %23, %7 ], [ 0, %1 ]
  %30 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !536
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 1
  store i32 0, ptr %34, align 4, !tbaa !537
  store i32 0, ptr %0, align 8, !tbaa !538
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %31)
  store ptr null, ptr %30, align 8, !tbaa !536
  br label %35

35:                                               ; preds = %28, %33
  %36 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %37 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !63
  %39 = icmp eq ptr %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 1
  store i32 0, ptr %41, align 4, !tbaa !62
  store i32 0, ptr %36, align 8, !tbaa !64
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %38)
  store ptr null, ptr %37, align 8, !tbaa !63
  br label %42

42:                                               ; preds = %35, %40
  %43 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 14
  store i8 0, ptr %43, align 8, !tbaa !539
  %44 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 19
  store i16 0, ptr %44, align 4
  %45 = add nuw i32 %29, 1
  tail call void @"?GrowIndex@ImFont@@QEAAXH@Z"(ptr noundef nonnull align 8 dereferenceable(120) %0, i32 noundef %45)
  %46 = load i32, ptr %2, align 8, !tbaa !905
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  br label %72

50:                                               ; preds = %98, %42
  %51 = phi i32 [ %46, %42 ], [ %111, %98 ]
  %52 = load i32, ptr %36, align 8, !tbaa !187
  %53 = icmp ugt i32 %52, 32
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %56 = load ptr, ptr %55, align 8, !tbaa !188
  br label %69

57:                                               ; preds = %50
  %58 = load ptr, ptr %37, align 8, !tbaa !189
  %59 = getelementptr inbounds i16, ptr %58, i64 32
  %60 = load i16, ptr %59, align 2, !tbaa !121
  %61 = icmp eq i16 %60, -1
  %62 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %65 = load ptr, ptr %64, align 8
  %66 = zext i16 %60 to i64
  %67 = getelementptr inbounds %struct.ImFontGlyph, ptr %65, i64 %66
  %68 = select i1 %61, ptr %63, ptr %67
  br label %69

69:                                               ; preds = %54, %57
  %70 = phi ptr [ %56, %54 ], [ %68, %57 ]
  %71 = icmp eq ptr %70, null
  br i1 %71, label %212, label %114

72:                                               ; preds = %48, %98
  %73 = phi i32 [ %46, %48 ], [ %111, %98 ]
  %74 = phi i64 [ 0, %48 ], [ %110, %98 ]
  %75 = load ptr, ptr %49, align 8, !tbaa !533
  %76 = getelementptr inbounds %struct.ImFontGlyph, ptr %75, i64 %74
  %77 = load i32, ptr %76, align 4
  %78 = lshr i32 %77, 2
  %79 = sext i32 %73 to i64
  %80 = icmp slt i64 %74, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %72
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %82 = load ptr, ptr %49, align 8, !tbaa !533
  br label %83

83:                                               ; preds = %72, %81
  %84 = phi ptr [ %75, %72 ], [ %82, %81 ]
  %85 = getelementptr inbounds %struct.ImFontGlyph, ptr %84, i64 %74, i32 1
  %86 = load float, ptr %85, align 4, !tbaa !190
  %87 = load i32, ptr %0, align 8
  %88 = icmp sgt i32 %87, %78
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %90

90:                                               ; preds = %83, %89
  %91 = load ptr, ptr %30, align 8, !tbaa !536
  %92 = zext i32 %78 to i64
  %93 = getelementptr inbounds float, ptr %91, i64 %92
  store float %86, ptr %93, align 4, !tbaa !6
  %94 = trunc i64 %74 to i16
  %95 = load i32, ptr %36, align 8
  %96 = icmp sgt i32 %95, %78
  br i1 %96, label %98, label %97

97:                                               ; preds = %90
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %98

98:                                               ; preds = %90, %97
  %99 = load ptr, ptr %37, align 8, !tbaa !63
  %100 = getelementptr inbounds i16, ptr %99, i64 %92
  store i16 %94, ptr %100, align 2, !tbaa !121
  %101 = lshr i32 %77, 14
  %102 = and i32 %101, 7
  %103 = shl nuw nsw i32 1, %102
  %104 = lshr i32 %77, 17
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 19, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !46
  %108 = trunc i32 %103 to i8
  %109 = or i8 %107, %108
  store i8 %109, ptr %106, align 1, !tbaa !46
  %110 = add nuw nsw i64 %74, 1
  %111 = load i32, ptr %2, align 8, !tbaa !905
  %112 = sext i32 %111 to i64
  %113 = icmp slt i64 %110, %112
  br i1 %113, label %72, label %50, !llvm.loop !907

114:                                              ; preds = %69
  %115 = icmp sgt i32 %51, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %117 = load i32, ptr %2, align 8, !tbaa !535
  br label %118

118:                                              ; preds = %114, %116
  %119 = phi i32 [ %117, %116 ], [ %51, %114 ]
  %120 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %121 = load ptr, ptr %120, align 8, !tbaa !533
  %122 = add nsw i32 %119, -1
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.ImFontGlyph, ptr %121, i64 %123
  %125 = load i32, ptr %124, align 4
  %126 = and i32 %125, -4
  %127 = icmp eq i32 %126, 36
  br i1 %127, label %156, label %128

128:                                              ; preds = %118
  %129 = add nsw i32 %119, 1
  %130 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 1
  %131 = load i32, ptr %130, align 4, !tbaa !534
  %132 = icmp sgt i32 %131, %119
  br i1 %132, label %154, label %133

133:                                              ; preds = %128
  %134 = icmp eq i32 %131, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %133
  %136 = sdiv i32 %131, 2
  %137 = add nsw i32 %136, %131
  br label %138

138:                                              ; preds = %135, %133
  %139 = phi i32 [ %137, %135 ], [ 8, %133 ]
  %140 = tail call i32 @llvm.smax.i32(i32 %139, i32 %129)
  %141 = icmp slt i32 %131, %140
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = sext i32 %140 to i64
  %144 = mul nsw i64 %143, 40
  %145 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %144)
  %146 = load ptr, ptr %120, align 8, !tbaa !533
  %147 = icmp eq ptr %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %142
  %149 = load i32, ptr %2, align 8, !tbaa !535
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %150, 40
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %145, ptr nonnull align 4 %146, i64 %151, i1 false)
  %152 = load ptr, ptr %120, align 8, !tbaa !533
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %152)
  br label %153

153:                                              ; preds = %148, %142
  store ptr %145, ptr %120, align 8, !tbaa !533
  store i32 %140, ptr %130, align 4, !tbaa !534
  br label %154

154:                                              ; preds = %128, %138, %153
  %155 = phi ptr [ %121, %128 ], [ %121, %138 ], [ %145, %153 ]
  store i32 %129, ptr %2, align 8, !tbaa !535
  br label %156

156:                                              ; preds = %118, %154
  %157 = phi ptr [ %155, %154 ], [ %121, %118 ]
  %158 = phi i32 [ %129, %154 ], [ %119, %118 ]
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %161 = load i32, ptr %2, align 8, !tbaa !535
  %162 = load ptr, ptr %120, align 8, !tbaa !533
  br label %163

163:                                              ; preds = %156, %160
  %164 = phi ptr [ %162, %160 ], [ %157, %156 ]
  %165 = phi i32 [ %161, %160 ], [ %158, %156 ]
  %166 = add nsw i32 %165, -1
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %struct.ImFontGlyph, ptr %164, i64 %167
  %169 = load i32, ptr %36, align 8, !tbaa !187
  %170 = icmp ugt i32 %169, 32
  br i1 %170, label %174, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %173 = load ptr, ptr %172, align 8, !tbaa !188
  br label %184

174:                                              ; preds = %163
  %175 = load ptr, ptr %37, align 8, !tbaa !189
  %176 = getelementptr inbounds i16, ptr %175, i64 32
  %177 = load i16, ptr %176, align 2, !tbaa !121
  %178 = icmp eq i16 %177, -1
  %179 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %180 = load ptr, ptr %179, align 8
  %181 = zext i16 %177 to i64
  %182 = getelementptr inbounds %struct.ImFontGlyph, ptr %164, i64 %181
  %183 = select i1 %178, ptr %180, ptr %182
  br label %184

184:                                              ; preds = %171, %174
  %185 = phi ptr [ %173, %171 ], [ %183, %174 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(40) %168, ptr noundef nonnull align 4 dereferenceable(40) %185, i64 40, i1 false), !tbaa.struct !908
  %186 = load i32, ptr %168, align 4
  %187 = and i32 %186, 3
  %188 = or i32 %187, 36
  store i32 %188, ptr %168, align 4
  %189 = getelementptr inbounds %struct.ImFontGlyph, ptr %164, i64 %167, i32 1
  %190 = load float, ptr %189, align 4, !tbaa !190
  %191 = fmul fast float %190, 4.000000e+00
  store float %191, ptr %189, align 4, !tbaa !190
  %192 = load i32, ptr %0, align 8
  %193 = icmp sgt i32 %192, 9
  br i1 %193, label %195, label %194

194:                                              ; preds = %184
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %195

195:                                              ; preds = %184, %194
  %196 = load ptr, ptr %30, align 8, !tbaa !536
  %197 = getelementptr inbounds float, ptr %196, i64 9
  store float %191, ptr %197, align 4, !tbaa !6
  %198 = load i32, ptr %2, align 8, !tbaa !905
  %199 = trunc i32 %198 to i16
  %200 = add i16 %199, -1
  %201 = load i32, ptr %168, align 4
  %202 = lshr i32 %201, 2
  %203 = load i32, ptr %36, align 8
  %204 = icmp sgt i32 %203, %202
  br i1 %204, label %207, label %205

205:                                              ; preds = %195
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %206 = load i32, ptr %36, align 8, !tbaa !187
  br label %207

207:                                              ; preds = %195, %205
  %208 = phi i32 [ %203, %195 ], [ %206, %205 ]
  %209 = load ptr, ptr %37, align 8, !tbaa !63
  %210 = zext i32 %202 to i64
  %211 = getelementptr inbounds i16, ptr %209, i64 %210
  store i16 %200, ptr %211, align 2, !tbaa !121
  br label %212

212:                                              ; preds = %207, %69
  %213 = phi i32 [ %208, %207 ], [ %52, %69 ]
  %214 = icmp ugt i32 %213, 32
  br i1 %214, label %218, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %217 = load ptr, ptr %216, align 8, !tbaa !188
  br label %230

218:                                              ; preds = %212
  %219 = load ptr, ptr %37, align 8, !tbaa !189
  %220 = getelementptr inbounds i16, ptr %219, i64 32
  %221 = load i16, ptr %220, align 2, !tbaa !121
  %222 = icmp eq i16 %221, -1
  %223 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %224 = load ptr, ptr %223, align 8
  %225 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %226 = load ptr, ptr %225, align 8
  %227 = zext i16 %221 to i64
  %228 = getelementptr inbounds %struct.ImFontGlyph, ptr %226, i64 %227
  %229 = select i1 %222, ptr %224, ptr %228
  br label %230

230:                                              ; preds = %218, %215
  %231 = phi ptr [ %217, %215 ], [ %229, %218 ]
  %232 = icmp eq ptr %231, null
  br i1 %232, label %237, label %233

233:                                              ; preds = %230
  %234 = load i32, ptr %231, align 4
  %235 = and i32 %234, -3
  store i32 %235, ptr %231, align 4
  %236 = load i32, ptr %36, align 8, !tbaa !187
  br label %237

237:                                              ; preds = %230, %233
  %238 = phi i32 [ %213, %230 ], [ %236, %233 ]
  %239 = icmp ugt i32 %238, 9
  br i1 %239, label %243, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %242 = load ptr, ptr %241, align 8, !tbaa !188
  br label %255

243:                                              ; preds = %237
  %244 = load ptr, ptr %37, align 8, !tbaa !189
  %245 = getelementptr inbounds i16, ptr %244, i64 9
  %246 = load i16, ptr %245, align 2, !tbaa !121
  %247 = icmp eq i16 %246, -1
  %248 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %249 = load ptr, ptr %248, align 8
  %250 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %251 = load ptr, ptr %250, align 8
  %252 = zext i16 %246 to i64
  %253 = getelementptr inbounds %struct.ImFontGlyph, ptr %251, i64 %252
  %254 = select i1 %247, ptr %249, ptr %253
  br label %255

255:                                              ; preds = %243, %240
  %256 = phi ptr [ %242, %240 ], [ %254, %243 ]
  %257 = icmp eq ptr %256, null
  br i1 %257, label %261, label %258

258:                                              ; preds = %255
  %259 = load i32, ptr %256, align 4
  %260 = and i32 %259, -3
  store i32 %260, ptr %256, align 4
  br label %261

261:                                              ; preds = %255, %258
  %262 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 10
  %263 = load i16, ptr %262, align 4, !tbaa !311
  %264 = icmp eq i16 %263, -1
  %265 = load i32, ptr %36, align 8, !tbaa !187
  br i1 %264, label %270, label %266

266:                                              ; preds = %261
  %267 = load ptr, ptr %37, align 8
  %268 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %269 = load ptr, ptr %268, align 8
  br label %291

270:                                              ; preds = %261
  %271 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %272 = load ptr, ptr %37, align 8
  %273 = load ptr, ptr %271, align 8
  %274 = freeze ptr %273
  %275 = icmp eq ptr %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %270
  %277 = icmp ugt i32 %265, 8230
  br i1 %277, label %278, label %282

278:                                              ; preds = %276
  %279 = getelementptr inbounds i16, ptr %272, i64 8230
  %280 = load i16, ptr %279, align 2, !tbaa !121
  %281 = icmp eq i16 %280, -1
  br i1 %281, label %284, label %289

282:                                              ; preds = %276
  %283 = icmp ugt i32 %265, 133
  br i1 %283, label %284, label %288

284:                                              ; preds = %278, %282
  %285 = getelementptr inbounds i16, ptr %272, i64 133
  %286 = load i16, ptr %285, align 2, !tbaa !121
  %287 = icmp eq i16 %286, -1
  br i1 %287, label %288, label %289

288:                                              ; preds = %284, %282
  br label %289

289:                                              ; preds = %278, %284, %288, %270
  %290 = phi i16 [ -1, %270 ], [ 8230, %278 ], [ 133, %284 ], [ -1, %288 ]
  store i16 %290, ptr %262, align 4, !tbaa !311
  br label %291

291:                                              ; preds = %266, %289
  %292 = phi i16 [ %263, %266 ], [ %290, %289 ]
  %293 = phi ptr [ %269, %266 ], [ %274, %289 ]
  %294 = phi ptr [ %267, %266 ], [ %272, %289 ]
  %295 = sext i32 %265 to i64
  %296 = freeze ptr %293
  %297 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %298 = icmp ne ptr %296, null
  %299 = icmp ugt i32 %265, 46
  %300 = select i1 %298, i1 %299, i1 false
  br i1 %300, label %301, label %315

301:                                              ; preds = %291
  %302 = getelementptr inbounds i16, ptr %294, i64 46
  %303 = load i16, ptr %302, align 2, !tbaa !121
  %304 = icmp eq i16 %303, -1
  br i1 %304, label %305, label %311

305:                                              ; preds = %301
  %306 = icmp ugt i32 %265, 65294
  br i1 %306, label %307, label %315

307:                                              ; preds = %305
  %308 = getelementptr inbounds i16, ptr %294, i64 65294
  %309 = load i16, ptr %308, align 2, !tbaa !121
  %310 = icmp eq i16 %309, -1
  br i1 %310, label %315, label %311

311:                                              ; preds = %307, %301
  %312 = phi i16 [ %303, %301 ], [ %309, %307 ]
  %313 = phi i16 [ 46, %301 ], [ -242, %307 ]
  %314 = icmp eq i16 %292, -1
  br i1 %314, label %338, label %317

315:                                              ; preds = %305, %307, %291
  %316 = icmp eq i16 %292, -1
  br i1 %316, label %359, label %317

317:                                              ; preds = %315, %311
  %318 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 11
  store i16 1, ptr %318, align 2, !tbaa !909
  %319 = zext i16 %292 to i64
  %320 = icmp ugt i64 %295, %319
  br i1 %320, label %324, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %323 = load ptr, ptr %322, align 8, !tbaa !188
  br label %333

324:                                              ; preds = %317
  %325 = getelementptr inbounds i16, ptr %294, i64 %319
  %326 = load i16, ptr %325, align 2, !tbaa !121
  %327 = icmp eq i16 %326, -1
  %328 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %329 = load ptr, ptr %328, align 8
  %330 = zext i16 %326 to i64
  %331 = getelementptr inbounds %struct.ImFontGlyph, ptr %296, i64 %330
  %332 = select i1 %327, ptr %329, ptr %331
  br label %333

333:                                              ; preds = %321, %324
  %334 = phi ptr [ %323, %321 ], [ %332, %324 ]
  %335 = getelementptr inbounds %struct.ImFontGlyph, ptr %334, i64 0, i32 4
  %336 = load float, ptr %335, align 4, !tbaa !193
  %337 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 13
  store float %336, ptr %337, align 4, !tbaa !910
  br label %356

338:                                              ; preds = %311
  %339 = zext i16 %313 to i64
  %340 = icmp ugt i64 %295, %339
  %341 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %342 = load ptr, ptr %341, align 8
  %343 = zext i16 %312 to i64
  %344 = getelementptr inbounds %struct.ImFontGlyph, ptr %296, i64 %343
  %345 = select i1 %340, ptr %344, ptr %342
  store i16 %313, ptr %262, align 4, !tbaa !311
  %346 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 11
  store i16 3, ptr %346, align 2, !tbaa !909
  %347 = getelementptr inbounds %struct.ImFontGlyph, ptr %345, i64 0, i32 4
  %348 = load float, ptr %347, align 4, !tbaa !193
  %349 = getelementptr inbounds %struct.ImFontGlyph, ptr %345, i64 0, i32 2
  %350 = load float, ptr %349, align 4, !tbaa !192
  %351 = fsub fast float %348, %350
  %352 = fadd fast float %351, 1.000000e+00
  %353 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 13
  store float %352, ptr %353, align 4, !tbaa !910
  %354 = fmul fast float %352, 3.000000e+00
  %355 = fadd fast float %354, -1.000000e+00
  br label %356

356:                                              ; preds = %333, %338
  %357 = phi float [ %355, %338 ], [ %336, %333 ]
  %358 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 12
  store float %357, ptr %358, align 8, !tbaa !911
  br label %359

359:                                              ; preds = %356, %315
  %360 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 9
  %361 = load i16, ptr %360, align 2, !tbaa !310
  %362 = zext i16 %361 to i64
  %363 = icmp ugt i64 %295, %362
  br i1 %363, label %364, label %373

364:                                              ; preds = %359
  %365 = getelementptr inbounds i16, ptr %294, i64 %362
  %366 = load i16, ptr %365, align 2, !tbaa !121
  %367 = icmp eq i16 %366, -1
  br i1 %367, label %373, label %368

368:                                              ; preds = %364
  %369 = zext i16 %366 to i64
  %370 = getelementptr inbounds %struct.ImFontGlyph, ptr %296, i64 %369
  %371 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  store ptr %370, ptr %371, align 8, !tbaa !188
  %372 = icmp eq ptr %296, null
  br i1 %372, label %395, label %426

373:                                              ; preds = %364, %359
  %374 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  store ptr null, ptr %374, align 8, !tbaa !188
  %375 = icmp eq ptr %296, null
  br i1 %375, label %395, label %376

376:                                              ; preds = %373
  %377 = icmp ugt i32 %265, 65533
  br i1 %377, label %378, label %382

378:                                              ; preds = %376
  %379 = getelementptr inbounds i16, ptr %294, i64 65533
  %380 = load i16, ptr %379, align 2, !tbaa !121
  %381 = icmp eq i16 %380, -1
  br i1 %381, label %384, label %395

382:                                              ; preds = %376
  %383 = icmp ugt i32 %265, 63
  br i1 %383, label %384, label %388

384:                                              ; preds = %378, %382
  %385 = getelementptr inbounds i16, ptr %294, i64 63
  %386 = load i16, ptr %385, align 2, !tbaa !121
  %387 = icmp eq i16 %386, -1
  br i1 %387, label %390, label %395

388:                                              ; preds = %382
  %389 = icmp ugt i32 %265, 32
  br i1 %389, label %390, label %394

390:                                              ; preds = %384, %388
  %391 = getelementptr inbounds i16, ptr %294, i64 32
  %392 = load i16, ptr %391, align 2, !tbaa !121
  %393 = icmp eq i16 %392, -1
  br i1 %393, label %394, label %395

394:                                              ; preds = %390, %388
  br label %395

395:                                              ; preds = %368, %378, %384, %390, %394, %373
  %396 = phi ptr [ %374, %373 ], [ %374, %394 ], [ %374, %390 ], [ %374, %384 ], [ %374, %378 ], [ %371, %368 ]
  %397 = phi ptr [ null, %373 ], [ %296, %394 ], [ %296, %390 ], [ %296, %384 ], [ %296, %378 ], [ null, %368 ]
  %398 = phi i16 [ -1, %373 ], [ -1, %394 ], [ 32, %390 ], [ 63, %384 ], [ -3, %378 ], [ -1, %368 ]
  store i16 %398, ptr %360, align 2, !tbaa !310
  %399 = zext i16 %398 to i64
  %400 = icmp ugt i64 %295, %399
  br i1 %400, label %401, label %405

401:                                              ; preds = %395
  %402 = getelementptr inbounds i16, ptr %294, i64 %399
  %403 = load i16, ptr %402, align 2, !tbaa !121
  %404 = icmp eq i16 %403, -1
  br i1 %404, label %405, label %406

405:                                              ; preds = %395, %401
  store ptr null, ptr %396, align 8, !tbaa !188
  br label %410

406:                                              ; preds = %401
  %407 = zext i16 %403 to i64
  %408 = getelementptr inbounds %struct.ImFontGlyph, ptr %397, i64 %407
  store ptr %408, ptr %396, align 8, !tbaa !188
  %409 = icmp eq ptr %397, null
  br i1 %409, label %410, label %426

410:                                              ; preds = %405, %406
  %411 = phi ptr [ %397, %405 ], [ null, %406 ]
  %412 = load i32, ptr %2, align 8, !tbaa !535
  %413 = icmp sgt i32 %412, 0
  br i1 %413, label %417, label %414

414:                                              ; preds = %410
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1810)
  %415 = load i32, ptr %2, align 8, !tbaa !535
  %416 = load ptr, ptr %297, align 8, !tbaa !533
  br label %417

417:                                              ; preds = %410, %414
  %418 = phi ptr [ %416, %414 ], [ %411, %410 ]
  %419 = phi i32 [ %415, %414 ], [ %412, %410 ]
  %420 = add nsw i32 %419, -1
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds %struct.ImFontGlyph, ptr %418, i64 %421
  store ptr %422, ptr %396, align 8, !tbaa !188
  %423 = load i32, ptr %422, align 4
  %424 = lshr i32 %423, 2
  %425 = trunc i32 %424 to i16
  store i16 %425, ptr %360, align 2, !tbaa !310
  br label %426

426:                                              ; preds = %406, %417, %368
  %427 = phi ptr [ %408, %406 ], [ %422, %417 ], [ %370, %368 ]
  %428 = getelementptr inbounds %struct.ImFontGlyph, ptr %427, i64 0, i32 1
  %429 = load float, ptr %428, align 4, !tbaa !190
  %430 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 1
  store float %429, ptr %430, align 8, !tbaa !912
  %431 = zext i32 %45 to i64
  br label %433

432:                                              ; preds = %454
  ret void

433:                                              ; preds = %426, %454
  %434 = phi i64 [ 0, %426 ], [ %455, %454 ]
  %435 = load i32, ptr %0, align 8
  %436 = sext i32 %435 to i64
  %437 = icmp slt i64 %434, %436
  br i1 %437, label %439, label %438

438:                                              ; preds = %433
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %439

439:                                              ; preds = %433, %438
  %440 = load ptr, ptr %30, align 8, !tbaa !536
  %441 = getelementptr inbounds float, ptr %440, i64 %434
  %442 = load float, ptr %441, align 4, !tbaa !6
  %443 = fcmp fast olt float %442, 0.000000e+00
  br i1 %443, label %444, label %454

444:                                              ; preds = %439
  %445 = load float, ptr %430, align 8, !tbaa !912
  %446 = load i32, ptr %0, align 8
  %447 = sext i32 %446 to i64
  %448 = icmp slt i64 %434, %447
  br i1 %448, label %451, label %449

449:                                              ; preds = %444
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %450 = load ptr, ptr %30, align 8, !tbaa !536
  br label %451

451:                                              ; preds = %444, %449
  %452 = phi ptr [ %440, %444 ], [ %450, %449 ]
  %453 = getelementptr inbounds float, ptr %452, i64 %434
  store float %445, ptr %453, align 4, !tbaa !6
  br label %454

454:                                              ; preds = %439, %451
  %455 = add nuw nsw i64 %434, 1
  %456 = icmp eq i64 %455, %431
  br i1 %456, label %432, label %433, !llvm.loop !913
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesGreek@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesGreek@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesKorean@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesChineseFull@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress nofree nosync nounwind memory(readwrite, argmem: write, inaccessiblemem: none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #27 align 2 {
  %2 = load i16, ptr @"?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA", align 16, !tbaa !121
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %4, label %35

4:                                                ; preds = %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(24) @"?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA", ptr noundef nonnull align 16 dereferenceable(24) @"?base_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA", i64 24, i1 false)
  br label %5

5:                                                ; preds = %5, %4
  %6 = phi i64 [ 0, %4 ], [ %31, %5 ]
  %7 = phi i16 [ 19968, %4 ], [ %29, %5 ]
  %8 = phi ptr [ getelementptr inbounds ([5013 x i16], ptr @"?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA", i64 0, i64 12), %4 ], [ %32, %5 ]
  %9 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %6
  %10 = load i16, ptr %9, align 8, !tbaa !121
  %11 = add i16 %10, %7
  %12 = getelementptr inbounds i16, ptr %8, i64 1
  store i16 %11, ptr %12, align 2, !tbaa !121
  store i16 %11, ptr %8, align 2, !tbaa !121
  %13 = or i64 %6, 1
  %14 = getelementptr inbounds i16, ptr %8, i64 2
  %15 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %13
  %16 = load i16, ptr %15, align 2, !tbaa !121
  %17 = add i16 %16, %11
  %18 = getelementptr inbounds i16, ptr %8, i64 3
  store i16 %17, ptr %18, align 2, !tbaa !121
  store i16 %17, ptr %14, align 2, !tbaa !121
  %19 = or i64 %6, 2
  %20 = getelementptr inbounds i16, ptr %8, i64 4
  %21 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %19
  %22 = load i16, ptr %21, align 4, !tbaa !121
  %23 = add i16 %22, %17
  %24 = getelementptr inbounds i16, ptr %8, i64 5
  store i16 %23, ptr %24, align 2, !tbaa !121
  store i16 %23, ptr %20, align 2, !tbaa !121
  %25 = or i64 %6, 3
  %26 = getelementptr inbounds i16, ptr %8, i64 6
  %27 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %25
  %28 = load i16, ptr %27, align 2, !tbaa !121
  %29 = add i16 %28, %23
  %30 = getelementptr inbounds i16, ptr %8, i64 7
  store i16 %29, ptr %30, align 2, !tbaa !121
  store i16 %29, ptr %26, align 2, !tbaa !121
  %31 = add nuw nsw i64 %6, 4
  %32 = getelementptr inbounds i16, ptr %8, i64 8
  %33 = icmp eq i64 %31, 2500
  br i1 %33, label %34, label %5, !llvm.loop !914

34:                                               ; preds = %5
  store i16 0, ptr %32, align 2, !tbaa !121
  br label %35

35:                                               ; preds = %34, %1
  ret ptr @"?full_ranges@?1??GetGlyphRangesChineseSimplifiedCommon@ImFontAtlas@@QEAAPEBGXZ@4PAGA"
}

; Function Attrs: mustprogress nofree nosync nounwind memory(readwrite, argmem: write, inaccessiblemem: none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #27 align 2 {
  %2 = load i16, ptr @"?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA", align 16, !tbaa !121
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %4, label %36

4:                                                ; preds = %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) @"?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA", ptr noundef nonnull align 16 dereferenceable(20) @"?base_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA", i64 20, i1 false)
  br label %5

5:                                                ; preds = %28, %4
  %6 = phi i64 [ 0, %4 ], [ %33, %28 ]
  %7 = phi i16 [ 19968, %4 ], [ %31, %28 ]
  %8 = phi ptr [ getelementptr inbounds ([6009 x i16], ptr @"?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA", i64 0, i64 10), %4 ], [ %34, %28 ]
  %9 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %6
  %10 = load i16, ptr %9, align 8, !tbaa !121
  %11 = add i16 %10, %7
  %12 = getelementptr inbounds i16, ptr %8, i64 1
  store i16 %11, ptr %12, align 2, !tbaa !121
  store i16 %11, ptr %8, align 2, !tbaa !121
  %13 = or i64 %6, 1
  %14 = getelementptr inbounds i16, ptr %8, i64 2
  %15 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %13
  %16 = load i16, ptr %15, align 2, !tbaa !121
  %17 = add i16 %16, %11
  %18 = getelementptr inbounds i16, ptr %8, i64 3
  store i16 %17, ptr %18, align 2, !tbaa !121
  store i16 %17, ptr %14, align 2, !tbaa !121
  %19 = or i64 %6, 2
  %20 = getelementptr inbounds i16, ptr %8, i64 4
  %21 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %19
  %22 = load i16, ptr %21, align 4, !tbaa !121
  %23 = add i16 %22, %17
  %24 = getelementptr inbounds i16, ptr %8, i64 5
  store i16 %23, ptr %24, align 2, !tbaa !121
  store i16 %23, ptr %20, align 2, !tbaa !121
  %25 = or i64 %6, 3
  %26 = getelementptr inbounds i16, ptr %8, i64 6
  %27 = icmp eq i64 %25, 2999
  br i1 %27, label %35, label %28, !llvm.loop !914

28:                                               ; preds = %5
  %29 = getelementptr inbounds i16, ptr @"?accumulative_offsets_from_0x4E00@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4QBFB", i64 %25
  %30 = load i16, ptr %29, align 2, !tbaa !121
  %31 = add i16 %30, %23
  %32 = getelementptr inbounds i16, ptr %8, i64 7
  store i16 %31, ptr %32, align 2, !tbaa !121
  store i16 %31, ptr %26, align 2, !tbaa !121
  %33 = add nuw nsw i64 %6, 4
  %34 = getelementptr inbounds i16, ptr %8, i64 8
  br label %5

35:                                               ; preds = %5
  store i16 0, ptr %26, align 2, !tbaa !121
  br label %36

36:                                               ; preds = %35, %1
  ret ptr @"?full_ranges@?1??GetGlyphRangesJapanese@ImFontAtlas@@QEAAPEBGXZ@4PAGA"
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesCyrillic@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesThai@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @"?GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ"(ptr nocapture noundef nonnull readnone align 8 dereferenceable(1184) %0) local_unnamed_addr #23 align 2 {
  ret ptr @"?ranges@?1??GetGlyphRangesVietnamese@ImFontAtlas@@QEAAPEBGXZ@4QBGB"
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddText@ImFontGlyphRangesBuilder@@QEAAXPEBD0@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #7 align 2 {
  %4 = alloca i32, align 4
  %5 = icmp eq ptr %2, null
  %6 = getelementptr inbounds %struct.ImVector.12, ptr %0, i64 0, i32 2
  br i1 %5, label %7, label %34

7:                                                ; preds = %3
  %8 = load i8, ptr %1, align 1, !tbaa !46
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %7, %24
  %11 = phi ptr [ %14, %24 ], [ %1, %7 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !tbaa !105
  %12 = call noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef nonnull %4, ptr noundef nonnull %11, ptr noundef null)
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %42, label %16

16:                                               ; preds = %10
  %17 = load i32, ptr %4, align 4, !tbaa !105
  %18 = trunc i32 %17 to i16
  %19 = lshr i16 %18, 5
  %20 = zext i16 %19 to i32
  %21 = load i32, ptr %0, align 8
  %22 = icmp sgt i32 %21, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %24

24:                                               ; preds = %23, %16
  %25 = zext i16 %19 to i64
  %26 = and i32 %17, 31
  %27 = shl nuw i32 1, %26
  %28 = load ptr, ptr %6, align 8, !tbaa !393
  %29 = getelementptr inbounds i32, ptr %28, i64 %25
  %30 = load i32, ptr %29, align 4, !tbaa !105
  %31 = or i32 %30, %27
  store i32 %31, ptr %29, align 4, !tbaa !105
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  %32 = load i8, ptr %14, align 1, !tbaa !46
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %60, label %10

34:                                               ; preds = %3
  %35 = icmp ult ptr %1, %2
  br i1 %35, label %36, label %60

36:                                               ; preds = %34, %51
  %37 = phi ptr [ %40, %51 ], [ %1, %34 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !tbaa !105
  %38 = call noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef nonnull %4, ptr noundef %37, ptr noundef nonnull %2)
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %36, %10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  br label %60

43:                                               ; preds = %36
  %44 = load i32, ptr %4, align 4, !tbaa !105
  %45 = trunc i32 %44 to i16
  %46 = lshr i16 %45, 5
  %47 = zext i16 %46 to i32
  %48 = load i32, ptr %0, align 8
  %49 = icmp sgt i32 %48, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %51

51:                                               ; preds = %50, %43
  %52 = zext i16 %46 to i64
  %53 = and i32 %44, 31
  %54 = shl nuw i32 1, %53
  %55 = load ptr, ptr %6, align 8, !tbaa !393
  %56 = getelementptr inbounds i32, ptr %55, i64 %52
  %57 = load i32, ptr %56, align 4, !tbaa !105
  %58 = or i32 %57, %54
  store i32 %58, ptr %56, align 4, !tbaa !105
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  %59 = icmp ult ptr %40, %2
  br i1 %59, label %36, label %60

60:                                               ; preds = %51, %24, %7, %34, %42
  ret void
}

declare dso_local noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddRanges@ImFontGlyphRangesBuilder@@QEAAXPEBG@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(16) %0, ptr nocapture noundef readonly %1) local_unnamed_addr #7 align 2 {
  %3 = load i16, ptr %1, align 2, !tbaa !121
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ImVector.12, ptr %0, i64 0, i32 2
  br label %7

7:                                                ; preds = %5, %15
  %8 = phi i16 [ %3, %5 ], [ %17, %15 ]
  %9 = phi ptr [ %1, %5 ], [ %16, %15 ]
  %10 = getelementptr inbounds i16, ptr %9, i64 1
  %11 = load i16, ptr %10, align 2, !tbaa !121
  %12 = icmp ugt i16 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = zext i16 %8 to i32
  br label %19

15:                                               ; preds = %29, %7
  %16 = getelementptr inbounds i16, ptr %9, i64 2
  %17 = load i16, ptr %16, align 2, !tbaa !121
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %43, label %7, !llvm.loop !915

19:                                               ; preds = %13, %29
  %20 = phi i16 [ %30, %29 ], [ %11, %13 ]
  %21 = phi i32 [ %38, %29 ], [ %14, %13 ]
  %22 = trunc i32 %21 to i16
  %23 = lshr i16 %22, 5
  %24 = zext i16 %23 to i32
  %25 = load i32, ptr %0, align 8
  %26 = icmp sgt i32 %25, %24
  br i1 %26, label %29, label %27

27:                                               ; preds = %19
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %28 = load i16, ptr %10, align 2, !tbaa !121
  br label %29

29:                                               ; preds = %19, %27
  %30 = phi i16 [ %20, %19 ], [ %28, %27 ]
  %31 = zext i16 %23 to i64
  %32 = and i32 %21, 31
  %33 = shl nuw i32 1, %32
  %34 = load ptr, ptr %6, align 8, !tbaa !393
  %35 = getelementptr inbounds i32, ptr %34, i64 %31
  %36 = load i32, ptr %35, align 4, !tbaa !105
  %37 = or i32 %36, %33
  store i32 %37, ptr %35, align 4, !tbaa !105
  %38 = add nuw nsw i32 %21, 1
  %39 = zext i16 %30 to i32
  %40 = icmp ult i32 %21, %39
  %41 = icmp ult i32 %21, 65535
  %42 = and i1 %41, %40
  br i1 %42, label %19, label %15, !llvm.loop !916

43:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?BuildRanges@ImFontGlyphRangesBuilder@@QEAAXPEAU?$ImVector@G@@@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(16) %0, ptr nocapture noundef %1) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %struct.ImVector.12, ptr %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.ImVector.0, ptr %1, i64 0, i32 1
  %5 = getelementptr inbounds %struct.ImVector.0, ptr %1, i64 0, i32 2
  br label %40

6:                                                ; preds = %149
  %7 = load i32, ptr %1, align 8, !tbaa !64
  %8 = load i32, ptr %4, align 4, !tbaa !62
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %10, label %33

10:                                               ; preds = %6
  %11 = add nsw i32 %7, 1
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = sdiv i32 %7, 2
  %15 = add nsw i32 %14, %7
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i32 [ %15, %13 ], [ 8, %10 ]
  %18 = tail call i32 @llvm.smax.i32(i32 %17, i32 %11)
  %19 = icmp slt i32 %7, %18
  br i1 %19, label %20, label %33

20:                                               ; preds = %16
  %21 = sext i32 %18 to i64
  %22 = shl nsw i64 %21, 1
  %23 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %22)
  %24 = load ptr, ptr %5, align 8, !tbaa !63
  %25 = icmp eq ptr %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = load i32, ptr %1, align 8, !tbaa !64
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %23, ptr nonnull align 2 %24, i64 %29, i1 false)
  %30 = load ptr, ptr %5, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %30)
  br label %31

31:                                               ; preds = %26, %20
  store ptr %23, ptr %5, align 8, !tbaa !63
  store i32 %18, ptr %4, align 4, !tbaa !62
  %32 = load i32, ptr %1, align 8, !tbaa !64
  br label %33

33:                                               ; preds = %6, %16, %31
  %34 = phi i32 [ %32, %31 ], [ %7, %16 ], [ %7, %6 ]
  %35 = load ptr, ptr %5, align 8, !tbaa !63
  %36 = sext i32 %34 to i64
  %37 = getelementptr inbounds i16, ptr %35, i64 %36
  store i16 0, ptr %37, align 2
  %38 = load i32, ptr %1, align 8, !tbaa !64
  %39 = add nsw i32 %38, 1
  store i32 %39, ptr %1, align 8, !tbaa !64
  ret void

40:                                               ; preds = %2, %149
  %41 = phi i32 [ 0, %2 ], [ %151, %149 ]
  %42 = ashr i32 %41, 5
  %43 = icmp sgt i32 %41, -1
  %44 = load i32, ptr %0, align 8
  %45 = icmp sgt i32 %44, %42
  %46 = select i1 %43, i1 %45, i1 false
  br i1 %46, label %48, label %47

47:                                               ; preds = %40
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1802)
  br label %48

48:                                               ; preds = %40, %47
  %49 = and i32 %41, 31
  %50 = shl nuw i32 1, %49
  %51 = load ptr, ptr %3, align 8, !tbaa !393
  %52 = sext i32 %42 to i64
  %53 = getelementptr inbounds i32, ptr %51, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !105
  %55 = and i32 %54, %50
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %149, label %57

57:                                               ; preds = %48
  %58 = trunc i32 %41 to i16
  %59 = load i32, ptr %1, align 8, !tbaa !64
  %60 = load i32, ptr %4, align 4, !tbaa !62
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %85

62:                                               ; preds = %57
  %63 = add nsw i32 %59, 1
  %64 = icmp eq i32 %59, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = sdiv i32 %59, 2
  %67 = add nsw i32 %66, %59
  br label %68

68:                                               ; preds = %65, %62
  %69 = phi i32 [ %67, %65 ], [ 8, %62 ]
  %70 = tail call i32 @llvm.smax.i32(i32 %69, i32 %63)
  %71 = icmp slt i32 %59, %70
  br i1 %71, label %72, label %85

72:                                               ; preds = %68
  %73 = sext i32 %70 to i64
  %74 = shl nsw i64 %73, 1
  %75 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %74)
  %76 = load ptr, ptr %5, align 8, !tbaa !63
  %77 = icmp eq ptr %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %72
  %79 = load i32, ptr %1, align 8, !tbaa !64
  %80 = sext i32 %79 to i64
  %81 = shl nsw i64 %80, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %75, ptr nonnull align 2 %76, i64 %81, i1 false)
  %82 = load ptr, ptr %5, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %82)
  br label %83

83:                                               ; preds = %78, %72
  store ptr %75, ptr %5, align 8, !tbaa !63
  store i32 %70, ptr %4, align 4, !tbaa !62
  %84 = load i32, ptr %1, align 8, !tbaa !64
  br label %85

85:                                               ; preds = %57, %68, %83
  %86 = phi i32 [ %84, %83 ], [ %59, %68 ], [ %59, %57 ]
  %87 = load ptr, ptr %5, align 8, !tbaa !63
  %88 = sext i32 %86 to i64
  %89 = getelementptr inbounds i16, ptr %87, i64 %88
  store i16 %58, ptr %89, align 2
  %90 = load i32, ptr %1, align 8, !tbaa !64
  %91 = add nsw i32 %90, 1
  store i32 %91, ptr %1, align 8, !tbaa !64
  %92 = tail call i32 @llvm.smax.i32(i32 %41, i32 65535)
  br label %93

93:                                               ; preds = %104, %85
  %94 = phi i32 [ %41, %85 ], [ %97, %104 ]
  %95 = icmp eq i32 %94, %92
  br i1 %95, label %113, label %96

96:                                               ; preds = %93
  %97 = add i32 %94, 1
  %98 = ashr i32 %97, 5
  %99 = icmp sgt i32 %94, -2
  %100 = load i32, ptr %0, align 8
  %101 = icmp sgt i32 %100, %98
  %102 = select i1 %99, i1 %101, i1 false
  br i1 %102, label %104, label %103

103:                                              ; preds = %96
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1802)
  br label %104

104:                                              ; preds = %96, %103
  %105 = and i32 %97, 31
  %106 = shl nuw i32 1, %105
  %107 = load ptr, ptr %3, align 8, !tbaa !393
  %108 = sext i32 %98 to i64
  %109 = getelementptr inbounds i32, ptr %107, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !105
  %111 = and i32 %110, %106
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %93, !llvm.loop !917

113:                                              ; preds = %93, %104
  %114 = phi i32 [ %92, %93 ], [ %94, %104 ]
  %115 = trunc i32 %114 to i16
  %116 = load i32, ptr %1, align 8, !tbaa !64
  %117 = load i32, ptr %4, align 4, !tbaa !62
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %119, label %142

119:                                              ; preds = %113
  %120 = add nsw i32 %116, 1
  %121 = icmp eq i32 %116, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = sdiv i32 %116, 2
  %124 = add nsw i32 %123, %116
  br label %125

125:                                              ; preds = %122, %119
  %126 = phi i32 [ %124, %122 ], [ 8, %119 ]
  %127 = tail call i32 @llvm.smax.i32(i32 %126, i32 %120)
  %128 = icmp slt i32 %116, %127
  br i1 %128, label %129, label %142

129:                                              ; preds = %125
  %130 = sext i32 %127 to i64
  %131 = shl nsw i64 %130, 1
  %132 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %131)
  %133 = load ptr, ptr %5, align 8, !tbaa !63
  %134 = icmp eq ptr %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = load i32, ptr %1, align 8, !tbaa !64
  %137 = sext i32 %136 to i64
  %138 = shl nsw i64 %137, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %132, ptr nonnull align 2 %133, i64 %138, i1 false)
  %139 = load ptr, ptr %5, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %139)
  br label %140

140:                                              ; preds = %135, %129
  store ptr %132, ptr %5, align 8, !tbaa !63
  store i32 %127, ptr %4, align 4, !tbaa !62
  %141 = load i32, ptr %1, align 8, !tbaa !64
  br label %142

142:                                              ; preds = %113, %125, %140
  %143 = phi i32 [ %141, %140 ], [ %116, %125 ], [ %116, %113 ]
  %144 = load ptr, ptr %5, align 8, !tbaa !63
  %145 = sext i32 %143 to i64
  %146 = getelementptr inbounds i16, ptr %144, i64 %145
  store i16 %115, ptr %146, align 2
  %147 = load i32, ptr %1, align 8, !tbaa !64
  %148 = add nsw i32 %147, 1
  store i32 %148, ptr %1, align 8, !tbaa !64
  br label %149

149:                                              ; preds = %48, %142
  %150 = phi i32 [ %114, %142 ], [ %41, %48 ]
  %151 = add nsw i32 %150, 1
  %152 = icmp slt i32 %150, 65535
  br i1 %152, label %40, label %6, !llvm.loop !918
}

; Function Attrs: nounwind uwtable
define dso_local void @"??1ImFont@@QEAA@XZ"(ptr nocapture noundef nonnull align 8 dereferenceable(120) %0) unnamed_addr #22 align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %2, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !533
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 1
  store i32 0, ptr %8, align 4, !tbaa !534
  store i32 0, ptr %7, align 8, !tbaa !535
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %4)
          to label %9 unwind label %48

9:                                                ; preds = %6
  store ptr null, ptr %3, align 8, !tbaa !533
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !536
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 1
  store i32 0, ptr %15, align 4, !tbaa !537
  store i32 0, ptr %0, align 8, !tbaa !538
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %12)
          to label %16 unwind label %48

16:                                               ; preds = %14
  store ptr null, ptr %11, align 8, !tbaa !536
  br label %17

17:                                               ; preds = %16, %10
  %18 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = icmp eq ptr %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %23 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 1
  store i32 0, ptr %23, align 4, !tbaa !62
  store i32 0, ptr %22, align 8, !tbaa !64
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %19)
          to label %24 unwind label %48

24:                                               ; preds = %21
  store ptr null, ptr %18, align 8, !tbaa !63
  br label %25

25:                                               ; preds = %24, %17
  %26 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %27 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, i8 0, i64 16, i1 false)
  store i8 1, ptr %27, align 8, !tbaa !539
  %28 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 16
  store <2 x float> zeroinitializer, ptr %28, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 18
  store i32 0, ptr %29, align 8, !tbaa !540
  %30 = load ptr, ptr %3, align 8, !tbaa !533
  %31 = icmp eq ptr %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %25
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %30)
          to label %35 unwind label %33

33:                                               ; preds = %32
  %34 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %34) ]
  unreachable

35:                                               ; preds = %32
  %36 = load ptr, ptr %18, align 8, !tbaa !63
  %37 = icmp eq ptr %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %36)
          to label %41 unwind label %39

39:                                               ; preds = %38
  %40 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %40) ]
  unreachable

41:                                               ; preds = %25, %35, %38
  %42 = load ptr, ptr %11, align 8, !tbaa !536
  %43 = icmp eq ptr %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %42)
          to label %47 unwind label %45

45:                                               ; preds = %44
  %46 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %46) ]
  unreachable

47:                                               ; preds = %41, %44
  ret void

48:                                               ; preds = %21, %14, %6
  %49 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %49) ]
  unreachable
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?GrowIndex@ImFont@@QEAAXH@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(120) %0, i32 noundef %1) local_unnamed_addr #7 align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !919
  %4 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !187
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1EO@HLFAHELG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAA?$AAd?$AAv?$AAa?$AAn?$AAc?$AAe?$AAX?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3266)
  %8 = load i32, ptr %4, align 8, !tbaa !187
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i32 [ %8, %7 ], [ %3, %2 ]
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %12, label %141

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !537
  %15 = icmp slt i32 %14, %1
  br i1 %15, label %16, label %38

16:                                               ; preds = %12
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = sdiv i32 %14, 2
  %20 = add nsw i32 %19, %14
  br label %21

21:                                               ; preds = %18, %16
  %22 = phi i32 [ %20, %18 ], [ 8, %16 ]
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 %1)
  %24 = icmp slt i32 %14, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 2
  %28 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %27)
  %29 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !536
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = load i32, ptr %0, align 8, !tbaa !538
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %28, ptr nonnull align 4 %30, i64 %35, i1 false)
  %36 = load ptr, ptr %29, align 8, !tbaa !536
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %36)
  br label %37

37:                                               ; preds = %32, %25
  store ptr %28, ptr %29, align 8, !tbaa !536
  store i32 %23, ptr %13, align 4, !tbaa !537
  br label %38

38:                                               ; preds = %37, %21, %12
  %39 = load i32, ptr %0, align 8, !tbaa !538
  %40 = icmp slt i32 %39, %1
  br i1 %40, label %41, label %76

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %43 = sext i32 %39 to i64
  %44 = sext i32 %1 to i64
  %45 = sub nsw i64 %44, %43
  %46 = xor i64 %43, -1
  %47 = add nsw i64 %46, %44
  %48 = and i64 %45, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %41, %50
  %51 = phi i64 [ %55, %50 ], [ %43, %41 ]
  %52 = phi i64 [ %56, %50 ], [ 0, %41 ]
  %53 = load ptr, ptr %42, align 8, !tbaa !536
  %54 = getelementptr inbounds float, ptr %53, i64 %51
  store i32 -1082130432, ptr %54, align 4
  %55 = add nsw i64 %51, 1
  %56 = add i64 %52, 1
  %57 = icmp eq i64 %56, %48
  br i1 %57, label %58, label %50, !llvm.loop !920

58:                                               ; preds = %50, %41
  %59 = phi i64 [ %43, %41 ], [ %55, %50 ]
  %60 = icmp ult i64 %47, 3
  br i1 %60, label %76, label %61

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %74, %61 ], [ %59, %58 ]
  %63 = load ptr, ptr %42, align 8, !tbaa !536
  %64 = getelementptr inbounds float, ptr %63, i64 %62
  store i32 -1082130432, ptr %64, align 4
  %65 = add nsw i64 %62, 1
  %66 = load ptr, ptr %42, align 8, !tbaa !536
  %67 = getelementptr inbounds float, ptr %66, i64 %65
  store i32 -1082130432, ptr %67, align 4
  %68 = add nsw i64 %62, 2
  %69 = load ptr, ptr %42, align 8, !tbaa !536
  %70 = getelementptr inbounds float, ptr %69, i64 %68
  store i32 -1082130432, ptr %70, align 4
  %71 = add nsw i64 %62, 3
  %72 = load ptr, ptr %42, align 8, !tbaa !536
  %73 = getelementptr inbounds float, ptr %72, i64 %71
  store i32 -1082130432, ptr %73, align 4
  %74 = add nsw i64 %62, 4
  %75 = icmp eq i64 %74, %44
  br i1 %75, label %76, label %61, !llvm.loop !921

76:                                               ; preds = %58, %61, %38
  store i32 %1, ptr %0, align 8, !tbaa !538
  %77 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 1
  %78 = load i32, ptr %77, align 4, !tbaa !62
  %79 = icmp slt i32 %78, %1
  br i1 %79, label %80, label %102

80:                                               ; preds = %76
  %81 = icmp eq i32 %78, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %80
  %83 = sdiv i32 %78, 2
  %84 = add nsw i32 %83, %78
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i32 [ %84, %82 ], [ 8, %80 ]
  %87 = tail call i32 @llvm.smax.i32(i32 %86, i32 %1)
  %88 = icmp slt i32 %78, %87
  br i1 %88, label %89, label %102

89:                                               ; preds = %85
  %90 = sext i32 %87 to i64
  %91 = shl nsw i64 %90, 1
  %92 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %91)
  %93 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %94 = load ptr, ptr %93, align 8, !tbaa !63
  %95 = icmp eq ptr %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %89
  %97 = load i32, ptr %4, align 8, !tbaa !64
  %98 = sext i32 %97 to i64
  %99 = shl nsw i64 %98, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %92, ptr nonnull align 2 %94, i64 %99, i1 false)
  %100 = load ptr, ptr %93, align 8, !tbaa !63
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %100)
  br label %101

101:                                              ; preds = %96, %89
  store ptr %92, ptr %93, align 8, !tbaa !63
  store i32 %87, ptr %77, align 4, !tbaa !62
  br label %102

102:                                              ; preds = %101, %85, %76
  %103 = load i32, ptr %4, align 8, !tbaa !64
  %104 = icmp slt i32 %103, %1
  br i1 %104, label %105, label %140

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %107 = sext i32 %103 to i64
  %108 = sext i32 %1 to i64
  %109 = sub nsw i64 %108, %107
  %110 = xor i64 %107, -1
  %111 = add nsw i64 %110, %108
  %112 = and i64 %109, 3
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %105, %114
  %115 = phi i64 [ %119, %114 ], [ %107, %105 ]
  %116 = phi i64 [ %120, %114 ], [ 0, %105 ]
  %117 = load ptr, ptr %106, align 8, !tbaa !63
  %118 = getelementptr inbounds i16, ptr %117, i64 %115
  store i16 -1, ptr %118, align 2
  %119 = add nsw i64 %115, 1
  %120 = add i64 %116, 1
  %121 = icmp eq i64 %120, %112
  br i1 %121, label %122, label %114, !llvm.loop !922

122:                                              ; preds = %114, %105
  %123 = phi i64 [ %107, %105 ], [ %119, %114 ]
  %124 = icmp ult i64 %111, 3
  br i1 %124, label %140, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = load ptr, ptr %106, align 8, !tbaa !63
  %128 = getelementptr inbounds i16, ptr %127, i64 %126
  store i16 -1, ptr %128, align 2
  %129 = add nsw i64 %126, 1
  %130 = load ptr, ptr %106, align 8, !tbaa !63
  %131 = getelementptr inbounds i16, ptr %130, i64 %129
  store i16 -1, ptr %131, align 2
  %132 = add nsw i64 %126, 2
  %133 = load ptr, ptr %106, align 8, !tbaa !63
  %134 = getelementptr inbounds i16, ptr %133, i64 %132
  store i16 -1, ptr %134, align 2
  %135 = add nsw i64 %126, 3
  %136 = load ptr, ptr %106, align 8, !tbaa !63
  %137 = getelementptr inbounds i16, ptr %136, i64 %135
  store i16 -1, ptr %137, align 2
  %138 = add nsw i64 %126, 4
  %139 = icmp eq i64 %138, %108
  br i1 %139, label %140, label %125, !llvm.loop !923

140:                                              ; preds = %122, %125, %102
  store i32 %1, ptr %4, align 8, !tbaa !64
  br label %141

141:                                              ; preds = %9, %140
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef ptr @"?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, i16 noundef %1) local_unnamed_addr #28 align 2 {
  %3 = zext i16 %1 to i64
  %4 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !187
  %6 = sext i32 %5 to i64
  %7 = icmp ult i64 %3, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !188
  br label %24

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !189
  %14 = getelementptr inbounds i16, ptr %13, i64 %3
  %15 = load i16, ptr %14, align 2, !tbaa !121
  %16 = icmp eq i16 %15, -1
  %17 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = zext i16 %15 to i64
  %22 = getelementptr inbounds %struct.ImFontGlyph, ptr %20, i64 %21
  %23 = select i1 %16, ptr %18, ptr %22
  br label %24

24:                                               ; preds = %11, %8
  %25 = phi ptr [ %10, %8 ], [ %23, %11 ]
  ret ptr %25
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @"?SetGlyphVisible@ImFont@@QEAAXG_N@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, i16 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #29 align 2 {
  %4 = zext i16 %1 to i64
  %5 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %6 = load i32, ptr %5, align 8, !tbaa !187
  %7 = sext i32 %6 to i64
  %8 = icmp ult i64 %4, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !188
  br label %25

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !189
  %15 = getelementptr inbounds i16, ptr %14, i64 %4
  %16 = load i16, ptr %15, align 2, !tbaa !121
  %17 = icmp eq i16 %16, -1
  %18 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = zext i16 %16 to i64
  %23 = getelementptr inbounds %struct.ImFontGlyph, ptr %21, i64 %22
  %24 = select i1 %17, ptr %19, ptr %23
  br label %25

25:                                               ; preds = %9, %12
  %26 = phi ptr [ %11, %9 ], [ %24, %12 ]
  %27 = icmp eq ptr %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = load i32, ptr %26, align 4
  %30 = select i1 %2, i32 2, i32 0
  %31 = and i32 %29, -3
  %32 = or i32 %31, %30
  store i32 %32, ptr %26, align 4
  br label %33

33:                                               ; preds = %28, %25
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef ptr @"?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, i16 noundef %1) local_unnamed_addr #28 align 2 {
  %3 = zext i16 %1 to i64
  %4 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !187
  %6 = sext i32 %5 to i64
  %7 = icmp ult i64 %3, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !189
  %11 = getelementptr inbounds i16, ptr %10, i64 %3
  %12 = load i16, ptr %11, align 2, !tbaa !121
  %13 = icmp eq i16 %12, -1
  %14 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = zext i16 %12 to i64
  %17 = getelementptr inbounds %struct.ImFontGlyph, ptr %15, i64 %16
  %18 = select i1 %13, ptr null, ptr %17
  br label %19

19:                                               ; preds = %2, %8
  %20 = phi ptr [ %18, %8 ], [ null, %2 ]
  ret ptr %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef zeroext i1 @"?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #30 align 2 {
  %4 = lshr i32 %1, 12
  %5 = lshr i32 %2, 12
  %6 = icmp ugt i32 %4, %5
  br i1 %6, label %25, label %7

7:                                                ; preds = %3, %21
  %8 = phi i1 [ %23, %21 ], [ false, %3 ]
  %9 = phi i32 [ %22, %21 ], [ %4, %3 ]
  %10 = icmp ult i32 %9, 16
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  %12 = lshr i32 %9, 3
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 19, i64 %13
  %15 = load i8, ptr %14, align 1, !tbaa !46
  %16 = zext i8 %15 to i32
  %17 = and i32 %9, 7
  %18 = shl nuw nsw i32 1, %17
  %19 = and i32 %18, %16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %7, %11
  %22 = add nuw nsw i32 %9, 1
  %23 = icmp uge i32 %9, %5
  %24 = icmp eq i32 %9, %5
  br i1 %24, label %25, label %7, !llvm.loop !924

25:                                               ; preds = %11, %21, %3
  %26 = phi i1 [ true, %3 ], [ %23, %21 ], [ %8, %11 ]
  ret i1 %26
}

; Function Attrs: mustprogress uwtable
define dso_local void @"?AddRemapChar@ImFont@@QEAAXGG_N@Z"(ptr nocapture noundef nonnull align 8 dereferenceable(120) %0, i16 noundef %1, i16 noundef %2, i1 noundef zeroext %3) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %6 = load i32, ptr %5, align 8, !tbaa !187
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CK@OHOOGJPG@?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAo?$AAo?$AAk?$AAu?$AAp?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3322)
  %9 = load i32, ptr %5, align 8, !tbaa !187
  br label %10

10:                                               ; preds = %8, %4
  %11 = phi i32 [ %9, %8 ], [ %6, %4 ]
  %12 = zext i16 %1 to i32
  %13 = icmp ugt i32 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !189
  %17 = zext i16 %1 to i64
  %18 = getelementptr inbounds i16, ptr %16, i64 %17
  %19 = load i16, ptr %18, align 2, !tbaa !121
  %20 = icmp ne i16 %19, -1
  %21 = or i1 %20, %3
  br i1 %21, label %22, label %68

22:                                               ; preds = %14
  %23 = zext i16 %2 to i32
  %24 = icmp ugt i32 %11, %23
  %25 = add nuw nsw i32 %12, 1
  tail call void @"?GrowIndex@ImFont@@QEAAXH@Z"(ptr noundef nonnull align 8 dereferenceable(120) %0, i32 noundef %25)
  br i1 %24, label %31, label %49

26:                                               ; preds = %10
  %27 = zext i16 %2 to i32
  %28 = icmp ugt i32 %11, %27
  br i1 %28, label %29, label %68

29:                                               ; preds = %26
  %30 = add nuw nsw i32 %12, 1
  tail call void @"?GrowIndex@ImFont@@QEAAXH@Z"(ptr noundef nonnull align 8 dereferenceable(120) %0, i32 noundef %30)
  br label %31

31:                                               ; preds = %29, %22
  %32 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !189
  %34 = zext i16 %2 to i64
  %35 = getelementptr inbounds i16, ptr %33, i64 %34
  %36 = load i16, ptr %35, align 2, !tbaa !121
  %37 = load i32, ptr %5, align 8
  %38 = icmp sgt i32 %37, %12
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  %40 = load ptr, ptr %32, align 8, !tbaa !63
  br label %41

41:                                               ; preds = %31, %39
  %42 = phi ptr [ %33, %31 ], [ %40, %39 ]
  %43 = zext i16 %1 to i64
  %44 = getelementptr inbounds i16, ptr %42, i64 %43
  store i16 %36, ptr %44, align 2, !tbaa !121
  %45 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !925
  %47 = getelementptr inbounds float, ptr %46, i64 %34
  %48 = load float, ptr %47, align 4, !tbaa !6
  br label %58

49:                                               ; preds = %22
  %50 = load i32, ptr %5, align 8
  %51 = icmp sgt i32 %50, %12
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %53

53:                                               ; preds = %49, %52
  %54 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !63
  %56 = zext i16 %1 to i64
  %57 = getelementptr inbounds i16, ptr %55, i64 %56
  store i16 -1, ptr %57, align 2, !tbaa !121
  br label %58

58:                                               ; preds = %53, %41
  %59 = phi fast float [ %48, %41 ], [ 1.000000e+00, %53 ]
  %60 = load i32, ptr %0, align 8
  %61 = icmp sgt i32 %60, %12
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1EK@LKPAANLM@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 1801)
  br label %63

63:                                               ; preds = %58, %62
  %64 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %65 = load ptr, ptr %64, align 8, !tbaa !536
  %66 = zext i16 %1 to i64
  %67 = getelementptr inbounds float, ptr %65, i64 %66
  store float %59, ptr %67, align 4, !tbaa !6
  br label %68

68:                                               ; preds = %26, %14, %63
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @"?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, float noundef %1, ptr noundef %2, ptr noundef %3, float noundef %4) local_unnamed_addr #7 align 2 {
  %6 = alloca i32, align 4
  %7 = fdiv fast float %4, %1
  %8 = icmp eq ptr %3, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BM@KGJCABG@?$AAt?$AAe?$AAx?$AAt?$AA_?$AAe?$AAn?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3391)
  br label %10

10:                                               ; preds = %9, %5
  %11 = icmp ult ptr %2, %3
  br i1 %11, label %12, label %91

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 1
  br label %15

15:                                               ; preds = %12, %83
  %16 = phi ptr [ %2, %12 ], [ %35, %83 ]
  %17 = phi i8 [ 1, %12 ], [ %89, %83 ]
  %18 = phi ptr [ null, %12 ], [ %88, %83 ]
  %19 = phi ptr [ %2, %12 ], [ %87, %83 ]
  %20 = phi float [ 0.000000e+00, %12 ], [ %86, %83 ]
  %21 = phi float [ 0.000000e+00, %12 ], [ %85, %83 ]
  %22 = phi float [ 0.000000e+00, %12 ], [ %84, %83 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #39
  %23 = load i8, ptr %16, align 1, !tbaa !46
  %24 = sext i8 %23 to i32
  store i32 %24, ptr %6, align 4, !tbaa !105
  %25 = icmp sgt i8 %23, -1
  br i1 %25, label %26, label %28

26:                                               ; preds = %15
  %27 = getelementptr inbounds i8, ptr %16, i64 1
  br label %33

28:                                               ; preds = %15
  %29 = call noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef nonnull %6, ptr noundef nonnull %16, ptr noundef nonnull %3)
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %16, i64 %30
  %32 = load i32, ptr %6, align 4, !tbaa !105
  br label %33

33:                                               ; preds = %28, %26
  %34 = phi i32 [ %32, %28 ], [ %24, %26 ]
  %35 = phi ptr [ %31, %28 ], [ %27, %26 ]
  %36 = icmp ult i32 %34, 32
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  switch i32 %34, label %39 [
    i32 10, label %83
    i32 13, label %38
  ]

38:                                               ; preds = %37
  br label %83, !llvm.loop !926

39:                                               ; preds = %37, %33
  %40 = load i32, ptr %0, align 8, !tbaa !919
  %41 = icmp slt i32 %34, %40
  %42 = load ptr, ptr %13, align 8
  %43 = zext i32 %34 to i64
  %44 = getelementptr inbounds float, ptr %42, i64 %43
  %45 = select i1 %41, ptr %44, ptr %14
  %46 = load float, ptr %45, align 4, !tbaa !6
  switch i32 %34, label %55 [
    i32 32, label %47
    i32 9, label %47
    i32 12288, label %47
  ]

47:                                               ; preds = %39, %39, %39
  %48 = and i8 %17, 1
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, float -0.000000e+00, float %20
  %51 = fadd fast float %50, %22
  %52 = select i1 %49, float %20, float 0.000000e+00
  %53 = select i1 %49, ptr %19, ptr %16
  %54 = fadd fast float %46, %52
  br label %69

55:                                               ; preds = %39
  %56 = fadd fast float %46, %21
  %57 = and i8 %17, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = fadd fast float %20, %22
  %61 = fadd fast float %60, %56
  br label %62

62:                                               ; preds = %55, %59
  %63 = phi float [ %61, %59 ], [ %22, %55 ]
  %64 = phi float [ 0.000000e+00, %59 ], [ %56, %55 ]
  %65 = phi float [ 0.000000e+00, %59 ], [ %20, %55 ]
  %66 = phi ptr [ %19, %59 ], [ %35, %55 ]
  %67 = phi ptr [ %19, %59 ], [ %18, %55 ]
  switch i32 %34, label %68 [
    i32 63, label %69
    i32 59, label %69
    i32 46, label %69
    i32 44, label %69
    i32 33, label %69
    i32 34, label %69
  ]

68:                                               ; preds = %62
  br label %69

69:                                               ; preds = %68, %62, %62, %62, %62, %62, %62, %47
  %70 = phi float [ %51, %47 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %62 ], [ %63, %68 ]
  %71 = phi float [ %21, %47 ], [ %64, %62 ], [ %64, %62 ], [ %64, %62 ], [ %64, %62 ], [ %64, %62 ], [ %64, %62 ], [ %64, %68 ]
  %72 = phi float [ %54, %47 ], [ %65, %62 ], [ %65, %62 ], [ %65, %62 ], [ %65, %62 ], [ %65, %62 ], [ %65, %62 ], [ %65, %68 ]
  %73 = phi ptr [ %53, %47 ], [ %66, %62 ], [ %66, %62 ], [ %66, %62 ], [ %66, %62 ], [ %66, %62 ], [ %66, %62 ], [ %66, %68 ]
  %74 = phi ptr [ %18, %47 ], [ %67, %62 ], [ %67, %62 ], [ %67, %62 ], [ %67, %62 ], [ %67, %62 ], [ %67, %62 ], [ %67, %68 ]
  %75 = phi i8 [ 0, %47 ], [ 0, %62 ], [ 0, %62 ], [ 0, %62 ], [ 0, %62 ], [ 0, %62 ], [ 0, %62 ], [ 1, %68 ]
  %76 = fadd fast float %71, %70
  %77 = fcmp fast ogt float %76, %7
  br i1 %77, label %78, label %83

78:                                               ; preds = %69
  %79 = fcmp fast olt float %71, %7
  %80 = icmp eq ptr %74, null
  %81 = select i1 %80, ptr %73, ptr %74
  %82 = select i1 %79, ptr %81, ptr %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #39
  br label %91

83:                                               ; preds = %69, %37, %38
  %84 = phi float [ %22, %38 ], [ 0.000000e+00, %37 ], [ %70, %69 ]
  %85 = phi float [ %21, %38 ], [ 0.000000e+00, %37 ], [ %71, %69 ]
  %86 = phi float [ %20, %38 ], [ 0.000000e+00, %37 ], [ %72, %69 ]
  %87 = phi ptr [ %19, %38 ], [ %19, %37 ], [ %73, %69 ]
  %88 = phi ptr [ %18, %38 ], [ %18, %37 ], [ %74, %69 ]
  %89 = phi i8 [ %17, %38 ], [ 1, %37 ], [ %75, %69 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #39
  %90 = icmp ult ptr %35, %3
  br i1 %90, label %15, label %91

91:                                               ; preds = %83, %10, %78
  %92 = phi ptr [ %82, %78 ], [ %2, %10 ], [ %35, %83 ]
  %93 = icmp eq ptr %92, %2
  %94 = and i1 %11, %93
  %95 = zext i1 %94 to i64
  %96 = getelementptr i8, ptr %92, i64 %95
  ret ptr %96
}

; Function Attrs: uwtable
define dso_local void @"?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, ptr noalias nocapture sret(%struct.ImVec2) align 4 %1, float noundef %2, float noundef %3, float noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef writeonly %7) local_unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = icmp eq ptr %6, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %5)
  %13 = getelementptr inbounds i8, ptr %5, i64 %12
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi ptr [ %6, %8 ], [ %13, %11 ]
  %16 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 2
  %17 = load float, ptr %16, align 4, !tbaa !181
  %18 = fdiv fast float %2, %17
  %19 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %1, align 4, !tbaa !6
  %20 = icmp ugt ptr %15, %5
  br i1 %20, label %21, label %159

21:                                               ; preds = %14
  %22 = fcmp fast ogt float %4, 0.000000e+00
  %23 = ptrtoint ptr %15 to i64
  %24 = getelementptr inbounds %struct.ImVector, ptr %0, i64 0, i32 2
  %25 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 1
  br i1 %22, label %26, label %104

26:                                               ; preds = %21, %97
  %27 = phi float [ %102, %97 ], [ 0.000000e+00, %21 ]
  %28 = phi ptr [ %101, %97 ], [ %5, %21 ]
  %29 = phi ptr [ %100, %97 ], [ null, %21 ]
  %30 = phi float [ %99, %97 ], [ 0.000000e+00, %21 ]
  %31 = phi float [ %98, %97 ], [ 0.000000e+00, %21 ]
  %32 = icmp eq ptr %29, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = fsub fast float %4, %27
  %35 = call noundef ptr @"?CalcWordWrapPositionA@ImFont@@QEBAPEBDMPEBD0M@Z"(ptr noundef nonnull align 8 dereferenceable(120) %0, float noundef %18, ptr noundef %28, ptr noundef nonnull %15, float noundef %34)
  br label %36

36:                                               ; preds = %33, %26
  %37 = phi ptr [ %29, %26 ], [ %35, %33 ]
  %38 = icmp ult ptr %28, %37
  br i1 %38, label %62, label %39

39:                                               ; preds = %36
  %40 = fcmp fast olt float %30, %27
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  store float %27, ptr %1, align 4, !tbaa !113
  br label %42

42:                                               ; preds = %41, %39
  %43 = phi float [ %30, %39 ], [ %27, %41 ]
  %44 = fadd fast float %31, %2
  store float %44, ptr %19, align 4, !tbaa !112
  %45 = ptrtoint ptr %28 to i64
  %46 = sub i64 %23, %45
  %47 = getelementptr i8, ptr %28, i64 %46
  br label %48

48:                                               ; preds = %51, %42
  %49 = phi ptr [ %52, %51 ], [ %28, %42 ]
  %50 = load i8, ptr %49, align 1, !tbaa !46
  switch i8 %50, label %56 [
    i8 32, label %51
    i8 9, label %51
  ]

51:                                               ; preds = %48, %48
  %52 = getelementptr inbounds i8, ptr %49, i64 1
  %53 = icmp eq ptr %52, %47
  br i1 %53, label %54, label %48, !llvm.loop !183

54:                                               ; preds = %51
  %55 = load i8, ptr %47, align 1, !tbaa !46
  br label %56

56:                                               ; preds = %48, %54
  %57 = phi i8 [ %55, %54 ], [ %50, %48 ]
  %58 = phi ptr [ %47, %54 ], [ %49, %48 ]
  %59 = icmp eq i8 %57, 10
  %60 = zext i1 %59 to i64
  %61 = getelementptr i8, ptr %58, i64 %60
  br label %97

62:                                               ; preds = %36
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #39
  %63 = load i8, ptr %28, align 1, !tbaa !46
  %64 = sext i8 %63 to i32
  store i32 %64, ptr %9, align 4, !tbaa !105
  %65 = icmp sgt i8 %63, -1
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = call noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef nonnull %9, ptr noundef nonnull %28, ptr noundef nonnull %15)
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, ptr %28, i64 %68
  %70 = load i32, ptr %9, align 4, !tbaa !105
  br label %73

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, ptr %28, i64 1
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %70, %66 ], [ %64, %71 ]
  %75 = phi ptr [ %69, %66 ], [ %72, %71 ]
  %76 = icmp ult i32 %74, 32
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  switch i32 %74, label %81 [
    i32 10, label %78
    i32 13, label %92
  ], !llvm.loop !927

78:                                               ; preds = %77
  %79 = call fast float @llvm.maxnum.f32(float %30, float %27)
  store float %79, ptr %1, align 4, !tbaa !113
  %80 = fadd fast float %31, %2
  store float %80, ptr %19, align 4, !tbaa !112
  br label %92, !llvm.loop !927

81:                                               ; preds = %77, %73
  %82 = load i32, ptr %0, align 8, !tbaa !919
  %83 = icmp slt i32 %74, %82
  %84 = load ptr, ptr %24, align 8
  %85 = zext i32 %74 to i64
  %86 = getelementptr inbounds float, ptr %84, i64 %85
  %87 = select i1 %83, ptr %86, ptr %25
  %88 = load float, ptr %87, align 4, !tbaa !6
  %89 = fmul fast float %88, %18
  %90 = fadd fast float %89, %27
  %91 = fcmp fast ult float %90, %3
  br i1 %91, label %92, label %96

92:                                               ; preds = %78, %77, %81
  %93 = phi float [ %31, %77 ], [ %80, %78 ], [ %31, %81 ]
  %94 = phi float [ %30, %77 ], [ %79, %78 ], [ %30, %81 ]
  %95 = phi float [ %27, %77 ], [ 0.000000e+00, %78 ], [ %90, %81 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #39
  br label %97

96:                                               ; preds = %81
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #39
  br label %148

97:                                               ; preds = %92, %56
  %98 = phi float [ %44, %56 ], [ %93, %92 ]
  %99 = phi float [ %43, %56 ], [ %94, %92 ]
  %100 = phi ptr [ null, %56 ], [ %37, %92 ]
  %101 = phi ptr [ %61, %56 ], [ %75, %92 ]
  %102 = phi float [ 0.000000e+00, %56 ], [ %95, %92 ]
  %103 = icmp ult ptr %101, %15
  br i1 %103, label %26, label %148, !llvm.loop !927

104:                                              ; preds = %21, %140
  %105 = phi float [ %144, %140 ], [ 0.000000e+00, %21 ]
  %106 = phi ptr [ %143, %140 ], [ %5, %21 ]
  %107 = phi float [ %142, %140 ], [ 0.000000e+00, %21 ]
  %108 = phi float [ %141, %140 ], [ 0.000000e+00, %21 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #39
  %109 = load i8, ptr %106, align 1, !tbaa !46
  %110 = sext i8 %109 to i32
  store i32 %110, ptr %9, align 4, !tbaa !105
  %111 = icmp sgt i8 %109, -1
  br i1 %111, label %112, label %114

112:                                              ; preds = %104
  %113 = getelementptr inbounds i8, ptr %106, i64 1
  br label %119

114:                                              ; preds = %104
  %115 = call noundef i32 @"?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z"(ptr noundef nonnull %9, ptr noundef nonnull %106, ptr noundef nonnull %15)
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, ptr %106, i64 %116
  %118 = load i32, ptr %9, align 4, !tbaa !105
  br label %119

119:                                              ; preds = %114, %112
  %120 = phi i32 [ %118, %114 ], [ %110, %112 ]
  %121 = phi ptr [ %117, %114 ], [ %113, %112 ]
  %122 = icmp ult i32 %120, 32
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  switch i32 %120, label %127 [
    i32 10, label %124
    i32 13, label %140
  ], !llvm.loop !927

124:                                              ; preds = %123
  %125 = call fast float @llvm.maxnum.f32(float %107, float %105)
  store float %125, ptr %1, align 4, !tbaa !113
  %126 = fadd fast float %108, %2
  store float %126, ptr %19, align 4, !tbaa !112
  br label %140, !llvm.loop !927

127:                                              ; preds = %123, %119
  %128 = load i32, ptr %0, align 8, !tbaa !919
  %129 = icmp slt i32 %120, %128
  %130 = load ptr, ptr %24, align 8
  %131 = zext i32 %120 to i64
  %132 = getelementptr inbounds float, ptr %130, i64 %131
  %133 = select i1 %129, ptr %132, ptr %25
  %134 = load float, ptr %133, align 4, !tbaa !6
  %135 = fmul fast float %134, %18
  %136 = fadd fast float %135, %105
  %137 = fcmp fast ult float %136, %3
  %138 = select i1 %137, ptr %121, ptr %106
  %139 = select i1 %137, float %136, float %105
  br label %140

140:                                              ; preds = %123, %127, %124
  %141 = phi float [ %126, %124 ], [ %108, %127 ], [ %108, %123 ]
  %142 = phi float [ %125, %124 ], [ %107, %127 ], [ %107, %123 ]
  %143 = phi ptr [ %121, %124 ], [ %138, %127 ], [ %121, %123 ]
  %144 = phi float [ 0.000000e+00, %124 ], [ %139, %127 ], [ %105, %123 ]
  %145 = phi i1 [ true, %124 ], [ %137, %127 ], [ true, %123 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #39
  %146 = icmp ult ptr %143, %15
  %147 = select i1 %145, i1 %146, i1 false
  br i1 %147, label %104, label %148, !llvm.loop !927

148:                                              ; preds = %140, %97, %96
  %149 = phi float [ %31, %96 ], [ %98, %97 ], [ %141, %140 ]
  %150 = phi float [ %30, %96 ], [ %99, %97 ], [ %142, %140 ]
  %151 = phi ptr [ %28, %96 ], [ %101, %97 ], [ %143, %140 ]
  %152 = phi float [ %27, %96 ], [ %102, %97 ], [ %144, %140 ]
  %153 = fcmp fast olt float %150, %152
  br i1 %153, label %154, label %155

154:                                              ; preds = %148
  store float %152, ptr %1, align 4, !tbaa !113
  br label %155

155:                                              ; preds = %154, %148
  %156 = fcmp fast ogt float %152, 0.000000e+00
  %157 = fcmp fast oeq float %149, 0.000000e+00
  %158 = select i1 %156, i1 true, i1 %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %14, %155
  %160 = phi float [ %149, %155 ], [ 0.000000e+00, %14 ]
  %161 = phi ptr [ %151, %155 ], [ %5, %14 ]
  %162 = fadd fast float %160, %2
  store float %162, ptr %19, align 4, !tbaa !112
  br label %163

163:                                              ; preds = %155, %159
  %164 = phi ptr [ %151, %155 ], [ %161, %159 ]
  %165 = icmp eq ptr %7, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %163
  store ptr %164, ptr %7, align 8, !tbaa !117
  br label %167

167:                                              ; preds = %166, %163
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MAEBUImVec2@@IG@Z"(ptr nocapture noundef nonnull readonly align 8 dereferenceable(120) %0, ptr nocapture noundef %1, float noundef %2, ptr nocapture noundef nonnull readonly align 4 dereferenceable(8) %3, i32 noundef %4, i16 noundef %5) local_unnamed_addr #0 align 2 {
  %7 = zext i16 %5 to i64
  %8 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3
  %9 = load i32, ptr %8, align 8, !tbaa !187
  %10 = sext i32 %9 to i64
  %11 = icmp ult i64 %7, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %14 = load ptr, ptr %13, align 8, !tbaa !188
  br label %28

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 3, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !189
  %18 = getelementptr inbounds i16, ptr %17, i64 %7
  %19 = load i16, ptr %18, align 2, !tbaa !121
  %20 = icmp eq i16 %19, -1
  %21 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 4, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = zext i16 %19 to i64
  %26 = getelementptr inbounds %struct.ImFontGlyph, ptr %24, i64 %25
  %27 = select i1 %20, ptr %22, ptr %26
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi ptr [ %14, %12 ], [ %27, %15 ]
  %30 = icmp eq ptr %29, null
  br i1 %30, label %115, label %31

31:                                               ; preds = %28
  %32 = load i32, ptr %29, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %115, label %35

35:                                               ; preds = %31
  %36 = and i32 %32, 1
  %37 = icmp eq i32 %36, 0
  %38 = or i32 %4, 16777215
  %39 = select i1 %37, i32 %4, i32 %38
  %40 = fcmp fast ult float %2, 0.000000e+00
  %41 = getelementptr inbounds %struct.ImFont, ptr %0, i64 0, i32 2
  %42 = load float, ptr %41, align 4
  %43 = fdiv fast float %2, %42
  %44 = select fast i1 %40, float 1.000000e+00, float %43
  %45 = getelementptr inbounds %struct.ImFontGlyph, ptr %29, i64 0, i32 9
  %46 = getelementptr inbounds %struct.ImFontGlyph, ptr %29, i64 0, i32 8
  %47 = getelementptr inbounds %struct.ImFontGlyph, ptr %29, i64 0, i32 7
  %48 = getelementptr inbounds %struct.ImFontGlyph, ptr %29, i64 0, i32 6
  %49 = getelementptr inbounds %struct.ImFontGlyph, ptr %29, i64 0, i32 4
  %50 = getelementptr inbounds %struct.ImFontGlyph, ptr %29, i64 0, i32 2
  %51 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 4
  %52 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 8
  %53 = getelementptr inbounds %struct.ImDrawList, ptr %1, i64 0, i32 7
  %54 = load <2 x float>, ptr %3, align 4, !tbaa !6
  %55 = fptosi <2 x float> %54 to <2 x i32>
  %56 = sitofp <2 x i32> %55 to <2 x float>
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %1, i32 noundef 6, i32 noundef 4)
  %57 = load i32, ptr %45, align 4, !tbaa !200
  %58 = load i32, ptr %46, align 4, !tbaa !199
  %59 = load i32, ptr %47, align 4, !tbaa !198
  %60 = load i32, ptr %48, align 4, !tbaa !197
  %61 = load <2 x float>, ptr %50, align 4, !tbaa !6
  %62 = insertelement <2 x float> poison, float %44, i64 0
  %63 = shufflevector <2 x float> %62, <2 x float> poison, <2 x i32> zeroinitializer
  %64 = fmul fast <2 x float> %61, %63
  %65 = fadd fast <2 x float> %64, %56
  %66 = load i32, ptr %51, align 4, !tbaa !71
  %67 = trunc i32 %66 to i16
  %68 = load ptr, ptr %52, align 8, !tbaa !99
  store i16 %67, ptr %68, align 2, !tbaa !121
  %69 = add i16 %67, 1
  %70 = getelementptr inbounds i16, ptr %68, i64 1
  store i16 %69, ptr %70, align 2, !tbaa !121
  %71 = add i16 %67, 2
  %72 = getelementptr inbounds i16, ptr %68, i64 2
  store i16 %71, ptr %72, align 2, !tbaa !121
  %73 = getelementptr inbounds i16, ptr %68, i64 3
  store i16 %67, ptr %73, align 2, !tbaa !121
  %74 = getelementptr inbounds i16, ptr %68, i64 4
  store i16 %71, ptr %74, align 2, !tbaa !121
  %75 = add i16 %67, 3
  %76 = getelementptr inbounds i16, ptr %68, i64 5
  store i16 %75, ptr %76, align 2, !tbaa !121
  %77 = load ptr, ptr %53, align 8, !tbaa !120
  %78 = extractelement <2 x float> %65, i64 1
  %79 = load <2 x float>, ptr %49, align 4, !tbaa !6
  %80 = fmul fast <2 x float> %79, %63
  %81 = fadd fast <2 x float> %80, %56
  store <2 x float> %65, ptr %77, align 4
  %82 = load ptr, ptr %53, align 8, !tbaa !120
  %83 = getelementptr inbounds %struct.ImDrawVert, ptr %82, i64 0, i32 1
  store i32 %60, ptr %83, align 4
  %84 = getelementptr inbounds %struct.ImDrawVert, ptr %82, i64 0, i32 1, i32 1
  store i32 %59, ptr %84, align 4
  %85 = load ptr, ptr %53, align 8, !tbaa !120
  %86 = getelementptr inbounds %struct.ImDrawVert, ptr %85, i64 0, i32 2
  store i32 %39, ptr %86, align 4, !tbaa !123
  %87 = getelementptr inbounds %struct.ImDrawVert, ptr %85, i64 1
  %88 = extractelement <2 x float> %81, i64 0
  store float %88, ptr %87, align 4
  %89 = getelementptr inbounds %struct.ImDrawVert, ptr %85, i64 1, i32 0, i32 1
  store float %78, ptr %89, align 4
  %90 = load ptr, ptr %53, align 8, !tbaa !120
  %91 = getelementptr inbounds %struct.ImDrawVert, ptr %90, i64 1, i32 1
  store i32 %58, ptr %91, align 4
  %92 = getelementptr inbounds %struct.ImDrawVert, ptr %90, i64 1, i32 1, i32 1
  store i32 %59, ptr %92, align 4
  %93 = load ptr, ptr %53, align 8, !tbaa !120
  %94 = getelementptr inbounds %struct.ImDrawVert, ptr %93, i64 1, i32 2
  store i32 %39, ptr %94, align 4, !tbaa !123
  %95 = getelementptr inbounds %struct.ImDrawVert, ptr %93, i64 2
  store <2 x float> %81, ptr %95, align 4
  %96 = load ptr, ptr %53, align 8, !tbaa !120
  %97 = getelementptr inbounds %struct.ImDrawVert, ptr %96, i64 2, i32 1
  store i32 %58, ptr %97, align 4
  %98 = getelementptr inbounds %struct.ImDrawVert, ptr %96, i64 2, i32 1, i32 1
  store i32 %57, ptr %98, align 4
  %99 = load ptr, ptr %53, align 8, !tbaa !120
  %100 = getelementptr inbounds %struct.ImDrawVert, ptr %99, i64 2, i32 2
  store i32 %39, ptr %100, align 4, !tbaa !123
  %101 = getelementptr inbounds %struct.ImDrawVert, ptr %99, i64 3
  %102 = extractelement <2 x float> %65, i64 0
  store float %102, ptr %101, align 4
  %103 = getelementptr inbounds %struct.ImDrawVert, ptr %99, i64 3, i32 0, i32 1
  %104 = extractelement <2 x float> %81, i64 1
  store float %104, ptr %103, align 4
  %105 = load ptr, ptr %53, align 8, !tbaa !120
  %106 = getelementptr inbounds %struct.ImDrawVert, ptr %105, i64 3, i32 1
  store i32 %60, ptr %106, align 4
  %107 = getelementptr inbounds %struct.ImDrawVert, ptr %105, i64 3, i32 1, i32 1
  store i32 %57, ptr %107, align 4
  %108 = load ptr, ptr %53, align 8, !tbaa !120
  %109 = getelementptr inbounds %struct.ImDrawVert, ptr %108, i64 3, i32 2
  store i32 %39, ptr %109, align 4, !tbaa !123
  %110 = getelementptr inbounds %struct.ImDrawVert, ptr %108, i64 4
  store ptr %110, ptr %53, align 8, !tbaa !120
  %111 = load i32, ptr %51, align 4, !tbaa !71
  %112 = add i32 %111, 4
  store i32 %112, ptr %51, align 4, !tbaa !71
  %113 = load ptr, ptr %52, align 8, !tbaa !99
  %114 = getelementptr inbounds i16, ptr %113, i64 6
  store ptr %114, ptr %52, align 8, !tbaa !99
  br label %115

115:                                              ; preds = %28, %31, %35
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #9

; Function Attrs: uwtable
define dso_local void @"?RenderArrow@ImGui@@YAXPEAUImDrawList@@UImVec2@@IHM@Z"(ptr nocapture noundef %0, i64 %1, i32 noundef %2, i32 noundef %3, float noundef %4) local_unnamed_addr #0 {
  %6 = alloca %struct.ImVec2, align 8
  %7 = alloca %struct.ImVec2, align 8
  %8 = alloca %struct.ImVec2, align 8
  %9 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !68
  %11 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %10, i64 0, i32 2
  %12 = load float, ptr %11, align 8, !tbaa !170
  %13 = fmul fast float %4, 0x3FD99999A0000000
  %14 = fmul fast float %13, %12
  switch i32 %3, label %38 [
    i32 4, label %37
    i32 -1, label %37
    i32 3, label %17
    i32 2, label %15
    i32 0, label %26
    i32 1, label %28
  ]

15:                                               ; preds = %5
  %16 = fneg fast float %14
  br label %17

17:                                               ; preds = %5, %15
  %18 = phi float [ %16, %15 ], [ %14, %5 ]
  %19 = fmul fast float %18, 7.500000e-01
  %20 = fmul fast float %18, 0xBFEBB645A0000000
  %21 = insertelement <2 x float> poison, float %18, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul fast <2 x float> %22, <float 0x3FEBB645A0000000, float -7.500000e-01>
  %24 = insertelement <2 x float> %23, float %20, i64 0
  %25 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %19, i64 1
  br label %38

26:                                               ; preds = %5
  %27 = fneg fast float %14
  br label %28

28:                                               ; preds = %5, %26
  %29 = phi float [ %27, %26 ], [ %14, %5 ]
  %30 = fmul fast float %29, 7.500000e-01
  %31 = fmul fast float %29, 0x3FEBB645A0000000
  %32 = insertelement <2 x float> poison, float %29, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = fmul fast <2 x float> %33, <float -7.500000e-01, float 0xBFEBB645A0000000>
  %35 = insertelement <2 x float> %34, float %31, i64 1
  %36 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %30, i64 0
  br label %38

37:                                               ; preds = %5, %5
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FI@HMKCCCFK@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAg@", i32 noundef 3785)
  br label %38

38:                                               ; preds = %5, %37, %28, %17
  %39 = phi <2 x float> [ zeroinitializer, %5 ], [ %34, %28 ], [ %23, %17 ], [ zeroinitializer, %37 ]
  %40 = phi <2 x float> [ zeroinitializer, %5 ], [ %35, %28 ], [ %24, %17 ], [ zeroinitializer, %37 ]
  %41 = phi <2 x float> [ zeroinitializer, %5 ], [ %36, %28 ], [ %25, %17 ], [ zeroinitializer, %37 ]
  %42 = lshr i64 %1, 32
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  %43 = fmul fast float %12, 5.000000e-01
  %44 = fmul fast float %43, %4
  %45 = insertelement <2 x i64> poison, i64 %1, i64 0
  %46 = insertelement <2 x i64> %45, i64 %42, i64 1
  %47 = trunc <2 x i64> %46 to <2 x i32>
  %48 = bitcast <2 x i32> %47 to <2 x float>
  %49 = insertelement <2 x float> poison, float %43, i64 0
  %50 = insertelement <2 x float> %49, float %44, i64 1
  %51 = fadd fast <2 x float> %50, %48
  %52 = fadd fast <2 x float> %39, %51
  store <2 x float> %52, ptr %6, align 8, !tbaa !6, !alias.scope !928
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  %53 = fadd fast <2 x float> %40, %51
  store <2 x float> %53, ptr %7, align 8, !tbaa !6, !alias.scope !931
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %54 = fadd fast <2 x float> %41, %51
  store <2 x float> %54, ptr %8, align 8, !tbaa !6, !alias.scope !934
  call void @"?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %8, ptr noundef nonnull align 4 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) %6, i32 noundef %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z"(ptr nocapture noundef %0, i64 %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = alloca %struct.ImVec2, align 8
  store i64 %1, ptr %4, align 8
  %5 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %5, align 8, !tbaa !68
  %7 = getelementptr inbounds %struct.ImDrawListSharedData, ptr %6, i64 0, i32 2
  %8 = load float, ptr %7, align 8, !tbaa !170
  %9 = fmul fast float %8, 0x3FC99999A0000000
  %10 = icmp ult i32 %2, 16777216
  %11 = fcmp fast olt float %9, 5.000000e-01
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  call void @"?_PathArcToN@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %4, float noundef %9, float noundef 0.000000e+00, float noundef 0x4015FDBC00000000, i32 noundef 7)
  %14 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %15 = load i32, ptr %14, align 8, !tbaa !143
  %16 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %17, i32 noundef %15, i32 noundef %2)
  store i32 0, ptr %14, align 8, !tbaa !143
  br label %18

18:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderCheckMark@ImGui@@YAXPEAUImDrawList@@UImVec2@@IM@Z"(ptr nocapture noundef %0, i64 %1, i32 noundef %2, float noundef %3) local_unnamed_addr #0 {
  %5 = lshr i64 %1, 32
  %6 = fmul fast float %3, 0x3FC99999A0000000
  %7 = tail call fast float @llvm.maxnum.f32(float %6, float 1.000000e+00)
  %8 = fmul fast float %7, 5.000000e-01
  %9 = fsub fast float %3, %8
  %10 = fmul fast float %7, 2.500000e-01
  %11 = insertelement <2 x i64> poison, i64 %1, i64 0
  %12 = insertelement <2 x i64> %11, i64 %5, i64 1
  %13 = trunc <2 x i64> %12 to <2 x i32>
  %14 = bitcast <2 x i32> %13 to <2 x float>
  %15 = insertelement <2 x float> poison, float %10, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fadd fast <2 x float> %16, %14
  %18 = insertelement <2 x float> poison, float %9, i64 0
  %19 = shufflevector <2 x float> %18, <2 x float> poison, <2 x i32> zeroinitializer
  %20 = fmul fast <2 x float> %19, <float 0x3FD5555560000000, float 0x3FEAAAAAA0000000>
  %21 = fadd fast <2 x float> %20, %17
  %22 = extractelement <2 x float> %21, i64 1
  %23 = extractelement <2 x float> %20, i64 0
  %24 = fsub fast float %22, %23
  %25 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %26 = load i32, ptr %25, align 8, !tbaa !80
  %27 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %28 = load i32, ptr %27, align 4, !tbaa !78
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %54

30:                                               ; preds = %4
  %31 = add nsw i32 %26, 1
  %32 = icmp eq i32 %26, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = sdiv i32 %26, 2
  %35 = add nsw i32 %34, %26
  br label %36

36:                                               ; preds = %33, %30
  %37 = phi i32 [ %35, %33 ], [ 8, %30 ]
  %38 = tail call i32 @llvm.smax.i32(i32 %37, i32 %31)
  %39 = icmp slt i32 %26, %38
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = sext i32 %38 to i64
  %42 = shl nsw i64 %41, 3
  %43 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %42)
  %44 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !79
  %46 = icmp eq ptr %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = load i32, ptr %25, align 8, !tbaa !80
  %49 = sext i32 %48 to i64
  %50 = shl nsw i64 %49, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %43, ptr nonnull align 4 %45, i64 %50, i1 false)
  %51 = load ptr, ptr %44, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %51)
  br label %52

52:                                               ; preds = %47, %40
  store ptr %43, ptr %44, align 8, !tbaa !79
  store i32 %38, ptr %27, align 4, !tbaa !78
  %53 = load i32, ptr %25, align 8, !tbaa !80
  br label %54

54:                                               ; preds = %4, %36, %52
  %55 = phi i32 [ %53, %52 ], [ %26, %36 ], [ %26, %4 ]
  %56 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !79
  %58 = sext i32 %55 to i64
  %59 = getelementptr inbounds %struct.ImVec2, ptr %57, i64 %58
  %60 = extractelement <2 x float> %17, i64 0
  store float %60, ptr %59, align 4
  %61 = getelementptr inbounds i8, ptr %59, i64 4
  store float %24, ptr %61, align 4
  %62 = load i32, ptr %25, align 8, !tbaa !80
  %63 = add nsw i32 %62, 1
  store i32 %63, ptr %25, align 8, !tbaa !80
  %64 = load i32, ptr %27, align 4, !tbaa !78
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %66, label %89

66:                                               ; preds = %54
  %67 = add nsw i32 %62, 2
  %68 = icmp eq i32 %63, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = sdiv i32 %63, 2
  %71 = add nsw i32 %70, %63
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i32 [ %71, %69 ], [ 8, %66 ]
  %74 = tail call i32 @llvm.smax.i32(i32 %73, i32 %67)
  %75 = icmp slt i32 %63, %74
  br i1 %75, label %76, label %89

76:                                               ; preds = %72
  %77 = sext i32 %74 to i64
  %78 = shl nsw i64 %77, 3
  %79 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %78)
  %80 = load ptr, ptr %56, align 8, !tbaa !79
  %81 = icmp eq ptr %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = load i32, ptr %25, align 8, !tbaa !80
  %84 = sext i32 %83 to i64
  %85 = shl nsw i64 %84, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %79, ptr nonnull align 4 %80, i64 %85, i1 false)
  %86 = load ptr, ptr %56, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %86)
  br label %87

87:                                               ; preds = %82, %76
  store ptr %79, ptr %56, align 8, !tbaa !79
  store i32 %74, ptr %27, align 4, !tbaa !78
  %88 = load i32, ptr %25, align 8, !tbaa !80
  br label %89

89:                                               ; preds = %54, %72, %87
  %90 = phi i32 [ %88, %87 ], [ %63, %72 ], [ %63, %54 ]
  %91 = load ptr, ptr %56, align 8, !tbaa !79
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds %struct.ImVec2, ptr %91, i64 %92
  store <2 x float> %21, ptr %93, align 4
  %94 = load i32, ptr %25, align 8, !tbaa !80
  %95 = add nsw i32 %94, 1
  store i32 %95, ptr %25, align 8, !tbaa !80
  %96 = load i32, ptr %27, align 4, !tbaa !78
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %121

98:                                               ; preds = %89
  %99 = add nsw i32 %94, 2
  %100 = icmp eq i32 %95, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = sdiv i32 %95, 2
  %103 = add nsw i32 %102, %95
  br label %104

104:                                              ; preds = %101, %98
  %105 = phi i32 [ %103, %101 ], [ 8, %98 ]
  %106 = tail call i32 @llvm.smax.i32(i32 %105, i32 %99)
  %107 = icmp slt i32 %95, %106
  br i1 %107, label %108, label %121

108:                                              ; preds = %104
  %109 = sext i32 %106 to i64
  %110 = shl nsw i64 %109, 3
  %111 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %110)
  %112 = load ptr, ptr %56, align 8, !tbaa !79
  %113 = icmp eq ptr %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %108
  %115 = load i32, ptr %25, align 8, !tbaa !80
  %116 = sext i32 %115 to i64
  %117 = shl nsw i64 %116, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %111, ptr nonnull align 4 %112, i64 %117, i1 false)
  %118 = load ptr, ptr %56, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %118)
  br label %119

119:                                              ; preds = %114, %108
  store ptr %111, ptr %56, align 8, !tbaa !79
  store i32 %106, ptr %27, align 4, !tbaa !78
  %120 = load i32, ptr %25, align 8, !tbaa !80
  br label %121

121:                                              ; preds = %89, %104, %119
  %122 = phi i32 [ %120, %119 ], [ %95, %104 ], [ %95, %89 ]
  %123 = fmul fast float %9, 0x3FE5555560000000
  %124 = extractelement <2 x float> %21, i64 0
  %125 = fadd fast float %124, %123
  %126 = fsub fast float %22, %123
  %127 = load ptr, ptr %56, align 8, !tbaa !79
  %128 = sext i32 %122 to i64
  %129 = getelementptr inbounds %struct.ImVec2, ptr %127, i64 %128
  store float %125, ptr %129, align 4
  %130 = getelementptr inbounds i8, ptr %129, i64 4
  store float %126, ptr %130, align 4
  %131 = load i32, ptr %25, align 8, !tbaa !80
  %132 = add nsw i32 %131, 1
  store i32 %132, ptr %25, align 8, !tbaa !80
  %133 = load ptr, ptr %56, align 8, !tbaa !144
  tail call void @"?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %133, i32 noundef %132, i32 noundef %2, i32 noundef 0, float noundef %7)
  store i32 0, ptr %25, align 8, !tbaa !143
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderArrowPointingAt@ImGui@@YAXPEAUImDrawList@@UImVec2@@1HI@Z"(ptr nocapture noundef %0, i64 %1, i64 %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 {
  %6 = alloca %struct.ImVec2, align 8
  %7 = alloca %struct.ImVec2, align 4
  %8 = alloca %struct.ImVec2, align 4
  %9 = alloca %struct.ImVec2, align 4
  %10 = alloca %struct.ImVec2, align 4
  %11 = alloca %struct.ImVec2, align 4
  %12 = alloca %struct.ImVec2, align 4
  %13 = alloca %struct.ImVec2, align 4
  %14 = alloca %struct.ImVec2, align 4
  store i64 %1, ptr %6, align 8
  %15 = trunc i64 %2 to i32
  %16 = bitcast i32 %15 to float
  %17 = lshr i64 %2, 32
  %18 = trunc i64 %17 to i32
  %19 = bitcast i32 %18 to float
  %20 = lshr i64 %1, 32
  %21 = trunc i64 %20 to i32
  %22 = bitcast i32 %21 to float
  %23 = trunc i64 %1 to i32
  %24 = bitcast i32 %23 to float
  switch i32 %3, label %49 [
    i32 0, label %25
    i32 1, label %31
    i32 2, label %37
    i32 3, label %43
  ]

25:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  %26 = fadd fast float %22, %19
  %27 = fadd fast float %24, %16
  store float %27, ptr %7, align 4, !tbaa !113
  %28 = getelementptr inbounds %struct.ImVec2, ptr %7, i64 0, i32 1
  store float %26, ptr %28, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %29 = fsub fast float %22, %19
  store float %27, ptr %8, align 4, !tbaa !113
  %30 = getelementptr inbounds %struct.ImVec2, ptr %8, i64 0, i32 1
  store float %29, ptr %30, align 4, !tbaa !112
  call void @"?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %8, ptr noundef nonnull align 4 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) %6, i32 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  br label %49

31:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #39
  %32 = fsub fast float %22, %19
  %33 = fsub fast float %24, %16
  store float %33, ptr %9, align 4, !tbaa !113
  %34 = getelementptr inbounds %struct.ImVec2, ptr %9, i64 0, i32 1
  store float %32, ptr %34, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %35 = fadd fast float %22, %19
  store float %33, ptr %10, align 4, !tbaa !113
  %36 = getelementptr inbounds %struct.ImVec2, ptr %10, i64 0, i32 1
  store float %35, ptr %36, align 4, !tbaa !112
  call void @"?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %10, ptr noundef nonnull align 4 dereferenceable(8) %9, ptr noundef nonnull align 4 dereferenceable(8) %6, i32 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  br label %49

37:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #39
  %38 = fadd fast float %22, %19
  %39 = fsub fast float %24, %16
  store float %39, ptr %11, align 4, !tbaa !113
  %40 = getelementptr inbounds %struct.ImVec2, ptr %11, i64 0, i32 1
  store float %38, ptr %40, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #39
  %41 = fadd fast float %24, %16
  store float %41, ptr %12, align 4, !tbaa !113
  %42 = getelementptr inbounds %struct.ImVec2, ptr %12, i64 0, i32 1
  store float %38, ptr %42, align 4, !tbaa !112
  call void @"?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %12, ptr noundef nonnull align 4 dereferenceable(8) %11, ptr noundef nonnull align 4 dereferenceable(8) %6, i32 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #39
  br label %49

43:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #39
  %44 = fsub fast float %22, %19
  %45 = fadd fast float %24, %16
  store float %45, ptr %13, align 4, !tbaa !113
  %46 = getelementptr inbounds %struct.ImVec2, ptr %13, i64 0, i32 1
  store float %44, ptr %46, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #39
  %47 = fsub fast float %24, %16
  store float %47, ptr %14, align 4, !tbaa !113
  %48 = getelementptr inbounds %struct.ImVec2, ptr %14, i64 0, i32 1
  store float %44, ptr %48, align 4, !tbaa !112
  call void @"?AddTriangleFilled@ImDrawList@@QEAAXAEBUImVec2@@00I@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %14, ptr noundef nonnull align 4 dereferenceable(8) %13, ptr noundef nonnull align 4 dereferenceable(8) %6, i32 noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #39
  br label %49

49:                                               ; preds = %25, %31, %37, %43, %5
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderRectFilledRangeH@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@IMMM@Z"(ptr noundef %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %1, i32 noundef %2, float noundef %3, float noundef %4, float noundef %5) local_unnamed_addr #0 {
  %7 = alloca %struct.ImVec2, align 8
  %8 = alloca %struct.ImVec2, align 8
  %9 = alloca %struct.ImVec2, align 8
  %10 = alloca %struct.ImVec2, align 8
  %11 = alloca %struct.ImVec2, align 4
  %12 = alloca %struct.ImVec2, align 4
  %13 = alloca %struct.ImVec2, align 4
  %14 = alloca %struct.ImVec2, align 4
  %15 = fcmp fast oeq float %4, %3
  br i1 %15, label %478, label %16

16:                                               ; preds = %6
  %17 = fcmp fast ogt float %3, %4
  %18 = select i1 %17, float %4, float %3
  %19 = select i1 %17, float %3, float %4
  %20 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %21 = load float, ptr %20, align 4, !tbaa !937
  %22 = getelementptr inbounds %struct.ImRect, ptr %1, i64 0, i32 1
  %23 = load float, ptr %22, align 4, !tbaa !939
  %24 = load float, ptr %1, align 4, !tbaa !940
  %25 = fsub fast float %23, %24
  %26 = fmul fast float %25, %18
  %27 = fadd fast float %26, %24
  %28 = getelementptr inbounds %struct.ImRect, ptr %1, i64 0, i32 1, i32 1
  %29 = load float, ptr %28, align 4, !tbaa !941
  %30 = fmul fast float %25, %19
  %31 = fadd fast float %30, %24
  %32 = fcmp fast oeq float %5, 0.000000e+00
  br i1 %32, label %33, label %82

33:                                               ; preds = %16
  %34 = icmp ult i32 %2, 16777216
  br i1 %34, label %478, label %35

35:                                               ; preds = %33
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %36 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %36, align 8, !tbaa !68
  %38 = load i64, ptr %37, align 8
  %39 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %40 = load i32, ptr %39, align 4, !tbaa !71
  %41 = trunc i32 %40 to i16
  %42 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %43 = load ptr, ptr %42, align 8, !tbaa !99
  store i16 %41, ptr %43, align 2, !tbaa !121
  %44 = add i16 %41, 1
  %45 = getelementptr inbounds i16, ptr %43, i64 1
  store i16 %44, ptr %45, align 2, !tbaa !121
  %46 = add i16 %41, 2
  %47 = getelementptr inbounds i16, ptr %43, i64 2
  store i16 %46, ptr %47, align 2, !tbaa !121
  %48 = getelementptr inbounds i16, ptr %43, i64 3
  store i16 %41, ptr %48, align 2, !tbaa !121
  %49 = getelementptr inbounds i16, ptr %43, i64 4
  store i16 %46, ptr %49, align 2, !tbaa !121
  %50 = add i16 %41, 3
  %51 = getelementptr inbounds i16, ptr %43, i64 5
  store i16 %50, ptr %51, align 2, !tbaa !121
  %52 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %53 = load ptr, ptr %52, align 8, !tbaa !120
  store float %27, ptr %53, align 4
  %54 = getelementptr inbounds i8, ptr %53, i64 4
  store float %21, ptr %54, align 4
  %55 = load ptr, ptr %52, align 8, !tbaa !120
  %56 = getelementptr inbounds %struct.ImDrawVert, ptr %55, i64 0, i32 1
  store i64 %38, ptr %56, align 4
  %57 = load ptr, ptr %52, align 8, !tbaa !120
  %58 = getelementptr inbounds %struct.ImDrawVert, ptr %57, i64 0, i32 2
  store i32 %2, ptr %58, align 4, !tbaa !123
  %59 = getelementptr inbounds %struct.ImDrawVert, ptr %57, i64 1
  store float %31, ptr %59, align 4
  %60 = getelementptr inbounds %struct.ImDrawVert, ptr %57, i64 1, i32 0, i32 1
  store float %21, ptr %60, align 4
  %61 = load ptr, ptr %52, align 8, !tbaa !120
  %62 = getelementptr inbounds %struct.ImDrawVert, ptr %61, i64 1, i32 1
  store i64 %38, ptr %62, align 4
  %63 = load ptr, ptr %52, align 8, !tbaa !120
  %64 = getelementptr inbounds %struct.ImDrawVert, ptr %63, i64 1, i32 2
  store i32 %2, ptr %64, align 4, !tbaa !123
  %65 = getelementptr inbounds %struct.ImDrawVert, ptr %63, i64 2
  store float %31, ptr %65, align 4
  %66 = getelementptr inbounds %struct.ImDrawVert, ptr %63, i64 2, i32 0, i32 1
  store float %29, ptr %66, align 4
  %67 = load ptr, ptr %52, align 8, !tbaa !120
  %68 = getelementptr inbounds %struct.ImDrawVert, ptr %67, i64 2, i32 1
  store i64 %38, ptr %68, align 4
  %69 = load ptr, ptr %52, align 8, !tbaa !120
  %70 = getelementptr inbounds %struct.ImDrawVert, ptr %69, i64 2, i32 2
  store i32 %2, ptr %70, align 4, !tbaa !123
  %71 = getelementptr inbounds %struct.ImDrawVert, ptr %69, i64 3
  store float %27, ptr %71, align 4
  %72 = getelementptr inbounds %struct.ImDrawVert, ptr %69, i64 3, i32 0, i32 1
  store float %29, ptr %72, align 4
  %73 = load ptr, ptr %52, align 8, !tbaa !120
  %74 = getelementptr inbounds %struct.ImDrawVert, ptr %73, i64 3, i32 1
  store i64 %38, ptr %74, align 4
  %75 = load ptr, ptr %52, align 8, !tbaa !120
  %76 = getelementptr inbounds %struct.ImDrawVert, ptr %75, i64 3, i32 2
  store i32 %2, ptr %76, align 4, !tbaa !123
  %77 = getelementptr inbounds %struct.ImDrawVert, ptr %75, i64 4
  store ptr %77, ptr %52, align 8, !tbaa !120
  %78 = load i32, ptr %39, align 4, !tbaa !71
  %79 = add i32 %78, 4
  store i32 %79, ptr %39, align 4, !tbaa !71
  %80 = load ptr, ptr %42, align 8, !tbaa !99
  %81 = getelementptr inbounds i16, ptr %80, i64 6
  store ptr %81, ptr %42, align 8, !tbaa !99
  br label %478

82:                                               ; preds = %16
  %83 = fsub fast float %29, %21
  %84 = fmul fast float %83, 5.000000e-01
  %85 = fmul fast float %25, 5.000000e-01
  %86 = tail call fast float @llvm.minnum.f32(float %85, float %84)
  %87 = fadd fast float %86, -1.000000e+00
  %88 = fcmp fast olt float %87, 0.000000e+00
  %89 = fcmp fast ogt float %87, %5
  %90 = select fast i1 %89, float %5, float %87
  %91 = select fast i1 %88, float 0.000000e+00, float %90
  %92 = fdiv fast float 1.000000e+00, %91
  %93 = fmul fast float %92, %26
  %94 = fsub fast float 1.000000e+00, %93
  %95 = fcmp fast ugt float %94, 0.000000e+00
  br i1 %95, label %96, label %100

96:                                               ; preds = %82
  %97 = fcmp fast ult float %94, 1.000000e+00
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = tail call fast float @acosf(float noundef %94) #38
  br label %100

100:                                              ; preds = %82, %96, %98
  %101 = phi float [ %99, %98 ], [ 0x3FF921FB60000000, %82 ], [ 0.000000e+00, %96 ]
  %102 = fmul fast float %92, %30
  %103 = fsub fast float 1.000000e+00, %102
  %104 = fcmp fast ugt float %103, 0.000000e+00
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = fcmp fast ult float %103, 1.000000e+00
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = tail call fast float @acosf(float noundef %103) #38
  br label %109

109:                                              ; preds = %100, %105, %107
  %110 = phi float [ %108, %107 ], [ 0x3FF921FB60000000, %100 ], [ 0.000000e+00, %105 ]
  %111 = fadd fast float %91, %24
  %112 = tail call fast float @llvm.maxnum.f32(float %27, float %111)
  %113 = fcmp fast oeq float %101, %110
  br i1 %113, label %114, label %186

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %116 = load i32, ptr %115, align 8, !tbaa !80
  %117 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %118 = load i32, ptr %117, align 4, !tbaa !78
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %120, label %144

120:                                              ; preds = %114
  %121 = add nsw i32 %116, 1
  %122 = icmp eq i32 %116, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = sdiv i32 %116, 2
  %125 = add nsw i32 %124, %116
  br label %126

126:                                              ; preds = %123, %120
  %127 = phi i32 [ %125, %123 ], [ 8, %120 ]
  %128 = tail call i32 @llvm.smax.i32(i32 %127, i32 %121)
  %129 = icmp slt i32 %116, %128
  br i1 %129, label %130, label %144

130:                                              ; preds = %126
  %131 = sext i32 %128 to i64
  %132 = shl nsw i64 %131, 3
  %133 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %132)
  %134 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !79
  %136 = icmp eq ptr %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = load i32, ptr %115, align 8, !tbaa !80
  %139 = sext i32 %138 to i64
  %140 = shl nsw i64 %139, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %133, ptr nonnull align 4 %135, i64 %140, i1 false)
  %141 = load ptr, ptr %134, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %141)
  br label %142

142:                                              ; preds = %137, %130
  store ptr %133, ptr %134, align 8, !tbaa !79
  store i32 %128, ptr %117, align 4, !tbaa !78
  %143 = load i32, ptr %115, align 8, !tbaa !80
  br label %144

144:                                              ; preds = %114, %126, %142
  %145 = phi i32 [ %143, %142 ], [ %116, %126 ], [ %116, %114 ]
  %146 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %147 = load ptr, ptr %146, align 8, !tbaa !79
  %148 = sext i32 %145 to i64
  %149 = getelementptr inbounds %struct.ImVec2, ptr %147, i64 %148
  store float %112, ptr %149, align 4
  %150 = getelementptr inbounds i8, ptr %149, i64 4
  store float %29, ptr %150, align 4
  %151 = load i32, ptr %115, align 8, !tbaa !80
  %152 = add nsw i32 %151, 1
  store i32 %152, ptr %115, align 8, !tbaa !80
  %153 = load i32, ptr %117, align 4, !tbaa !78
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %155, label %178

155:                                              ; preds = %144
  %156 = add nsw i32 %151, 2
  %157 = icmp eq i32 %152, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %155
  %159 = sdiv i32 %152, 2
  %160 = add nsw i32 %159, %152
  br label %161

161:                                              ; preds = %158, %155
  %162 = phi i32 [ %160, %158 ], [ 8, %155 ]
  %163 = tail call i32 @llvm.smax.i32(i32 %162, i32 %156)
  %164 = icmp slt i32 %152, %163
  br i1 %164, label %165, label %178

165:                                              ; preds = %161
  %166 = sext i32 %163 to i64
  %167 = shl nsw i64 %166, 3
  %168 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %167)
  %169 = load ptr, ptr %146, align 8, !tbaa !79
  %170 = icmp eq ptr %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %165
  %172 = load i32, ptr %115, align 8, !tbaa !80
  %173 = sext i32 %172 to i64
  %174 = shl nsw i64 %173, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %168, ptr nonnull align 4 %169, i64 %174, i1 false)
  %175 = load ptr, ptr %146, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %175)
  br label %176

176:                                              ; preds = %171, %165
  store ptr %168, ptr %146, align 8, !tbaa !79
  store i32 %163, ptr %117, align 4, !tbaa !78
  %177 = load i32, ptr %115, align 8, !tbaa !80
  br label %178

178:                                              ; preds = %144, %161, %176
  %179 = phi i32 [ %177, %176 ], [ %152, %161 ], [ %152, %144 ]
  %180 = load ptr, ptr %146, align 8, !tbaa !79
  %181 = sext i32 %179 to i64
  %182 = getelementptr inbounds %struct.ImVec2, ptr %180, i64 %181
  store float %112, ptr %182, align 4
  %183 = getelementptr inbounds i8, ptr %182, i64 4
  store float %21, ptr %183, align 4
  %184 = load i32, ptr %115, align 8, !tbaa !80
  %185 = add nsw i32 %184, 1
  store i32 %185, ptr %115, align 8, !tbaa !80
  br label %356

186:                                              ; preds = %109
  %187 = fcmp fast oeq float %101, 0.000000e+00
  %188 = fcmp fast oeq float %110, 0x3FF921FB60000000
  %189 = select i1 %187, i1 %188, i1 false
  %190 = fsub fast float %29, %91
  %191 = fcmp fast olt float %91, 5.000000e-01
  br i1 %189, label %192, label %272

192:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  store float %112, ptr %7, align 8, !tbaa !113
  %193 = getelementptr inbounds %struct.ImVec2, ptr %7, i64 0, i32 1
  store float %190, ptr %193, align 4, !tbaa !112
  br i1 %191, label %194, label %268

194:                                              ; preds = %192
  %195 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %196 = load i32, ptr %195, align 8, !tbaa !80
  %197 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %198 = load i32, ptr %197, align 4, !tbaa !78
  %199 = icmp eq i32 %196, %198
  br i1 %199, label %200, label %224

200:                                              ; preds = %194
  %201 = add nsw i32 %196, 1
  %202 = icmp eq i32 %196, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = sdiv i32 %196, 2
  %205 = add nsw i32 %204, %196
  br label %206

206:                                              ; preds = %203, %200
  %207 = phi i32 [ %205, %203 ], [ 8, %200 ]
  %208 = tail call i32 @llvm.smax.i32(i32 %207, i32 %201)
  %209 = icmp slt i32 %196, %208
  br i1 %209, label %210, label %224

210:                                              ; preds = %206
  %211 = sext i32 %208 to i64
  %212 = shl nsw i64 %211, 3
  %213 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %212)
  %214 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %215 = load ptr, ptr %214, align 8, !tbaa !79
  %216 = icmp eq ptr %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %210
  %218 = load i32, ptr %195, align 8, !tbaa !80
  %219 = sext i32 %218 to i64
  %220 = shl nsw i64 %219, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %213, ptr nonnull align 4 %215, i64 %220, i1 false)
  %221 = load ptr, ptr %214, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %221)
  br label %222

222:                                              ; preds = %217, %210
  store ptr %213, ptr %214, align 8, !tbaa !79
  store i32 %208, ptr %197, align 4, !tbaa !78
  %223 = load i32, ptr %195, align 8, !tbaa !80
  br label %224

224:                                              ; preds = %194, %206, %222
  %225 = phi i32 [ %223, %222 ], [ %196, %206 ], [ %196, %194 ]
  %226 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %227 = load ptr, ptr %226, align 8, !tbaa !79
  %228 = sext i32 %225 to i64
  %229 = getelementptr inbounds %struct.ImVec2, ptr %227, i64 %228
  %230 = load i64, ptr %7, align 8
  store i64 %230, ptr %229, align 4
  %231 = load i32, ptr %195, align 8, !tbaa !80
  %232 = add nsw i32 %231, 1
  store i32 %232, ptr %195, align 8, !tbaa !80
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %233 = fadd fast float %91, %21
  store float %112, ptr %8, align 8, !tbaa !113
  %234 = getelementptr inbounds %struct.ImVec2, ptr %8, i64 0, i32 1
  store float %233, ptr %234, align 4, !tbaa !112
  %235 = load i32, ptr %197, align 4, !tbaa !78
  %236 = icmp eq i32 %232, %235
  br i1 %236, label %237, label %260

237:                                              ; preds = %224
  %238 = add nsw i32 %231, 2
  %239 = icmp eq i32 %232, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %237
  %241 = sdiv i32 %232, 2
  %242 = add nsw i32 %241, %232
  br label %243

243:                                              ; preds = %240, %237
  %244 = phi i32 [ %242, %240 ], [ 8, %237 ]
  %245 = tail call i32 @llvm.smax.i32(i32 %244, i32 %238)
  %246 = icmp slt i32 %232, %245
  br i1 %246, label %247, label %260

247:                                              ; preds = %243
  %248 = sext i32 %245 to i64
  %249 = shl nsw i64 %248, 3
  %250 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %249)
  %251 = load ptr, ptr %226, align 8, !tbaa !79
  %252 = icmp eq ptr %251, null
  br i1 %252, label %258, label %253

253:                                              ; preds = %247
  %254 = load i32, ptr %195, align 8, !tbaa !80
  %255 = sext i32 %254 to i64
  %256 = shl nsw i64 %255, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %250, ptr nonnull align 4 %251, i64 %256, i1 false)
  %257 = load ptr, ptr %226, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %257)
  br label %258

258:                                              ; preds = %253, %247
  store ptr %250, ptr %226, align 8, !tbaa !79
  store i32 %245, ptr %197, align 4, !tbaa !78
  %259 = load i32, ptr %195, align 8, !tbaa !80
  br label %260

260:                                              ; preds = %258, %243, %224
  %261 = phi i32 [ %259, %258 ], [ %232, %243 ], [ %232, %224 ]
  %262 = load ptr, ptr %226, align 8, !tbaa !79
  %263 = sext i32 %261 to i64
  %264 = getelementptr inbounds %struct.ImVec2, ptr %262, i64 %263
  %265 = load i64, ptr %8, align 8
  store i64 %265, ptr %264, align 4
  %266 = load i32, ptr %195, align 8, !tbaa !80
  %267 = add nsw i32 %266, 1
  store i32 %267, ptr %195, align 8, !tbaa !80
  br label %271

268:                                              ; preds = %192
  call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %7, float noundef %91, i32 noundef 12, i32 noundef 24, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %269 = fadd fast float %91, %21
  store float %112, ptr %8, align 8, !tbaa !113
  %270 = getelementptr inbounds %struct.ImVec2, ptr %8, i64 0, i32 1
  store float %269, ptr %270, align 4, !tbaa !112
  call void @"?_PathArcToFastEx@ImDrawList@@QEAAXAEBUImVec2@@MHHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %8, float noundef %91, i32 noundef 24, i32 noundef 36, i32 noundef 0)
  br label %271

271:                                              ; preds = %260, %268
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  br label %356

272:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #39
  store float %112, ptr %9, align 8, !tbaa !113
  %273 = getelementptr inbounds %struct.ImVec2, ptr %9, i64 0, i32 1
  store float %190, ptr %273, align 4, !tbaa !112
  br i1 %191, label %274, label %348

274:                                              ; preds = %272
  %275 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %276 = load i32, ptr %275, align 8, !tbaa !80
  %277 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %278 = load i32, ptr %277, align 4, !tbaa !78
  %279 = icmp eq i32 %276, %278
  br i1 %279, label %280, label %304

280:                                              ; preds = %274
  %281 = add nsw i32 %276, 1
  %282 = icmp eq i32 %276, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %280
  %284 = sdiv i32 %276, 2
  %285 = add nsw i32 %284, %276
  br label %286

286:                                              ; preds = %283, %280
  %287 = phi i32 [ %285, %283 ], [ 8, %280 ]
  %288 = tail call i32 @llvm.smax.i32(i32 %287, i32 %281)
  %289 = icmp slt i32 %276, %288
  br i1 %289, label %290, label %304

290:                                              ; preds = %286
  %291 = sext i32 %288 to i64
  %292 = shl nsw i64 %291, 3
  %293 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %292)
  %294 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %295 = load ptr, ptr %294, align 8, !tbaa !79
  %296 = icmp eq ptr %295, null
  br i1 %296, label %302, label %297

297:                                              ; preds = %290
  %298 = load i32, ptr %275, align 8, !tbaa !80
  %299 = sext i32 %298 to i64
  %300 = shl nsw i64 %299, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %293, ptr nonnull align 4 %295, i64 %300, i1 false)
  %301 = load ptr, ptr %294, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %301)
  br label %302

302:                                              ; preds = %297, %290
  store ptr %293, ptr %294, align 8, !tbaa !79
  store i32 %288, ptr %277, align 4, !tbaa !78
  %303 = load i32, ptr %275, align 8, !tbaa !80
  br label %304

304:                                              ; preds = %274, %286, %302
  %305 = phi i32 [ %303, %302 ], [ %276, %286 ], [ %276, %274 ]
  %306 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %307 = load ptr, ptr %306, align 8, !tbaa !79
  %308 = sext i32 %305 to i64
  %309 = getelementptr inbounds %struct.ImVec2, ptr %307, i64 %308
  %310 = load i64, ptr %9, align 8
  store i64 %310, ptr %309, align 4
  %311 = load i32, ptr %275, align 8, !tbaa !80
  %312 = add nsw i32 %311, 1
  store i32 %312, ptr %275, align 8, !tbaa !80
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %313 = fadd fast float %91, %21
  store float %112, ptr %10, align 8, !tbaa !113
  %314 = getelementptr inbounds %struct.ImVec2, ptr %10, i64 0, i32 1
  store float %313, ptr %314, align 4, !tbaa !112
  %315 = load i32, ptr %277, align 4, !tbaa !78
  %316 = icmp eq i32 %312, %315
  br i1 %316, label %317, label %340

317:                                              ; preds = %304
  %318 = add nsw i32 %311, 2
  %319 = icmp eq i32 %312, 0
  br i1 %319, label %323, label %320

320:                                              ; preds = %317
  %321 = sdiv i32 %312, 2
  %322 = add nsw i32 %321, %312
  br label %323

323:                                              ; preds = %320, %317
  %324 = phi i32 [ %322, %320 ], [ 8, %317 ]
  %325 = tail call i32 @llvm.smax.i32(i32 %324, i32 %318)
  %326 = icmp slt i32 %312, %325
  br i1 %326, label %327, label %340

327:                                              ; preds = %323
  %328 = sext i32 %325 to i64
  %329 = shl nsw i64 %328, 3
  %330 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %329)
  %331 = load ptr, ptr %306, align 8, !tbaa !79
  %332 = icmp eq ptr %331, null
  br i1 %332, label %338, label %333

333:                                              ; preds = %327
  %334 = load i32, ptr %275, align 8, !tbaa !80
  %335 = sext i32 %334 to i64
  %336 = shl nsw i64 %335, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %330, ptr nonnull align 4 %331, i64 %336, i1 false)
  %337 = load ptr, ptr %306, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %337)
  br label %338

338:                                              ; preds = %333, %327
  store ptr %330, ptr %306, align 8, !tbaa !79
  store i32 %325, ptr %277, align 4, !tbaa !78
  %339 = load i32, ptr %275, align 8, !tbaa !80
  br label %340

340:                                              ; preds = %338, %323, %304
  %341 = phi i32 [ %339, %338 ], [ %312, %323 ], [ %312, %304 ]
  %342 = load ptr, ptr %306, align 8, !tbaa !79
  %343 = sext i32 %341 to i64
  %344 = getelementptr inbounds %struct.ImVec2, ptr %342, i64 %343
  %345 = load i64, ptr %10, align 8
  store i64 %345, ptr %344, align 4
  %346 = load i32, ptr %275, align 8, !tbaa !80
  %347 = add nsw i32 %346, 1
  store i32 %347, ptr %275, align 8, !tbaa !80
  br label %355

348:                                              ; preds = %272
  %349 = fsub fast float 0x400921FB60000000, %110
  %350 = fsub fast float 0x400921FB60000000, %101
  call void @"?_PathArcToN@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %9, float noundef %91, float noundef %349, float noundef %350, i32 noundef 3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  %351 = fadd fast float %110, 0x400921FB60000000
  %352 = fadd fast float %101, 0x400921FB60000000
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %353 = fadd fast float %91, %21
  store float %112, ptr %10, align 8, !tbaa !113
  %354 = getelementptr inbounds %struct.ImVec2, ptr %10, i64 0, i32 1
  store float %353, ptr %354, align 4, !tbaa !112
  call void @"?_PathArcToN@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %10, float noundef %91, float noundef %352, float noundef %351, i32 noundef 3)
  br label %355

355:                                              ; preds = %340, %348
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #39
  br label %356

356:                                              ; preds = %271, %355, %178
  %357 = load float, ptr %1, align 4, !tbaa !940
  %358 = fadd fast float %357, %91
  %359 = fcmp fast ogt float %31, %358
  br i1 %359, label %360, label %473

360:                                              ; preds = %356
  %361 = load float, ptr %22, align 4, !tbaa !939
  %362 = fsub fast float %361, %31
  %363 = fmul fast float %362, %92
  %364 = fsub fast float 1.000000e+00, %363
  %365 = fcmp fast ugt float %364, 0.000000e+00
  br i1 %365, label %366, label %370

366:                                              ; preds = %360
  %367 = fcmp fast ult float %364, 1.000000e+00
  br i1 %367, label %368, label %370

368:                                              ; preds = %366
  %369 = tail call fast float @acosf(float noundef %364) #38
  br label %370

370:                                              ; preds = %360, %366, %368
  %371 = phi float [ %369, %368 ], [ 0x3FF921FB60000000, %360 ], [ 0.000000e+00, %366 ]
  %372 = fsub fast float %361, %27
  %373 = fmul fast float %372, %92
  %374 = fsub fast float 1.000000e+00, %373
  %375 = fcmp fast ugt float %374, 0.000000e+00
  br i1 %375, label %376, label %380

376:                                              ; preds = %370
  %377 = fcmp fast ult float %374, 1.000000e+00
  br i1 %377, label %378, label %380

378:                                              ; preds = %376
  %379 = tail call fast float @acosf(float noundef %374) #38
  br label %380

380:                                              ; preds = %370, %376, %378
  %381 = phi float [ %379, %378 ], [ 0x3FF921FB60000000, %370 ], [ 0.000000e+00, %376 ]
  %382 = fsub fast float %361, %91
  %383 = tail call fast float @llvm.minnum.f32(float %31, float %382)
  %384 = fcmp fast oeq float %371, %381
  br i1 %384, label %385, label %457

385:                                              ; preds = %380
  %386 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %387 = load i32, ptr %386, align 8, !tbaa !80
  %388 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 1
  %389 = load i32, ptr %388, align 4, !tbaa !78
  %390 = icmp eq i32 %387, %389
  br i1 %390, label %391, label %415

391:                                              ; preds = %385
  %392 = add nsw i32 %387, 1
  %393 = icmp eq i32 %387, 0
  br i1 %393, label %397, label %394

394:                                              ; preds = %391
  %395 = sdiv i32 %387, 2
  %396 = add nsw i32 %395, %387
  br label %397

397:                                              ; preds = %394, %391
  %398 = phi i32 [ %396, %394 ], [ 8, %391 ]
  %399 = tail call i32 @llvm.smax.i32(i32 %398, i32 %392)
  %400 = icmp slt i32 %387, %399
  br i1 %400, label %401, label %415

401:                                              ; preds = %397
  %402 = sext i32 %399 to i64
  %403 = shl nsw i64 %402, 3
  %404 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %403)
  %405 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %406 = load ptr, ptr %405, align 8, !tbaa !79
  %407 = icmp eq ptr %406, null
  br i1 %407, label %413, label %408

408:                                              ; preds = %401
  %409 = load i32, ptr %386, align 8, !tbaa !80
  %410 = sext i32 %409 to i64
  %411 = shl nsw i64 %410, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %404, ptr nonnull align 4 %406, i64 %411, i1 false)
  %412 = load ptr, ptr %405, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %412)
  br label %413

413:                                              ; preds = %408, %401
  store ptr %404, ptr %405, align 8, !tbaa !79
  store i32 %399, ptr %388, align 4, !tbaa !78
  %414 = load i32, ptr %386, align 8, !tbaa !80
  br label %415

415:                                              ; preds = %385, %397, %413
  %416 = phi i32 [ %414, %413 ], [ %387, %397 ], [ %387, %385 ]
  %417 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %418 = load ptr, ptr %417, align 8, !tbaa !79
  %419 = sext i32 %416 to i64
  %420 = getelementptr inbounds %struct.ImVec2, ptr %418, i64 %419
  store float %383, ptr %420, align 4
  %421 = getelementptr inbounds i8, ptr %420, i64 4
  store float %21, ptr %421, align 4
  %422 = load i32, ptr %386, align 8, !tbaa !80
  %423 = add nsw i32 %422, 1
  store i32 %423, ptr %386, align 8, !tbaa !80
  %424 = load i32, ptr %388, align 4, !tbaa !78
  %425 = icmp eq i32 %423, %424
  br i1 %425, label %426, label %449

426:                                              ; preds = %415
  %427 = add nsw i32 %422, 2
  %428 = icmp eq i32 %423, 0
  br i1 %428, label %432, label %429

429:                                              ; preds = %426
  %430 = sdiv i32 %423, 2
  %431 = add nsw i32 %430, %423
  br label %432

432:                                              ; preds = %429, %426
  %433 = phi i32 [ %431, %429 ], [ 8, %426 ]
  %434 = tail call i32 @llvm.smax.i32(i32 %433, i32 %427)
  %435 = icmp slt i32 %423, %434
  br i1 %435, label %436, label %449

436:                                              ; preds = %432
  %437 = sext i32 %434 to i64
  %438 = shl nsw i64 %437, 3
  %439 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %438)
  %440 = load ptr, ptr %417, align 8, !tbaa !79
  %441 = icmp eq ptr %440, null
  br i1 %441, label %447, label %442

442:                                              ; preds = %436
  %443 = load i32, ptr %386, align 8, !tbaa !80
  %444 = sext i32 %443 to i64
  %445 = shl nsw i64 %444, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %439, ptr nonnull align 4 %440, i64 %445, i1 false)
  %446 = load ptr, ptr %417, align 8, !tbaa !79
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef %446)
  br label %447

447:                                              ; preds = %442, %436
  store ptr %439, ptr %417, align 8, !tbaa !79
  store i32 %434, ptr %388, align 4, !tbaa !78
  %448 = load i32, ptr %386, align 8, !tbaa !80
  br label %449

449:                                              ; preds = %415, %432, %447
  %450 = phi i32 [ %448, %447 ], [ %423, %432 ], [ %423, %415 ]
  %451 = load ptr, ptr %417, align 8, !tbaa !79
  %452 = sext i32 %450 to i64
  %453 = getelementptr inbounds %struct.ImVec2, ptr %451, i64 %452
  store float %383, ptr %453, align 4
  %454 = getelementptr inbounds i8, ptr %453, i64 4
  store float %29, ptr %454, align 4
  %455 = load i32, ptr %386, align 8, !tbaa !80
  %456 = add nsw i32 %455, 1
  store i32 %456, ptr %386, align 8, !tbaa !80
  br label %473

457:                                              ; preds = %380
  %458 = fcmp fast oeq float %371, 0.000000e+00
  %459 = fcmp fast oeq float %381, 0x3FF921FB60000000
  %460 = select i1 %458, i1 %459, i1 false
  br i1 %460, label %461, label %466

461:                                              ; preds = %457
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #39
  %462 = fadd fast float %91, %21
  store float %383, ptr %11, align 4, !tbaa !113
  %463 = getelementptr inbounds %struct.ImVec2, ptr %11, i64 0, i32 1
  store float %462, ptr %463, align 4, !tbaa !112
  call void @"?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %11, float noundef %91, i32 noundef 9, i32 noundef 12)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #39
  %464 = fsub fast float %29, %91
  store float %383, ptr %12, align 4, !tbaa !113
  %465 = getelementptr inbounds %struct.ImVec2, ptr %12, i64 0, i32 1
  store float %464, ptr %465, align 4, !tbaa !112
  call void @"?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %12, float noundef %91, i32 noundef 0, i32 noundef 3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #39
  br label %473

466:                                              ; preds = %457
  %467 = fneg fast float %371
  %468 = fneg fast float %381
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #39
  %469 = fadd fast float %91, %21
  store float %383, ptr %13, align 4, !tbaa !113
  %470 = getelementptr inbounds %struct.ImVec2, ptr %13, i64 0, i32 1
  store float %469, ptr %470, align 4, !tbaa !112
  call void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %13, float noundef %91, float noundef %468, float noundef %467, i32 noundef 3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #39
  %471 = fsub fast float %29, %91
  store float %383, ptr %14, align 4, !tbaa !113
  %472 = getelementptr inbounds %struct.ImVec2, ptr %14, i64 0, i32 1
  store float %471, ptr %472, align 4, !tbaa !112
  call void @"?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %14, float noundef %91, float noundef %371, float noundef %381, i32 noundef 3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #39
  br label %473

473:                                              ; preds = %449, %466, %461, %356
  %474 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %475 = load i32, ptr %474, align 8, !tbaa !143
  %476 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %477 = load ptr, ptr %476, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %477, i32 noundef %475, i32 noundef %2)
  store i32 0, ptr %474, align 8, !tbaa !143
  br label %478

478:                                              ; preds = %473, %33, %35, %6
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderRectFilledWithHole@ImGui@@YAXPEAUImDrawList@@AEBUImRect@@1IM@Z"(ptr noundef %0, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %1, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %2, i32 noundef %3, float noundef %4) local_unnamed_addr #0 {
  %6 = alloca %struct.ImVec2, align 4
  %7 = alloca %struct.ImVec2, align 4
  %8 = alloca %struct.ImVec2, align 4
  %9 = alloca %struct.ImVec2, align 8
  %10 = alloca %struct.ImVec2, align 8
  %11 = alloca %struct.ImVec2, align 4
  %12 = alloca %struct.ImVec2, align 4
  %13 = alloca %struct.ImVec2, align 4
  %14 = alloca %struct.ImVec2, align 8
  %15 = alloca %struct.ImVec2, align 8
  %16 = alloca %struct.ImVec2, align 4
  %17 = alloca %struct.ImVec2, align 4
  %18 = alloca %struct.ImVec2, align 4
  %19 = alloca %struct.ImVec2, align 4
  %20 = alloca %struct.ImVec2, align 8
  %21 = alloca %struct.ImVec2, align 8
  %22 = load float, ptr %2, align 4, !tbaa !940
  %23 = load float, ptr %1, align 4, !tbaa !940
  %24 = fcmp fast ule float %22, %23
  %25 = getelementptr inbounds %struct.ImRect, ptr %2, i64 0, i32 1
  %26 = load float, ptr %25, align 4, !tbaa !939
  %27 = getelementptr inbounds %struct.ImRect, ptr %1, i64 0, i32 1
  %28 = load float, ptr %27, align 4, !tbaa !939
  %29 = fcmp fast uge float %26, %28
  %30 = getelementptr inbounds %struct.ImVec2, ptr %2, i64 0, i32 1
  %31 = load float, ptr %30, align 4, !tbaa !937
  %32 = getelementptr inbounds %struct.ImVec2, ptr %1, i64 0, i32 1
  %33 = load float, ptr %32, align 4, !tbaa !937
  %34 = fcmp fast ule float %31, %33
  %35 = getelementptr inbounds %struct.ImRect, ptr %2, i64 0, i32 1, i32 1
  %36 = load float, ptr %35, align 4, !tbaa !941
  %37 = getelementptr inbounds %struct.ImRect, ptr %1, i64 0, i32 1, i32 1
  %38 = load float, ptr %37, align 4, !tbaa !941
  %39 = fcmp fast uge float %36, %38
  br i1 %24, label %46, label %40

40:                                               ; preds = %5
  %41 = select i1 %34, i32 272, i32 256
  %42 = select i1 %39, i32 64, i32 0
  %43 = or i32 %42, %41
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  store float %22, ptr %6, align 4, !tbaa !113
  %44 = getelementptr inbounds %struct.ImVec2, ptr %6, i64 0, i32 1
  store float %36, ptr %44, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #39
  store float %23, ptr %7, align 4, !tbaa !113
  %45 = getelementptr inbounds %struct.ImVec2, ptr %7, i64 0, i32 1
  store float %31, ptr %45, align 4, !tbaa !112
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) %6, i32 noundef %3, float noundef %4, i32 noundef %43)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  br label %46

46:                                               ; preds = %40, %5
  br i1 %29, label %56, label %47

47:                                               ; preds = %46
  %48 = select i1 %34, i32 288, i32 256
  %49 = select i1 %39, i32 128, i32 0
  %50 = or i32 %49, %48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #39
  %51 = load float, ptr %35, align 4, !tbaa !941
  %52 = load float, ptr %27, align 4, !tbaa !939
  store float %52, ptr %8, align 4, !tbaa !113
  %53 = getelementptr inbounds %struct.ImVec2, ptr %8, i64 0, i32 1
  store float %51, ptr %53, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #39
  %54 = load <2 x float>, ptr %30, align 4, !tbaa !6
  %55 = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %55, ptr %9, align 8, !tbaa !6
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %9, ptr noundef nonnull align 4 dereferenceable(8) %8, i32 noundef %3, float noundef %4, i32 noundef %50)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #39
  br label %56

56:                                               ; preds = %47, %46
  br i1 %34, label %66, label %57

57:                                               ; preds = %56
  %58 = select i1 %24, i32 272, i32 256
  %59 = select i1 %29, i32 32, i32 0
  %60 = or i32 %59, %58
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #39
  %61 = load <2 x float>, ptr %30, align 4, !tbaa !6
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %62, ptr %10, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #39
  %63 = load float, ptr %32, align 4, !tbaa !937
  %64 = load float, ptr %2, align 4, !tbaa !940
  store float %64, ptr %11, align 4, !tbaa !113
  %65 = getelementptr inbounds %struct.ImVec2, ptr %11, i64 0, i32 1
  store float %63, ptr %65, align 4, !tbaa !112
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %11, ptr noundef nonnull align 4 dereferenceable(8) %10, i32 noundef %3, float noundef %4, i32 noundef %60)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #39
  br label %66

66:                                               ; preds = %57, %56
  br i1 %39, label %77, label %67

67:                                               ; preds = %66
  %68 = select i1 %24, i32 320, i32 256
  %69 = select i1 %29, i32 128, i32 0
  %70 = or i32 %69, %68
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #39
  %71 = load float, ptr %37, align 4, !tbaa !941
  %72 = load float, ptr %25, align 4, !tbaa !939
  store float %72, ptr %12, align 4, !tbaa !113
  %73 = getelementptr inbounds %struct.ImVec2, ptr %12, i64 0, i32 1
  store float %71, ptr %73, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #39
  %74 = load float, ptr %35, align 4, !tbaa !941
  %75 = load float, ptr %2, align 4, !tbaa !940
  store float %75, ptr %13, align 4, !tbaa !113
  %76 = getelementptr inbounds %struct.ImVec2, ptr %13, i64 0, i32 1
  store float %74, ptr %76, align 4, !tbaa !112
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %13, ptr noundef nonnull align 4 dereferenceable(8) %12, i32 noundef %3, float noundef %4, i32 noundef %70)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #39
  br label %77

77:                                               ; preds = %67, %66
  %78 = select i1 %24, i1 true, i1 %34
  br i1 %78, label %82, label %79

79:                                               ; preds = %77
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #39
  %80 = load <2 x float>, ptr %2, align 4, !tbaa !6
  store <2 x float> %80, ptr %14, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #39
  %81 = load <2 x float>, ptr %1, align 4, !tbaa !6
  store <2 x float> %81, ptr %15, align 8, !tbaa !6
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %15, ptr noundef nonnull align 4 dereferenceable(8) %14, i32 noundef %3, float noundef %4, i32 noundef 16)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #39
  br label %82

82:                                               ; preds = %77, %79
  %83 = select i1 %29, i1 true, i1 %34
  br i1 %83, label %91, label %84

84:                                               ; preds = %82
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #39
  %85 = load float, ptr %30, align 4, !tbaa !937
  %86 = load float, ptr %27, align 4, !tbaa !939
  store float %86, ptr %16, align 4, !tbaa !113
  %87 = getelementptr inbounds %struct.ImVec2, ptr %16, i64 0, i32 1
  store float %85, ptr %87, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #39
  %88 = load float, ptr %32, align 4, !tbaa !937
  %89 = load float, ptr %25, align 4, !tbaa !939
  store float %89, ptr %17, align 4, !tbaa !113
  %90 = getelementptr inbounds %struct.ImVec2, ptr %17, i64 0, i32 1
  store float %88, ptr %90, align 4, !tbaa !112
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %17, ptr noundef nonnull align 4 dereferenceable(8) %16, i32 noundef %3, float noundef %4, i32 noundef 32)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #39
  br label %91

91:                                               ; preds = %82, %84
  %92 = select i1 %24, i1 true, i1 %39
  br i1 %92, label %100, label %93

93:                                               ; preds = %91
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #39
  %94 = load float, ptr %37, align 4, !tbaa !941
  %95 = load float, ptr %2, align 4, !tbaa !940
  store float %95, ptr %18, align 4, !tbaa !113
  %96 = getelementptr inbounds %struct.ImVec2, ptr %18, i64 0, i32 1
  store float %94, ptr %96, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #39
  %97 = load float, ptr %35, align 4, !tbaa !941
  %98 = load float, ptr %1, align 4, !tbaa !940
  store float %98, ptr %19, align 4, !tbaa !113
  %99 = getelementptr inbounds %struct.ImVec2, ptr %19, i64 0, i32 1
  store float %97, ptr %99, align 4, !tbaa !112
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %19, ptr noundef nonnull align 4 dereferenceable(8) %18, i32 noundef %3, float noundef %4, i32 noundef 64)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #39
  br label %100

100:                                              ; preds = %91, %93
  %101 = select i1 %29, i1 true, i1 %39
  br i1 %101, label %105, label %102

102:                                              ; preds = %100
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #39
  %103 = load <2 x float>, ptr %27, align 4, !tbaa !6
  store <2 x float> %103, ptr %20, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #39
  %104 = load <2 x float>, ptr %25, align 4, !tbaa !6
  store <2 x float> %104, ptr %21, align 8, !tbaa !6
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %21, ptr noundef nonnull align 4 dereferenceable(8) %20, i32 noundef %3, float noundef %4, i32 noundef 128)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #39
  br label %105

105:                                              ; preds = %100, %102
  ret void
}

; Function Attrs: uwtable
define dso_local void @"?RenderColorRectWithAlphaCheckerboard@ImGui@@YAXPEAUImDrawList@@UImVec2@@1IM1MH@Z"(ptr noundef %0, i64 %1, i64 %2, i32 noundef %3, float noundef %4, i64 %5, float noundef %6, i32 noundef %7) local_unnamed_addr #0 {
  %9 = alloca %struct.ImVec2, align 8
  %10 = alloca %struct.ImVec2, align 8
  %11 = alloca %struct.ImVec2, align 8
  %12 = alloca %struct.ImVec2, align 8
  store i64 %1, ptr %9, align 8
  store i64 %2, ptr %10, align 8
  %13 = trunc i64 %5 to i32
  %14 = bitcast i32 %13 to float
  %15 = and i32 %7, 496
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 240, i32 %7
  %18 = icmp ugt i32 %3, -16777217
  %19 = lshr i64 %1, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast i32 %20 to float
  %22 = lshr i64 %2, 32
  %23 = trunc i64 %22 to i32
  %24 = bitcast i32 %23 to float
  %25 = trunc i64 %1 to i32
  %26 = bitcast i32 %25 to float
  %27 = trunc i64 %2 to i32
  %28 = bitcast i32 %27 to float
  br i1 %18, label %159, label %29

29:                                               ; preds = %8
  %30 = lshr i64 %5, 32
  %31 = trunc i64 %30 to i32
  %32 = bitcast i32 %31 to float
  %33 = tail call noundef i32 @"?ImAlphaBlendColors@@YAIII@Z"(i32 noundef -3355444, i32 noundef %3)
  %34 = tail call noundef i32 @"?GetColorU32@ImGui@@YAII@Z"(i32 noundef %33)
  %35 = tail call noundef i32 @"?ImAlphaBlendColors@@YAIII@Z"(i32 noundef -8355712, i32 noundef %3)
  %36 = tail call noundef i32 @"?GetColorU32@ImGui@@YAII@Z"(i32 noundef %35)
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %9, ptr noundef nonnull align 4 dereferenceable(8) %10, i32 noundef %34, float noundef %6, i32 noundef %17)
  %37 = fadd fast float %21, %32
  %38 = fcmp fast olt float %37, %24
  br i1 %38, label %39, label %160

39:                                               ; preds = %29
  %40 = icmp eq i32 %17, 256
  %41 = getelementptr inbounds %struct.ImVec2, ptr %11, i64 0, i32 1
  %42 = getelementptr inbounds %struct.ImVec2, ptr %12, i64 0, i32 1
  %43 = icmp ult i32 %36, 16777216
  %44 = fcmp fast olt float %6, 5.000000e-01
  %45 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11
  %46 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 11, i32 2
  %47 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 5
  %48 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 4
  %49 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 8
  %50 = getelementptr inbounds %struct.ImDrawList, ptr %0, i64 0, i32 7
  %51 = fmul fast float %4, 2.000000e+00
  br i1 %43, label %160, label %52

52:                                               ; preds = %39, %156
  %53 = phi i32 [ %157, %156 ], [ 0, %39 ]
  %54 = phi float [ %59, %156 ], [ %37, %39 ]
  %55 = fcmp fast olt float %54, %21
  %56 = fcmp fast ogt float %54, %24
  %57 = select fast i1 %56, float %24, float %54
  %58 = select fast i1 %55, float %21, float %57
  %59 = fadd fast float %54, %4
  %60 = tail call fast float @llvm.minnum.f32(float %59, float %24)
  %61 = fcmp fast ugt float %60, %58
  br i1 %61, label %62, label %156

62:                                               ; preds = %52
  %63 = and i32 %53, 1
  %64 = sitofp i32 %63 to float
  %65 = fmul fast float %64, %4
  %66 = fadd fast float %65, %14
  %67 = fadd fast float %66, %26
  %68 = fcmp fast olt float %67, %28
  br i1 %68, label %69, label %156

69:                                               ; preds = %62
  %70 = fcmp fast ugt float %58, %21
  %71 = fcmp fast ult float %60, %24
  br label %72

72:                                               ; preds = %69, %153
  %73 = phi float [ %67, %69 ], [ %154, %153 ]
  %74 = fcmp fast olt float %73, %26
  %75 = fcmp fast ogt float %73, %28
  %76 = select fast i1 %75, float %28, float %73
  %77 = select fast i1 %74, float %26, float %76
  %78 = fadd fast float %73, %4
  %79 = tail call fast float @llvm.minnum.f32(float %78, float %28)
  %80 = fcmp fast ugt float %79, %77
  br i1 %80, label %81, label %153

81:                                               ; preds = %72
  br i1 %70, label %88, label %82

82:                                               ; preds = %81
  %83 = fcmp fast ugt float %77, %26
  %84 = select i1 %83, i32 256, i32 272
  %85 = fcmp fast ult float %79, %28
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = or i32 %84, 32
  br label %88

88:                                               ; preds = %82, %86, %81
  %89 = phi i32 [ %87, %86 ], [ %84, %82 ], [ 256, %81 ]
  br i1 %71, label %97, label %90

90:                                               ; preds = %88
  %91 = fcmp fast ugt float %77, %26
  %92 = or i32 %89, 64
  %93 = select i1 %91, i32 %89, i32 %92
  %94 = fcmp fast ult float %79, %28
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = or i32 %93, 128
  br label %97

97:                                               ; preds = %90, %95, %88
  %98 = phi i32 [ %96, %95 ], [ %93, %90 ], [ %89, %88 ]
  %99 = icmp eq i32 %98, 256
  %100 = select i1 %40, i1 true, i1 %99
  %101 = and i32 %98, %17
  %102 = select i1 %100, i32 256, i32 %101
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #39
  store float %79, ptr %11, align 8, !tbaa !113
  store float %60, ptr %41, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #39
  store float %77, ptr %12, align 8, !tbaa !113
  store float %58, ptr %42, align 4, !tbaa !112
  %103 = and i32 %102, 496
  %104 = icmp eq i32 %103, 256
  %105 = or i1 %44, %104
  br i1 %105, label %106, label %149

106:                                              ; preds = %97
  tail call void @"?PrimReserve@ImDrawList@@QEAAXHH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, i32 noundef 6, i32 noundef 4)
  %107 = load ptr, ptr %47, align 8, !tbaa !68
  %108 = load i64, ptr %107, align 8
  %109 = load i32, ptr %48, align 4, !tbaa !71
  %110 = trunc i32 %109 to i16
  %111 = load ptr, ptr %49, align 8, !tbaa !99
  store i16 %110, ptr %111, align 2, !tbaa !121
  %112 = add i16 %110, 1
  %113 = getelementptr inbounds i16, ptr %111, i64 1
  store i16 %112, ptr %113, align 2, !tbaa !121
  %114 = add i16 %110, 2
  %115 = getelementptr inbounds i16, ptr %111, i64 2
  store i16 %114, ptr %115, align 2, !tbaa !121
  %116 = getelementptr inbounds i16, ptr %111, i64 3
  store i16 %110, ptr %116, align 2, !tbaa !121
  %117 = getelementptr inbounds i16, ptr %111, i64 4
  store i16 %114, ptr %117, align 2, !tbaa !121
  %118 = add i16 %110, 3
  %119 = getelementptr inbounds i16, ptr %111, i64 5
  store i16 %118, ptr %119, align 2, !tbaa !121
  %120 = load ptr, ptr %50, align 8, !tbaa !120
  %121 = load i64, ptr %12, align 8
  store i64 %121, ptr %120, align 4
  %122 = load ptr, ptr %50, align 8, !tbaa !120
  %123 = getelementptr inbounds %struct.ImDrawVert, ptr %122, i64 0, i32 1
  store i64 %108, ptr %123, align 4
  %124 = load ptr, ptr %50, align 8, !tbaa !120
  %125 = getelementptr inbounds %struct.ImDrawVert, ptr %124, i64 0, i32 2
  store i32 %36, ptr %125, align 4, !tbaa !123
  %126 = getelementptr inbounds %struct.ImDrawVert, ptr %124, i64 1
  store float %79, ptr %126, align 4
  %127 = getelementptr inbounds %struct.ImDrawVert, ptr %124, i64 1, i32 0, i32 1
  store float %58, ptr %127, align 4
  %128 = load ptr, ptr %50, align 8, !tbaa !120
  %129 = getelementptr inbounds %struct.ImDrawVert, ptr %128, i64 1, i32 1
  store i64 %108, ptr %129, align 4
  %130 = load ptr, ptr %50, align 8, !tbaa !120
  %131 = getelementptr inbounds %struct.ImDrawVert, ptr %130, i64 1, i32 2
  store i32 %36, ptr %131, align 4, !tbaa !123
  %132 = getelementptr inbounds %struct.ImDrawVert, ptr %130, i64 2
  %133 = load i64, ptr %11, align 8
  store i64 %133, ptr %132, align 4
  %134 = load ptr, ptr %50, align 8, !tbaa !120
  %135 = getelementptr inbounds %struct.ImDrawVert, ptr %134, i64 2, i32 1
  store i64 %108, ptr %135, align 4
  %136 = load ptr, ptr %50, align 8, !tbaa !120
  %137 = getelementptr inbounds %struct.ImDrawVert, ptr %136, i64 2, i32 2
  store i32 %36, ptr %137, align 4, !tbaa !123
  %138 = getelementptr inbounds %struct.ImDrawVert, ptr %136, i64 3
  store float %77, ptr %138, align 4
  %139 = getelementptr inbounds %struct.ImDrawVert, ptr %136, i64 3, i32 0, i32 1
  store float %60, ptr %139, align 4
  %140 = load ptr, ptr %50, align 8, !tbaa !120
  %141 = getelementptr inbounds %struct.ImDrawVert, ptr %140, i64 3, i32 1
  store i64 %108, ptr %141, align 4
  %142 = load ptr, ptr %50, align 8, !tbaa !120
  %143 = getelementptr inbounds %struct.ImDrawVert, ptr %142, i64 3, i32 2
  store i32 %36, ptr %143, align 4, !tbaa !123
  %144 = getelementptr inbounds %struct.ImDrawVert, ptr %142, i64 4
  store ptr %144, ptr %50, align 8, !tbaa !120
  %145 = load i32, ptr %48, align 4, !tbaa !71
  %146 = add i32 %145, 4
  store i32 %146, ptr %48, align 4, !tbaa !71
  %147 = load ptr, ptr %49, align 8, !tbaa !99
  %148 = getelementptr inbounds i16, ptr %147, i64 6
  store ptr %148, ptr %49, align 8, !tbaa !99
  br label %152

149:                                              ; preds = %97
  call void @"?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %12, ptr noundef nonnull align 4 dereferenceable(8) %11, float noundef %6, i32 noundef %102)
  %150 = load i32, ptr %45, align 8, !tbaa !143
  %151 = load ptr, ptr %46, align 8, !tbaa !144
  tail call void @"?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef %151, i32 noundef %150, i32 noundef %36)
  store i32 0, ptr %45, align 8, !tbaa !143
  br label %152

152:                                              ; preds = %106, %149
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #39
  br label %153

153:                                              ; preds = %72, %152
  %154 = fadd fast float %73, %51
  %155 = fcmp fast olt float %154, %28
  br i1 %155, label %72, label %156, !llvm.loop !942

156:                                              ; preds = %153, %62, %52
  %157 = add nuw nsw i32 %53, 1
  %158 = fcmp fast olt float %59, %24
  br i1 %158, label %52, label %160, !llvm.loop !943

159:                                              ; preds = %8
  call void @"?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z"(ptr noundef nonnull align 8 dereferenceable(200) %0, ptr noundef nonnull align 4 dereferenceable(8) %9, ptr noundef nonnull align 4 dereferenceable(8) %10, i32 noundef %3, float noundef %6, i32 noundef %17)
  br label %160

160:                                              ; preds = %156, %39, %29, %159
  ret void
}

declare dso_local noundef i32 @"?GetColorU32@ImGui@@YAII@Z"(i32 noundef) local_unnamed_addr #2

declare dso_local noundef i32 @"?ImAlphaBlendColors@@YAIII@Z"(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.x86.sse.rsqrt.ss(<4 x float>) #31

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @"?stbtt_FindGlyphIndex@@YAHPEBUstbtt_fontinfo@@H@Z"(ptr %0, i32 %1, i32 noundef %2) unnamed_addr #7 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  %6 = load i8, ptr %5, align 1, !tbaa !46
  %7 = getelementptr i8, ptr %5, i64 1
  %8 = load i8, ptr %7, align 1, !tbaa !46
  %9 = zext i8 %6 to i16
  %10 = shl nuw i16 %9, 8
  %11 = zext i8 %8 to i16
  %12 = or i16 %10, %11
  switch i16 %12, label %269 [
    i16 0, label %13
    i16 6, label %30
    i16 2, label %64
    i16 4, label %65
  ]

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, ptr %5, i64 2
  %15 = load i8, ptr %14, align 1, !tbaa !46
  %16 = getelementptr i8, ptr %14, i64 1
  %17 = load i8, ptr %16, align 1, !tbaa !46
  %18 = zext i8 %15 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = zext i8 %17 to i32
  %21 = or i32 %19, %20
  %22 = add nsw i32 %21, -6
  %23 = icmp sgt i32 %22, %2
  br i1 %23, label %24, label %371

24:                                               ; preds = %13
  %25 = getelementptr inbounds i8, ptr %5, i64 6
  %26 = sext i32 %2 to i64
  %27 = getelementptr inbounds i8, ptr %25, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !46
  %29 = zext i8 %28 to i32
  br label %371

30:                                               ; preds = %3
  %31 = getelementptr inbounds i8, ptr %5, i64 6
  %32 = load i8, ptr %31, align 1, !tbaa !46
  %33 = getelementptr i8, ptr %31, i64 1
  %34 = load i8, ptr %33, align 1, !tbaa !46
  %35 = zext i8 %32 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = zext i8 %34 to i32
  %38 = or i32 %36, %37
  %39 = icmp ugt i32 %38, %2
  br i1 %39, label %371, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds i8, ptr %5, i64 8
  %42 = load i8, ptr %41, align 1, !tbaa !46
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 8
  %45 = getelementptr i8, ptr %41, i64 1
  %46 = load i8, ptr %45, align 1, !tbaa !46
  %47 = zext i8 %46 to i32
  %48 = or i32 %44, %47
  %49 = add nuw nsw i32 %48, %38
  %50 = icmp ugt i32 %49, %2
  br i1 %50, label %51, label %371

51:                                               ; preds = %40
  %52 = getelementptr inbounds i8, ptr %5, i64 10
  %53 = sub i32 %2, %38
  %54 = shl i32 %53, 1
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %52, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !46
  %58 = getelementptr i8, ptr %56, i64 1
  %59 = load i8, ptr %58, align 1, !tbaa !46
  %60 = zext i8 %57 to i32
  %61 = shl nuw nsw i32 %60, 8
  %62 = zext i8 %59 to i32
  %63 = or i32 %61, %62
  br label %371

64:                                               ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1519)
  br label %371

65:                                               ; preds = %3
  %66 = getelementptr inbounds i8, ptr %5, i64 6
  %67 = load i8, ptr %66, align 1, !tbaa !46
  %68 = getelementptr i8, ptr %66, i64 1
  %69 = load i8, ptr %68, align 1, !tbaa !46
  %70 = zext i8 %67 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = zext i8 %69 to i32
  %73 = or i32 %71, %72
  %74 = lshr i32 %73, 1
  %75 = icmp sgt i32 %2, 65535
  br i1 %75, label %371, label %76

76:                                               ; preds = %65
  %77 = add i32 %1, 14
  %78 = getelementptr inbounds i8, ptr %5, i64 12
  %79 = load i8, ptr %78, align 1, !tbaa !46
  %80 = zext i8 %79 to i16
  %81 = shl nuw i16 %80, 8
  %82 = getelementptr i8, ptr %78, i64 1
  %83 = load i8, ptr %82, align 1, !tbaa !46
  %84 = getelementptr inbounds i8, ptr %5, i64 10
  %85 = load i8, ptr %84, align 1, !tbaa !46
  %86 = zext i8 %85 to i16
  %87 = shl nuw i16 %86, 8
  %88 = getelementptr i8, ptr %84, i64 1
  %89 = load i8, ptr %88, align 1, !tbaa !46
  %90 = zext i8 %89 to i16
  %91 = or i16 %87, %90
  %92 = and i8 %83, -2
  %93 = zext i8 %92 to i16
  %94 = or i16 %81, %93
  %95 = zext i32 %77 to i64
  %96 = getelementptr inbounds i8, ptr %0, i64 %95
  %97 = zext i16 %94 to i64
  %98 = getelementptr inbounds i8, ptr %96, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !46
  %100 = getelementptr i8, ptr %98, i64 1
  %101 = load i8, ptr %100, align 1, !tbaa !46
  %102 = zext i8 %99 to i32
  %103 = shl nuw nsw i32 %102, 8
  %104 = zext i8 %101 to i32
  %105 = or i32 %103, %104
  %106 = icmp sgt i32 %105, %2
  %107 = zext i16 %94 to i32
  %108 = select i1 %106, i32 0, i32 %107
  %109 = add i32 %1, 12
  %110 = add i32 %109, %108
  %111 = icmp eq i16 %91, 0
  br i1 %111, label %189, label %112

112:                                              ; preds = %76
  %113 = getelementptr inbounds i8, ptr %5, i64 8
  %114 = load i8, ptr %113, align 1, !tbaa !46
  %115 = zext i8 %114 to i16
  %116 = shl nuw i16 %115, 8
  %117 = getelementptr i8, ptr %113, i64 1
  %118 = load i8, ptr %117, align 1, !tbaa !46
  %119 = zext i8 %118 to i16
  %120 = or i16 %116, %119
  %121 = or i16 %87, %90
  %122 = and i16 %90, 1
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %143, label %124

124:                                              ; preds = %112
  %125 = lshr i16 %120, 1
  %126 = zext i32 %110 to i64
  %127 = getelementptr inbounds i8, ptr %0, i64 %126
  %128 = and i16 %125, 32766
  %129 = zext i16 %128 to i64
  %130 = getelementptr inbounds i8, ptr %127, i64 %129
  %131 = load i8, ptr %130, align 1, !tbaa !46
  %132 = getelementptr i8, ptr %130, i64 1
  %133 = load i8, ptr %132, align 1, !tbaa !46
  %134 = zext i8 %131 to i32
  %135 = shl nuw nsw i32 %134, 8
  %136 = zext i8 %133 to i32
  %137 = or i32 %135, %136
  %138 = icmp slt i32 %137, %2
  %139 = zext i16 %128 to i32
  %140 = select i1 %138, i32 %139, i32 0
  %141 = add i32 %140, %110
  %142 = add i16 %91, -1
  br label %143

143:                                              ; preds = %124, %112
  %144 = phi i32 [ undef, %112 ], [ %141, %124 ]
  %145 = phi i16 [ %120, %112 ], [ %125, %124 ]
  %146 = phi i16 [ %91, %112 ], [ %142, %124 ]
  %147 = phi i32 [ %110, %112 ], [ %141, %124 ]
  %148 = icmp eq i16 %121, 1
  br i1 %148, label %189, label %149

149:                                              ; preds = %143, %149
  %150 = phi i16 [ %170, %149 ], [ %145, %143 ]
  %151 = phi i16 [ %187, %149 ], [ %146, %143 ]
  %152 = phi i32 [ %186, %149 ], [ %147, %143 ]
  %153 = lshr i16 %150, 1
  %154 = zext i32 %152 to i64
  %155 = getelementptr inbounds i8, ptr %0, i64 %154
  %156 = and i16 %153, 32766
  %157 = zext i16 %156 to i64
  %158 = getelementptr inbounds i8, ptr %155, i64 %157
  %159 = load i8, ptr %158, align 1, !tbaa !46
  %160 = getelementptr i8, ptr %158, i64 1
  %161 = load i8, ptr %160, align 1, !tbaa !46
  %162 = zext i8 %159 to i32
  %163 = shl nuw nsw i32 %162, 8
  %164 = zext i8 %161 to i32
  %165 = or i32 %163, %164
  %166 = icmp slt i32 %165, %2
  %167 = zext i16 %156 to i32
  %168 = select i1 %166, i32 %167, i32 0
  %169 = add i32 %168, %152
  %170 = lshr i16 %150, 2
  %171 = zext i32 %169 to i64
  %172 = getelementptr inbounds i8, ptr %0, i64 %171
  %173 = and i16 %170, 16382
  %174 = zext i16 %173 to i64
  %175 = getelementptr inbounds i8, ptr %172, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !46
  %177 = getelementptr i8, ptr %175, i64 1
  %178 = load i8, ptr %177, align 1, !tbaa !46
  %179 = zext i8 %176 to i32
  %180 = shl nuw nsw i32 %179, 8
  %181 = zext i8 %178 to i32
  %182 = or i32 %180, %181
  %183 = icmp slt i32 %182, %2
  %184 = zext i16 %173 to i32
  %185 = select i1 %183, i32 %184, i32 0
  %186 = add i32 %185, %169
  %187 = add i16 %151, -2
  %188 = icmp eq i16 %187, 0
  br i1 %188, label %189, label %149, !llvm.loop !944

189:                                              ; preds = %143, %149, %76
  %190 = phi i32 [ %110, %76 ], [ %144, %143 ], [ %186, %149 ]
  %191 = sub i32 131060, %1
  %192 = add i32 %191, %190
  %193 = getelementptr inbounds i8, ptr %5, i64 14
  %194 = and i32 %73, 65534
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %193, i64 %195
  %197 = getelementptr inbounds i8, ptr %196, i64 2
  %198 = and i32 %192, 131070
  %199 = zext i32 %198 to i64
  %200 = getelementptr inbounds i8, ptr %197, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !46
  %202 = getelementptr i8, ptr %200, i64 1
  %203 = load i8, ptr %202, align 1, !tbaa !46
  %204 = zext i8 %201 to i32
  %205 = shl nuw nsw i32 %204, 8
  %206 = zext i8 %203 to i32
  %207 = or i32 %205, %206
  %208 = getelementptr inbounds i8, ptr %96, i64 %199
  %209 = load i8, ptr %208, align 1, !tbaa !46
  %210 = getelementptr i8, ptr %208, i64 1
  %211 = load i8, ptr %210, align 1, !tbaa !46
  %212 = zext i8 %209 to i32
  %213 = shl nuw nsw i32 %212, 8
  %214 = zext i8 %211 to i32
  %215 = or i32 %213, %214
  %216 = icmp sgt i32 %207, %2
  %217 = icmp slt i32 %215, %2
  %218 = or i1 %216, %217
  br i1 %218, label %266, label %219

219:                                              ; preds = %189
  %220 = mul nuw nsw i32 %74, 6
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds i8, ptr %193, i64 %221
  %223 = getelementptr inbounds i8, ptr %222, i64 2
  %224 = getelementptr inbounds i8, ptr %223, i64 %199
  %225 = load i8, ptr %224, align 1, !tbaa !46
  %226 = getelementptr i8, ptr %224, i64 1
  %227 = load i8, ptr %226, align 1, !tbaa !46
  %228 = zext i8 %225 to i16
  %229 = shl nuw i16 %228, 8
  %230 = zext i8 %227 to i16
  %231 = or i16 %229, %230
  %232 = icmp eq i16 %231, 0
  br i1 %232, label %233, label %247

233:                                              ; preds = %219
  %234 = shl nuw nsw i32 %74, 2
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds i8, ptr %193, i64 %235
  %237 = getelementptr inbounds i8, ptr %236, i64 2
  %238 = getelementptr inbounds i8, ptr %237, i64 %199
  %239 = load i8, ptr %238, align 1, !tbaa !46
  %240 = getelementptr i8, ptr %238, i64 1
  %241 = load i8, ptr %240, align 1, !tbaa !46
  %242 = zext i8 %239 to i32
  %243 = shl nuw nsw i32 %242, 8
  %244 = zext i8 %241 to i32
  %245 = or i32 %243, %244
  %246 = add i32 %245, %2
  br label %266

247:                                              ; preds = %219
  %248 = zext i16 %231 to i64
  %249 = getelementptr inbounds i8, ptr %0, i64 %248
  %250 = sub nsw i32 %2, %207
  %251 = shl nsw i32 %250, 1
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, ptr %249, i64 %252
  %254 = getelementptr inbounds i8, ptr %253, i64 %4
  %255 = getelementptr inbounds i8, ptr %254, i64 14
  %256 = getelementptr inbounds i8, ptr %255, i64 %221
  %257 = getelementptr inbounds i8, ptr %256, i64 2
  %258 = getelementptr inbounds i8, ptr %257, i64 %199
  %259 = load i8, ptr %258, align 1, !tbaa !46
  %260 = getelementptr i8, ptr %258, i64 1
  %261 = load i8, ptr %260, align 1, !tbaa !46
  %262 = zext i8 %259 to i32
  %263 = shl nuw nsw i32 %262, 8
  %264 = zext i8 %261 to i32
  %265 = or i32 %263, %264
  br label %266

266:                                              ; preds = %189, %247, %233
  %267 = phi i32 [ %246, %233 ], [ %265, %247 ], [ 0, %189 ]
  %268 = and i32 %267, 65535
  br label %371

269:                                              ; preds = %3
  %270 = icmp eq i16 %12, 12
  %271 = and i16 %12, -2
  %272 = icmp eq i16 %271, 12
  br i1 %272, label %273, label %370

273:                                              ; preds = %269
  %274 = getelementptr inbounds i8, ptr %5, i64 12
  %275 = load i8, ptr %274, align 1, !tbaa !46
  %276 = zext i8 %275 to i32
  %277 = shl nuw i32 %276, 24
  %278 = getelementptr inbounds i8, ptr %274, i64 1
  %279 = load i8, ptr %278, align 1, !tbaa !46
  %280 = zext i8 %279 to i32
  %281 = shl nuw nsw i32 %280, 16
  %282 = or i32 %281, %277
  %283 = getelementptr inbounds i8, ptr %274, i64 2
  %284 = load i8, ptr %283, align 1, !tbaa !46
  %285 = zext i8 %284 to i32
  %286 = shl nuw nsw i32 %285, 8
  %287 = or i32 %282, %286
  %288 = getelementptr inbounds i8, ptr %274, i64 3
  %289 = load i8, ptr %288, align 1, !tbaa !46
  %290 = zext i8 %289 to i32
  %291 = or i32 %287, %290
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %293, label %371

293:                                              ; preds = %273
  %294 = getelementptr inbounds i8, ptr %5, i64 16
  br label %295

295:                                              ; preds = %293, %366
  %296 = phi i32 [ %291, %293 ], [ %368, %366 ]
  %297 = phi i32 [ 0, %293 ], [ %367, %366 ]
  %298 = sub nsw i32 %296, %297
  %299 = ashr i32 %298, 1
  %300 = add nsw i32 %299, %297
  %301 = mul nsw i32 %300, 12
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i8, ptr %294, i64 %302
  %304 = load i8, ptr %303, align 1, !tbaa !46
  %305 = zext i8 %304 to i32
  %306 = shl nuw i32 %305, 24
  %307 = getelementptr inbounds i8, ptr %303, i64 1
  %308 = load i8, ptr %307, align 1, !tbaa !46
  %309 = zext i8 %308 to i32
  %310 = shl nuw nsw i32 %309, 16
  %311 = or i32 %310, %306
  %312 = getelementptr inbounds i8, ptr %303, i64 2
  %313 = load i8, ptr %312, align 1, !tbaa !46
  %314 = zext i8 %313 to i32
  %315 = shl nuw nsw i32 %314, 8
  %316 = or i32 %311, %315
  %317 = getelementptr inbounds i8, ptr %303, i64 3
  %318 = load i8, ptr %317, align 1, !tbaa !46
  %319 = zext i8 %318 to i32
  %320 = or i32 %316, %319
  %321 = icmp ugt i32 %320, %2
  br i1 %321, label %366, label %322

322:                                              ; preds = %295
  %323 = getelementptr inbounds i8, ptr %303, i64 4
  %324 = getelementptr inbounds i8, ptr %323, i64 1
  %325 = load i8, ptr %324, align 1, !tbaa !46
  %326 = zext i8 %325 to i32
  %327 = shl nuw nsw i32 %326, 16
  %328 = load i8, ptr %323, align 1, !tbaa !46
  %329 = zext i8 %328 to i32
  %330 = shl nuw i32 %329, 24
  %331 = or i32 %330, %327
  %332 = getelementptr inbounds i8, ptr %323, i64 2
  %333 = load i8, ptr %332, align 1, !tbaa !46
  %334 = zext i8 %333 to i32
  %335 = shl nuw nsw i32 %334, 8
  %336 = or i32 %331, %335
  %337 = getelementptr inbounds i8, ptr %323, i64 3
  %338 = load i8, ptr %337, align 1, !tbaa !46
  %339 = zext i8 %338 to i32
  %340 = or i32 %336, %339
  %341 = icmp ult i32 %340, %2
  br i1 %341, label %342, label %344

342:                                              ; preds = %322
  %343 = add nsw i32 %300, 1
  br label %366

344:                                              ; preds = %322
  %345 = getelementptr inbounds i8, ptr %303, i64 8
  %346 = load i8, ptr %345, align 1, !tbaa !46
  %347 = zext i8 %346 to i32
  %348 = shl nuw i32 %347, 24
  %349 = getelementptr inbounds i8, ptr %345, i64 1
  %350 = load i8, ptr %349, align 1, !tbaa !46
  %351 = zext i8 %350 to i32
  %352 = shl nuw nsw i32 %351, 16
  %353 = or i32 %352, %348
  %354 = getelementptr inbounds i8, ptr %345, i64 2
  %355 = load i8, ptr %354, align 1, !tbaa !46
  %356 = zext i8 %355 to i32
  %357 = shl nuw nsw i32 %356, 8
  %358 = or i32 %353, %357
  %359 = getelementptr inbounds i8, ptr %345, i64 3
  %360 = load i8, ptr %359, align 1, !tbaa !46
  %361 = zext i8 %360 to i32
  %362 = or i32 %358, %361
  %363 = sub i32 %2, %320
  %364 = select i1 %270, i32 %363, i32 0
  %365 = add i32 %362, %364
  br label %371

366:                                              ; preds = %342, %295
  %367 = phi i32 [ %343, %342 ], [ %297, %295 ]
  %368 = phi i32 [ %296, %342 ], [ %300, %295 ]
  %369 = icmp sgt i32 %368, %367
  br i1 %369, label %295, label %371, !llvm.loop !945

370:                                              ; preds = %269
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1590)
  br label %371

371:                                              ; preds = %366, %273, %344, %266, %65, %51, %40, %30, %24, %13, %370, %64
  %372 = phi i32 [ 0, %64 ], [ 0, %370 ], [ %29, %24 ], [ 0, %13 ], [ %63, %51 ], [ 0, %40 ], [ 0, %30 ], [ %268, %266 ], [ 0, %65 ], [ %365, %344 ], [ 0, %273 ], [ 0, %366 ]
  ret i32 %372
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #6

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @"??1?$ImVector@Ustbtt_packedchar@@@@QEAA@XZ"(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #18 comdat align 2 personality ptr @__CxxFrameHandler3 {
  %2 = getelementptr inbounds %struct.ImVector.16, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !414
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  invoke void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %3)
          to label %6 unwind label %7

6:                                                ; preds = %5, %1
  ret void

7:                                                ; preds = %5
  %8 = cleanuppad within none []
  call void @__std_terminate() #40 [ "funclet"(token %8) ]
  unreachable
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias nocapture writeonly align 8 %0, ptr nocapture noundef %1) unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !377
  %5 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !378
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = load ptr, ptr %1, align 8, !tbaa !379
  %10 = add nsw i32 %4, 1
  store i32 %10, ptr %3, align 8, !tbaa !377
  %11 = sext i32 %4 to i64
  %12 = getelementptr inbounds i8, ptr %9, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !46
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  br label %16

16:                                               ; preds = %8, %2
  %17 = phi i32 [ %10, %8 ], [ %4, %2 ]
  %18 = phi i32 [ %15, %8 ], [ 0, %2 ]
  %19 = icmp slt i32 %17, %6
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = load ptr, ptr %1, align 8, !tbaa !379
  %22 = add nsw i32 %17, 1
  store i32 %22, ptr %3, align 8, !tbaa !377
  %23 = sext i32 %17 to i64
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  %25 = load i8, ptr %24, align 1, !tbaa !46
  %26 = zext i8 %25 to i32
  br label %27

27:                                               ; preds = %20, %16
  %28 = phi i32 [ %22, %20 ], [ %17, %16 ]
  %29 = phi i32 [ %26, %20 ], [ 0, %16 ]
  %30 = or i32 %18, %29
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %152, label %32

32:                                               ; preds = %27
  %33 = icmp slt i32 %28, %6
  br i1 %33, label %34, label %43

34:                                               ; preds = %32
  %35 = load ptr, ptr %1, align 8, !tbaa !379
  %36 = add nsw i32 %28, 1
  store i32 %36, ptr %3, align 8, !tbaa !377
  %37 = sext i32 %28 to i64
  %38 = getelementptr inbounds i8, ptr %35, i64 %37
  %39 = load i8, ptr %38, align 1, !tbaa !46
  %40 = zext i8 %39 to i32
  %41 = add i8 %39, -1
  %42 = icmp ult i8 %41, 4
  br i1 %42, label %47, label %43

43:                                               ; preds = %32, %34
  %44 = phi i32 [ %40, %34 ], [ 0, %32 ]
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1202)
  %45 = load i32, ptr %3, align 8, !tbaa !377
  %46 = load i32, ptr %5, align 4, !tbaa !378
  br label %47

47:                                               ; preds = %34, %43
  %48 = phi i32 [ %6, %34 ], [ %46, %43 ]
  %49 = phi i32 [ %36, %34 ], [ %45, %43 ]
  %50 = phi i32 [ %40, %34 ], [ %44, %43 ]
  %51 = mul nuw nsw i32 %50, %30
  %52 = add nsw i32 %49, %51
  %53 = icmp slt i32 %48, %52
  %54 = icmp slt i32 %52, 0
  %55 = or i1 %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  %57 = load i32, ptr %5, align 4, !tbaa !378
  br label %58

58:                                               ; preds = %47, %56
  %59 = phi i32 [ %57, %56 ], [ %48, %47 ]
  %60 = icmp slt i32 %59, %52
  %61 = or i1 %54, %60
  %62 = select i1 %61, i32 %59, i32 %52
  store i32 %62, ptr %3, align 8, !tbaa !377
  %63 = add nsw i32 %50, -1
  %64 = icmp ult i32 %63, 4
  br i1 %64, label %73, label %65

65:                                               ; preds = %58
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1167)
  %66 = icmp eq i32 %50, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = load i32, ptr %3, align 8, !tbaa !377
  %69 = load i32, ptr %5, align 4, !tbaa !378
  br label %137

70:                                               ; preds = %65
  %71 = load i32, ptr %5, align 4, !tbaa !378
  %72 = load i32, ptr %3, align 8, !tbaa !377
  br label %73

73:                                               ; preds = %70, %58
  %74 = phi i32 [ %72, %70 ], [ %62, %58 ]
  %75 = phi i32 [ %71, %70 ], [ %59, %58 ]
  %76 = and i32 %50, 1
  %77 = icmp eq i32 %50, 1
  br i1 %77, label %114, label %78

78:                                               ; preds = %73
  %79 = and i32 %50, -2
  br label %80

80:                                               ; preds = %105, %78
  %81 = phi i32 [ %74, %78 ], [ %106, %105 ]
  %82 = phi i32 [ 0, %78 ], [ %109, %105 ]
  %83 = phi i32 [ 0, %78 ], [ %110, %105 ]
  %84 = icmp slt i32 %81, %75
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load ptr, ptr %1, align 8, !tbaa !379
  %87 = add nsw i32 %81, 1
  store i32 %87, ptr %3, align 8, !tbaa !377
  %88 = sext i32 %81 to i64
  %89 = getelementptr inbounds i8, ptr %86, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !46
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %93 = phi i8 [ %90, %85 ], [ 0, %80 ]
  %94 = zext i8 %93 to i32
  %95 = shl i32 %82, 16
  %96 = shl nuw nsw i32 %94, 8
  %97 = or i32 %95, %96
  %98 = icmp slt i32 %92, %75
  br i1 %98, label %99, label %105

99:                                               ; preds = %91
  %100 = load ptr, ptr %1, align 8, !tbaa !379
  %101 = add nsw i32 %92, 1
  store i32 %101, ptr %3, align 8, !tbaa !377
  %102 = sext i32 %92 to i64
  %103 = getelementptr inbounds i8, ptr %100, i64 %102
  %104 = load i8, ptr %103, align 1, !tbaa !46
  br label %105

105:                                              ; preds = %99, %91
  %106 = phi i32 [ %101, %99 ], [ %92, %91 ]
  %107 = phi i8 [ %104, %99 ], [ 0, %91 ]
  %108 = zext i8 %107 to i32
  %109 = or i32 %97, %108
  %110 = add i32 %83, 2
  %111 = icmp eq i32 %110, %79
  br i1 %111, label %112, label %80, !llvm.loop !946

112:                                              ; preds = %105
  %113 = shl i32 %109, 8
  br label %114

114:                                              ; preds = %112, %73
  %115 = phi i32 [ undef, %73 ], [ %106, %112 ]
  %116 = phi i32 [ undef, %73 ], [ %109, %112 ]
  %117 = phi i32 [ %74, %73 ], [ %106, %112 ]
  %118 = phi i32 [ 0, %73 ], [ %113, %112 ]
  %119 = icmp eq i32 %76, 0
  br i1 %119, label %133, label %120

120:                                              ; preds = %114
  %121 = icmp slt i32 %117, %75
  br i1 %121, label %122, label %129

122:                                              ; preds = %120
  %123 = load ptr, ptr %1, align 8, !tbaa !379
  %124 = add nsw i32 %117, 1
  store i32 %124, ptr %3, align 8, !tbaa !377
  %125 = sext i32 %117 to i64
  %126 = getelementptr inbounds i8, ptr %123, i64 %125
  %127 = load i8, ptr %126, align 1, !tbaa !46
  %128 = zext i8 %127 to i32
  br label %129

129:                                              ; preds = %122, %120
  %130 = phi i32 [ %124, %122 ], [ %117, %120 ]
  %131 = phi i32 [ %128, %122 ], [ 0, %120 ]
  %132 = or i32 %118, %131
  br label %133

133:                                              ; preds = %114, %129
  %134 = phi i32 [ %115, %114 ], [ %130, %129 ]
  %135 = phi i32 [ %116, %114 ], [ %132, %129 ]
  %136 = add i32 %135, -1
  br label %137

137:                                              ; preds = %67, %133
  %138 = phi i32 [ %69, %67 ], [ %75, %133 ]
  %139 = phi i32 [ %68, %67 ], [ %134, %133 ]
  %140 = phi i32 [ -1, %67 ], [ %136, %133 ]
  %141 = add nsw i32 %140, %139
  %142 = icmp slt i32 %138, %141
  %143 = icmp slt i32 %141, 0
  %144 = or i1 %143, %142
  br i1 %144, label %145, label %147

145:                                              ; preds = %137
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  %146 = load i32, ptr %5, align 4, !tbaa !378
  br label %147

147:                                              ; preds = %137, %145
  %148 = phi i32 [ %146, %145 ], [ %138, %137 ]
  %149 = icmp slt i32 %148, %141
  %150 = or i1 %143, %149
  %151 = select i1 %150, i32 %148, i32 %141
  store i32 %151, ptr %3, align 8, !tbaa !377
  br label %152

152:                                              ; preds = %147, %27
  %153 = phi i32 [ %148, %147 ], [ %6, %27 ]
  %154 = phi i32 [ %151, %147 ], [ %28, %27 ]
  %155 = sub nsw i32 %154, %4
  tail call void @llvm.experimental.noalias.scope.decl(metadata !947)
  %156 = getelementptr inbounds %struct.stbtt__buf, ptr %0, i64 0, i32 2
  %157 = or i32 %155, %4
  %158 = icmp sgt i32 %157, -1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false), !alias.scope !947
  br i1 %158, label %159, label %167

159:                                              ; preds = %152
  %160 = icmp slt i32 %153, %4
  %161 = icmp slt i32 %153, %154
  %162 = select i1 %160, i1 true, i1 %161
  br i1 %162, label %167, label %163

163:                                              ; preds = %159
  %164 = load ptr, ptr %1, align 8, !tbaa !379, !noalias !947
  %165 = zext i32 %4 to i64
  %166 = getelementptr inbounds i8, ptr %164, i64 %165
  store ptr %166, ptr %0, align 8, !tbaa !379, !alias.scope !947
  store i32 %155, ptr %156, align 4, !tbaa !378, !alias.scope !947
  br label %167

167:                                              ; preds = %152, %159, %163
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @"?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z"(ptr noalias nocapture writeonly align 8 %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #7 {
  %4 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !378
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  %8 = load i32, ptr %4, align 4, !tbaa !378
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi i32 [ %8, %7 ], [ %5, %3 ]
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 0)
  %12 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 1
  store i32 %11, ptr %12, align 8, !tbaa !377
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = load ptr, ptr %1, align 8, !tbaa !379
  %16 = add nsw i32 %11, 1
  store i32 %16, ptr %12, align 8, !tbaa !377
  %17 = sext i32 %11 to i64
  %18 = getelementptr inbounds i8, ptr %15, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !46
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  br label %22

22:                                               ; preds = %14, %9
  %23 = phi i32 [ %16, %14 ], [ %11, %9 ]
  %24 = phi i32 [ %21, %14 ], [ 0, %9 ]
  %25 = icmp slt i32 %23, %10
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = load ptr, ptr %1, align 8, !tbaa !379
  %28 = add nsw i32 %23, 1
  store i32 %28, ptr %12, align 8, !tbaa !377
  %29 = sext i32 %23 to i64
  %30 = getelementptr inbounds i8, ptr %27, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !46
  %32 = zext i8 %31 to i32
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %28, %26 ], [ %23, %22 ]
  %35 = phi i32 [ %32, %26 ], [ 0, %22 ]
  %36 = or i32 %24, %35
  %37 = icmp slt i32 %34, %10
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = load ptr, ptr %1, align 8, !tbaa !379
  %40 = add nsw i32 %34, 1
  store i32 %40, ptr %12, align 8, !tbaa !377
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  %43 = load i8, ptr %42, align 1, !tbaa !46
  br label %44

44:                                               ; preds = %33, %38
  %45 = phi i8 [ %43, %38 ], [ 0, %33 ]
  %46 = icmp sgt i32 %2, -1
  %47 = icmp sgt i32 %36, %2
  %48 = and i1 %46, %47
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CI@PFMEGAIA@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1271)
  br label %50

50:                                               ; preds = %44, %49
  %51 = add i8 %45, -1
  %52 = icmp ult i8 %51, 4
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DK@IJDIOPHB@?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1272)
  br label %54

54:                                               ; preds = %50, %53
  %55 = zext i8 %45 to i32
  %56 = mul nsw i32 %55, %2
  %57 = load i32, ptr %12, align 8, !tbaa !377
  %58 = add nsw i32 %57, %56
  %59 = load i32, ptr %4, align 4, !tbaa !378
  %60 = icmp slt i32 %59, %58
  %61 = icmp slt i32 %58, 0
  %62 = or i1 %61, %60
  br i1 %62, label %63, label %65

63:                                               ; preds = %54
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  %64 = load i32, ptr %4, align 4, !tbaa !378
  br label %65

65:                                               ; preds = %54, %63
  %66 = phi i32 [ %64, %63 ], [ %59, %54 ]
  %67 = icmp slt i32 %66, %58
  %68 = or i1 %61, %67
  %69 = select i1 %68, i32 %66, i32 %58
  store i32 %69, ptr %12, align 8, !tbaa !377
  %70 = add nsw i32 %55, -1
  %71 = icmp ult i32 %70, 4
  br i1 %71, label %78, label %72

72:                                               ; preds = %65
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1167)
  %73 = icmp eq i8 %45, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %72
  %75 = load i32, ptr %4, align 4, !tbaa !378
  %76 = load i32, ptr %12, align 8, !tbaa !377
  br label %78

77:                                               ; preds = %72
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1167)
  br label %205

78:                                               ; preds = %74, %65
  %79 = phi i32 [ %76, %74 ], [ %69, %65 ]
  %80 = phi i32 [ %75, %74 ], [ %66, %65 ]
  %81 = add nsw i32 %55, -1
  %82 = and i32 %55, 1
  %83 = icmp eq i32 %81, 0
  br i1 %83, label %120, label %84

84:                                               ; preds = %78
  %85 = and i32 %55, 254
  br label %86

86:                                               ; preds = %111, %84
  %87 = phi i32 [ %79, %84 ], [ %112, %111 ]
  %88 = phi i32 [ 0, %84 ], [ %115, %111 ]
  %89 = phi i32 [ 0, %84 ], [ %116, %111 ]
  %90 = icmp slt i32 %87, %80
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = load ptr, ptr %1, align 8, !tbaa !379
  %93 = add nsw i32 %87, 1
  store i32 %93, ptr %12, align 8, !tbaa !377
  %94 = sext i32 %87 to i64
  %95 = getelementptr inbounds i8, ptr %92, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !46
  br label %97

97:                                               ; preds = %91, %86
  %98 = phi i32 [ %93, %91 ], [ %87, %86 ]
  %99 = phi i8 [ %96, %91 ], [ 0, %86 ]
  %100 = zext i8 %99 to i32
  %101 = shl i32 %88, 16
  %102 = shl nuw nsw i32 %100, 8
  %103 = or i32 %101, %102
  %104 = icmp slt i32 %98, %80
  br i1 %104, label %105, label %111

105:                                              ; preds = %97
  %106 = load ptr, ptr %1, align 8, !tbaa !379
  %107 = add nsw i32 %98, 1
  store i32 %107, ptr %12, align 8, !tbaa !377
  %108 = sext i32 %98 to i64
  %109 = getelementptr inbounds i8, ptr %106, i64 %108
  %110 = load i8, ptr %109, align 1, !tbaa !46
  br label %111

111:                                              ; preds = %105, %97
  %112 = phi i32 [ %107, %105 ], [ %98, %97 ]
  %113 = phi i8 [ %110, %105 ], [ 0, %97 ]
  %114 = zext i8 %113 to i32
  %115 = or i32 %103, %114
  %116 = add i32 %89, 2
  %117 = icmp eq i32 %116, %85
  br i1 %117, label %118, label %86, !llvm.loop !946

118:                                              ; preds = %111
  %119 = shl i32 %115, 8
  br label %120

120:                                              ; preds = %118, %78
  %121 = phi i32 [ undef, %78 ], [ %112, %118 ]
  %122 = phi i32 [ undef, %78 ], [ %115, %118 ]
  %123 = phi i32 [ %79, %78 ], [ %112, %118 ]
  %124 = phi i32 [ 0, %78 ], [ %119, %118 ]
  %125 = icmp eq i32 %82, 0
  br i1 %125, label %139, label %126

126:                                              ; preds = %120
  %127 = icmp slt i32 %123, %80
  br i1 %127, label %128, label %135

128:                                              ; preds = %126
  %129 = load ptr, ptr %1, align 8, !tbaa !379
  %130 = add nsw i32 %123, 1
  store i32 %130, ptr %12, align 8, !tbaa !377
  %131 = sext i32 %123 to i64
  %132 = getelementptr inbounds i8, ptr %129, i64 %131
  %133 = load i8, ptr %132, align 1, !tbaa !46
  %134 = zext i8 %133 to i32
  br label %135

135:                                              ; preds = %128, %126
  %136 = phi i32 [ %130, %128 ], [ %123, %126 ]
  %137 = phi i32 [ %134, %128 ], [ 0, %126 ]
  %138 = or i32 %124, %137
  br label %139

139:                                              ; preds = %120, %135
  %140 = phi i32 [ %121, %120 ], [ %136, %135 ]
  %141 = phi i32 [ %122, %120 ], [ %138, %135 ]
  br i1 %71, label %147, label %142

142:                                              ; preds = %139
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CC@OMFGMKMB@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA4?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1167)
  %143 = icmp eq i8 %45, 0
  br i1 %143, label %205, label %144

144:                                              ; preds = %142
  %145 = load i32, ptr %4, align 4, !tbaa !378
  %146 = load i32, ptr %12, align 8, !tbaa !377
  br label %147

147:                                              ; preds = %144, %139
  %148 = phi i32 [ %146, %144 ], [ %140, %139 ]
  %149 = phi i32 [ %145, %144 ], [ %80, %139 ]
  %150 = and i32 %55, 1
  %151 = icmp eq i32 %81, 0
  br i1 %151, label %188, label %152

152:                                              ; preds = %147
  %153 = and i32 %55, 254
  br label %154

154:                                              ; preds = %179, %152
  %155 = phi i32 [ %148, %152 ], [ %180, %179 ]
  %156 = phi i32 [ 0, %152 ], [ %183, %179 ]
  %157 = phi i32 [ 0, %152 ], [ %184, %179 ]
  %158 = icmp slt i32 %155, %149
  br i1 %158, label %159, label %165

159:                                              ; preds = %154
  %160 = load ptr, ptr %1, align 8, !tbaa !379
  %161 = add nsw i32 %155, 1
  store i32 %161, ptr %12, align 8, !tbaa !377
  %162 = sext i32 %155 to i64
  %163 = getelementptr inbounds i8, ptr %160, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !46
  br label %165

165:                                              ; preds = %159, %154
  %166 = phi i32 [ %161, %159 ], [ %155, %154 ]
  %167 = phi i8 [ %164, %159 ], [ 0, %154 ]
  %168 = zext i8 %167 to i32
  %169 = shl i32 %156, 16
  %170 = shl nuw nsw i32 %168, 8
  %171 = or i32 %169, %170
  %172 = icmp slt i32 %166, %149
  br i1 %172, label %173, label %179

173:                                              ; preds = %165
  %174 = load ptr, ptr %1, align 8, !tbaa !379
  %175 = add nsw i32 %166, 1
  store i32 %175, ptr %12, align 8, !tbaa !377
  %176 = sext i32 %166 to i64
  %177 = getelementptr inbounds i8, ptr %174, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !46
  br label %179

179:                                              ; preds = %173, %165
  %180 = phi i32 [ %175, %173 ], [ %166, %165 ]
  %181 = phi i8 [ %178, %173 ], [ 0, %165 ]
  %182 = zext i8 %181 to i32
  %183 = or i32 %171, %182
  %184 = add i32 %157, 2
  %185 = icmp eq i32 %184, %153
  br i1 %185, label %186, label %154, !llvm.loop !946

186:                                              ; preds = %179
  %187 = shl i32 %183, 8
  br label %188

188:                                              ; preds = %186, %147
  %189 = phi i32 [ undef, %147 ], [ %183, %186 ]
  %190 = phi i32 [ %148, %147 ], [ %180, %186 ]
  %191 = phi i32 [ 0, %147 ], [ %187, %186 ]
  %192 = icmp eq i32 %150, 0
  br i1 %192, label %205, label %193

193:                                              ; preds = %188
  %194 = icmp slt i32 %190, %149
  br i1 %194, label %195, label %202

195:                                              ; preds = %193
  %196 = load ptr, ptr %1, align 8, !tbaa !379
  %197 = add nsw i32 %190, 1
  store i32 %197, ptr %12, align 8, !tbaa !377
  %198 = sext i32 %190 to i64
  %199 = getelementptr inbounds i8, ptr %196, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !46
  %201 = zext i8 %200 to i32
  br label %202

202:                                              ; preds = %195, %193
  %203 = phi i32 [ %201, %195 ], [ 0, %193 ]
  %204 = or i32 %191, %203
  br label %205

205:                                              ; preds = %202, %188, %77, %142
  %206 = phi i32 [ %141, %142 ], [ 0, %77 ], [ %141, %188 ], [ %141, %202 ]
  %207 = phi i32 [ 0, %142 ], [ 0, %77 ], [ %189, %188 ], [ %204, %202 ]
  %208 = sub nsw i32 %207, %206
  %209 = add nsw i32 %36, 1
  %210 = mul nsw i32 %209, %55
  %211 = add nsw i32 %210, 2
  %212 = add nsw i32 %211, %206
  tail call void @llvm.experimental.noalias.scope.decl(metadata !950)
  %213 = getelementptr inbounds %struct.stbtt__buf, ptr %0, i64 0, i32 2
  %214 = or i32 %208, %212
  %215 = icmp sgt i32 %214, -1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false), !alias.scope !950
  br i1 %215, label %216, label %226

216:                                              ; preds = %205
  %217 = load i32, ptr %4, align 4, !tbaa !378, !noalias !950
  %218 = icmp slt i32 %217, %212
  %219 = sub nsw i32 %217, %212
  %220 = icmp slt i32 %219, %208
  %221 = select i1 %218, i1 true, i1 %220
  br i1 %221, label %226, label %222

222:                                              ; preds = %216
  %223 = load ptr, ptr %1, align 8, !tbaa !379, !noalias !950
  %224 = zext i32 %212 to i64
  %225 = getelementptr inbounds i8, ptr %223, i64 %224
  store ptr %225, ptr %0, align 8, !tbaa !379, !alias.scope !950
  store i32 %208, ptr %213, align 4, !tbaa !378, !alias.scope !950
  br label %226

226:                                              ; preds = %205, %216, %222
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef writeonly %3) unnamed_addr #7 {
  %5 = alloca %struct.stbtt__buf, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #39
  tail call void @llvm.experimental.noalias.scope.decl(metadata !953)
  %6 = getelementptr inbounds %struct.stbtt__buf, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !378, !noalias !953
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154), !noalias !953
  %10 = load i32, ptr %6, align 4, !tbaa !378, !noalias !953
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i32 [ %10, %9 ], [ %7, %4 ]
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 0)
  %14 = getelementptr inbounds %struct.stbtt__buf, ptr %0, i64 0, i32 1
  store i32 %13, ptr %14, align 8, !tbaa !377, !noalias !953
  br label %15

15:                                               ; preds = %136, %11
  %16 = phi i32 [ %137, %136 ], [ %12, %11 ]
  %17 = phi i32 [ %138, %136 ], [ %12, %11 ]
  %18 = phi i32 [ %139, %136 ], [ %13, %11 ]
  %19 = icmp slt i32 %18, %17
  br i1 %19, label %20, label %174

20:                                               ; preds = %15, %115
  %21 = phi i32 [ %116, %115 ], [ %16, %15 ]
  %22 = phi i32 [ %116, %115 ], [ %17, %15 ]
  %23 = phi i32 [ %117, %115 ], [ %18, %15 ]
  %24 = load ptr, ptr %0, align 8, !tbaa !379, !noalias !953
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds i8, ptr %24, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !46, !noalias !953
  %28 = icmp ugt i8 %27, 27
  br i1 %28, label %29, label %119

29:                                               ; preds = %20
  %30 = icmp eq i8 %27, 30
  br i1 %30, label %31, label %62

31:                                               ; preds = %29
  %32 = add nsw i32 %23, 1
  %33 = icmp slt i32 %23, -1
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154), !noalias !953
  %35 = load i32, ptr %6, align 4, !tbaa !378, !noalias !953
  br label %36

36:                                               ; preds = %34, %31
  %37 = phi i32 [ %35, %34 ], [ %21, %31 ]
  %38 = phi i32 [ %35, %34 ], [ %22, %31 ]
  %39 = icmp sle i32 %38, %23
  %40 = or i1 %33, %39
  %41 = select i1 %40, i32 %38, i32 %32
  store i32 %41, ptr %14, align 8, !tbaa !377, !noalias !953
  %42 = tail call i32 @llvm.smax.i32(i32 %41, i32 %38)
  %43 = sext i32 %42 to i64
  %44 = icmp slt i32 %41, %38
  br i1 %44, label %45, label %115

45:                                               ; preds = %36
  %46 = sext i32 %41 to i64
  %47 = load ptr, ptr %0, align 8, !tbaa !379, !noalias !953
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi i64 [ %46, %45 ], [ %50, %48 ]
  %50 = add nsw i64 %49, 1
  %51 = trunc i64 %50 to i32
  store i32 %51, ptr %14, align 8, !tbaa !377, !noalias !953
  %52 = getelementptr inbounds i8, ptr %47, i64 %49
  %53 = load i8, ptr %52, align 1, !tbaa !46, !noalias !953
  %54 = zext i8 %53 to i32
  %55 = and i32 %54, 15
  %56 = icmp eq i32 %55, 15
  %57 = and i32 %54, 240
  %58 = icmp eq i32 %57, 240
  %59 = or i1 %56, %58
  %60 = icmp eq i64 %50, %43
  %61 = select i1 %59, i1 true, i1 %60
  br i1 %61, label %113, label %48, !llvm.loop !956

62:                                               ; preds = %29
  %63 = icmp slt i32 %23, %22
  br i1 %63, label %64, label %110

64:                                               ; preds = %62
  %65 = add nsw i32 %23, 1
  store i32 %65, ptr %14, align 8, !tbaa !377, !noalias !953
  %66 = load i8, ptr %26, align 1, !tbaa !46, !noalias !953
  %67 = add i8 %66, -32
  %68 = icmp ult i8 %67, -41
  br i1 %68, label %115, label %69

69:                                               ; preds = %64
  %70 = add nsw i8 %66, 9
  %71 = icmp ult i8 %70, 4
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = icmp slt i32 %65, %22
  br i1 %73, label %74, label %115

74:                                               ; preds = %72
  %75 = add nsw i32 %23, 2
  store i32 %75, ptr %14, align 8, !tbaa !377, !noalias !953
  br label %115

76:                                               ; preds = %69
  %77 = add nsw i8 %66, 5
  %78 = icmp ult i8 %77, 4
  br i1 %78, label %79, label %83

79:                                               ; preds = %76
  %80 = icmp slt i32 %65, %22
  br i1 %80, label %81, label %115

81:                                               ; preds = %79
  %82 = add nsw i32 %23, 2
  store i32 %82, ptr %14, align 8, !tbaa !377, !noalias !953
  br label %115

83:                                               ; preds = %76
  switch i8 %66, label %110 [
    i8 28, label %84
    i8 29, label %93
  ]

84:                                               ; preds = %83
  %85 = icmp slt i32 %65, %22
  %86 = add nsw i32 %23, 2
  %87 = select i1 %85, i32 %86, i32 %65
  %88 = icmp slt i32 %87, %22
  %89 = or i1 %85, %88
  br i1 %89, label %90, label %115

90:                                               ; preds = %84
  %91 = zext i1 %88 to i32
  %92 = add nsw i32 %87, %91
  store i32 %92, ptr %14, align 8, !tbaa !377, !noalias !953
  br label %115

93:                                               ; preds = %83
  %94 = icmp slt i32 %65, %22
  %95 = add nsw i32 %23, 2
  %96 = select i1 %94, i32 %95, i32 %65
  %97 = icmp slt i32 %96, %22
  %98 = zext i1 %97 to i32
  %99 = add nsw i32 %96, %98
  %100 = or i1 %94, %97
  %101 = icmp slt i32 %99, %22
  %102 = zext i1 %101 to i32
  %103 = add nsw i32 %99, %102
  %104 = or i1 %100, %101
  %105 = icmp slt i32 %103, %22
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %115

107:                                              ; preds = %93
  %108 = zext i1 %105 to i32
  %109 = add nsw i32 %103, %108
  store i32 %109, ptr %14, align 8, !tbaa !377, !noalias !953
  br label %115

110:                                              ; preds = %83, %62
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1217), !noalias !953
  %111 = load i32, ptr %14, align 8, !tbaa !377, !noalias !953
  %112 = load i32, ptr %6, align 4, !tbaa !378, !noalias !953
  br label %115

113:                                              ; preds = %48
  %114 = trunc i64 %50 to i32
  br label %115

115:                                              ; preds = %113, %36, %110, %107, %93, %90, %84, %81, %79, %74, %72, %64
  %116 = phi i32 [ %21, %107 ], [ %21, %93 ], [ %21, %90 ], [ %21, %84 ], [ %21, %79 ], [ %21, %81 ], [ %21, %72 ], [ %21, %74 ], [ %21, %64 ], [ %112, %110 ], [ %37, %36 ], [ %37, %113 ]
  %117 = phi i32 [ %109, %107 ], [ %65, %93 ], [ %92, %90 ], [ %65, %84 ], [ %65, %79 ], [ %82, %81 ], [ %65, %72 ], [ %75, %74 ], [ %65, %64 ], [ %111, %110 ], [ %41, %36 ], [ %114, %113 ]
  %118 = icmp slt i32 %117, %116
  br i1 %118, label %20, label %136, !llvm.loop !957

119:                                              ; preds = %20
  %120 = add nsw i32 %23, 1
  store i32 %120, ptr %14, align 8, !tbaa !377, !noalias !953
  %121 = load i8, ptr %26, align 1, !tbaa !46, !noalias !953
  %122 = zext i8 %121 to i32
  %123 = icmp eq i8 %121, 12
  br i1 %123, label %124, label %136

124:                                              ; preds = %119
  %125 = icmp slt i32 %120, %22
  br i1 %125, label %126, label %131

126:                                              ; preds = %124
  %127 = add nsw i32 %23, 2
  store i32 %127, ptr %14, align 8, !tbaa !377, !noalias !953
  %128 = sext i32 %120 to i64
  %129 = getelementptr inbounds i8, ptr %24, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !46, !noalias !953
  br label %131

131:                                              ; preds = %126, %124
  %132 = phi i32 [ %127, %126 ], [ %120, %124 ]
  %133 = phi i8 [ %130, %126 ], [ 0, %124 ]
  %134 = zext i8 %133 to i32
  %135 = or i32 %134, 256
  br label %136

136:                                              ; preds = %115, %131, %119
  %137 = phi i32 [ %21, %131 ], [ %21, %119 ], [ %116, %115 ]
  %138 = phi i32 [ %22, %131 ], [ %22, %119 ], [ %116, %115 ]
  %139 = phi i32 [ %132, %131 ], [ %120, %119 ], [ %117, %115 ]
  %140 = phi i32 [ %23, %131 ], [ %23, %119 ], [ %117, %115 ]
  %141 = phi i32 [ %135, %131 ], [ %122, %119 ], [ 0, %115 ]
  %142 = icmp eq i32 %141, %1
  br i1 %142, label %143, label %15

143:                                              ; preds = %136
  %144 = sub nsw i32 %140, %18
  tail call void @llvm.experimental.noalias.scope.decl(metadata !958)
  %145 = getelementptr inbounds %struct.stbtt__buf, ptr %5, i64 0, i32 2
  %146 = or i32 %144, %18
  %147 = icmp sgt i32 %146, -1
  %148 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 0, ptr %148, align 8
  br i1 %147, label %149, label %174

149:                                              ; preds = %143
  %150 = icmp slt i32 %138, %18
  %151 = icmp slt i32 %138, %140
  %152 = select i1 %150, i1 true, i1 %151
  br i1 %152, label %174, label %153

153:                                              ; preds = %149
  %154 = load ptr, ptr %0, align 8, !tbaa !379, !noalias !961
  %155 = zext i32 %18 to i64
  %156 = getelementptr inbounds i8, ptr %154, i64 %155
  store ptr %156, ptr %5, align 8, !tbaa !379, !alias.scope !961
  store i32 %144, ptr %145, align 4, !tbaa !378, !alias.scope !961
  %157 = icmp sgt i32 %144, 0
  %158 = getelementptr inbounds %struct.stbtt__buf, ptr %5, i64 0, i32 1
  %159 = getelementptr inbounds %struct.stbtt__buf, ptr %5, i64 0, i32 2
  %160 = icmp sgt i32 %2, 0
  %161 = select i1 %160, i1 %157, i1 false
  br i1 %161, label %162, label %174

162:                                              ; preds = %153
  %163 = zext i32 %2 to i64
  br label %164

164:                                              ; preds = %162, %164
  %165 = phi i64 [ 0, %162 ], [ %168, %164 ]
  %166 = call fastcc noundef i32 @"?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z"(ptr noundef nonnull %5)
  %167 = getelementptr inbounds i32, ptr %3, i64 %165
  store i32 %166, ptr %167, align 4, !tbaa !105
  %168 = add nuw nsw i64 %165, 1
  %169 = icmp ult i64 %168, %163
  %170 = load i32, ptr %158, align 8
  %171 = load i32, ptr %159, align 4
  %172 = icmp slt i32 %170, %171
  %173 = select i1 %169, i1 %172, i1 false
  br i1 %173, label %164, label %174, !llvm.loop !962

174:                                              ; preds = %15, %164, %149, %143, %153
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @"?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z"(ptr noalias nocapture writeonly align 8 %0, ptr nocapture noundef %1, ptr nocapture noundef %2) unnamed_addr #7 {
  %4 = alloca i32, align 4
  %5 = alloca [2 x i32], align 8
  %6 = alloca %struct.stbtt__buf, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #39
  store i32 0, ptr %4, align 4, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #39
  store i64 0, ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #39
  call fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr noundef %2, i32 noundef 18, i32 noundef 2, ptr noundef nonnull %5)
  %7 = getelementptr inbounds [2 x i32], ptr %5, i64 0, i64 1
  %8 = load i32, ptr %7, align 4, !tbaa !105
  %9 = icmp ne i32 %8, 0
  %10 = load i32, ptr %5, align 8
  %11 = icmp ne i32 %10, 0
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  br label %51

14:                                               ; preds = %3
  %15 = or i32 %10, %8
  %16 = icmp sgt i32 %15, -1
  br i1 %16, label %17, label %28

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !378, !noalias !963
  %20 = icmp slt i32 %19, %8
  %21 = sub nsw i32 %19, %8
  %22 = icmp slt i32 %21, %10
  %23 = select i1 %20, i1 true, i1 %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = load ptr, ptr %1, align 8, !tbaa !379, !noalias !963
  %26 = zext i32 %8 to i64
  %27 = getelementptr inbounds i8, ptr %25, i64 %26
  br label %28

28:                                               ; preds = %14, %17, %24
  %29 = phi ptr [ null, %17 ], [ %27, %24 ], [ null, %14 ]
  %30 = phi i32 [ 0, %17 ], [ %10, %24 ], [ 0, %14 ]
  store ptr %29, ptr %6, align 8, !tbaa.struct !374
  %31 = getelementptr inbounds i8, ptr %6, i64 8
  store i32 0, ptr %31, align 8, !tbaa.struct !375
  %32 = getelementptr inbounds i8, ptr %6, i64 12
  store i32 %30, ptr %32, align 4, !tbaa.struct !376
  call fastcc void @"?stbtt__dict_get_ints@@YAXPEAUstbtt__buf@@HHPEAI@Z"(ptr noundef nonnull %6, i32 noundef 19, i32 noundef 1, ptr noundef nonnull %4)
  %33 = load i32, ptr %4, align 4, !tbaa !105
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %28
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  br label %51

36:                                               ; preds = %28
  %37 = add i32 %33, %8
  %38 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !378
  %40 = icmp slt i32 %39, %37
  %41 = icmp slt i32 %37, 0
  %42 = or i1 %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  %44 = load i32, ptr %38, align 4, !tbaa !378
  br label %45

45:                                               ; preds = %36, %43
  %46 = phi i32 [ %44, %43 ], [ %39, %36 ]
  %47 = icmp slt i32 %46, %37
  %48 = or i1 %41, %47
  %49 = select i1 %48, i32 %46, i32 %37
  %50 = getelementptr inbounds %struct.stbtt__buf, ptr %1, i64 0, i32 1
  store i32 %49, ptr %50, align 8, !tbaa !377
  tail call fastcc void @"?stbtt__cff_get_index@@YA?AUstbtt__buf@@PEAU1@@Z"(ptr noalias align 8 %0, ptr noundef nonnull %1)
  br label %51

51:                                               ; preds = %45, %35, %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @"?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z"(ptr nocapture noundef %0) unnamed_addr #7 {
  %2 = getelementptr inbounds %struct.stbtt__buf, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !377
  %4 = getelementptr inbounds %struct.stbtt__buf, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !378
  %6 = icmp slt i32 %3, %5
  br i1 %6, label %7, label %119

7:                                                ; preds = %1
  %8 = load ptr, ptr %0, align 8, !tbaa !379
  %9 = add nsw i32 %3, 1
  store i32 %9, ptr %2, align 8, !tbaa !377
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds i8, ptr %8, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !46
  %13 = zext i8 %12 to i32
  %14 = add i8 %12, -32
  %15 = icmp ult i8 %14, -41
  br i1 %15, label %16, label %18

16:                                               ; preds = %7
  %17 = add nsw i32 %13, -139
  br label %120

18:                                               ; preds = %7
  %19 = add nsw i8 %12, 9
  %20 = icmp ult i8 %19, 4
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = shl nuw nsw i32 %13, 8
  %23 = icmp slt i32 %9, %5
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = add nsw i32 %3, 2
  store i32 %25, ptr %2, align 8, !tbaa !377
  %26 = sext i32 %9 to i64
  %27 = getelementptr inbounds i8, ptr %8, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !46
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %21, %24
  %31 = phi i32 [ %29, %24 ], [ 0, %21 ]
  %32 = add nsw i32 %22, -63124
  %33 = add nsw i32 %32, %31
  br label %120

34:                                               ; preds = %18
  %35 = add nsw i8 %12, 5
  %36 = icmp ult i8 %35, 4
  br i1 %36, label %37, label %50

37:                                               ; preds = %34
  %38 = icmp slt i32 %9, %5
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = add nsw i32 %3, 2
  store i32 %40, ptr %2, align 8, !tbaa !377
  %41 = sext i32 %9 to i64
  %42 = getelementptr inbounds i8, ptr %8, i64 %41
  %43 = load i8, ptr %42, align 1, !tbaa !46
  %44 = zext i8 %43 to i32
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i32 [ %44, %39 ], [ 0, %37 ]
  %47 = shl nuw nsw i32 %13, 8
  %48 = or i32 %47, %46
  %49 = sub nsw i32 64148, %48
  br label %120

50:                                               ; preds = %34
  switch i8 %12, label %119 [
    i8 28, label %51
    i8 29, label %73
  ]

51:                                               ; preds = %50
  %52 = icmp slt i32 %9, %5
  br i1 %52, label %53, label %60

53:                                               ; preds = %51
  %54 = add nsw i32 %3, 2
  store i32 %54, ptr %2, align 8, !tbaa !377
  %55 = sext i32 %9 to i64
  %56 = getelementptr inbounds i8, ptr %8, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !46
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 8
  br label %60

60:                                               ; preds = %53, %51
  %61 = phi i32 [ %54, %53 ], [ %9, %51 ]
  %62 = phi i32 [ %59, %53 ], [ 0, %51 ]
  %63 = icmp slt i32 %61, %5
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = add nsw i32 %61, 1
  store i32 %65, ptr %2, align 8, !tbaa !377
  %66 = sext i32 %61 to i64
  %67 = getelementptr inbounds i8, ptr %8, i64 %66
  %68 = load i8, ptr %67, align 1, !tbaa !46
  %69 = zext i8 %68 to i32
  br label %70

70:                                               ; preds = %64, %60
  %71 = phi i32 [ %69, %64 ], [ 0, %60 ]
  %72 = or i32 %62, %71
  br label %120

73:                                               ; preds = %50
  %74 = icmp slt i32 %9, %5
  br i1 %74, label %75, label %82

75:                                               ; preds = %73
  %76 = add nsw i32 %3, 2
  store i32 %76, ptr %2, align 8, !tbaa !377
  %77 = sext i32 %9 to i64
  %78 = getelementptr inbounds i8, ptr %8, i64 %77
  %79 = load i8, ptr %78, align 1, !tbaa !46
  %80 = zext i8 %79 to i32
  %81 = shl nuw nsw i32 %80, 8
  br label %82

82:                                               ; preds = %75, %73
  %83 = phi i32 [ %76, %75 ], [ %9, %73 ]
  %84 = phi i32 [ %81, %75 ], [ 0, %73 ]
  %85 = icmp slt i32 %83, %5
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = add nsw i32 %83, 1
  store i32 %87, ptr %2, align 8, !tbaa !377
  %88 = sext i32 %83 to i64
  %89 = getelementptr inbounds i8, ptr %8, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !46
  %91 = zext i8 %90 to i32
  br label %92

92:                                               ; preds = %86, %82
  %93 = phi i32 [ %87, %86 ], [ %83, %82 ]
  %94 = phi i32 [ %91, %86 ], [ 0, %82 ]
  %95 = or i32 %84, %94
  %96 = icmp slt i32 %93, %5
  br i1 %96, label %97, label %104

97:                                               ; preds = %92
  %98 = add nsw i32 %93, 1
  store i32 %98, ptr %2, align 8, !tbaa !377
  %99 = sext i32 %93 to i64
  %100 = getelementptr inbounds i8, ptr %8, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !46
  %102 = zext i8 %101 to i32
  %103 = shl nuw nsw i32 %102, 8
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i32 [ %98, %97 ], [ %93, %92 ]
  %106 = phi i32 [ %103, %97 ], [ 0, %92 ]
  %107 = shl nuw i32 %95, 16
  %108 = or i32 %107, %106
  %109 = icmp slt i32 %105, %5
  br i1 %109, label %110, label %116

110:                                              ; preds = %104
  %111 = add nsw i32 %105, 1
  store i32 %111, ptr %2, align 8, !tbaa !377
  %112 = sext i32 %105 to i64
  %113 = getelementptr inbounds i8, ptr %8, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !46
  %115 = zext i8 %114 to i32
  br label %116

116:                                              ; preds = %110, %104
  %117 = phi i32 [ %115, %110 ], [ 0, %104 ]
  %118 = or i32 %108, %117
  br label %120

119:                                              ; preds = %1, %50
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1217)
  br label %120

120:                                              ; preds = %116, %70, %119, %45, %30, %16
  %121 = phi i32 [ %17, %16 ], [ %33, %30 ], [ %49, %45 ], [ 0, %119 ], [ %72, %70 ], [ %118, %116 ]
  ret i32 %121
}

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @"?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z"(ptr nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 14, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !429
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CA@MDABGEPC@?$AA?$CB?$AAi?$AAn?$AAf?$AAo?$AA?9?$AA?$DO?$AAc?$AAf?$AAf?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1612)
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 3
  %9 = load i32, ptr %8, align 4, !tbaa !380
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %11, label %91

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 13
  %13 = load i32, ptr %12, align 4, !tbaa !384
  %14 = icmp sgt i32 %13, 1
  br i1 %14, label %91, label %15

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  %17 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 6
  %18 = load i32, ptr %17, align 8, !tbaa !369
  %19 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !364
  %21 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 4
  %22 = load i32, ptr %21, align 8, !tbaa !367
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, ptr %20, i64 %23
  br i1 %16, label %25, label %46

25:                                               ; preds = %15
  %26 = shl nsw i32 %1, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %24, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !46
  %30 = getelementptr i8, ptr %28, i64 1
  %31 = load i8, ptr %30, align 1, !tbaa !46
  %32 = zext i8 %29 to i32
  %33 = zext i8 %31 to i32
  %34 = shl nuw nsw i32 %32, 9
  %35 = shl nuw nsw i32 %33, 1
  %36 = or i32 %35, %34
  %37 = getelementptr inbounds i8, ptr %28, i64 2
  %38 = load i8, ptr %37, align 1, !tbaa !46
  %39 = getelementptr i8, ptr %37, i64 1
  %40 = load i8, ptr %39, align 1, !tbaa !46
  %41 = zext i8 %38 to i32
  %42 = zext i8 %40 to i32
  %43 = shl nuw nsw i32 %41, 9
  %44 = shl nuw nsw i32 %42, 1
  %45 = or i32 %44, %43
  br label %85

46:                                               ; preds = %15
  %47 = shl nsw i32 %1, 2
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %24, i64 %48
  %50 = load i8, ptr %49, align 1, !tbaa !46
  %51 = zext i8 %50 to i32
  %52 = shl nuw i32 %51, 24
  %53 = getelementptr inbounds i8, ptr %49, i64 1
  %54 = load i8, ptr %53, align 1, !tbaa !46
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 16
  %57 = or i32 %56, %52
  %58 = getelementptr inbounds i8, ptr %49, i64 2
  %59 = load i8, ptr %58, align 1, !tbaa !46
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 8
  %62 = or i32 %57, %61
  %63 = getelementptr inbounds i8, ptr %49, i64 3
  %64 = load i8, ptr %63, align 1, !tbaa !46
  %65 = zext i8 %64 to i32
  %66 = or i32 %62, %65
  %67 = getelementptr inbounds i8, ptr %49, i64 4
  %68 = load i8, ptr %67, align 1, !tbaa !46
  %69 = zext i8 %68 to i32
  %70 = shl nuw i32 %69, 24
  %71 = getelementptr inbounds i8, ptr %67, i64 1
  %72 = load i8, ptr %71, align 1, !tbaa !46
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 16
  %75 = or i32 %74, %70
  %76 = getelementptr inbounds i8, ptr %67, i64 2
  %77 = load i8, ptr %76, align 1, !tbaa !46
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = or i32 %75, %79
  %81 = getelementptr inbounds i8, ptr %67, i64 3
  %82 = load i8, ptr %81, align 1, !tbaa !46
  %83 = zext i8 %82 to i32
  %84 = or i32 %80, %83
  br label %85

85:                                               ; preds = %46, %25
  %86 = phi i32 [ %84, %46 ], [ %45, %25 ]
  %87 = phi i32 [ %66, %46 ], [ %36, %25 ]
  %88 = add i32 %87, %18
  %89 = icmp eq i32 %87, %86
  %90 = select i1 %89, i32 -1, i32 %88
  br label %91

91:                                               ; preds = %11, %7, %85
  %92 = phi i32 [ %90, %85 ], [ -1, %7 ], [ -1, %11 ]
  ret i32 %92
}

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @"?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2) unnamed_addr #7 {
  %4 = alloca %struct.stbtt__buf, align 8
  %5 = alloca %struct.stbtt__buf, align 8
  %6 = alloca %struct.stbtt__buf, align 8
  %7 = alloca %struct.stbtt__buf, align 8
  %8 = alloca [48 x float], align 16
  %9 = alloca [10 x %struct.stbtt__buf], align 16
  %10 = alloca %struct.stbtt__buf, align 8
  %11 = alloca %struct.stbtt__buf, align 8
  %12 = alloca %struct.stbtt__buf, align 8
  %13 = alloca %struct.stbtt__buf, align 8
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %8) #39
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %9) #39
  %14 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 17
  %15 = load ptr, ptr %14, align 8, !tbaa.struct !374
  %16 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 17, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa.struct !376
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #39
  %18 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 15
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false), !tbaa.struct !374
  call fastcc void @"?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z"(ptr noalias nonnull align 8 %10, ptr noundef nonnull %11, i32 noundef %1)
  %19 = getelementptr inbounds %struct.stbtt__buf, ptr %10, i64 0, i32 1
  %20 = getelementptr inbounds %struct.stbtt__buf, ptr %10, i64 0, i32 2
  %21 = load i32, ptr %19, align 8, !tbaa !377
  %22 = load i32, ptr %20, align 4, !tbaa !378
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %1027

24:                                               ; preds = %3
  %25 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 1
  %26 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 2
  %27 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 3
  %28 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 4
  %29 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 5
  %30 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 6
  %31 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 7
  %32 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 8
  %33 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 9
  %34 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 10
  %35 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 11
  %36 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 19, i32 2
  %37 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 19
  %38 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 18
  %39 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 14
  %40 = getelementptr inbounds i8, ptr %12, i64 12
  %41 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 16
  %42 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 16, i32 2
  %43 = getelementptr inbounds i8, ptr %4, i64 8
  %44 = getelementptr inbounds i8, ptr %4, i64 12
  %45 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 4
  %46 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 5
  %47 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 7
  %48 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 1
  %49 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 9
  %50 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 6
  %51 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 8
  %52 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 11
  %53 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 10
  br label %54

54:                                               ; preds = %24, %1016
  %55 = phi i32 [ %22, %24 ], [ %1025, %1016 ]
  %56 = phi i32 [ %21, %24 ], [ %1024, %1016 ]
  %57 = phi i32 [ 1, %24 ], [ %1017, %1016 ]
  %58 = phi i32 [ 0, %24 ], [ %1018, %1016 ]
  %59 = phi i32 [ 0, %24 ], [ %1019, %1016 ]
  %60 = phi i32 [ 0, %24 ], [ %1020, %1016 ]
  %61 = phi i32 [ 0, %24 ], [ %1023, %1016 ]
  %62 = phi ptr [ %15, %24 ], [ %1021, %1016 ]
  %63 = phi i32 [ %17, %24 ], [ %1022, %1016 ]
  %64 = load ptr, ptr %10, align 8, !tbaa !379
  %65 = add nsw i32 %56, 1
  store i32 %65, ptr %19, align 8, !tbaa !377
  %66 = sext i32 %56 to i64
  %67 = getelementptr inbounds i8, ptr %64, i64 %66
  %68 = load i8, ptr %67, align 1, !tbaa !46
  switch i8 %68, label %944 [
    i8 19, label %69
    i8 20, label %69
    i8 1, label %85
    i8 3, label %85
    i8 18, label %85
    i8 23, label %85
    i8 21, label %88
    i8 4, label %99
    i8 22, label %106
    i8 5, label %113
    i8 7, label %172
    i8 6, label %174
    i8 31, label %296
    i8 30, label %298
    i8 8, label %356
    i8 24, label %383
    i8 25, label %467
    i8 26, label %553
    i8 27, label %553
    i8 10, label %622
    i8 29, label %740
    i8 11, label %800
    i8 14, label %806
    i8 12, label %863
  ]

69:                                               ; preds = %54, %54
  %70 = icmp eq i32 %57, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %69
  %72 = sdiv i32 %61, 2
  %73 = add nsw i32 %58, %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i32 [ %73, %71 ], [ %58, %69 ]
  %76 = add nsw i32 %75, 7
  %77 = sdiv i32 %76, 8
  %78 = add nsw i32 %77, %65
  %79 = icmp slt i32 %55, %78
  %80 = icmp slt i32 %78, 0
  %81 = or i1 %80, %79
  br i1 %81, label %82, label %83

82:                                               ; preds = %74
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  br label %83

83:                                               ; preds = %74, %82
  %84 = phi i32 [ %78, %74 ], [ %55, %82 ]
  store i32 %84, ptr %19, align 8, !tbaa !377
  br label %1016

85:                                               ; preds = %54, %54, %54, %54
  %86 = sdiv i32 %61, 2
  %87 = add nsw i32 %58, %86
  br label %1016

88:                                               ; preds = %54
  %89 = icmp slt i32 %61, 2
  br i1 %89, label %1027, label %90

90:                                               ; preds = %88
  %91 = add nsw i32 %61, -1
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %92
  %94 = load float, ptr %93, align 4, !tbaa !6
  %95 = add nsw i32 %61, -2
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %96
  %98 = load float, ptr %97, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z"(ptr noundef %2, float noundef %98, float noundef %94)
  br label %1016

99:                                               ; preds = %54
  %100 = icmp slt i32 %61, 1
  br i1 %100, label %1027, label %101

101:                                              ; preds = %99
  %102 = add nsw i32 %61, -1
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %103
  %105 = load float, ptr %104, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z"(ptr noundef %2, float noundef 0.000000e+00, float noundef %105)
  br label %1016

106:                                              ; preds = %54
  %107 = icmp slt i32 %61, 1
  br i1 %107, label %1027, label %108

108:                                              ; preds = %106
  %109 = add nsw i32 %61, -1
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %110
  %112 = load float, ptr %111, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z"(ptr noundef %2, float noundef %112, float noundef 0.000000e+00)
  br label %1016

113:                                              ; preds = %54
  %114 = icmp slt i32 %61, 2
  br i1 %114, label %1027, label %115

115:                                              ; preds = %113
  %116 = zext i32 %61 to i64
  br label %117

117:                                              ; preds = %115, %166
  %118 = phi i64 [ 0, %115 ], [ %169, %166 ]
  %119 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %118
  %120 = load <2 x float>, ptr %119, align 8, !tbaa !6
  %121 = load <2 x float>, ptr %45, align 8, !tbaa !6
  %122 = fadd fast <2 x float> %121, %120
  store <2 x float> %122, ptr %45, align 8, !tbaa !6
  %123 = fptosi <2 x float> %122 to <2 x i32>
  %124 = load i32, ptr %2, align 8, !tbaa !966
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %158, label %126

126:                                              ; preds = %117
  %127 = load i32, ptr %47, align 4, !tbaa !968
  %128 = extractelement <2 x i32> %123, i64 0
  %129 = icmp slt i32 %127, %128
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  %131 = load i32, ptr %48, align 4, !tbaa !969
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130, %126
  store i32 %128, ptr %47, align 4, !tbaa !968
  br label %134

134:                                              ; preds = %133, %130
  %135 = load i32, ptr %49, align 4, !tbaa !970
  %136 = extractelement <2 x i32> %123, i64 1
  %137 = icmp slt i32 %135, %136
  br i1 %137, label %141, label %138

138:                                              ; preds = %134
  %139 = load i32, ptr %48, align 4, !tbaa !969
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138, %134
  store i32 %136, ptr %49, align 4, !tbaa !970
  br label %142

142:                                              ; preds = %141, %138
  %143 = load i32, ptr %50, align 8, !tbaa !971
  %144 = icmp sgt i32 %143, %128
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = load i32, ptr %48, align 4, !tbaa !969
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145, %142
  store i32 %128, ptr %50, align 8, !tbaa !971
  br label %149

149:                                              ; preds = %148, %145
  %150 = load i32, ptr %51, align 8, !tbaa !972
  %151 = icmp sgt i32 %150, %136
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = load i32, ptr %48, align 4, !tbaa !969
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152, %149
  store i32 %136, ptr %51, align 8, !tbaa !972
  br label %156

156:                                              ; preds = %155, %152
  store i32 1, ptr %48, align 4, !tbaa !969
  %157 = load i32, ptr %52, align 8, !tbaa !973
  br label %166

158:                                              ; preds = %117
  %159 = load ptr, ptr %53, align 8, !tbaa !974
  %160 = load i32, ptr %52, align 8, !tbaa !973
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds %struct.stbtt_vertex, ptr %159, i64 %161
  %163 = getelementptr inbounds %struct.stbtt_vertex, ptr %159, i64 %161, i32 6
  store i8 2, ptr %163, align 2, !tbaa !460
  %164 = trunc <2 x i32> %123 to <2 x i16>
  store <2 x i16> %164, ptr %162, align 2, !tbaa !121
  %165 = getelementptr inbounds %struct.stbtt_vertex, ptr %159, i64 %161, i32 2
  store i64 0, ptr %165, align 2
  br label %166

166:                                              ; preds = %156, %158
  %167 = phi i32 [ %157, %156 ], [ %160, %158 ]
  %168 = add nsw i32 %167, 1
  store i32 %168, ptr %52, align 8, !tbaa !973
  %169 = add nuw nsw i64 %118, 2
  %170 = or i64 %169, 1
  %171 = icmp slt i64 %170, %116
  br i1 %171, label %117, label %1016, !llvm.loop !975

172:                                              ; preds = %54
  %173 = icmp slt i32 %61, 1
  br i1 %173, label %1027, label %236

174:                                              ; preds = %54
  %175 = icmp slt i32 %61, 1
  br i1 %175, label %1027, label %176

176:                                              ; preds = %174, %292
  %177 = phi i32 [ %61, %174 ], [ %237, %292 ]
  %178 = phi i32 [ 0, %174 ], [ %295, %292 ]
  %179 = icmp slt i32 %178, %177
  br i1 %179, label %180, label %1016

180:                                              ; preds = %176
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %181
  %183 = load float, ptr %182, align 4, !tbaa !6
  %184 = load float, ptr %45, align 8, !tbaa !976
  %185 = fadd fast float %184, %183
  store float %185, ptr %45, align 8, !tbaa !976
  %186 = load float, ptr %46, align 4, !tbaa !977
  %187 = insertelement <2 x float> poison, float %185, i64 0
  %188 = insertelement <2 x float> %187, float %186, i64 1
  %189 = fptosi <2 x float> %188 to <2 x i32>
  %190 = load i32, ptr %2, align 8, !tbaa !966
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %224, label %192

192:                                              ; preds = %180
  %193 = load i32, ptr %47, align 4, !tbaa !968
  %194 = extractelement <2 x i32> %189, i64 0
  %195 = icmp slt i32 %193, %194
  br i1 %195, label %199, label %196

196:                                              ; preds = %192
  %197 = load i32, ptr %48, align 4, !tbaa !969
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196, %192
  store i32 %194, ptr %47, align 4, !tbaa !968
  br label %200

200:                                              ; preds = %199, %196
  %201 = load i32, ptr %49, align 4, !tbaa !970
  %202 = extractelement <2 x i32> %189, i64 1
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %207, label %204

204:                                              ; preds = %200
  %205 = load i32, ptr %48, align 4, !tbaa !969
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204, %200
  store i32 %202, ptr %49, align 4, !tbaa !970
  br label %208

208:                                              ; preds = %207, %204
  %209 = load i32, ptr %50, align 8, !tbaa !971
  %210 = icmp sgt i32 %209, %194
  br i1 %210, label %214, label %211

211:                                              ; preds = %208
  %212 = load i32, ptr %48, align 4, !tbaa !969
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211, %208
  store i32 %194, ptr %50, align 8, !tbaa !971
  br label %215

215:                                              ; preds = %214, %211
  %216 = load i32, ptr %51, align 8, !tbaa !972
  %217 = icmp sgt i32 %216, %202
  br i1 %217, label %221, label %218

218:                                              ; preds = %215
  %219 = load i32, ptr %48, align 4, !tbaa !969
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218, %215
  store i32 %202, ptr %51, align 8, !tbaa !972
  br label %222

222:                                              ; preds = %221, %218
  store i32 1, ptr %48, align 4, !tbaa !969
  %223 = load i32, ptr %52, align 8, !tbaa !973
  br label %232

224:                                              ; preds = %180
  %225 = load ptr, ptr %53, align 8, !tbaa !974
  %226 = load i32, ptr %52, align 8, !tbaa !973
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %struct.stbtt_vertex, ptr %225, i64 %227
  %229 = getelementptr inbounds %struct.stbtt_vertex, ptr %225, i64 %227, i32 6
  store i8 2, ptr %229, align 2, !tbaa !460
  %230 = trunc <2 x i32> %189 to <2 x i16>
  store <2 x i16> %230, ptr %228, align 2, !tbaa !121
  %231 = getelementptr inbounds %struct.stbtt_vertex, ptr %225, i64 %227, i32 2
  store i64 0, ptr %231, align 2
  br label %232

232:                                              ; preds = %222, %224
  %233 = phi i32 [ %223, %222 ], [ %226, %224 ]
  %234 = add nsw i32 %233, 1
  store i32 %234, ptr %52, align 8, !tbaa !973
  %235 = add nsw i32 %178, 1
  br label %236

236:                                              ; preds = %172, %232
  %237 = phi i32 [ %177, %232 ], [ %61, %172 ]
  %238 = phi i32 [ %235, %232 ], [ 0, %172 ]
  %239 = icmp slt i32 %238, %237
  br i1 %239, label %240, label %1016

240:                                              ; preds = %236
  %241 = sext i32 %238 to i64
  %242 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %241
  %243 = load float, ptr %242, align 4, !tbaa !6
  %244 = load float, ptr %45, align 8, !tbaa !976
  %245 = load float, ptr %46, align 4, !tbaa !977
  %246 = fadd fast float %245, %243
  store float %246, ptr %46, align 4, !tbaa !977
  %247 = insertelement <2 x float> poison, float %244, i64 0
  %248 = insertelement <2 x float> %247, float %246, i64 1
  %249 = fptosi <2 x float> %248 to <2 x i32>
  %250 = load i32, ptr %2, align 8, !tbaa !966
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %284, label %252

252:                                              ; preds = %240
  %253 = load i32, ptr %47, align 4, !tbaa !968
  %254 = extractelement <2 x i32> %249, i64 0
  %255 = icmp slt i32 %253, %254
  br i1 %255, label %259, label %256

256:                                              ; preds = %252
  %257 = load i32, ptr %48, align 4, !tbaa !969
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256, %252
  store i32 %254, ptr %47, align 4, !tbaa !968
  br label %260

260:                                              ; preds = %259, %256
  %261 = load i32, ptr %49, align 4, !tbaa !970
  %262 = extractelement <2 x i32> %249, i64 1
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %267, label %264

264:                                              ; preds = %260
  %265 = load i32, ptr %48, align 4, !tbaa !969
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264, %260
  store i32 %262, ptr %49, align 4, !tbaa !970
  br label %268

268:                                              ; preds = %267, %264
  %269 = load i32, ptr %50, align 8, !tbaa !971
  %270 = icmp sgt i32 %269, %254
  br i1 %270, label %274, label %271

271:                                              ; preds = %268
  %272 = load i32, ptr %48, align 4, !tbaa !969
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271, %268
  store i32 %254, ptr %50, align 8, !tbaa !971
  br label %275

275:                                              ; preds = %274, %271
  %276 = load i32, ptr %51, align 8, !tbaa !972
  %277 = icmp sgt i32 %276, %262
  br i1 %277, label %281, label %278

278:                                              ; preds = %275
  %279 = load i32, ptr %48, align 4, !tbaa !969
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278, %275
  store i32 %262, ptr %51, align 8, !tbaa !972
  br label %282

282:                                              ; preds = %281, %278
  store i32 1, ptr %48, align 4, !tbaa !969
  %283 = load i32, ptr %52, align 8, !tbaa !973
  br label %292

284:                                              ; preds = %240
  %285 = load ptr, ptr %53, align 8, !tbaa !974
  %286 = load i32, ptr %52, align 8, !tbaa !973
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.stbtt_vertex, ptr %285, i64 %287
  %289 = getelementptr inbounds %struct.stbtt_vertex, ptr %285, i64 %287, i32 6
  store i8 2, ptr %289, align 2, !tbaa !460
  %290 = trunc <2 x i32> %249 to <2 x i16>
  store <2 x i16> %290, ptr %288, align 2, !tbaa !121
  %291 = getelementptr inbounds %struct.stbtt_vertex, ptr %285, i64 %287, i32 2
  store i64 0, ptr %291, align 2
  br label %292

292:                                              ; preds = %282, %284
  %293 = phi i32 [ %283, %282 ], [ %286, %284 ]
  %294 = add nsw i32 %293, 1
  store i32 %294, ptr %52, align 8, !tbaa !973
  %295 = add nsw i32 %238, 1
  br label %176, !llvm.loop !978

296:                                              ; preds = %54
  %297 = icmp slt i32 %61, 4
  br i1 %297, label %1027, label %328

298:                                              ; preds = %54
  %299 = icmp slt i32 %61, 4
  br i1 %299, label %1027, label %300

300:                                              ; preds = %298, %343
  %301 = phi i32 [ 0, %298 ], [ %338, %343 ]
  %302 = add nsw i32 %301, 3
  %303 = icmp slt i32 %302, %61
  br i1 %303, label %304, label %1016

304:                                              ; preds = %300
  %305 = sub nsw i32 %61, %301
  %306 = icmp eq i32 %305, 5
  %307 = add nsw i32 %301, 4
  br i1 %306, label %308, label %312

308:                                              ; preds = %304
  %309 = sext i32 %307 to i64
  %310 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %309
  %311 = load float, ptr %310, align 4, !tbaa !6
  br label %312

312:                                              ; preds = %304, %308
  %313 = phi fast float [ %311, %308 ], [ 0.000000e+00, %304 ]
  %314 = sext i32 %302 to i64
  %315 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %314
  %316 = load float, ptr %315, align 4, !tbaa !6
  %317 = add nsw i32 %301, 2
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %318
  %320 = load float, ptr %319, align 4, !tbaa !6
  %321 = add nsw i32 %301, 1
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %322
  %324 = load float, ptr %323, align 4, !tbaa !6
  %325 = sext i32 %301 to i64
  %326 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %325
  %327 = load float, ptr %326, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef 0.000000e+00, float noundef %327, float noundef %324, float noundef %320, float noundef %316, float noundef %313)
  br label %328

328:                                              ; preds = %296, %312
  %329 = phi i32 [ %307, %312 ], [ 0, %296 ]
  %330 = add nsw i32 %329, 3
  %331 = icmp slt i32 %330, %61
  br i1 %331, label %332, label %1016

332:                                              ; preds = %328
  %333 = sext i32 %330 to i64
  %334 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %333
  %335 = load float, ptr %334, align 4, !tbaa !6
  %336 = sub nsw i32 %61, %329
  %337 = icmp eq i32 %336, 5
  %338 = add nsw i32 %329, 4
  br i1 %337, label %339, label %343

339:                                              ; preds = %332
  %340 = sext i32 %338 to i64
  %341 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %340
  %342 = load float, ptr %341, align 4, !tbaa !6
  br label %343

343:                                              ; preds = %332, %339
  %344 = phi fast float [ %342, %339 ], [ 0.000000e+00, %332 ]
  %345 = add nsw i32 %329, 2
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %346
  %348 = load float, ptr %347, align 4, !tbaa !6
  %349 = add nsw i32 %329, 1
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %350
  %352 = load float, ptr %351, align 4, !tbaa !6
  %353 = sext i32 %329 to i64
  %354 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %353
  %355 = load float, ptr %354, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %355, float noundef 0.000000e+00, float noundef %352, float noundef %348, float noundef %344, float noundef %335)
  br label %300, !llvm.loop !979

356:                                              ; preds = %54
  %357 = icmp slt i32 %61, 6
  br i1 %357, label %1027, label %358

358:                                              ; preds = %356
  %359 = zext i32 %61 to i64
  br label %360

360:                                              ; preds = %358, %360
  %361 = phi i64 [ 0, %358 ], [ %379, %360 ]
  %362 = phi i64 [ 5, %358 ], [ %381, %360 ]
  %363 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %362
  %364 = load float, ptr %363, align 4, !tbaa !6
  %365 = add nuw nsw i64 %361, 4
  %366 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %365
  %367 = load float, ptr %366, align 8, !tbaa !6
  %368 = add nuw nsw i64 %361, 3
  %369 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %368
  %370 = load float, ptr %369, align 4, !tbaa !6
  %371 = add nuw nsw i64 %361, 2
  %372 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %371
  %373 = load float, ptr %372, align 8, !tbaa !6
  %374 = or i64 %361, 1
  %375 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %374
  %376 = load float, ptr %375, align 4, !tbaa !6
  %377 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %361
  %378 = load float, ptr %377, align 8, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %378, float noundef %376, float noundef %373, float noundef %370, float noundef %367, float noundef %364)
  %379 = add nuw nsw i64 %361, 6
  %380 = add nuw nsw i64 %361, 11
  %381 = add nuw nsw i64 %362, 6
  %382 = icmp ult i64 %380, %359
  br i1 %382, label %360, label %1016, !llvm.loop !980

383:                                              ; preds = %54
  %384 = icmp slt i32 %61, 8
  br i1 %384, label %1027, label %385

385:                                              ; preds = %383
  %386 = add nsw i32 %61, -2
  %387 = zext i32 %386 to i64
  br label %388

388:                                              ; preds = %385, %388
  %389 = phi i64 [ 0, %385 ], [ %407, %388 ]
  %390 = phi i64 [ 5, %385 ], [ %409, %388 ]
  %391 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %390
  %392 = load float, ptr %391, align 4, !tbaa !6
  %393 = add nuw nsw i64 %389, 4
  %394 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %393
  %395 = load float, ptr %394, align 8, !tbaa !6
  %396 = add nuw nsw i64 %389, 3
  %397 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %396
  %398 = load float, ptr %397, align 4, !tbaa !6
  %399 = add nuw nsw i64 %389, 2
  %400 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %399
  %401 = load float, ptr %400, align 8, !tbaa !6
  %402 = or i64 %389, 1
  %403 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %402
  %404 = load float, ptr %403, align 4, !tbaa !6
  %405 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %389
  %406 = load float, ptr %405, align 8, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %406, float noundef %404, float noundef %401, float noundef %398, float noundef %395, float noundef %392)
  %407 = add nuw nsw i64 %389, 6
  %408 = add nuw nsw i64 %389, 11
  %409 = add nuw nsw i64 %390, 6
  %410 = icmp ult i64 %408, %387
  br i1 %410, label %388, label %411, !llvm.loop !981

411:                                              ; preds = %388
  %412 = trunc i64 %407 to i32
  %413 = or i32 %412, 1
  %414 = icmp slt i32 %413, %61
  br i1 %414, label %415, label %1027

415:                                              ; preds = %411
  %416 = and i64 %407, 4294967295
  %417 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %416
  %418 = load <2 x float>, ptr %417, align 8, !tbaa !6
  %419 = load <2 x float>, ptr %45, align 8, !tbaa !6
  %420 = fadd fast <2 x float> %419, %418
  store <2 x float> %420, ptr %45, align 8, !tbaa !6
  %421 = fptosi <2 x float> %420 to <2 x i32>
  %422 = load i32, ptr %2, align 8, !tbaa !966
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %456, label %424

424:                                              ; preds = %415
  %425 = load i32, ptr %47, align 4, !tbaa !968
  %426 = extractelement <2 x i32> %421, i64 0
  %427 = icmp slt i32 %425, %426
  br i1 %427, label %431, label %428

428:                                              ; preds = %424
  %429 = load i32, ptr %48, align 4, !tbaa !969
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %428, %424
  store i32 %426, ptr %47, align 4, !tbaa !968
  br label %432

432:                                              ; preds = %431, %428
  %433 = load i32, ptr %49, align 4, !tbaa !970
  %434 = extractelement <2 x i32> %421, i64 1
  %435 = icmp slt i32 %433, %434
  br i1 %435, label %439, label %436

436:                                              ; preds = %432
  %437 = load i32, ptr %48, align 4, !tbaa !969
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %440

439:                                              ; preds = %436, %432
  store i32 %434, ptr %49, align 4, !tbaa !970
  br label %440

440:                                              ; preds = %439, %436
  %441 = load i32, ptr %50, align 8, !tbaa !971
  %442 = icmp sgt i32 %441, %426
  br i1 %442, label %446, label %443

443:                                              ; preds = %440
  %444 = load i32, ptr %48, align 4, !tbaa !969
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %443, %440
  store i32 %426, ptr %50, align 8, !tbaa !971
  br label %447

447:                                              ; preds = %446, %443
  %448 = load i32, ptr %51, align 8, !tbaa !972
  %449 = icmp sgt i32 %448, %434
  br i1 %449, label %453, label %450

450:                                              ; preds = %447
  %451 = load i32, ptr %48, align 4, !tbaa !969
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %454

453:                                              ; preds = %450, %447
  store i32 %434, ptr %51, align 8, !tbaa !972
  br label %454

454:                                              ; preds = %453, %450
  store i32 1, ptr %48, align 4, !tbaa !969
  %455 = load i32, ptr %52, align 8, !tbaa !973
  br label %464

456:                                              ; preds = %415
  %457 = load ptr, ptr %53, align 8, !tbaa !974
  %458 = load i32, ptr %52, align 8, !tbaa !973
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds %struct.stbtt_vertex, ptr %457, i64 %459
  %461 = getelementptr inbounds %struct.stbtt_vertex, ptr %457, i64 %459, i32 6
  store i8 2, ptr %461, align 2, !tbaa !460
  %462 = trunc <2 x i32> %421 to <2 x i16>
  store <2 x i16> %462, ptr %460, align 2, !tbaa !121
  %463 = getelementptr inbounds %struct.stbtt_vertex, ptr %457, i64 %459, i32 2
  store i64 0, ptr %463, align 2
  br label %464

464:                                              ; preds = %454, %456
  %465 = phi i32 [ %455, %454 ], [ %458, %456 ]
  %466 = add nsw i32 %465, 1
  store i32 %466, ptr %52, align 8, !tbaa !973
  br label %1016

467:                                              ; preds = %54
  %468 = icmp slt i32 %61, 8
  br i1 %468, label %1027, label %469

469:                                              ; preds = %467
  %470 = add nsw i32 %61, -6
  %471 = zext i32 %470 to i64
  br label %472

472:                                              ; preds = %469, %521
  %473 = phi i64 [ 0, %469 ], [ %524, %521 ]
  %474 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %473
  %475 = load <2 x float>, ptr %474, align 8, !tbaa !6
  %476 = load <2 x float>, ptr %45, align 8, !tbaa !6
  %477 = fadd fast <2 x float> %476, %475
  store <2 x float> %477, ptr %45, align 8, !tbaa !6
  %478 = fptosi <2 x float> %477 to <2 x i32>
  %479 = load i32, ptr %2, align 8, !tbaa !966
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %513, label %481

481:                                              ; preds = %472
  %482 = load i32, ptr %47, align 4, !tbaa !968
  %483 = extractelement <2 x i32> %478, i64 0
  %484 = icmp slt i32 %482, %483
  br i1 %484, label %488, label %485

485:                                              ; preds = %481
  %486 = load i32, ptr %48, align 4, !tbaa !969
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %485, %481
  store i32 %483, ptr %47, align 4, !tbaa !968
  br label %489

489:                                              ; preds = %488, %485
  %490 = load i32, ptr %49, align 4, !tbaa !970
  %491 = extractelement <2 x i32> %478, i64 1
  %492 = icmp slt i32 %490, %491
  br i1 %492, label %496, label %493

493:                                              ; preds = %489
  %494 = load i32, ptr %48, align 4, !tbaa !969
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %497

496:                                              ; preds = %493, %489
  store i32 %491, ptr %49, align 4, !tbaa !970
  br label %497

497:                                              ; preds = %496, %493
  %498 = load i32, ptr %50, align 8, !tbaa !971
  %499 = icmp sgt i32 %498, %483
  br i1 %499, label %503, label %500

500:                                              ; preds = %497
  %501 = load i32, ptr %48, align 4, !tbaa !969
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %500, %497
  store i32 %483, ptr %50, align 8, !tbaa !971
  br label %504

504:                                              ; preds = %503, %500
  %505 = load i32, ptr %51, align 8, !tbaa !972
  %506 = icmp sgt i32 %505, %491
  br i1 %506, label %510, label %507

507:                                              ; preds = %504
  %508 = load i32, ptr %48, align 4, !tbaa !969
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507, %504
  store i32 %491, ptr %51, align 8, !tbaa !972
  br label %511

511:                                              ; preds = %510, %507
  store i32 1, ptr %48, align 4, !tbaa !969
  %512 = load i32, ptr %52, align 8, !tbaa !973
  br label %521

513:                                              ; preds = %472
  %514 = load ptr, ptr %53, align 8, !tbaa !974
  %515 = load i32, ptr %52, align 8, !tbaa !973
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds %struct.stbtt_vertex, ptr %514, i64 %516
  %518 = getelementptr inbounds %struct.stbtt_vertex, ptr %514, i64 %516, i32 6
  store i8 2, ptr %518, align 2, !tbaa !460
  %519 = trunc <2 x i32> %478 to <2 x i16>
  store <2 x i16> %519, ptr %517, align 2, !tbaa !121
  %520 = getelementptr inbounds %struct.stbtt_vertex, ptr %514, i64 %516, i32 2
  store i64 0, ptr %520, align 2
  br label %521

521:                                              ; preds = %511, %513
  %522 = phi i32 [ %512, %511 ], [ %515, %513 ]
  %523 = add nsw i32 %522, 1
  store i32 %523, ptr %52, align 8, !tbaa !973
  %524 = add nuw nsw i64 %473, 2
  %525 = or i64 %524, 1
  %526 = icmp slt i64 %525, %471
  br i1 %526, label %472, label %527, !llvm.loop !982

527:                                              ; preds = %521
  %528 = trunc i64 %524 to i32
  %529 = add nuw nsw i32 %528, 5
  %530 = icmp slt i32 %529, %61
  br i1 %530, label %531, label %1027

531:                                              ; preds = %527
  %532 = zext i32 %529 to i64
  %533 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %532
  %534 = load float, ptr %533, align 4, !tbaa !6
  %535 = add nuw i64 %473, 6
  %536 = and i64 %535, 4294967294
  %537 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %536
  %538 = load float, ptr %537, align 8, !tbaa !6
  %539 = add nuw i64 %473, 5
  %540 = and i64 %539, 4294967295
  %541 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %540
  %542 = load float, ptr %541, align 4, !tbaa !6
  %543 = add nuw i64 %473, 4
  %544 = and i64 %543, 4294967294
  %545 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %544
  %546 = load float, ptr %545, align 8, !tbaa !6
  %547 = and i64 %525, 4294967295
  %548 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %547
  %549 = load float, ptr %548, align 4, !tbaa !6
  %550 = and i64 %524, 4294967295
  %551 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %550
  %552 = load float, ptr %551, align 8, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef nonnull %2, float noundef %552, float noundef %549, float noundef %546, float noundef %542, float noundef %538, float noundef %534)
  br label %1016

553:                                              ; preds = %54, %54
  %554 = icmp slt i32 %61, 4
  br i1 %554, label %1027, label %555

555:                                              ; preds = %553
  %556 = and i32 %61, 1
  %557 = add nuw nsw i32 %556, 3
  %558 = icmp ult i32 %557, %61
  br i1 %558, label %559, label %1016

559:                                              ; preds = %555
  %560 = icmp eq i32 %556, 0
  %561 = load float, ptr %8, align 16
  %562 = select i1 %560, float 0.000000e+00, float %561
  %563 = icmp eq i8 %68, 27
  %564 = and i32 %61, 1
  %565 = zext i32 %564 to i64
  %566 = add nuw nsw i64 %565, 3
  %567 = zext i32 %61 to i64
  %568 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %566
  %569 = load float, ptr %568, align 4, !tbaa !6
  %570 = or i64 %565, 2
  %571 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %570
  %572 = load float, ptr %571, align 4, !tbaa !6
  %573 = add nuw nsw i64 %565, 1
  %574 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %573
  %575 = load float, ptr %574, align 4, !tbaa !6
  %576 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %565
  %577 = load float, ptr %576, align 4, !tbaa !6
  %578 = add nuw nsw i64 %565, 7
  %579 = icmp ult i64 %578, %567
  br i1 %563, label %584, label %580

580:                                              ; preds = %559
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %562, float noundef %577, float noundef %575, float noundef %572, float noundef 0.000000e+00, float noundef %569)
  br i1 %579, label %581, label %1016

581:                                              ; preds = %580
  %582 = add nuw nsw i64 %565, 7
  %583 = or i64 %565, 4
  br label %605

584:                                              ; preds = %559
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %577, float noundef %562, float noundef %575, float noundef %572, float noundef %569, float noundef 0.000000e+00)
  br i1 %579, label %585, label %1016

585:                                              ; preds = %584
  %586 = add nuw nsw i64 %565, 7
  %587 = or i64 %565, 4
  br label %588

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %587, %585 ], [ %601, %588 ]
  %590 = phi i64 [ %586, %585 ], [ %603, %588 ]
  %591 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %590
  %592 = load float, ptr %591, align 4, !tbaa !6
  %593 = add nuw nsw i64 %589, 2
  %594 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %593
  %595 = load float, ptr %594, align 4, !tbaa !6
  %596 = add nuw nsw i64 %589, 1
  %597 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %596
  %598 = load float, ptr %597, align 4, !tbaa !6
  %599 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %589
  %600 = load float, ptr %599, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %600, float noundef 0.000000e+00, float noundef %598, float noundef %595, float noundef %592, float noundef 0.000000e+00)
  %601 = add nuw nsw i64 %589, 4
  %602 = add nuw nsw i64 %589, 7
  %603 = add nuw nsw i64 %590, 4
  %604 = icmp ult i64 %602, %567
  br i1 %604, label %588, label %1016, !llvm.loop !983

605:                                              ; preds = %581, %605
  %606 = phi i64 [ %583, %581 ], [ %618, %605 ]
  %607 = phi i64 [ %582, %581 ], [ %620, %605 ]
  %608 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %607
  %609 = load float, ptr %608, align 4, !tbaa !6
  %610 = add nuw nsw i64 %606, 2
  %611 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %610
  %612 = load float, ptr %611, align 4, !tbaa !6
  %613 = add nuw nsw i64 %606, 1
  %614 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %613
  %615 = load float, ptr %614, align 4, !tbaa !6
  %616 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %606
  %617 = load float, ptr %616, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef 0.000000e+00, float noundef %617, float noundef %615, float noundef %612, float noundef 0.000000e+00, float noundef %609)
  %618 = add nuw nsw i64 %606, 4
  %619 = add nuw nsw i64 %606, 7
  %620 = add nuw nsw i64 %607, 4
  %621 = icmp ult i64 %619, %567
  br i1 %621, label %605, label %1016, !llvm.loop !984

622:                                              ; preds = %54
  %623 = icmp eq i32 %59, 0
  br i1 %623, label %624, label %740

624:                                              ; preds = %622
  %625 = load i32, ptr %36, align 4, !tbaa !985
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %740, label %627

627:                                              ; preds = %624
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #39
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  %628 = load ptr, ptr %37, align 8, !tbaa.struct !374, !noalias !986
  %629 = icmp slt i32 %625, 0
  br i1 %629, label %630, label %631

630:                                              ; preds = %627
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154), !noalias !986
  br label %635

631:                                              ; preds = %627
  %632 = load i8, ptr %628, align 1, !tbaa !46, !noalias !986
  switch i8 %632, label %737 [
    i8 0, label %635
    i8 3, label %633
  ]

633:                                              ; preds = %631
  %634 = icmp ugt i32 %625, 1
  br i1 %634, label %648, label %653

635:                                              ; preds = %631, %630
  %636 = phi i32 [ 1, %631 ], [ %625, %630 ]
  %637 = add nsw i32 %636, %1
  %638 = icmp slt i32 %625, %637
  %639 = icmp slt i32 %637, 0
  %640 = or i1 %639, %638
  br i1 %640, label %641, label %642

641:                                              ; preds = %635
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154), !noalias !986
  br label %732

642:                                              ; preds = %635
  %643 = icmp slt i32 %637, %625
  br i1 %643, label %644, label %732

644:                                              ; preds = %642
  %645 = zext i32 %637 to i64
  %646 = getelementptr inbounds i8, ptr %628, i64 %645
  %647 = load i8, ptr %646, align 1, !tbaa !46, !noalias !986
  br label %732

648:                                              ; preds = %633
  %649 = getelementptr inbounds i8, ptr %628, i64 1
  %650 = load i8, ptr %649, align 1, !tbaa !46, !noalias !986
  %651 = zext i8 %650 to i32
  %652 = shl nuw nsw i32 %651, 8
  br label %653

653:                                              ; preds = %648, %633
  %654 = phi i32 [ 2, %648 ], [ 1, %633 ]
  %655 = phi i32 [ %652, %648 ], [ 0, %633 ]
  %656 = icmp ult i32 %654, %625
  br i1 %656, label %657, label %663

657:                                              ; preds = %653
  %658 = add nuw nsw i32 %654, 1
  %659 = zext i32 %654 to i64
  %660 = getelementptr inbounds i8, ptr %628, i64 %659
  %661 = load i8, ptr %660, align 1, !tbaa !46, !noalias !986
  %662 = zext i8 %661 to i32
  br label %663

663:                                              ; preds = %657, %653
  %664 = phi i32 [ %658, %657 ], [ %654, %653 ]
  %665 = phi i32 [ %662, %657 ], [ 0, %653 ]
  %666 = icmp ult i32 %664, %625
  br i1 %666, label %667, label %674

667:                                              ; preds = %663
  %668 = add nuw nsw i32 %664, 1
  %669 = zext i32 %664 to i64
  %670 = getelementptr inbounds i8, ptr %628, i64 %669
  %671 = load i8, ptr %670, align 1, !tbaa !46, !noalias !986
  %672 = zext i8 %671 to i32
  %673 = shl nuw nsw i32 %672, 8
  br label %674

674:                                              ; preds = %667, %663
  %675 = phi i32 [ %668, %667 ], [ %664, %663 ]
  %676 = phi i32 [ %673, %667 ], [ 0, %663 ]
  %677 = icmp ult i32 %675, %625
  br i1 %677, label %678, label %684

678:                                              ; preds = %674
  %679 = add nuw nsw i32 %675, 1
  %680 = zext i32 %675 to i64
  %681 = getelementptr inbounds i8, ptr %628, i64 %680
  %682 = load i8, ptr %681, align 1, !tbaa !46, !noalias !986
  %683 = zext i8 %682 to i32
  br label %684

684:                                              ; preds = %678, %674
  %685 = phi i32 [ %679, %678 ], [ %675, %674 ]
  %686 = phi i32 [ %683, %678 ], [ 0, %674 ]
  %687 = or i32 %665, %655
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %737, label %689

689:                                              ; preds = %684
  %690 = or i32 %686, %676
  br label %694

691:                                              ; preds = %724
  %692 = add nuw nsw i32 %695, 1
  %693 = icmp eq i32 %692, %687
  br i1 %693, label %737, label %694, !llvm.loop !989

694:                                              ; preds = %691, %689
  %695 = phi i32 [ %692, %691 ], [ 0, %689 ]
  %696 = phi i32 [ %728, %691 ], [ %690, %689 ]
  %697 = phi i32 [ %725, %691 ], [ %685, %689 ]
  %698 = icmp slt i32 %697, %625
  br i1 %698, label %699, label %704

699:                                              ; preds = %694
  %700 = add nsw i32 %697, 1
  %701 = sext i32 %697 to i64
  %702 = getelementptr inbounds i8, ptr %628, i64 %701
  %703 = load i8, ptr %702, align 1, !tbaa !46, !noalias !986
  br label %704

704:                                              ; preds = %699, %694
  %705 = phi i32 [ %700, %699 ], [ %697, %694 ]
  %706 = phi i8 [ %703, %699 ], [ 0, %694 ]
  %707 = icmp slt i32 %705, %625
  br i1 %707, label %708, label %713

708:                                              ; preds = %704
  %709 = add nsw i32 %705, 1
  %710 = sext i32 %705 to i64
  %711 = getelementptr inbounds i8, ptr %628, i64 %710
  %712 = load i8, ptr %711, align 1, !tbaa !46, !noalias !986
  br label %713

713:                                              ; preds = %708, %704
  %714 = phi i32 [ %709, %708 ], [ %705, %704 ]
  %715 = phi i8 [ %712, %708 ], [ 0, %704 ]
  %716 = zext i8 %715 to i32
  %717 = shl nuw nsw i32 %716, 8
  %718 = icmp slt i32 %714, %625
  br i1 %718, label %719, label %724

719:                                              ; preds = %713
  %720 = add nsw i32 %714, 1
  %721 = sext i32 %714 to i64
  %722 = getelementptr inbounds i8, ptr %628, i64 %721
  %723 = load i8, ptr %722, align 1, !tbaa !46, !noalias !986
  br label %724

724:                                              ; preds = %719, %713
  %725 = phi i32 [ %720, %719 ], [ %714, %713 ]
  %726 = phi i8 [ %723, %719 ], [ 0, %713 ]
  %727 = zext i8 %726 to i32
  %728 = or i32 %717, %727
  %729 = icmp sle i32 %696, %1
  %730 = icmp sgt i32 %728, %1
  %731 = and i1 %729, %730
  br i1 %731, label %732, label %691

732:                                              ; preds = %724, %644, %642, %641
  %733 = phi i8 [ %647, %644 ], [ 0, %642 ], [ 0, %641 ], [ %706, %724 ]
  %734 = zext i8 %733 to i32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %38, i64 16, i1 false), !tbaa.struct !374, !noalias !986
  call fastcc void @"?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z"(ptr noalias nonnull align 8 %5, ptr noundef nonnull %6, i32 noundef %734), !noalias !986
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(16) %39, i64 16, i1 false), !tbaa.struct !374, !noalias !986
  call fastcc void @"?stbtt__get_subrs@@YA?AUstbtt__buf@@U1@0@Z"(ptr noalias nonnull align 8 %12, ptr noundef nonnull %7, ptr noundef nonnull %5)
  %735 = load ptr, ptr %12, align 8, !tbaa.struct !374
  %736 = load i32, ptr %40, align 4, !tbaa.struct !376
  br label %737

737:                                              ; preds = %691, %631, %684, %732
  %738 = phi i32 [ %736, %732 ], [ 0, %684 ], [ 0, %631 ], [ 0, %691 ]
  %739 = phi ptr [ %735, %732 ], [ null, %684 ], [ null, %631 ], [ null, %691 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #39
  br label %740

740:                                              ; preds = %624, %737, %622, %54
  %741 = phi i32 [ %63, %54 ], [ %63, %624 ], [ %738, %737 ], [ %63, %622 ]
  %742 = phi ptr [ %62, %54 ], [ %62, %624 ], [ %739, %737 ], [ %62, %622 ]
  %743 = phi i32 [ %59, %54 ], [ 1, %624 ], [ 1, %737 ], [ 1, %622 ]
  %744 = icmp slt i32 %61, 1
  br i1 %744, label %1027, label %745

745:                                              ; preds = %740
  %746 = add nsw i32 %61, -1
  %747 = icmp sgt i32 %60, 9
  br i1 %747, label %1027, label %748

748:                                              ; preds = %745
  %749 = zext i32 %746 to i64
  %750 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %749
  %751 = load float, ptr %750, align 4, !tbaa !6
  %752 = fptosi float %751 to i32
  %753 = sext i32 %60 to i64
  %754 = getelementptr inbounds [10 x %struct.stbtt__buf], ptr %9, i64 0, i64 %753
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %754, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #39
  %755 = icmp eq i8 %68, 10
  br i1 %755, label %759, label %756

756:                                              ; preds = %748
  %757 = load ptr, ptr %41, align 8, !tbaa.struct !374
  %758 = load i32, ptr %42, align 4, !tbaa.struct !376
  br label %759

759:                                              ; preds = %748, %756
  %760 = phi ptr [ %757, %756 ], [ %742, %748 ]
  %761 = phi i32 [ %758, %756 ], [ %741, %748 ]
  tail call void @llvm.experimental.noalias.scope.decl(metadata !990)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  %762 = icmp slt i32 %761, 0
  br i1 %762, label %763, label %764

763:                                              ; preds = %759
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154), !noalias !990
  br label %780

764:                                              ; preds = %759
  %765 = icmp eq i32 %761, 0
  br i1 %765, label %770, label %766

766:                                              ; preds = %764
  %767 = load i8, ptr %760, align 1, !tbaa !46, !noalias !990
  %768 = zext i8 %767 to i32
  %769 = shl nuw nsw i32 %768, 8
  br label %770

770:                                              ; preds = %766, %764
  %771 = phi i32 [ 1, %766 ], [ 0, %764 ]
  %772 = phi i32 [ %769, %766 ], [ 0, %764 ]
  %773 = icmp ult i32 %771, %761
  br i1 %773, label %774, label %780

774:                                              ; preds = %770
  %775 = add nuw nsw i32 %771, 1
  %776 = zext i32 %771 to i64
  %777 = getelementptr inbounds i8, ptr %760, i64 %776
  %778 = load i8, ptr %777, align 1, !tbaa !46, !noalias !990
  %779 = zext i8 %778 to i32
  br label %780

780:                                              ; preds = %763, %774, %770
  %781 = phi i32 [ %772, %774 ], [ %772, %770 ], [ 0, %763 ]
  %782 = phi i32 [ %775, %774 ], [ %771, %770 ], [ %761, %763 ]
  %783 = phi i32 [ %779, %774 ], [ 0, %770 ], [ 0, %763 ]
  %784 = or i32 %783, %781
  %785 = icmp ugt i32 %784, 33899
  %786 = icmp ugt i32 %784, 1239
  %787 = select i1 %786, i32 1131, i32 107
  %788 = select i1 %785, i32 32768, i32 %787
  %789 = add nsw i32 %788, %752
  %790 = icmp sgt i32 %789, -1
  %791 = icmp slt i32 %789, %784
  %792 = and i1 %790, %791
  br i1 %792, label %794, label %793

793:                                              ; preds = %780
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, i8 0, i64 16, i1 false), !alias.scope !990
  br label %795

794:                                              ; preds = %780
  store ptr %760, ptr %4, align 8, !tbaa.struct !374, !noalias !990
  store i32 %782, ptr %43, align 8, !tbaa.struct !375, !noalias !990
  store i32 %761, ptr %44, align 4, !tbaa.struct !376, !noalias !990
  call fastcc void @"?stbtt__cff_index_get@@YA?AUstbtt__buf@@U1@H@Z"(ptr noalias nonnull align 8 %13, ptr noundef nonnull %4, i32 noundef %789)
  br label %795

795:                                              ; preds = %793, %794
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %10, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false), !tbaa.struct !374
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #39
  %796 = load i32, ptr %20, align 4, !tbaa !378
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %1027, label %798

798:                                              ; preds = %795
  %799 = add nsw i32 %60, 1
  store i32 0, ptr %19, align 8, !tbaa !377
  br label %1016

800:                                              ; preds = %54
  %801 = icmp slt i32 %60, 1
  br i1 %801, label %1027, label %802

802:                                              ; preds = %800
  %803 = add nsw i32 %60, -1
  %804 = zext i32 %803 to i64
  %805 = getelementptr inbounds [10 x %struct.stbtt__buf], ptr %9, i64 0, i64 %804
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %10, ptr noundef nonnull align 16 dereferenceable(16) %805, i64 16, i1 false), !tbaa.struct !374
  br label %1016

806:                                              ; preds = %54
  %807 = getelementptr inbounds %struct.stbtt__csctx, ptr %2, i64 0, i32 2
  %808 = load float, ptr %45, align 8, !tbaa !976
  %809 = load <2 x float>, ptr %807, align 8, !tbaa !6
  %810 = extractelement <2 x float> %809, i64 0
  %811 = fcmp fast une float %810, %808
  br i1 %811, label %816, label %812

812:                                              ; preds = %806
  %813 = load float, ptr %46, align 4, !tbaa !977
  %814 = extractelement <2 x float> %809, i64 1
  %815 = fcmp fast une float %814, %813
  br i1 %815, label %816, label %1027

816:                                              ; preds = %812, %806
  %817 = fptosi <2 x float> %809 to <2 x i32>
  %818 = load i32, ptr %2, align 8, !tbaa !966
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %852, label %820

820:                                              ; preds = %816
  %821 = load i32, ptr %47, align 4, !tbaa !968
  %822 = extractelement <2 x i32> %817, i64 0
  %823 = icmp slt i32 %821, %822
  br i1 %823, label %827, label %824

824:                                              ; preds = %820
  %825 = load i32, ptr %48, align 4, !tbaa !969
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %827, label %828

827:                                              ; preds = %824, %820
  store i32 %822, ptr %47, align 4, !tbaa !968
  br label %828

828:                                              ; preds = %827, %824
  %829 = load i32, ptr %49, align 4, !tbaa !970
  %830 = extractelement <2 x i32> %817, i64 1
  %831 = icmp slt i32 %829, %830
  br i1 %831, label %835, label %832

832:                                              ; preds = %828
  %833 = load i32, ptr %48, align 4, !tbaa !969
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %835, label %836

835:                                              ; preds = %832, %828
  store i32 %830, ptr %49, align 4, !tbaa !970
  br label %836

836:                                              ; preds = %835, %832
  %837 = load i32, ptr %50, align 8, !tbaa !971
  %838 = icmp sgt i32 %837, %822
  br i1 %838, label %842, label %839

839:                                              ; preds = %836
  %840 = load i32, ptr %48, align 4, !tbaa !969
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %842, label %843

842:                                              ; preds = %839, %836
  store i32 %822, ptr %50, align 8, !tbaa !971
  br label %843

843:                                              ; preds = %842, %839
  %844 = load i32, ptr %51, align 8, !tbaa !972
  %845 = icmp sgt i32 %844, %830
  br i1 %845, label %849, label %846

846:                                              ; preds = %843
  %847 = load i32, ptr %48, align 4, !tbaa !969
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %849, label %850

849:                                              ; preds = %846, %843
  store i32 %830, ptr %51, align 8, !tbaa !972
  br label %850

850:                                              ; preds = %849, %846
  store i32 1, ptr %48, align 4, !tbaa !969
  %851 = load i32, ptr %52, align 8, !tbaa !973
  br label %860

852:                                              ; preds = %816
  %853 = load ptr, ptr %53, align 8, !tbaa !974
  %854 = load i32, ptr %52, align 8, !tbaa !973
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds %struct.stbtt_vertex, ptr %853, i64 %855
  %857 = getelementptr inbounds %struct.stbtt_vertex, ptr %853, i64 %855, i32 6
  store i8 2, ptr %857, align 2, !tbaa !460
  %858 = trunc <2 x i32> %817 to <2 x i16>
  store <2 x i16> %858, ptr %856, align 2, !tbaa !121
  %859 = getelementptr inbounds %struct.stbtt_vertex, ptr %853, i64 %855, i32 2
  store i64 0, ptr %859, align 2
  br label %860

860:                                              ; preds = %852, %850
  %861 = phi i32 [ %851, %850 ], [ %854, %852 ]
  %862 = add nsw i32 %861, 1
  store i32 %862, ptr %52, align 8, !tbaa !973
  br label %1027

863:                                              ; preds = %54
  %864 = icmp slt i32 %65, %55
  br i1 %864, label %865, label %1027

865:                                              ; preds = %863
  %866 = add nsw i32 %56, 2
  store i32 %866, ptr %19, align 8, !tbaa !377
  %867 = sext i32 %65 to i64
  %868 = getelementptr inbounds i8, ptr %64, i64 %867
  %869 = load i8, ptr %868, align 1, !tbaa !46
  switch i8 %869, label %1027 [
    i8 34, label %870
    i8 35, label %881
    i8 36, label %896
    i8 37, label %911
  ]

870:                                              ; preds = %865
  %871 = icmp slt i32 %61, 7
  br i1 %871, label %1027, label %872

872:                                              ; preds = %870
  %873 = load float, ptr %8, align 16, !tbaa !6
  %874 = load float, ptr %25, align 4, !tbaa !6
  %875 = load float, ptr %26, align 8, !tbaa !6
  %876 = load float, ptr %27, align 4, !tbaa !6
  %877 = load float, ptr %28, align 16, !tbaa !6
  %878 = load float, ptr %29, align 4, !tbaa !6
  %879 = load float, ptr %30, align 8, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %873, float noundef 0.000000e+00, float noundef %874, float noundef %875, float noundef %876, float noundef 0.000000e+00)
  %880 = fneg fast float %875
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %877, float noundef 0.000000e+00, float noundef %878, float noundef %880, float noundef %879, float noundef 0.000000e+00)
  br label %1016

881:                                              ; preds = %865
  %882 = icmp slt i32 %61, 13
  br i1 %882, label %1027, label %883

883:                                              ; preds = %881
  %884 = load float, ptr %8, align 16, !tbaa !6
  %885 = load float, ptr %25, align 4, !tbaa !6
  %886 = load float, ptr %26, align 8, !tbaa !6
  %887 = load float, ptr %27, align 4, !tbaa !6
  %888 = load float, ptr %28, align 16, !tbaa !6
  %889 = load float, ptr %29, align 4, !tbaa !6
  %890 = load float, ptr %30, align 8, !tbaa !6
  %891 = load float, ptr %31, align 4, !tbaa !6
  %892 = load float, ptr %32, align 16, !tbaa !6
  %893 = load float, ptr %33, align 4, !tbaa !6
  %894 = load float, ptr %34, align 8, !tbaa !6
  %895 = load float, ptr %35, align 4, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %884, float noundef %885, float noundef %886, float noundef %887, float noundef %888, float noundef %889)
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %890, float noundef %891, float noundef %892, float noundef %893, float noundef %894, float noundef %895)
  br label %1016

896:                                              ; preds = %865
  %897 = icmp slt i32 %61, 9
  br i1 %897, label %1027, label %898

898:                                              ; preds = %896
  %899 = load float, ptr %8, align 16, !tbaa !6
  %900 = load float, ptr %25, align 4, !tbaa !6
  %901 = load float, ptr %26, align 8, !tbaa !6
  %902 = load float, ptr %27, align 4, !tbaa !6
  %903 = load float, ptr %28, align 16, !tbaa !6
  %904 = load float, ptr %29, align 4, !tbaa !6
  %905 = load float, ptr %30, align 8, !tbaa !6
  %906 = load float, ptr %31, align 4, !tbaa !6
  %907 = load float, ptr %32, align 16, !tbaa !6
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %899, float noundef %900, float noundef %901, float noundef %902, float noundef %903, float noundef 0.000000e+00)
  %908 = fadd fast float %902, %900
  %909 = fadd fast float %908, %906
  %910 = fneg fast float %909
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %904, float noundef 0.000000e+00, float noundef %905, float noundef %906, float noundef %907, float noundef %910)
  br label %1016

911:                                              ; preds = %865
  %912 = icmp slt i32 %61, 11
  br i1 %912, label %1027, label %913

913:                                              ; preds = %911
  %914 = load float, ptr %34, align 8, !tbaa !6
  %915 = load <2 x float>, ptr %8, align 16, !tbaa !6
  %916 = load <2 x float>, ptr %26, align 8, !tbaa !6
  %917 = load <2 x float>, ptr %28, align 16, !tbaa !6
  %918 = load <2 x float>, ptr %30, align 8, !tbaa !6
  %919 = load <2 x float>, ptr %32, align 16, !tbaa !6
  %920 = fadd fast <2 x float> %916, %915
  %921 = fadd fast <2 x float> %920, %917
  %922 = fadd fast <2 x float> %921, %918
  %923 = fadd fast <2 x float> %922, %919
  %924 = tail call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %923)
  %925 = extractelement <2 x float> %924, i64 0
  %926 = extractelement <2 x float> %924, i64 1
  %927 = fcmp fast ogt float %925, %926
  %928 = extractelement <2 x float> %923, i64 1
  %929 = fneg fast float %928
  %930 = extractelement <2 x float> %923, i64 0
  %931 = fneg fast float %930
  %932 = select i1 %927, float %914, float %931
  %933 = select i1 %927, float %929, float %914
  %934 = extractelement <2 x float> %916, i64 0
  %935 = extractelement <2 x float> %916, i64 1
  %936 = extractelement <2 x float> %915, i64 0
  %937 = extractelement <2 x float> %915, i64 1
  %938 = extractelement <2 x float> %917, i64 0
  %939 = extractelement <2 x float> %917, i64 1
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %936, float noundef %937, float noundef %934, float noundef %935, float noundef %938, float noundef %939)
  %940 = extractelement <2 x float> %918, i64 0
  %941 = extractelement <2 x float> %918, i64 1
  %942 = extractelement <2 x float> %919, i64 0
  %943 = extractelement <2 x float> %919, i64 1
  tail call fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr noundef %2, float noundef %940, float noundef %941, float noundef %942, float noundef %943, float noundef %932, float noundef %933)
  br label %1016

944:                                              ; preds = %54
  %945 = icmp ne i8 %68, 28
  %946 = icmp ult i8 %68, 32
  %947 = and i1 %946, %945
  br i1 %947, label %1027, label %948

948:                                              ; preds = %944
  %949 = icmp eq i8 %68, -1
  br i1 %949, label %950, label %999

950:                                              ; preds = %948
  %951 = icmp slt i32 %65, %55
  br i1 %951, label %952, label %957

952:                                              ; preds = %950
  %953 = add nsw i32 %56, 2
  %954 = sext i32 %65 to i64
  %955 = getelementptr inbounds i8, ptr %64, i64 %954
  %956 = load i8, ptr %955, align 1, !tbaa !46
  br label %957

957:                                              ; preds = %952, %950
  %958 = phi i32 [ %953, %952 ], [ %65, %950 ]
  %959 = phi i8 [ %956, %952 ], [ 0, %950 ]
  %960 = zext i8 %959 to i32
  %961 = icmp slt i32 %958, %55
  br i1 %961, label %962, label %967

962:                                              ; preds = %957
  %963 = add nsw i32 %958, 1
  %964 = sext i32 %958 to i64
  %965 = getelementptr inbounds i8, ptr %64, i64 %964
  %966 = load i8, ptr %965, align 1, !tbaa !46
  br label %967

967:                                              ; preds = %962, %957
  %968 = phi i32 [ %963, %962 ], [ %958, %957 ]
  %969 = phi i8 [ %966, %962 ], [ 0, %957 ]
  %970 = zext i8 %969 to i32
  %971 = shl nuw nsw i32 %960, 16
  %972 = shl nuw nsw i32 %970, 8
  %973 = or i32 %971, %972
  %974 = icmp slt i32 %968, %55
  br i1 %974, label %975, label %980

975:                                              ; preds = %967
  %976 = add nsw i32 %968, 1
  %977 = sext i32 %968 to i64
  %978 = getelementptr inbounds i8, ptr %64, i64 %977
  %979 = load i8, ptr %978, align 1, !tbaa !46
  br label %980

980:                                              ; preds = %975, %967
  %981 = phi i32 [ %976, %975 ], [ %968, %967 ]
  %982 = phi i8 [ %979, %975 ], [ 0, %967 ]
  %983 = zext i8 %982 to i32
  %984 = or i32 %973, %983
  %985 = shl nuw i32 %984, 8
  %986 = icmp slt i32 %981, %55
  br i1 %986, label %987, label %992

987:                                              ; preds = %980
  %988 = add nsw i32 %981, 1
  %989 = sext i32 %981 to i64
  %990 = getelementptr inbounds i8, ptr %64, i64 %989
  %991 = load i8, ptr %990, align 1, !tbaa !46
  br label %992

992:                                              ; preds = %987, %980
  %993 = phi i32 [ %988, %987 ], [ %981, %980 ]
  %994 = phi i8 [ %991, %987 ], [ 0, %980 ]
  %995 = zext i8 %994 to i32
  %996 = or i32 %985, %995
  store i32 %993, ptr %19, align 8, !tbaa !377
  %997 = sitofp i32 %996 to float
  %998 = fmul fast float %997, 0x3EF0000000000000
  br label %1009

999:                                              ; preds = %948
  %1000 = icmp slt i32 %55, %56
  %1001 = icmp slt i32 %56, 0
  %1002 = or i1 %1001, %1000
  br i1 %1002, label %1003, label %1004

1003:                                             ; preds = %999
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1DA@CPAEOPEI@?$AA?$CB?$AA?$CI?$AAo?$AA?5?$AA?$DO?$AA?5?$AAb?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo?$AA?5?$AA?$DM?$AA?5?$AA0?$AA?$CJ?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1154)
  br label %1004

1004:                                             ; preds = %999, %1003
  %1005 = phi i32 [ %56, %999 ], [ %55, %1003 ]
  store i32 %1005, ptr %19, align 8, !tbaa !377
  %1006 = call fastcc noundef i32 @"?stbtt__cff_int@@YAIPEAUstbtt__buf@@@Z"(ptr noundef nonnull %10)
  %1007 = trunc i32 %1006 to i16
  %1008 = sitofp i16 %1007 to float
  br label %1009

1009:                                             ; preds = %1004, %992
  %1010 = phi float [ %998, %992 ], [ %1008, %1004 ]
  %1011 = icmp sgt i32 %61, 47
  br i1 %1011, label %1027, label %1012

1012:                                             ; preds = %1009
  %1013 = add nsw i32 %61, 1
  %1014 = sext i32 %61 to i64
  %1015 = getelementptr inbounds [48 x float], ptr %8, i64 0, i64 %1014
  store float %1010, ptr %1015, align 4, !tbaa !6
  br label %1016

1016:                                             ; preds = %605, %588, %360, %166, %580, %584, %555, %913, %898, %883, %872, %83, %85, %90, %101, %108, %236, %176, %328, %300, %464, %531, %1012, %802, %798
  %1017 = phi i32 [ %57, %1012 ], [ %57, %802 ], [ %57, %798 ], [ %57, %913 ], [ %57, %898 ], [ %57, %883 ], [ %57, %872 ], [ 0, %83 ], [ %57, %85 ], [ 0, %90 ], [ 0, %101 ], [ 0, %108 ], [ %57, %236 ], [ %57, %176 ], [ %57, %328 ], [ %57, %300 ], [ %57, %464 ], [ %57, %531 ], [ %57, %555 ], [ %57, %584 ], [ %57, %580 ], [ %57, %166 ], [ %57, %360 ], [ %57, %588 ], [ %57, %605 ]
  %1018 = phi i32 [ %58, %1012 ], [ %58, %802 ], [ %58, %798 ], [ %58, %913 ], [ %58, %898 ], [ %58, %883 ], [ %58, %872 ], [ %75, %83 ], [ %87, %85 ], [ %58, %90 ], [ %58, %101 ], [ %58, %108 ], [ %58, %236 ], [ %58, %176 ], [ %58, %328 ], [ %58, %300 ], [ %58, %464 ], [ %58, %531 ], [ %58, %555 ], [ %58, %584 ], [ %58, %580 ], [ %58, %166 ], [ %58, %360 ], [ %58, %588 ], [ %58, %605 ]
  %1019 = phi i32 [ %59, %1012 ], [ %59, %802 ], [ %743, %798 ], [ %59, %913 ], [ %59, %898 ], [ %59, %883 ], [ %59, %872 ], [ %59, %83 ], [ %59, %85 ], [ %59, %90 ], [ %59, %101 ], [ %59, %108 ], [ %59, %236 ], [ %59, %176 ], [ %59, %328 ], [ %59, %300 ], [ %59, %464 ], [ %59, %531 ], [ %59, %555 ], [ %59, %584 ], [ %59, %580 ], [ %59, %166 ], [ %59, %360 ], [ %59, %588 ], [ %59, %605 ]
  %1020 = phi i32 [ %60, %1012 ], [ %803, %802 ], [ %799, %798 ], [ %60, %913 ], [ %60, %898 ], [ %60, %883 ], [ %60, %872 ], [ %60, %83 ], [ %60, %85 ], [ %60, %90 ], [ %60, %101 ], [ %60, %108 ], [ %60, %236 ], [ %60, %176 ], [ %60, %328 ], [ %60, %300 ], [ %60, %464 ], [ %60, %531 ], [ %60, %555 ], [ %60, %584 ], [ %60, %580 ], [ %60, %166 ], [ %60, %360 ], [ %60, %588 ], [ %60, %605 ]
  %1021 = phi ptr [ %62, %1012 ], [ %62, %802 ], [ %742, %798 ], [ %62, %913 ], [ %62, %898 ], [ %62, %883 ], [ %62, %872 ], [ %62, %83 ], [ %62, %85 ], [ %62, %90 ], [ %62, %101 ], [ %62, %108 ], [ %62, %236 ], [ %62, %176 ], [ %62, %328 ], [ %62, %300 ], [ %62, %464 ], [ %62, %531 ], [ %62, %555 ], [ %62, %584 ], [ %62, %580 ], [ %62, %166 ], [ %62, %360 ], [ %62, %588 ], [ %62, %605 ]
  %1022 = phi i32 [ %63, %1012 ], [ %63, %802 ], [ %741, %798 ], [ %63, %913 ], [ %63, %898 ], [ %63, %883 ], [ %63, %872 ], [ %63, %83 ], [ %63, %85 ], [ %63, %90 ], [ %63, %101 ], [ %63, %108 ], [ %63, %236 ], [ %63, %176 ], [ %63, %328 ], [ %63, %300 ], [ %63, %464 ], [ %63, %531 ], [ %63, %555 ], [ %63, %584 ], [ %63, %580 ], [ %63, %166 ], [ %63, %360 ], [ %63, %588 ], [ %63, %605 ]
  %1023 = phi i32 [ %1013, %1012 ], [ %61, %802 ], [ %746, %798 ], [ 0, %913 ], [ 0, %898 ], [ 0, %883 ], [ 0, %872 ], [ 0, %83 ], [ 0, %85 ], [ 0, %90 ], [ 0, %101 ], [ 0, %108 ], [ 0, %236 ], [ 0, %176 ], [ 0, %328 ], [ 0, %300 ], [ 0, %464 ], [ 0, %531 ], [ 0, %555 ], [ 0, %584 ], [ 0, %580 ], [ 0, %166 ], [ 0, %360 ], [ 0, %588 ], [ 0, %605 ]
  %1024 = load i32, ptr %19, align 8, !tbaa !377
  %1025 = load i32, ptr %20, align 4, !tbaa !378
  %1026 = icmp slt i32 %1024, %1025
  br i1 %1026, label %54, label %1027, !llvm.loop !993

1027:                                             ; preds = %88, %99, %106, %113, %172, %174, %296, %298, %356, %383, %411, %467, %527, %553, %740, %745, %795, %800, %944, %1009, %1016, %865, %911, %896, %881, %870, %863, %3, %860, %812
  %1028 = phi i32 [ 1, %812 ], [ 1, %860 ], [ 0, %3 ], [ 0, %863 ], [ 0, %870 ], [ 0, %881 ], [ 0, %896 ], [ 0, %911 ], [ 0, %865 ], [ 0, %1016 ], [ 0, %1009 ], [ 0, %944 ], [ 0, %800 ], [ 0, %795 ], [ 0, %745 ], [ 0, %740 ], [ 0, %553 ], [ 0, %527 ], [ 0, %467 ], [ 0, %411 ], [ 0, %383 ], [ 0, %356 ], [ 0, %298 ], [ 0, %296 ], [ 0, %174 ], [ 0, %172 ], [ 0, %113 ], [ 0, %106 ], [ 0, %99 ], [ 0, %88 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #39
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %9) #39
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %8) #39
  ret i32 %1028
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @"?stbtt__csctx_rmove_to@@YAXPEAUstbtt__csctx@@MM@Z"(ptr nocapture noundef %0, float noundef %1, float noundef %2) unnamed_addr #13 {
  %4 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 4
  %6 = load float, ptr %5, align 8, !tbaa !976
  %7 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 3
  %8 = load <2 x float>, ptr %4, align 8, !tbaa !6
  %9 = extractelement <2 x float> %8, i64 0
  %10 = fcmp fast une float %9, %6
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 5
  %13 = load float, ptr %12, align 4, !tbaa !977
  %14 = extractelement <2 x float> %8, i64 1
  %15 = fcmp fast une float %14, %13
  br i1 %15, label %16, label %80

16:                                               ; preds = %11, %3
  %17 = fptosi <2 x float> %8 to <2 x i32>
  %18 = load i32, ptr %0, align 8, !tbaa !966
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %62, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 7
  %22 = load i32, ptr %21, align 4, !tbaa !968
  %23 = extractelement <2 x i32> %17, i64 0
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %27 = load i32, ptr %26, align 4, !tbaa !969
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %20
  store i32 %23, ptr %21, align 4, !tbaa !968
  br label %30

30:                                               ; preds = %29, %25
  %31 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 9
  %32 = load i32, ptr %31, align 4, !tbaa !970
  %33 = extractelement <2 x i32> %17, i64 1
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %37 = load i32, ptr %36, align 4, !tbaa !969
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35, %30
  store i32 %33, ptr %31, align 4, !tbaa !970
  br label %40

40:                                               ; preds = %39, %35
  %41 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 6
  %42 = load i32, ptr %41, align 8, !tbaa !971
  %43 = icmp sgt i32 %42, %23
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %46 = load i32, ptr %45, align 4, !tbaa !969
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44, %40
  store i32 %23, ptr %41, align 8, !tbaa !971
  br label %49

49:                                               ; preds = %48, %44
  %50 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 8
  %51 = load i32, ptr %50, align 8, !tbaa !972
  %52 = icmp sgt i32 %51, %33
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %55 = load i32, ptr %54, align 4, !tbaa !969
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53, %49
  store i32 %33, ptr %50, align 8, !tbaa !972
  br label %58

58:                                               ; preds = %57, %53
  %59 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  store i32 1, ptr %59, align 4, !tbaa !969
  %60 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %61 = load i32, ptr %60, align 8, !tbaa !973
  br label %73

62:                                               ; preds = %16
  %63 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 10
  %64 = load ptr, ptr %63, align 8, !tbaa !974
  %65 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %66 = load i32, ptr %65, align 8, !tbaa !973
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.stbtt_vertex, ptr %64, i64 %67
  %69 = getelementptr inbounds %struct.stbtt_vertex, ptr %64, i64 %67, i32 6
  store i8 2, ptr %69, align 2, !tbaa !460
  %70 = trunc <2 x i32> %17 to <2 x i16>
  store <2 x i16> %70, ptr %68, align 2, !tbaa !121
  %71 = getelementptr inbounds %struct.stbtt_vertex, ptr %64, i64 %67, i32 2
  store i64 0, ptr %71, align 2
  %72 = load float, ptr %5, align 8, !tbaa !976
  br label %73

73:                                               ; preds = %62, %58
  %74 = phi float [ %6, %58 ], [ %72, %62 ]
  %75 = phi i32 [ %61, %58 ], [ %66, %62 ]
  %76 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %77 = add nsw i32 %75, 1
  store i32 %77, ptr %76, align 8, !tbaa !973
  %78 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 5
  %79 = load float, ptr %78, align 4, !tbaa !977
  br label %80

80:                                               ; preds = %11, %73
  %81 = phi float [ %13, %11 ], [ %79, %73 ]
  %82 = phi float [ %6, %11 ], [ %74, %73 ]
  %83 = fadd fast float %82, %1
  store float %83, ptr %5, align 8, !tbaa !976
  store float %83, ptr %4, align 8, !tbaa !994
  %84 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 5
  %85 = fadd fast float %81, %2
  store float %85, ptr %84, align 4, !tbaa !977
  store float %85, ptr %7, align 4, !tbaa !995
  %86 = fptosi float %85 to i32
  %87 = fptosi float %83 to i32
  %88 = load i32, ptr %0, align 8, !tbaa !966
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %130, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 7
  %92 = load i32, ptr %91, align 4, !tbaa !968
  %93 = icmp slt i32 %92, %87
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %96 = load i32, ptr %95, align 4, !tbaa !969
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %94, %90
  store i32 %87, ptr %91, align 4, !tbaa !968
  br label %99

99:                                               ; preds = %98, %94
  %100 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 9
  %101 = load i32, ptr %100, align 4, !tbaa !970
  %102 = icmp slt i32 %101, %86
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %105 = load i32, ptr %104, align 4, !tbaa !969
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %103, %99
  store i32 %86, ptr %100, align 4, !tbaa !970
  br label %108

108:                                              ; preds = %107, %103
  %109 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 6
  %110 = load i32, ptr %109, align 8, !tbaa !971
  %111 = icmp sgt i32 %110, %87
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %114 = load i32, ptr %113, align 4, !tbaa !969
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %112, %108
  store i32 %87, ptr %109, align 8, !tbaa !971
  br label %117

117:                                              ; preds = %116, %112
  %118 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 8
  %119 = load i32, ptr %118, align 8, !tbaa !972
  %120 = icmp sgt i32 %119, %86
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %123 = load i32, ptr %122, align 4, !tbaa !969
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %121, %117
  store i32 %86, ptr %118, align 8, !tbaa !972
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  store i32 1, ptr %127, align 4, !tbaa !969
  %128 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %129 = load i32, ptr %128, align 8, !tbaa !973
  br label %142

130:                                              ; preds = %80
  %131 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 10
  %132 = load ptr, ptr %131, align 8, !tbaa !974
  %133 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %134 = load i32, ptr %133, align 8, !tbaa !973
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.stbtt_vertex, ptr %132, i64 %135
  %137 = getelementptr inbounds %struct.stbtt_vertex, ptr %132, i64 %135, i32 6
  store i8 1, ptr %137, align 2, !tbaa !460
  %138 = trunc i32 %87 to i16
  store i16 %138, ptr %136, align 2, !tbaa !470
  %139 = trunc i32 %86 to i16
  %140 = getelementptr inbounds %struct.stbtt_vertex, ptr %132, i64 %135, i32 1
  store i16 %139, ptr %140, align 2, !tbaa !469
  %141 = getelementptr inbounds %struct.stbtt_vertex, ptr %132, i64 %135, i32 2
  store i64 0, ptr %141, align 2
  br label %142

142:                                              ; preds = %126, %130
  %143 = phi i32 [ %129, %126 ], [ %134, %130 ]
  %144 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %145 = add nsw i32 %143, 1
  store i32 %145, ptr %144, align 8, !tbaa !973
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @"?stbtt__csctx_rccurve_to@@YAXPEAUstbtt__csctx@@MMMMMM@Z"(ptr nocapture noundef %0, float noundef %1, float noundef %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6) unnamed_addr #13 {
  %8 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 4
  %9 = load <2 x float>, ptr %8, align 8, !tbaa !6
  %10 = insertelement <2 x float> poison, float %1, i64 0
  %11 = insertelement <2 x float> %10, float %2, i64 1
  %12 = fadd fast <2 x float> %9, %11
  %13 = insertelement <2 x float> poison, float %3, i64 0
  %14 = insertelement <2 x float> %13, float %4, i64 1
  %15 = fadd fast <2 x float> %12, %14
  %16 = insertelement <2 x float> poison, float %5, i64 0
  %17 = insertelement <2 x float> %16, float %6, i64 1
  %18 = fadd fast <2 x float> %15, %17
  store <2 x float> %18, ptr %8, align 8, !tbaa !6
  %19 = fptosi <2 x float> %15 to <2 x i32>
  %20 = shufflevector <2 x float> %18, <2 x float> %12, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %21 = fptosi <4 x float> %20 to <4 x i32>
  %22 = load i32, ptr %0, align 8, !tbaa !966
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %102, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 7
  %26 = load i32, ptr %25, align 4, !tbaa !968
  %27 = extractelement <4 x i32> %21, i64 0
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !969
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29, %24
  store i32 %27, ptr %25, align 4, !tbaa !968
  br label %34

34:                                               ; preds = %33, %29
  %35 = phi i32 [ %27, %33 ], [ %26, %29 ]
  %36 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 9
  %37 = load i32, ptr %36, align 4, !tbaa !970
  %38 = extractelement <4 x i32> %21, i64 1
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %44, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %42 = load i32, ptr %41, align 4, !tbaa !969
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40, %34
  store i32 %38, ptr %36, align 4, !tbaa !970
  br label %45

45:                                               ; preds = %44, %40
  %46 = phi i32 [ %38, %44 ], [ %37, %40 ]
  %47 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 6
  %48 = load i32, ptr %47, align 8, !tbaa !971
  %49 = icmp sgt i32 %48, %27
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %52 = load i32, ptr %51, align 4, !tbaa !969
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50, %45
  store i32 %27, ptr %47, align 8, !tbaa !971
  br label %55

55:                                               ; preds = %54, %50
  %56 = phi i32 [ %27, %54 ], [ %48, %50 ]
  %57 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 8
  %58 = load i32, ptr %57, align 8, !tbaa !972
  %59 = icmp sgt i32 %58, %38
  br i1 %59, label %64, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  %62 = load i32, ptr %61, align 4, !tbaa !969
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %55
  store i32 %38, ptr %57, align 8, !tbaa !972
  br label %65

65:                                               ; preds = %64, %60
  %66 = phi i32 [ %58, %60 ], [ %38, %64 ]
  %67 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 1
  store i32 1, ptr %67, align 4, !tbaa !969
  %68 = extractelement <4 x i32> %21, i64 2
  %69 = icmp slt i32 %35, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  store i32 %68, ptr %25, align 4, !tbaa !968
  br label %71

71:                                               ; preds = %70, %65
  %72 = phi i32 [ %35, %65 ], [ %68, %70 ]
  %73 = extractelement <4 x i32> %21, i64 3
  %74 = icmp slt i32 %46, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  store i32 %73, ptr %36, align 4, !tbaa !970
  br label %76

76:                                               ; preds = %75, %71
  %77 = phi i32 [ %46, %71 ], [ %73, %75 ]
  %78 = icmp sgt i32 %56, %68
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  store i32 %68, ptr %47, align 8, !tbaa !971
  br label %80

80:                                               ; preds = %79, %76
  %81 = phi i32 [ %56, %76 ], [ %68, %79 ]
  %82 = icmp sgt i32 %66, %73
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i32 %73, ptr %57, align 8, !tbaa !972
  br label %84

84:                                               ; preds = %83, %80
  %85 = phi i32 [ %66, %80 ], [ %73, %83 ]
  %86 = extractelement <2 x i32> %19, i64 0
  %87 = icmp slt i32 %72, %86
  br i1 %87, label %88, label %89

88:                                               ; preds = %84
  store i32 %86, ptr %25, align 4, !tbaa !968
  br label %89

89:                                               ; preds = %88, %84
  %90 = extractelement <2 x i32> %19, i64 1
  %91 = icmp slt i32 %77, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  store i32 %90, ptr %36, align 4, !tbaa !970
  br label %93

93:                                               ; preds = %92, %89
  %94 = icmp sgt i32 %81, %86
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  store i32 %86, ptr %47, align 8, !tbaa !971
  br label %96

96:                                               ; preds = %95, %93
  %97 = icmp sgt i32 %85, %90
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  store i32 %90, ptr %57, align 8, !tbaa !972
  br label %99

99:                                               ; preds = %98, %96
  store i32 1, ptr %67, align 4, !tbaa !969
  %100 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %101 = load i32, ptr %100, align 8, !tbaa !973
  br label %113

102:                                              ; preds = %7
  %103 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 10
  %104 = load ptr, ptr %103, align 8, !tbaa !974
  %105 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %106 = load i32, ptr %105, align 8, !tbaa !973
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.stbtt_vertex, ptr %104, i64 %107
  %109 = getelementptr inbounds %struct.stbtt_vertex, ptr %104, i64 %107, i32 6
  store i8 4, ptr %109, align 2, !tbaa !460
  %110 = trunc <4 x i32> %21 to <4 x i16>
  store <4 x i16> %110, ptr %108, align 2, !tbaa !121
  %111 = trunc <2 x i32> %19 to <2 x i16>
  %112 = getelementptr inbounds %struct.stbtt_vertex, ptr %104, i64 %107, i32 4
  store <2 x i16> %111, ptr %112, align 2, !tbaa !121
  br label %113

113:                                              ; preds = %99, %102
  %114 = phi i32 [ %101, %99 ], [ %106, %102 ]
  %115 = getelementptr inbounds %struct.stbtt__csctx, ptr %0, i64 0, i32 11
  %116 = add nsw i32 %114, 1
  store i32 %116, ptr %115, align 8, !tbaa !973
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @"?stbtt_GetGlyphShape@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) unnamed_addr #7 {
  %4 = alloca %struct.stbtt__csctx, align 8
  %5 = alloca %struct.stbtt__csctx, align 8
  %6 = alloca ptr, align 8
  %7 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 14, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !429
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %773

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.stbtt_fontinfo, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !364
  %13 = tail call fastcc noundef i32 @"?stbtt__GetGlyfOffset@@YAHPEBUstbtt_fontinfo@@H@Z"(ptr noundef nonnull %0, i32 noundef %1)
  store ptr null, ptr %2, align 8, !tbaa !117
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %795, label %15

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds i8, ptr %12, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !46
  %19 = getelementptr i8, ptr %17, i64 1
  %20 = load i8, ptr %19, align 1, !tbaa !46
  %21 = zext i8 %18 to i16
  %22 = shl nuw i16 %21, 8
  %23 = zext i8 %20 to i16
  %24 = or i16 %22, %23
  %25 = icmp sgt i16 %24, 0
  br i1 %25, label %26, label %394

26:                                               ; preds = %15
  %27 = zext i16 %24 to i32
  %28 = getelementptr inbounds i8, ptr %17, i64 10
  %29 = shl nuw nsw i32 %27, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %28, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !46
  %33 = getelementptr i8, ptr %31, i64 1
  %34 = load i8, ptr %33, align 1, !tbaa !46
  %35 = getelementptr inbounds i8, ptr %31, i64 -2
  %36 = load i8, ptr %35, align 1, !tbaa !46
  %37 = getelementptr i8, ptr %35, i64 1
  %38 = load i8, ptr %37, align 1, !tbaa !46
  %39 = zext i8 %36 to i32
  %40 = shl nuw nsw i32 %39, 8
  %41 = zext i8 %38 to i32
  %42 = or i32 %40, %41
  %43 = or i32 %29, 1
  %44 = add nuw nsw i32 %43, %42
  %45 = mul nuw nsw i32 %44, 14
  %46 = zext i32 %45 to i64
  %47 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %46)
  %48 = icmp eq ptr %47, null
  br i1 %48, label %795, label %49

49:                                               ; preds = %26
  %50 = zext i8 %32 to i64
  %51 = shl nuw nsw i64 %50, 8
  %52 = zext i8 %34 to i64
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds i8, ptr %31, i64 2
  %55 = getelementptr inbounds i8, ptr %54, i64 %53
  %56 = or i32 %40, %41
  %57 = add nuw nsw i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %49, %75
  %60 = phi i64 [ 0, %49 ], [ %81, %75 ]
  %61 = phi i8 [ 0, %49 ], [ %78, %75 ]
  %62 = phi i8 [ 0, %49 ], [ %77, %75 ]
  %63 = phi ptr [ %55, %49 ], [ %76, %75 ]
  %64 = icmp eq i8 %62, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, ptr %63, i64 1
  %67 = load i8, ptr %63, align 1, !tbaa !46
  %68 = and i8 %67, 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, ptr %63, i64 2
  %72 = load i8, ptr %66, align 1, !tbaa !46
  br label %75

73:                                               ; preds = %59
  %74 = add i8 %62, -1
  br label %75

75:                                               ; preds = %73, %70, %65
  %76 = phi ptr [ %71, %70 ], [ %66, %65 ], [ %63, %73 ]
  %77 = phi i8 [ %72, %70 ], [ 0, %65 ], [ %74, %73 ]
  %78 = phi i8 [ %67, %70 ], [ %67, %65 ], [ %61, %73 ]
  %79 = add nuw nsw i64 %60, %30
  %80 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %79, i32 6
  store i8 %78, ptr %80, align 2, !tbaa !460
  %81 = add nuw nsw i64 %60, 1
  %82 = icmp eq i64 %81, %58
  br i1 %82, label %83, label %59, !llvm.loop !996

83:                                               ; preds = %75, %116
  %84 = phi i64 [ %119, %116 ], [ 0, %75 ]
  %85 = phi ptr [ %118, %116 ], [ %76, %75 ]
  %86 = phi i16 [ %117, %116 ], [ 0, %75 ]
  %87 = add nuw nsw i64 %84, %30
  %88 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %87
  %89 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %87, i32 6
  %90 = load i8, ptr %89, align 2, !tbaa !460
  %91 = zext i8 %90 to i32
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %103, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds i8, ptr %85, i64 1
  %96 = load i8, ptr %85, align 1, !tbaa !46
  %97 = and i32 %91, 16
  %98 = icmp eq i32 %97, 0
  %99 = zext i8 %96 to i16
  %100 = sub nsw i16 0, %99
  %101 = select i1 %98, i16 %100, i16 %99
  %102 = add i16 %101, %86
  br label %116

103:                                              ; preds = %83
  %104 = and i32 %91, 16
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %116

106:                                              ; preds = %103
  %107 = load i8, ptr %85, align 1, !tbaa !46
  %108 = zext i8 %107 to i16
  %109 = shl nuw i16 %108, 8
  %110 = getelementptr inbounds i8, ptr %85, i64 1
  %111 = load i8, ptr %110, align 1, !tbaa !46
  %112 = zext i8 %111 to i16
  %113 = or i16 %109, %112
  %114 = add i16 %113, %86
  %115 = getelementptr inbounds i8, ptr %85, i64 2
  br label %116

116:                                              ; preds = %106, %103, %94
  %117 = phi i16 [ %102, %94 ], [ %86, %103 ], [ %114, %106 ]
  %118 = phi ptr [ %95, %94 ], [ %85, %103 ], [ %115, %106 ]
  store i16 %117, ptr %88, align 2, !tbaa !470
  %119 = add nuw nsw i64 %84, 1
  %120 = icmp eq i64 %119, %58
  br i1 %120, label %121, label %83, !llvm.loop !997

121:                                              ; preds = %116, %153
  %122 = phi i64 [ %157, %153 ], [ 0, %116 ]
  %123 = phi ptr [ %155, %153 ], [ %118, %116 ]
  %124 = phi i16 [ %154, %153 ], [ 0, %116 ]
  %125 = add nuw nsw i64 %122, %30
  %126 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %125, i32 6
  %127 = load i8, ptr %126, align 2, !tbaa !460
  %128 = zext i8 %127 to i32
  %129 = and i32 %128, 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %140, label %131

131:                                              ; preds = %121
  %132 = getelementptr inbounds i8, ptr %123, i64 1
  %133 = load i8, ptr %123, align 1, !tbaa !46
  %134 = and i32 %128, 32
  %135 = icmp eq i32 %134, 0
  %136 = zext i8 %133 to i16
  %137 = sub nsw i16 0, %136
  %138 = select i1 %135, i16 %137, i16 %136
  %139 = add i16 %138, %124
  br label %153

140:                                              ; preds = %121
  %141 = and i32 %128, 32
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %153

143:                                              ; preds = %140
  %144 = load i8, ptr %123, align 1, !tbaa !46
  %145 = zext i8 %144 to i16
  %146 = shl nuw i16 %145, 8
  %147 = getelementptr inbounds i8, ptr %123, i64 1
  %148 = load i8, ptr %147, align 1, !tbaa !46
  %149 = zext i8 %148 to i16
  %150 = or i16 %146, %149
  %151 = add i16 %150, %124
  %152 = getelementptr inbounds i8, ptr %123, i64 2
  br label %153

153:                                              ; preds = %143, %140, %131
  %154 = phi i16 [ %139, %131 ], [ %124, %140 ], [ %151, %143 ]
  %155 = phi ptr [ %132, %131 ], [ %123, %140 ], [ %152, %143 ]
  %156 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %125, i32 1
  store i16 %154, ptr %156, align 2, !tbaa !469
  %157 = add nuw nsw i64 %122, 1
  %158 = icmp eq i64 %157, %58
  br i1 %158, label %159, label %121, !llvm.loop !998

159:                                              ; preds = %153, %327
  %160 = phi i32 [ %340, %327 ], [ 0, %153 ]
  %161 = phi i32 [ %341, %327 ], [ 0, %153 ]
  %162 = phi i32 [ %338, %327 ], [ 0, %153 ]
  %163 = phi i32 [ %337, %327 ], [ 0, %153 ]
  %164 = phi i32 [ %336, %327 ], [ 0, %153 ]
  %165 = phi i32 [ %335, %327 ], [ 0, %153 ]
  %166 = phi i32 [ %334, %327 ], [ 0, %153 ]
  %167 = phi i32 [ %333, %327 ], [ 0, %153 ]
  %168 = phi i32 [ %332, %327 ], [ 0, %153 ]
  %169 = phi i32 [ %331, %327 ], [ 0, %153 ]
  %170 = phi i32 [ %330, %327 ], [ 0, %153 ]
  %171 = phi i32 [ %329, %327 ], [ 0, %153 ]
  %172 = add nsw i32 %161, %29
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %173
  %175 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %173, i32 6
  %176 = load i8, ptr %175, align 2, !tbaa !460
  %177 = load <2 x i16>, ptr %174, align 2, !tbaa !121
  %178 = extractelement <2 x i16> %177, i64 0
  %179 = sext i16 %178 to i32
  %180 = extractelement <2 x i16> %177, i64 1
  %181 = sext i16 %180 to i32
  %182 = icmp eq i32 %163, %161
  br i1 %182, label %183, label %292

183:                                              ; preds = %159
  %184 = icmp eq i32 %161, 0
  br i1 %184, label %237, label %185

185:                                              ; preds = %183
  %186 = icmp eq i32 %170, 0
  %187 = icmp eq i32 %171, 0
  br i1 %186, label %216, label %188

188:                                              ; preds = %185
  br i1 %187, label %205, label %189

189:                                              ; preds = %188
  %190 = add nsw i32 %164, %168
  %191 = lshr i32 %190, 1
  %192 = add nsw i32 %165, %169
  %193 = lshr i32 %192, 1
  %194 = add nsw i32 %160, 1
  %195 = sext i32 %160 to i64
  %196 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %195
  %197 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %195, i32 6
  store i8 3, ptr %197, align 2, !tbaa !460
  %198 = trunc i32 %193 to i16
  store i16 %198, ptr %196, align 2, !tbaa !470
  %199 = trunc i32 %191 to i16
  %200 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %195, i32 1
  store i16 %199, ptr %200, align 2, !tbaa !469
  %201 = trunc i32 %169 to i16
  %202 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %195, i32 2
  store i16 %201, ptr %202, align 2, !tbaa !467
  %203 = trunc i32 %168 to i16
  %204 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %195, i32 3
  store i16 %203, ptr %204, align 2, !tbaa !466
  br label %205

205:                                              ; preds = %189, %188
  %206 = phi i32 [ %194, %189 ], [ %160, %188 ]
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %207
  %209 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %207, i32 6
  store i8 3, ptr %209, align 2, !tbaa !460
  %210 = trunc i32 %167 to i16
  store i16 %210, ptr %208, align 2, !tbaa !470
  %211 = trunc i32 %166 to i16
  %212 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %207, i32 1
  store i16 %211, ptr %212, align 2, !tbaa !469
  %213 = trunc i32 %165 to i16
  %214 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %207, i32 2
  store i16 %213, ptr %214, align 2, !tbaa !467
  %215 = trunc i32 %164 to i16
  br label %231

216:                                              ; preds = %185
  %217 = sext i32 %160 to i64
  %218 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %217
  %219 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %217, i32 6
  %220 = trunc i32 %167 to i16
  br i1 %187, label %227, label %221

221:                                              ; preds = %216
  store i8 3, ptr %219, align 2, !tbaa !460
  store i16 %220, ptr %218, align 2, !tbaa !470
  %222 = trunc i32 %166 to i16
  %223 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %217, i32 1
  store i16 %222, ptr %223, align 2, !tbaa !469
  %224 = trunc i32 %169 to i16
  %225 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %217, i32 2
  store i16 %224, ptr %225, align 2, !tbaa !467
  %226 = trunc i32 %168 to i16
  br label %231

227:                                              ; preds = %216
  store i8 2, ptr %219, align 2, !tbaa !460
  store i16 %220, ptr %218, align 2, !tbaa !470
  %228 = trunc i32 %166 to i16
  %229 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %217, i32 1
  store i16 %228, ptr %229, align 2, !tbaa !469
  %230 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %217, i32 2
  store i16 0, ptr %230, align 2, !tbaa !467
  br label %231

231:                                              ; preds = %205, %221, %227
  %232 = phi i64 [ %217, %221 ], [ %217, %227 ], [ %207, %205 ]
  %233 = phi i16 [ %226, %221 ], [ 0, %227 ], [ %215, %205 ]
  %234 = phi i32 [ %160, %221 ], [ %160, %227 ], [ %206, %205 ]
  %235 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %232, i32 3
  store i16 %233, ptr %235, align 2, !tbaa !466
  %236 = add nsw i32 %234, 1
  br label %237

237:                                              ; preds = %231, %183
  %238 = phi i32 [ %236, %231 ], [ %160, %183 ]
  %239 = and i8 %176, 1
  %240 = icmp eq i8 %239, 0
  %241 = zext i1 %240 to i32
  br i1 %240, label %242, label %266

242:                                              ; preds = %237
  %243 = add nsw i32 %172, 1
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %244
  %246 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %244, i32 6
  %247 = load i8, ptr %246, align 2, !tbaa !460
  %248 = and i8 %247, 1
  %249 = icmp eq i8 %248, 0
  %250 = load i16, ptr %245, align 2, !tbaa !470
  br i1 %249, label %251, label %260

251:                                              ; preds = %242
  %252 = sext i16 %250 to i32
  %253 = add nsw i32 %252, %179
  %254 = ashr i32 %253, 1
  %255 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %244, i32 1
  %256 = load i16, ptr %255, align 2, !tbaa !469
  %257 = sext i16 %256 to i32
  %258 = add nsw i32 %257, %181
  %259 = ashr i32 %258, 1
  br label %266

260:                                              ; preds = %242
  %261 = zext i16 %250 to i32
  %262 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %244, i32 1
  %263 = load i16, ptr %262, align 2, !tbaa !469
  %264 = zext i16 %263 to i32
  %265 = add nsw i32 %161, 1
  br label %266

266:                                              ; preds = %260, %251, %237
  %267 = phi i32 [ %261, %260 ], [ %254, %251 ], [ %179, %237 ]
  %268 = phi i32 [ %264, %260 ], [ %259, %251 ], [ %181, %237 ]
  %269 = phi i32 [ %179, %260 ], [ %179, %251 ], [ %165, %237 ]
  %270 = phi i32 [ %181, %260 ], [ %181, %251 ], [ %164, %237 ]
  %271 = phi i32 [ %265, %260 ], [ %161, %251 ], [ %161, %237 ]
  %272 = add nsw i32 %238, 1
  %273 = sext i32 %238 to i64
  %274 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %273
  %275 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %273, i32 6
  store i8 1, ptr %275, align 2, !tbaa !460
  %276 = trunc i32 %267 to i16
  store i16 %276, ptr %274, align 2, !tbaa !470
  %277 = trunc i32 %268 to i16
  %278 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %273, i32 1
  store i16 %277, ptr %278, align 2, !tbaa !469
  %279 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %273, i32 2
  store <2 x i16> zeroinitializer, ptr %279, align 2, !tbaa !121
  %280 = shl nsw i32 %162, 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i8, ptr %28, i64 %281
  %283 = load i8, ptr %282, align 1, !tbaa !46
  %284 = getelementptr i8, ptr %282, i64 1
  %285 = load i8, ptr %284, align 1, !tbaa !46
  %286 = zext i8 %283 to i32
  %287 = shl nuw nsw i32 %286, 8
  %288 = zext i8 %285 to i32
  %289 = or i32 %287, %288
  %290 = add nuw nsw i32 %289, 1
  %291 = add nsw i32 %162, 1
  br label %327

292:                                              ; preds = %159
  %293 = and i8 %176, 1
  %294 = icmp eq i8 %293, 0
  %295 = icmp eq i32 %171, 0
  br i1 %294, label %296, label %313

296:                                              ; preds = %292
  br i1 %295, label %327, label %297

297:                                              ; preds = %296
  %298 = add nsw i32 %168, %181
  %299 = lshr i32 %298, 1
  %300 = add nsw i32 %169, %179
  %301 = lshr i32 %300, 1
  %302 = add nsw i32 %160, 1
  %303 = sext i32 %160 to i64
  %304 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %303
  %305 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %303, i32 6
  store i8 3, ptr %305, align 2, !tbaa !460
  %306 = trunc i32 %301 to i16
  store i16 %306, ptr %304, align 2, !tbaa !470
  %307 = trunc i32 %299 to i16
  %308 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %303, i32 1
  store i16 %307, ptr %308, align 2, !tbaa !469
  %309 = trunc i32 %169 to i16
  %310 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %303, i32 2
  store i16 %309, ptr %310, align 2, !tbaa !467
  %311 = trunc i32 %168 to i16
  %312 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %303, i32 3
  store i16 %311, ptr %312, align 2, !tbaa !466
  br label %327

313:                                              ; preds = %292
  %314 = sext i32 %160 to i64
  %315 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %314
  %316 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %314, i32 6
  br i1 %295, label %321, label %317

317:                                              ; preds = %313
  store i8 3, ptr %316, align 2, !tbaa !460
  store <2 x i16> %177, ptr %315, align 2, !tbaa !121
  %318 = trunc i32 %169 to i16
  %319 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %314, i32 2
  store i16 %318, ptr %319, align 2, !tbaa !467
  %320 = trunc i32 %168 to i16
  br label %323

321:                                              ; preds = %313
  store i8 2, ptr %316, align 2, !tbaa !460
  store <2 x i16> %177, ptr %315, align 2, !tbaa !121
  %322 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %314, i32 2
  store i16 0, ptr %322, align 2, !tbaa !467
  br label %323

323:                                              ; preds = %321, %317
  %324 = phi i16 [ 0, %321 ], [ %320, %317 ]
  %325 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %314, i32 3
  store i16 %324, ptr %325, align 2, !tbaa !466
  %326 = add nsw i32 %160, 1
  br label %327

327:                                              ; preds = %323, %297, %296, %266
  %328 = phi i1 [ true, %323 ], [ false, %297 ], [ false, %296 ], [ true, %266 ]
  %329 = phi i32 [ 0, %323 ], [ 1, %297 ], [ 1, %296 ], [ 0, %266 ]
  %330 = phi i32 [ %170, %323 ], [ %170, %297 ], [ %170, %296 ], [ %241, %266 ]
  %331 = phi i32 [ %169, %323 ], [ %179, %297 ], [ %179, %296 ], [ %169, %266 ]
  %332 = phi i32 [ %168, %323 ], [ %181, %297 ], [ %181, %296 ], [ %168, %266 ]
  %333 = phi i32 [ %167, %323 ], [ %167, %297 ], [ %167, %296 ], [ %267, %266 ]
  %334 = phi i32 [ %166, %323 ], [ %166, %297 ], [ %166, %296 ], [ %268, %266 ]
  %335 = phi i32 [ %165, %323 ], [ %165, %297 ], [ %165, %296 ], [ %269, %266 ]
  %336 = phi i32 [ %164, %323 ], [ %164, %297 ], [ %164, %296 ], [ %270, %266 ]
  %337 = phi i32 [ %163, %323 ], [ %163, %297 ], [ %163, %296 ], [ %290, %266 ]
  %338 = phi i32 [ %162, %323 ], [ %162, %297 ], [ %162, %296 ], [ %291, %266 ]
  %339 = phi i32 [ %161, %323 ], [ %161, %297 ], [ %161, %296 ], [ %271, %266 ]
  %340 = phi i32 [ %326, %323 ], [ %302, %297 ], [ %160, %296 ], [ %272, %266 ]
  %341 = add nsw i32 %339, 1
  %342 = icmp slt i32 %339, %42
  br i1 %342, label %159, label %343, !llvm.loop !999

343:                                              ; preds = %327
  %344 = icmp eq i32 %330, 0
  br i1 %344, label %373, label %345

345:                                              ; preds = %343
  br i1 %328, label %362, label %346

346:                                              ; preds = %345
  %347 = add nsw i32 %336, %332
  %348 = lshr i32 %347, 1
  %349 = add nsw i32 %335, %331
  %350 = lshr i32 %349, 1
  %351 = add nsw i32 %340, 1
  %352 = sext i32 %340 to i64
  %353 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %352
  %354 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %352, i32 6
  store i8 3, ptr %354, align 2, !tbaa !460
  %355 = trunc i32 %350 to i16
  store i16 %355, ptr %353, align 2, !tbaa !470
  %356 = trunc i32 %348 to i16
  %357 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %352, i32 1
  store i16 %356, ptr %357, align 2, !tbaa !469
  %358 = trunc i32 %331 to i16
  %359 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %352, i32 2
  store i16 %358, ptr %359, align 2, !tbaa !467
  %360 = trunc i32 %332 to i16
  %361 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %352, i32 3
  store i16 %360, ptr %361, align 2, !tbaa !466
  br label %362

362:                                              ; preds = %346, %345
  %363 = phi i32 [ %351, %346 ], [ %340, %345 ]
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %364
  %366 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %364, i32 6
  store i8 3, ptr %366, align 2, !tbaa !460
  %367 = trunc i32 %333 to i16
  store i16 %367, ptr %365, align 2, !tbaa !470
  %368 = trunc i32 %334 to i16
  %369 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %364, i32 1
  store i16 %368, ptr %369, align 2, !tbaa !469
  %370 = trunc i32 %335 to i16
  %371 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %364, i32 2
  store i16 %370, ptr %371, align 2, !tbaa !467
  %372 = trunc i32 %336 to i16
  br label %388

373:                                              ; preds = %343
  %374 = sext i32 %340 to i64
  %375 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %374
  %376 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %374, i32 6
  %377 = trunc i32 %333 to i16
  br i1 %328, label %384, label %378

378:                                              ; preds = %373
  store i8 3, ptr %376, align 2, !tbaa !460
  store i16 %377, ptr %375, align 2, !tbaa !470
  %379 = trunc i32 %334 to i16
  %380 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %374, i32 1
  store i16 %379, ptr %380, align 2, !tbaa !469
  %381 = trunc i32 %331 to i16
  %382 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %374, i32 2
  store i16 %381, ptr %382, align 2, !tbaa !467
  %383 = trunc i32 %332 to i16
  br label %388

384:                                              ; preds = %373
  store i8 2, ptr %376, align 2, !tbaa !460
  store i16 %377, ptr %375, align 2, !tbaa !470
  %385 = trunc i32 %334 to i16
  %386 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %374, i32 1
  store i16 %385, ptr %386, align 2, !tbaa !469
  %387 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %374, i32 2
  store i16 0, ptr %387, align 2, !tbaa !467
  br label %388

388:                                              ; preds = %384, %378, %362
  %389 = phi i64 [ %374, %378 ], [ %374, %384 ], [ %364, %362 ]
  %390 = phi i16 [ %383, %378 ], [ 0, %384 ], [ %372, %362 ]
  %391 = phi i32 [ %340, %378 ], [ %340, %384 ], [ %363, %362 ]
  %392 = getelementptr inbounds %struct.stbtt_vertex, ptr %47, i64 %389, i32 3
  store i16 %390, ptr %392, align 2, !tbaa !466
  %393 = add nsw i32 %391, 1
  br label %770

394:                                              ; preds = %15
  %395 = icmp slt i16 %24, 0
  br i1 %395, label %396, label %770

396:                                              ; preds = %394
  %397 = getelementptr inbounds i8, ptr %17, i64 10
  br label %398

398:                                              ; preds = %396, %764
  %399 = phi ptr [ null, %396 ], [ %766, %764 ]
  %400 = phi i32 [ 0, %396 ], [ %765, %764 ]
  %401 = phi ptr [ %397, %396 ], [ %530, %764 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #39
  store ptr null, ptr %6, align 8, !tbaa !117
  %402 = getelementptr i8, ptr %401, i64 1
  %403 = load i8, ptr %402, align 1, !tbaa !46
  %404 = zext i8 %403 to i32
  %405 = getelementptr inbounds i8, ptr %401, i64 2
  %406 = load i8, ptr %405, align 1, !tbaa !46
  %407 = getelementptr i8, ptr %401, i64 3
  %408 = load i8, ptr %407, align 1, !tbaa !46
  %409 = zext i8 %406 to i32
  %410 = shl nuw nsw i32 %409, 8
  %411 = zext i8 %408 to i32
  %412 = or i32 %410, %411
  %413 = getelementptr inbounds i8, ptr %401, i64 4
  %414 = and i32 %404, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %444, label %416

416:                                              ; preds = %398
  %417 = and i32 %404, 1
  %418 = icmp eq i32 %417, 0
  %419 = load i8, ptr %413, align 1, !tbaa !46
  br i1 %418, label %437, label %420

420:                                              ; preds = %416
  %421 = getelementptr i8, ptr %401, i64 5
  %422 = getelementptr inbounds i8, ptr %401, i64 6
  %423 = load i8, ptr %422, align 1, !tbaa !46
  %424 = getelementptr i8, ptr %401, i64 7
  %425 = load i8, ptr %421, align 1, !tbaa !46
  %426 = load i8, ptr %424, align 1, !tbaa !46
  %427 = insertelement <2 x i8> poison, i8 %419, i64 0
  %428 = insertelement <2 x i8> %427, i8 %423, i64 1
  %429 = zext <2 x i8> %428 to <2 x i16>
  %430 = shl nuw <2 x i16> %429, <i16 8, i16 8>
  %431 = insertelement <2 x i8> poison, i8 %425, i64 0
  %432 = insertelement <2 x i8> %431, i8 %426, i64 1
  %433 = zext <2 x i8> %432 to <2 x i16>
  %434 = or <2 x i16> %430, %433
  %435 = sitofp <2 x i16> %434 to <2 x float>
  %436 = getelementptr inbounds i8, ptr %401, i64 8
  br label %445

437:                                              ; preds = %416
  %438 = getelementptr inbounds i8, ptr %401, i64 5
  %439 = load i8, ptr %438, align 1, !tbaa !46
  %440 = insertelement <2 x i8> poison, i8 %419, i64 0
  %441 = insertelement <2 x i8> %440, i8 %439, i64 1
  %442 = sitofp <2 x i8> %441 to <2 x float>
  %443 = getelementptr inbounds i8, ptr %401, i64 6
  br label %445

444:                                              ; preds = %398
  tail call void @_wassert(ptr noundef nonnull @"??_C@_13COJANIEC@?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 1843)
  br label %445

445:                                              ; preds = %444, %437, %420
  %446 = phi ptr [ %436, %420 ], [ %443, %437 ], [ %413, %444 ]
  %447 = phi <2 x float> [ %435, %420 ], [ %442, %437 ], [ zeroinitializer, %444 ]
  %448 = shufflevector <2 x float> %447, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %449 = and i32 %404, 8
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %464, label %451

451:                                              ; preds = %445
  %452 = load i8, ptr %446, align 1, !tbaa !46
  %453 = getelementptr i8, ptr %446, i64 1
  %454 = load i8, ptr %453, align 1, !tbaa !46
  %455 = zext i8 %452 to i16
  %456 = shl nuw i16 %455, 8
  %457 = zext i8 %454 to i16
  %458 = or i16 %456, %457
  %459 = sitofp i16 %458 to float
  %460 = fmul fast float %459, 0x3F10000000000000
  %461 = getelementptr inbounds i8, ptr %446, i64 2
  %462 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %460, i64 0
  %463 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %460, i64 1
  br label %529

464:                                              ; preds = %445
  %465 = and i32 %404, 64
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %490, label %467

467:                                              ; preds = %464
  %468 = load i8, ptr %446, align 1, !tbaa !46
  %469 = getelementptr i8, ptr %446, i64 1
  %470 = load i8, ptr %469, align 1, !tbaa !46
  %471 = zext i8 %468 to i16
  %472 = shl nuw i16 %471, 8
  %473 = zext i8 %470 to i16
  %474 = or i16 %472, %473
  %475 = sitofp i16 %474 to float
  %476 = fmul fast float %475, 0x3F10000000000000
  %477 = getelementptr inbounds i8, ptr %446, i64 2
  %478 = load i8, ptr %477, align 1, !tbaa !46
  %479 = getelementptr i8, ptr %446, i64 3
  %480 = load i8, ptr %479, align 1, !tbaa !46
  %481 = zext i8 %478 to i16
  %482 = shl nuw i16 %481, 8
  %483 = zext i8 %480 to i16
  %484 = or i16 %482, %483
  %485 = sitofp i16 %484 to float
  %486 = fmul fast float %485, 0x3F10000000000000
  %487 = getelementptr inbounds i8, ptr %446, i64 4
  %488 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %476, i64 0
  %489 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %486, i64 1
  br label %529

490:                                              ; preds = %464
  %491 = icmp sgt i8 %403, -1
  br i1 %491, label %529, label %492

492:                                              ; preds = %490
  %493 = load i8, ptr %446, align 1, !tbaa !46
  %494 = getelementptr i8, ptr %446, i64 1
  %495 = load i8, ptr %494, align 1, !tbaa !46
  %496 = getelementptr inbounds i8, ptr %446, i64 2
  %497 = load i8, ptr %496, align 1, !tbaa !46
  %498 = getelementptr i8, ptr %446, i64 3
  %499 = load i8, ptr %498, align 1, !tbaa !46
  %500 = getelementptr inbounds i8, ptr %446, i64 4
  %501 = getelementptr i8, ptr %446, i64 5
  %502 = getelementptr inbounds i8, ptr %446, i64 6
  %503 = getelementptr i8, ptr %446, i64 7
  %504 = insertelement <2 x i8> poison, i8 %493, i64 0
  %505 = insertelement <2 x i8> %504, i8 %497, i64 1
  %506 = zext <2 x i8> %505 to <2 x i16>
  %507 = shl nuw <2 x i16> %506, <i16 8, i16 8>
  %508 = insertelement <2 x i8> poison, i8 %495, i64 0
  %509 = insertelement <2 x i8> %508, i8 %499, i64 1
  %510 = zext <2 x i8> %509 to <2 x i16>
  %511 = or <2 x i16> %507, %510
  %512 = sitofp <2 x i16> %511 to <2 x float>
  %513 = fmul fast <2 x float> %512, <float 0x3F10000000000000, float 0x3F10000000000000>
  %514 = load i8, ptr %500, align 1, !tbaa !46
  %515 = load i8, ptr %501, align 1, !tbaa !46
  %516 = load i8, ptr %502, align 1, !tbaa !46
  %517 = load i8, ptr %503, align 1, !tbaa !46
  %518 = insertelement <2 x i8> poison, i8 %514, i64 0
  %519 = insertelement <2 x i8> %518, i8 %516, i64 1
  %520 = zext <2 x i8> %519 to <2 x i16>
  %521 = shl nuw <2 x i16> %520, <i16 8, i16 8>
  %522 = insertelement <2 x i8> poison, i8 %515, i64 0
  %523 = insertelement <2 x i8> %522, i8 %517, i64 1
  %524 = zext <2 x i8> %523 to <2 x i16>
  %525 = or <2 x i16> %521, %524
  %526 = sitofp <2 x i16> %525 to <2 x float>
  %527 = fmul fast <2 x float> %526, <float 0x3F10000000000000, float 0x3F10000000000000>
  %528 = getelementptr inbounds i8, ptr %446, i64 8
  br label %529

529:                                              ; preds = %492, %490, %467, %451
  %530 = phi ptr [ %461, %451 ], [ %487, %467 ], [ %528, %492 ], [ %446, %490 ]
  %531 = phi <2 x float> [ %462, %451 ], [ %488, %467 ], [ %513, %492 ], [ <float 1.000000e+00, float 0.000000e+00>, %490 ]
  %532 = phi <2 x float> [ %463, %451 ], [ %489, %467 ], [ %527, %492 ], [ <float 0.000000e+00, float 1.000000e+00>, %490 ]
  %533 = shufflevector <2 x float> %532, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %534 = shufflevector <2 x float> %531, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %535 = shufflevector <2 x float> %531, <2 x float> %532, <2 x i32> <i32 0, i32 2>
  %536 = fmul fast <2 x float> %535, %535
  %537 = shufflevector <2 x float> %531, <2 x float> %532, <2 x i32> <i32 1, i32 3>
  %538 = fmul fast <2 x float> %537, %537
  %539 = fadd fast <2 x float> %536, %538
  %540 = tail call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %539)
  %541 = shufflevector <2 x float> %540, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %542 = call fastcc noundef i32 @"?stbtt_GetGlyphShape@@YAHPEBUstbtt_fontinfo@@HPEAPEAUstbtt_vertex@@@Z"(ptr noundef %0, i32 noundef %412, ptr noundef nonnull %6)
  %543 = icmp sgt i32 %542, 0
  br i1 %543, label %544, label %764

544:                                              ; preds = %529
  %545 = load ptr, ptr %6, align 8, !tbaa !117
  %546 = zext i32 %542 to i64
  %547 = icmp ult i32 %542, 9
  br i1 %547, label %712, label %548

548:                                              ; preds = %544
  %549 = and i64 %546, 7
  %550 = icmp eq i64 %549, 0
  %551 = select i1 %550, i64 8, i64 %549
  %552 = sub nsw i64 %546, %551
  %553 = shufflevector <2 x float> %531, <2 x float> poison, <8 x i32> zeroinitializer
  %554 = shufflevector <2 x float> %532, <2 x float> poison, <8 x i32> zeroinitializer
  %555 = shufflevector <2 x float> %447, <2 x float> poison, <8 x i32> zeroinitializer
  %556 = shufflevector <2 x float> %540, <2 x float> poison, <8 x i32> zeroinitializer
  %557 = shufflevector <2 x float> %531, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %558 = shufflevector <2 x float> %532, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %559 = shufflevector <2 x float> %447, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %560 = shufflevector <2 x float> %540, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  br label %561

561:                                              ; preds = %561, %548
  %562 = phi i64 [ 0, %548 ], [ %710, %561 ]
  %563 = or i64 %562, 1
  %564 = or i64 %562, 2
  %565 = or i64 %562, 3
  %566 = or i64 %562, 4
  %567 = or i64 %562, 5
  %568 = or i64 %562, 6
  %569 = or i64 %562, 7
  %570 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %562
  %571 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %563
  %572 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %564
  %573 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %565
  %574 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %566
  %575 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %567
  %576 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %568
  %577 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %569
  %578 = load i16, ptr %570, align 2, !tbaa !470
  %579 = load i16, ptr %571, align 2, !tbaa !470
  %580 = load i16, ptr %572, align 2, !tbaa !470
  %581 = load i16, ptr %573, align 2, !tbaa !470
  %582 = load i16, ptr %574, align 2, !tbaa !470
  %583 = load i16, ptr %575, align 2, !tbaa !470
  %584 = load i16, ptr %576, align 2, !tbaa !470
  %585 = load i16, ptr %577, align 2, !tbaa !470
  %586 = insertelement <8 x i16> poison, i16 %578, i64 0
  %587 = insertelement <8 x i16> %586, i16 %579, i64 1
  %588 = insertelement <8 x i16> %587, i16 %580, i64 2
  %589 = insertelement <8 x i16> %588, i16 %581, i64 3
  %590 = insertelement <8 x i16> %589, i16 %582, i64 4
  %591 = insertelement <8 x i16> %590, i16 %583, i64 5
  %592 = insertelement <8 x i16> %591, i16 %584, i64 6
  %593 = insertelement <8 x i16> %592, i16 %585, i64 7
  %594 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %562, i32 1
  %595 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %563, i32 1
  %596 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %564, i32 1
  %597 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %565, i32 1
  %598 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %566, i32 1
  %599 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %567, i32 1
  %600 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %568, i32 1
  %601 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %569, i32 1
  %602 = load i16, ptr %594, align 2, !tbaa !469
  %603 = load i16, ptr %595, align 2, !tbaa !469
  %604 = load i16, ptr %596, align 2, !tbaa !469
  %605 = load i16, ptr %597, align 2, !tbaa !469
  %606 = load i16, ptr %598, align 2, !tbaa !469
  %607 = load i16, ptr %599, align 2, !tbaa !469
  %608 = load i16, ptr %600, align 2, !tbaa !469
  %609 = load i16, ptr %601, align 2, !tbaa !469
  %610 = insertelement <8 x i16> poison, i16 %602, i64 0
  %611 = insertelement <8 x i16> %610, i16 %603, i64 1
  %612 = insertelement <8 x i16> %611, i16 %604, i64 2
  %613 = insertelement <8 x i16> %612, i16 %605, i64 3
  %614 = insertelement <8 x i16> %613, i16 %606, i64 4
  %615 = insertelement <8 x i16> %614, i16 %607, i64 5
  %616 = insertelement <8 x i16> %615, i16 %608, i64 6
  %617 = insertelement <8 x i16> %616, i16 %609, i64 7
  %618 = sitofp <8 x i16> %593 to <8 x float>
  %619 = fmul fast <8 x float> %553, %618
  %620 = sitofp <8 x i16> %617 to <8 x float>
  %621 = fmul fast <8 x float> %554, %620
  %622 = fadd fast <8 x float> %619, %555
  %623 = fadd fast <8 x float> %622, %621
  %624 = fmul fast <8 x float> %623, %556
  %625 = fptosi <8 x float> %624 to <8 x i16>
  %626 = fmul fast <8 x float> %557, %618
  %627 = fmul fast <8 x float> %558, %620
  %628 = fadd fast <8 x float> %626, %559
  %629 = fadd fast <8 x float> %628, %627
  %630 = fmul fast <8 x float> %629, %560
  %631 = fptosi <8 x float> %630 to <8 x i16>
  %632 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 0, i32 8>
  store <2 x i16> %632, ptr %570, align 2, !tbaa !121
  %633 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 1, i32 9>
  store <2 x i16> %633, ptr %571, align 2, !tbaa !121
  %634 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 2, i32 10>
  store <2 x i16> %634, ptr %572, align 2, !tbaa !121
  %635 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 3, i32 11>
  store <2 x i16> %635, ptr %573, align 2, !tbaa !121
  %636 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 4, i32 12>
  store <2 x i16> %636, ptr %574, align 2, !tbaa !121
  %637 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 5, i32 13>
  store <2 x i16> %637, ptr %575, align 2, !tbaa !121
  %638 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 6, i32 14>
  store <2 x i16> %638, ptr %576, align 2, !tbaa !121
  %639 = shufflevector <8 x i16> %625, <8 x i16> %631, <2 x i32> <i32 7, i32 15>
  store <2 x i16> %639, ptr %577, align 2, !tbaa !121
  %640 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %562, i32 2
  %641 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %563, i32 2
  %642 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %564, i32 2
  %643 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %565, i32 2
  %644 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %566, i32 2
  %645 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %567, i32 2
  %646 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %568, i32 2
  %647 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %569, i32 2
  %648 = load i16, ptr %640, align 2, !tbaa !467
  %649 = load i16, ptr %641, align 2, !tbaa !467
  %650 = load i16, ptr %642, align 2, !tbaa !467
  %651 = load i16, ptr %643, align 2, !tbaa !467
  %652 = load i16, ptr %644, align 2, !tbaa !467
  %653 = load i16, ptr %645, align 2, !tbaa !467
  %654 = load i16, ptr %646, align 2, !tbaa !467
  %655 = load i16, ptr %647, align 2, !tbaa !467
  %656 = insertelement <8 x i16> poison, i16 %648, i64 0
  %657 = insertelement <8 x i16> %656, i16 %649, i64 1
  %658 = insertelement <8 x i16> %657, i16 %650, i64 2
  %659 = insertelement <8 x i16> %658, i16 %651, i64 3
  %660 = insertelement <8 x i16> %659, i16 %652, i64 4
  %661 = insertelement <8 x i16> %660, i16 %653, i64 5
  %662 = insertelement <8 x i16> %661, i16 %654, i64 6
  %663 = insertelement <8 x i16> %662, i16 %655, i64 7
  %664 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %562, i32 3
  %665 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %563, i32 3
  %666 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %564, i32 3
  %667 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %565, i32 3
  %668 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %566, i32 3
  %669 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %567, i32 3
  %670 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %568, i32 3
  %671 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %569, i32 3
  %672 = load i16, ptr %664, align 2, !tbaa !466
  %673 = load i16, ptr %665, align 2, !tbaa !466
  %674 = load i16, ptr %666, align 2, !tbaa !466
  %675 = load i16, ptr %667, align 2, !tbaa !466
  %676 = load i16, ptr %668, align 2, !tbaa !466
  %677 = load i16, ptr %669, align 2, !tbaa !466
  %678 = load i16, ptr %670, align 2, !tbaa !466
  %679 = load i16, ptr %671, align 2, !tbaa !466
  %680 = insertelement <8 x i16> poison, i16 %672, i64 0
  %681 = insertelement <8 x i16> %680, i16 %673, i64 1
  %682 = insertelement <8 x i16> %681, i16 %674, i64 2
  %683 = insertelement <8 x i16> %682, i16 %675, i64 3
  %684 = insertelement <8 x i16> %683, i16 %676, i64 4
  %685 = insertelement <8 x i16> %684, i16 %677, i64 5
  %686 = insertelement <8 x i16> %685, i16 %678, i64 6
  %687 = insertelement <8 x i16> %686, i16 %679, i64 7
  %688 = sitofp <8 x i16> %663 to <8 x float>
  %689 = fmul fast <8 x float> %553, %688
  %690 = sitofp <8 x i16> %687 to <8 x float>
  %691 = fmul fast <8 x float> %554, %690
  %692 = fadd fast <8 x float> %689, %555
  %693 = fadd fast <8 x float> %692, %691
  %694 = fmul fast <8 x float> %693, %556
  %695 = fptosi <8 x float> %694 to <8 x i16>
  %696 = fmul fast <8 x float> %557, %688
  %697 = fmul fast <8 x float> %558, %690
  %698 = fadd fast <8 x float> %696, %559
  %699 = fadd fast <8 x float> %698, %697
  %700 = fmul fast <8 x float> %699, %560
  %701 = fptosi <8 x float> %700 to <8 x i16>
  %702 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 0, i32 8>
  store <2 x i16> %702, ptr %640, align 2, !tbaa !121
  %703 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 1, i32 9>
  store <2 x i16> %703, ptr %641, align 2, !tbaa !121
  %704 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 2, i32 10>
  store <2 x i16> %704, ptr %642, align 2, !tbaa !121
  %705 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 3, i32 11>
  store <2 x i16> %705, ptr %643, align 2, !tbaa !121
  %706 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 4, i32 12>
  store <2 x i16> %706, ptr %644, align 2, !tbaa !121
  %707 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 5, i32 13>
  store <2 x i16> %707, ptr %645, align 2, !tbaa !121
  %708 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 6, i32 14>
  store <2 x i16> %708, ptr %646, align 2, !tbaa !121
  %709 = shufflevector <8 x i16> %695, <8 x i16> %701, <2 x i32> <i32 7, i32 15>
  store <2 x i16> %709, ptr %647, align 2, !tbaa !121
  %710 = add nuw i64 %562, 8
  %711 = icmp eq i64 %710, %552
  br i1 %711, label %712, label %561, !llvm.loop !1000

712:                                              ; preds = %561, %544
  %713 = phi i64 [ 0, %544 ], [ %552, %561 ]
  br label %714

714:                                              ; preds = %712, %714
  %715 = phi i64 [ %738, %714 ], [ %713, %712 ]
  %716 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %715
  %717 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %715, i32 1
  %718 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %715, i32 2
  %719 = getelementptr inbounds %struct.stbtt_vertex, ptr %545, i64 %715, i32 3
  %720 = load i16, ptr %716, align 2, !tbaa !470
  %721 = load i16, ptr %717, align 2, !tbaa !469
  %722 = load i16, ptr %718, align 2, !tbaa !467
  %723 = load i16, ptr %719, align 2, !tbaa !466
  %724 = insertelement <2 x i16> poison, i16 %720, i64 0
  %725 = insertelement <2 x i16> %724, i16 %722, i64 1
  %726 = sitofp <2 x i16> %725 to <2 x float>
  %727 = shufflevector <2 x float> %726, <2 x float> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %728 = insertelement <2 x i16> poison, i16 %721, i64 0
  %729 = insertelement <2 x i16> %728, i16 %723, i64 1
  %730 = sitofp <2 x i16> %729 to <2 x float>
  %731 = shufflevector <2 x float> %730, <2 x float> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %732 = fmul fast <4 x float> %534, %727
  %733 = fmul fast <4 x float> %533, %731
  %734 = fadd fast <4 x float> %732, %448
  %735 = fadd fast <4 x float> %734, %733
  %736 = fmul fast <4 x float> %735, %541
  %737 = fptosi <4 x float> %736 to <4 x i16>
  store <4 x i16> %737, ptr %716, align 2, !tbaa !121
  %738 = add nuw nsw i64 %715, 1
  %739 = icmp eq i64 %738, %546
  br i1 %739, label %740, label %714, !llvm.loop !1001

740:                                              ; preds = %714
  %741 = add nsw i32 %542, %400
  %742 = sext i32 %741 to i64
  %743 = mul nsw i64 %742, 14
  %744 = tail call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %743)
  %745 = icmp eq ptr %744, null
  br i1 %745, label %746, label %749

746:                                              ; preds = %740
  %747 = icmp eq ptr %399, null
  br i1 %747, label %769, label %748

748:                                              ; preds = %746
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %399)
  br label %769

749:                                              ; preds = %740
  %750 = icmp sgt i32 %400, 0
  %751 = icmp ne ptr %399, null
  %752 = select i1 %750, i1 %751, i1 false
  br i1 %752, label %753, label %758

753:                                              ; preds = %749
  %754 = zext i32 %400 to i64
  %755 = mul nuw nsw i64 %754, 14
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %744, ptr nonnull align 2 %399, i64 %755, i1 false)
  %756 = getelementptr inbounds %struct.stbtt_vertex, ptr %744, i64 %754
  %757 = mul nuw nsw i64 %546, 14
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %756, ptr nonnull align 2 %545, i64 %757, i1 false)
  br label %762

758:                                              ; preds = %749
  %759 = sext i32 %400 to i64
  %760 = getelementptr inbounds %struct.stbtt_vertex, ptr %744, i64 %759
  %761 = mul nuw nsw i64 %546, 14
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %760, ptr nonnull align 2 %545, i64 %761, i1 false)
  br i1 %751, label %762, label %763

762:                                              ; preds = %753, %758
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %399)
  br label %763

763:                                              ; preds = %762, %758
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %545)
  br label %764

764:                                              ; preds = %529, %763
  %765 = phi i32 [ %741, %763 ], [ %400, %529 ]
  %766 = phi ptr [ %744, %763 ], [ %399, %529 ]
  %767 = and i32 %404, 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %770, label %398, !llvm.loop !1002

769:                                              ; preds = %748, %746
  tail call void @"?MemFree@ImGui@@YAXPEAX@Z"(ptr noundef nonnull %545)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #39
  br label %795

770:                                              ; preds = %764, %388, %394
  %771 = phi i32 [ %393, %388 ], [ 0, %394 ], [ %765, %764 ]
  %772 = phi ptr [ %47, %388 ], [ null, %394 ], [ %766, %764 ]
  store ptr %772, ptr %2, align 8, !tbaa !117
  br label %795

773:                                              ; preds = %3
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %4) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %4, i8 0, i64 56, i1 false)
  store i32 1, ptr %4, align 8
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %5) #39
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %5, i8 0, i64 56, i1 false)
  %774 = call fastcc noundef i32 @"?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z"(ptr noundef nonnull %0, i32 noundef %1, ptr noundef nonnull %4)
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %792, label %776

776:                                              ; preds = %773
  %777 = getelementptr inbounds %struct.stbtt__csctx, ptr %4, i64 0, i32 11
  %778 = load i32, ptr %777, align 8, !tbaa !973
  %779 = sext i32 %778 to i64
  %780 = mul nsw i64 %779, 14
  %781 = call noundef ptr @"?MemAlloc@ImGui@@YAPEAX_K@Z"(i64 noundef %780)
  store ptr %781, ptr %2, align 8, !tbaa !117
  %782 = getelementptr inbounds %struct.stbtt__csctx, ptr %5, i64 0, i32 10
  store ptr %781, ptr %782, align 8, !tbaa !974
  %783 = call fastcc noundef i32 @"?stbtt__run_charstring@@YAHPEBUstbtt_fontinfo@@HPEAUstbtt__csctx@@@Z"(ptr noundef nonnull %0, i32 noundef %1, ptr noundef nonnull %5)
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %792, label %785

785:                                              ; preds = %776
  %786 = getelementptr inbounds %struct.stbtt__csctx, ptr %5, i64 0, i32 11
  %787 = load i32, ptr %786, align 8, !tbaa !973
  %788 = load i32, ptr %777, align 8, !tbaa !973
  %789 = icmp eq i32 %787, %788
  br i1 %789, label %793, label %790

790:                                              ; preds = %785
  call void @_wassert(ptr noundef nonnull @"??_C@_1GE@KABFAMEA@?$AAo?$AAu?$AAt?$AAp?$AAu?$AAt?$AA_?$AAc?$AAt?$AAx?$AA?4?$AAn?$AAu?$AAm?$AA_?$AAv?$AAe?$AAr?$AAt?$AAi?$AAc?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAc?$AAo?$AAu?$AAn?$AAt@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 2283)
  %791 = load i32, ptr %786, align 8, !tbaa !973
  br label %793

792:                                              ; preds = %776, %773
  store ptr null, ptr %2, align 8, !tbaa !117
  br label %793

793:                                              ; preds = %785, %790, %792
  %794 = phi i32 [ 0, %792 ], [ %791, %790 ], [ %787, %785 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %4) #39
  br label %795

795:                                              ; preds = %769, %26, %770, %10, %793
  %796 = phi i32 [ %794, %793 ], [ %771, %770 ], [ 0, %769 ], [ 0, %10 ], [ 0, %26 ]
  ret i32 %796
}

; Function Attrs: mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable
define internal fastcc void @"?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z"(ptr noundef %0, ptr noundef %1, float noundef %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6, float noundef %7, float noundef %8, i32 noundef %9) unnamed_addr #32 {
  %11 = icmp sgt i32 %9, 16
  br i1 %11, label %83, label %12

12:                                               ; preds = %10
  %13 = insertelement <2 x float> poison, float %3, i64 0
  %14 = insertelement <2 x float> %13, float %2, i64 1
  %15 = insertelement <2 x float> poison, float %7, i64 0
  %16 = insertelement <2 x float> %15, float %6, i64 1
  %17 = fadd fast <2 x float> %14, %16
  %18 = insertelement <2 x float> poison, float %5, i64 0
  %19 = insertelement <2 x float> %18, float %4, i64 1
  %20 = fmul fast <2 x float> %19, <float 2.000000e+00, float 2.000000e+00>
  %21 = fadd fast <2 x float> %17, %20
  %22 = fmul fast <2 x float> %21, <float 2.500000e-01, float 2.500000e-01>
  %23 = fmul fast <2 x float> %17, <float 5.000000e-01, float 5.000000e-01>
  %24 = fsub fast <2 x float> %23, %22
  %25 = fmul fast <2 x float> %24, %24
  %26 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %27 = fadd fast <2 x float> %25, %26
  %28 = extractelement <2 x float> %27, i64 0
  %29 = fcmp fast ogt float %28, %8
  br i1 %29, label %30, label %74

30:                                               ; preds = %12
  %31 = add nsw i32 %9, 1
  %32 = fadd fast float %5, %3
  %33 = fmul fast float %32, 5.000000e-01
  %34 = fadd fast float %4, %2
  %35 = fmul fast float %34, 5.000000e-01
  %36 = extractelement <2 x float> %22, i64 0
  %37 = extractelement <2 x float> %22, i64 1
  tail call fastcc void @"?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z"(ptr noundef %0, ptr noundef %1, float noundef %2, float noundef %3, float noundef %35, float noundef %33, float noundef %37, float noundef %36, float noundef %8, i32 noundef %31)
  %38 = icmp eq i32 %31, 17
  br i1 %38, label %83, label %39

39:                                               ; preds = %30
  %40 = fadd fast <2 x float> %22, %16
  %41 = fadd fast <2 x float> %19, %16
  %42 = fadd fast <2 x float> %40, %41
  br label %43

43:                                               ; preds = %39, %57
  %44 = phi i32 [ %59, %57 ], [ %31, %39 ]
  %45 = phi <2 x float> [ %48, %57 ], [ %22, %39 ]
  %46 = phi <2 x float> [ %72, %57 ], [ %42, %39 ]
  %47 = phi <2 x float> [ %70, %57 ], [ %41, %39 ]
  %48 = fmul fast <2 x float> %46, <float 2.500000e-01, float 2.500000e-01>
  %49 = fadd fast <2 x float> %45, %16
  %50 = fmul fast <2 x float> %49, <float 5.000000e-01, float 5.000000e-01>
  %51 = fsub fast <2 x float> %50, %48
  %52 = fmul fast <2 x float> %51, %51
  %53 = shufflevector <2 x float> %52, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %54 = fadd fast <2 x float> %52, %53
  %55 = extractelement <2 x float> %54, i64 0
  %56 = fcmp fast ogt float %55, %8
  br i1 %56, label %57, label %74

57:                                               ; preds = %43
  %58 = fmul fast <2 x float> %47, <float 5.000000e-01, float 5.000000e-01>
  %59 = add i32 %44, 1
  %60 = extractelement <2 x float> %45, i64 0
  %61 = fadd fast <2 x float> %58, %45
  %62 = extractelement <2 x float> %61, i64 0
  %63 = fmul fast float %62, 5.000000e-01
  %64 = extractelement <2 x float> %45, i64 1
  %65 = fadd fast <2 x float> %58, %45
  %66 = extractelement <2 x float> %65, i64 1
  %67 = fmul fast float %66, 5.000000e-01
  %68 = extractelement <2 x float> %48, i64 0
  %69 = extractelement <2 x float> %48, i64 1
  tail call fastcc void @"?stbtt__tesselate_curve@@YAHPEAUstbtt__point@@PEAHMMMMMMMH@Z"(ptr noundef %0, ptr noundef %1, float noundef %64, float noundef %60, float noundef %67, float noundef %63, float noundef %69, float noundef %68, float noundef %8, i32 noundef %59)
  %70 = fadd fast <2 x float> %58, %16
  %71 = fadd fast <2 x float> %48, %16
  %72 = fadd fast <2 x float> %71, %70
  %73 = icmp eq i32 %59, 17
  br i1 %73, label %83, label %43, !llvm.loop !1003

74:                                               ; preds = %43, %12
  %75 = load i32, ptr %1, align 4, !tbaa !105
  %76 = icmp eq ptr %0, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = sext i32 %75 to i64
  %79 = getelementptr inbounds %struct.stbtt__point, ptr %0, i64 %78
  store float %6, ptr %79, align 4, !tbaa !1004
  %80 = getelementptr inbounds %struct.stbtt__point, ptr %0, i64 %78, i32 1
  store float %7, ptr %80, align 4, !tbaa !473
  br label %81

81:                                               ; preds = %74, %77
  %82 = add nsw i32 %75, 1
  store i32 %82, ptr %1, align 4, !tbaa !105
  br label %83

83:                                               ; preds = %57, %30, %10, %81
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable
define internal fastcc void @"?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z"(ptr noundef %0, ptr noundef %1, float noundef %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6, float noundef %7, float noundef %8, float noundef %9, float noundef %10, i32 noundef %11) unnamed_addr #32 {
  %13 = icmp sgt i32 %11, 16
  br i1 %13, label %106, label %14

14:                                               ; preds = %12
  %15 = insertelement <2 x float> poison, float %5, i64 0
  %16 = insertelement <2 x float> %15, float %7, i64 1
  %17 = insertelement <2 x float> poison, float %4, i64 0
  %18 = insertelement <2 x float> %17, float %6, i64 1
  %19 = insertelement <2 x float> poison, float %9, i64 0
  %20 = insertelement <2 x float> %19, float %8, i64 1
  br label %21

21:                                               ; preds = %14, %56
  %22 = phi i32 [ %91, %56 ], [ %11, %14 ]
  %23 = phi float [ %90, %56 ], [ %3, %14 ]
  %24 = phi float [ %85, %56 ], [ %2, %14 ]
  %25 = phi <2 x float> [ %95, %56 ], [ %18, %14 ]
  %26 = phi <2 x float> [ %96, %56 ], [ %16, %14 ]
  %27 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %28 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %29 = insertelement <2 x float> %25, float %24, i64 1
  %30 = fsub fast <2 x float> %27, %29
  %31 = fmul fast <2 x float> %30, %30
  %32 = insertelement <2 x float> %26, float %23, i64 1
  %33 = fsub fast <2 x float> %28, %32
  %34 = fmul fast <2 x float> %33, %33
  %35 = fadd fast <2 x float> %34, %31
  %36 = tail call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %35)
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %38 = fadd fast <2 x float> %36, %37
  %39 = extractelement <2 x float> %38, i64 0
  %40 = shufflevector <2 x float> %26, <2 x float> %25, <2 x i32> <i32 1, i32 3>
  %41 = fsub fast <2 x float> %20, %40
  %42 = fmul fast <2 x float> %41, %41
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %44 = fadd fast <2 x float> %42, %43
  %45 = extractelement <2 x float> %44, i64 0
  %46 = tail call fast float @llvm.sqrt.f32(float %45)
  %47 = fadd fast float %39, %46
  %48 = fmul fast float %47, %47
  %49 = fsub fast float %8, %24
  %50 = fsub fast float %9, %23
  %51 = fmul fast float %49, %49
  %52 = fmul fast float %50, %50
  %53 = fadd fast float %52, %51
  %54 = fsub fast float %48, %53
  %55 = fcmp fast ogt float %54, %10
  br i1 %55, label %56, label %97

56:                                               ; preds = %21
  %57 = extractelement <2 x float> %25, i64 1
  %58 = extractelement <2 x float> %26, i64 1
  %59 = insertelement <2 x float> poison, float %24, i64 0
  %60 = insertelement <2 x float> %59, float %8, i64 1
  %61 = fadd fast <2 x float> %25, %60
  %62 = insertelement <2 x float> poison, float %23, i64 0
  %63 = insertelement <2 x float> %62, float %9, i64 1
  %64 = fadd fast <2 x float> %26, %63
  %65 = extractelement <2 x float> %25, i64 0
  %66 = fadd fast float %57, %65
  %67 = fmul fast float %66, 5.000000e-01
  %68 = extractelement <2 x float> %26, i64 0
  %69 = fadd fast float %58, %68
  %70 = fmul fast float %69, 5.000000e-01
  %71 = fmul fast <2 x float> %61, <float 5.000000e-01, float 5.000000e-01>
  %72 = insertelement <2 x float> poison, float %67, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = fadd fast <2 x float> %73, %71
  %75 = fmul fast <2 x float> %74, <float 5.000000e-01, float 5.000000e-01>
  %76 = fmul fast <2 x float> %64, <float 5.000000e-01, float 5.000000e-01>
  %77 = insertelement <2 x float> poison, float %70, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = fadd fast <2 x float> %78, %76
  %80 = fmul fast <2 x float> %79, <float 5.000000e-01, float 5.000000e-01>
  %81 = extractelement <2 x float> %75, i64 0
  %82 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %83 = fadd fast <2 x float> %75, %82
  %84 = extractelement <2 x float> %83, i64 0
  %85 = fmul fast float %84, 5.000000e-01
  %86 = extractelement <2 x float> %80, i64 0
  %87 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> <i32 1, i32 undef>
  %88 = fadd fast <2 x float> %80, %87
  %89 = extractelement <2 x float> %88, i64 0
  %90 = fmul fast float %89, 5.000000e-01
  %91 = add i32 %22, 1
  %92 = extractelement <2 x float> %71, i64 0
  %93 = extractelement <2 x float> %76, i64 0
  tail call fastcc void @"?stbtt__tesselate_cubic@@YAXPEAUstbtt__point@@PEAHMMMMMMMMMH@Z"(ptr noundef %0, ptr noundef %1, float noundef %24, float noundef %23, float noundef %92, float noundef %93, float noundef %81, float noundef %86, float noundef %85, float noundef %90, float noundef %10, i32 noundef %91)
  %94 = icmp eq i32 %91, 17
  %95 = shufflevector <2 x float> %75, <2 x float> %71, <2 x i32> <i32 1, i32 3>
  %96 = shufflevector <2 x float> %80, <2 x float> %76, <2 x i32> <i32 1, i32 3>
  br i1 %94, label %106, label %21

97:                                               ; preds = %21
  %98 = load i32, ptr %1, align 4, !tbaa !105
  %99 = icmp eq ptr %0, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = sext i32 %98 to i64
  %102 = getelementptr inbounds %struct.stbtt__point, ptr %0, i64 %101
  store float %8, ptr %102, align 4, !tbaa !1004
  %103 = getelementptr inbounds %struct.stbtt__point, ptr %0, i64 %101, i32 1
  store float %9, ptr %103, align 4, !tbaa !473
  br label %104

104:                                              ; preds = %97, %100
  %105 = add nsw i32 %98, 1
  store i32 %105, ptr %1, align 4, !tbaa !105
  br label %106

106:                                              ; preds = %56, %12, %104
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @"?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z"(ptr noundef %0, i32 noundef %1) unnamed_addr #33 {
  %3 = alloca %struct.stbtt__edge, align 4
  %4 = icmp sgt i32 %1, 12
  br i1 %4, label %5, label %68

5:                                                ; preds = %2, %64
  %6 = phi i32 [ %66, %64 ], [ %1, %2 ]
  %7 = phi ptr [ %65, %64 ], [ %0, %2 ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3)
  %8 = lshr i32 %6, 1
  %9 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 0, i32 1
  %10 = load float, ptr %9, align 4, !tbaa !480
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %11
  %13 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %11, i32 1
  %14 = load float, ptr %13, align 4, !tbaa !480
  %15 = fcmp fast uge float %10, %14
  %16 = add nsw i32 %6, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %17, i32 1
  %19 = load float, ptr %18, align 4, !tbaa !480
  %20 = fcmp fast olt float %14, %19
  %21 = xor i1 %15, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %5
  %23 = fcmp fast uge float %10, %19
  %24 = xor i1 %23, %20
  %25 = select i1 %24, i64 0, i64 %17
  %26 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %25
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %3, ptr noundef nonnull align 4 dereferenceable(20) %26, i64 20, i1 false), !tbaa.struct !250
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %26, ptr noundef nonnull align 4 dereferenceable(20) %12, i64 20, i1 false), !tbaa.struct !250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %12, ptr noundef nonnull align 4 dereferenceable(20) %3, i64 20, i1 false), !tbaa.struct !250
  br label %27

27:                                               ; preds = %22, %5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %3, ptr noundef nonnull align 4 dereferenceable(20) %7, i64 20, i1 false), !tbaa.struct !250
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %7, ptr noundef nonnull align 4 dereferenceable(20) %12, i64 20, i1 false), !tbaa.struct !250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %12, ptr noundef nonnull align 4 dereferenceable(20) %3, i64 20, i1 false), !tbaa.struct !250
  br label %28

28:                                               ; preds = %53, %27
  %29 = phi i64 [ 1, %27 ], [ %55, %53 ]
  %30 = phi i32 [ %16, %27 ], [ %56, %53 ]
  %31 = load float, ptr %9, align 4, !tbaa !480
  %32 = shl i64 %29, 32
  %33 = ashr exact i64 %32, 32
  br label %34

34:                                               ; preds = %34, %28
  %35 = phi i64 [ %39, %34 ], [ %33, %28 ]
  %36 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %35, i32 1
  %37 = load float, ptr %36, align 4, !tbaa !480
  %38 = fcmp fast olt float %37, %31
  %39 = add i64 %35, 1
  br i1 %38, label %34, label %40, !llvm.loop !1005

40:                                               ; preds = %34
  %41 = trunc i64 %35 to i32
  %42 = sext i32 %30 to i64
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ %48, %43 ], [ %42, %40 ]
  %45 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %44, i32 1
  %46 = load float, ptr %45, align 4, !tbaa !480
  %47 = fcmp fast olt float %31, %46
  %48 = add i64 %44, -1
  br i1 %47, label %43, label %49, !llvm.loop !1006

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %35
  %51 = trunc i64 %44 to i32
  %52 = icmp slt i32 %41, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.stbtt__edge, ptr %7, i64 %44
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %3, ptr noundef nonnull align 4 dereferenceable(20) %50, i64 20, i1 false), !tbaa.struct !250
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %50, ptr noundef nonnull align 4 dereferenceable(20) %54, i64 20, i1 false), !tbaa.struct !250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %54, ptr noundef nonnull align 4 dereferenceable(20) %3, i64 20, i1 false), !tbaa.struct !250
  %55 = add i64 %35, 1
  %56 = add nsw i32 %51, -1
  br label %28, !llvm.loop !1007

57:                                               ; preds = %49
  %58 = trunc i64 %35 to i32
  %59 = trunc i64 %44 to i32
  %60 = sub nsw i32 %6, %58
  %61 = icmp sgt i32 %60, %59
  br i1 %61, label %62, label %63

62:                                               ; preds = %57
  tail call fastcc void @"?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z"(ptr noundef nonnull %7, i32 noundef %59)
  br label %64

63:                                               ; preds = %57
  tail call fastcc void @"?stbtt__sort_edges_quicksort@@YAXPEAUstbtt__edge@@H@Z"(ptr noundef nonnull %50, i32 noundef %60)
  br label %64

64:                                               ; preds = %63, %62
  %65 = phi ptr [ %50, %62 ], [ %7, %63 ]
  %66 = phi i32 [ %60, %62 ], [ %59, %63 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3)
  %67 = icmp sgt i32 %66, 12
  br i1 %67, label %5, label %68, !llvm.loop !1008

68:                                               ; preds = %64, %2
  ret void
}

; Function Attrs: mustprogress uwtable
define internal fastcc void @"?stbtt__handle_clipped_edge@@YAXPEAMHPEAUstbtt__active_edge@@MMMM@Z"(ptr nocapture noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, float noundef %3, float noundef %4, float noundef %5, float noundef %6) unnamed_addr #7 {
  %8 = fcmp fast oeq float %4, %6
  br i1 %8, label %122, label %9

9:                                                ; preds = %7
  %10 = fcmp fast olt float %4, %6
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BA@ENLNFFAM@?$AAy?$AA0?$AA?5?$AA?$DM?$AA?5?$AAy?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3036)
  br label %12

12:                                               ; preds = %11, %9
  %13 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2, i64 0, i32 5
  %14 = load float, ptr %13, align 8, !tbaa !495
  %15 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2, i64 0, i32 6
  %16 = load float, ptr %15, align 4, !tbaa !482
  %17 = fcmp fast ugt float %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BO@JGPMADBG@?$AAe?$AA?9?$AA?$DO?$AAs?$AAy?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAe?$AA?9?$AA?$DO?$AAe?$AAy?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3037)
  %19 = load float, ptr %15, align 4, !tbaa !482
  br label %20

20:                                               ; preds = %12, %18
  %21 = phi float [ %16, %12 ], [ %19, %18 ]
  %22 = fcmp fast olt float %21, %4
  br i1 %22, label %122, label %23

23:                                               ; preds = %20
  %24 = load float, ptr %13, align 8, !tbaa !495
  %25 = fcmp fast ogt float %24, %6
  br i1 %25, label %122, label %26

26:                                               ; preds = %23
  %27 = fcmp fast ogt float %24, %4
  br i1 %27, label %28, label %35

28:                                               ; preds = %26
  %29 = fsub fast float %5, %3
  %30 = fsub fast float %24, %4
  %31 = fmul fast float %30, %29
  %32 = fsub fast float %6, %4
  %33 = fdiv fast float %31, %32
  %34 = fadd fast float %33, %3
  br label %35

35:                                               ; preds = %28, %26
  %36 = phi float [ %34, %28 ], [ %3, %26 ]
  %37 = phi float [ %24, %28 ], [ %4, %26 ]
  %38 = fcmp fast olt float %21, %6
  br i1 %38, label %39, label %46

39:                                               ; preds = %35
  %40 = fsub fast float %5, %36
  %41 = fsub fast float %21, %6
  %42 = fmul fast float %40, %41
  %43 = fsub fast float %6, %37
  %44 = fdiv fast float %42, %43
  %45 = fadd fast float %44, %5
  br label %46

46:                                               ; preds = %39, %35
  %47 = phi float [ %45, %39 ], [ %5, %35 ]
  %48 = phi float [ %21, %39 ], [ %6, %35 ]
  %49 = sitofp i32 %1 to float
  %50 = fcmp fast oeq float %36, %49
  %51 = add nsw i32 %1, 1
  %52 = sitofp i32 %51 to float
  br i1 %50, label %53, label %56

53:                                               ; preds = %46
  %54 = fcmp fast ugt float %47, %52
  br i1 %54, label %55, label %76

55:                                               ; preds = %53
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BE@DHAKMBPL@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3050)
  br label %76

56:                                               ; preds = %46
  %57 = fcmp fast oeq float %36, %52
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = fcmp fast ult float %47, %49
  br i1 %59, label %60, label %76

60:                                               ; preds = %58
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BA@FAAMJPKE@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3052)
  br label %76

61:                                               ; preds = %56
  %62 = fcmp fast ugt float %36, %49
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = fcmp fast ugt float %47, %49
  br i1 %64, label %65, label %76

65:                                               ; preds = %63
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BA@FEPJEPJJ@?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3054)
  br label %76

66:                                               ; preds = %61
  %67 = fcmp fast ult float %36, %52
  br i1 %67, label %71, label %68

68:                                               ; preds = %66
  %69 = fcmp fast ult float %47, %52
  br i1 %69, label %70, label %76

70:                                               ; preds = %68
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BE@NGGEAFFG@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3056)
  br label %76

71:                                               ; preds = %66
  %72 = fcmp fast ult float %47, %49
  %73 = fcmp fast ugt float %47, %52
  %74 = select i1 %72, i1 true, i1 %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CK@NILBPPPH@?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3058)
  br label %76

76:                                               ; preds = %71, %58, %60, %68, %70, %75, %65, %63, %55, %53
  %77 = fcmp fast ugt float %36, %49
  %78 = fcmp fast ugt float %47, %49
  %79 = select i1 %77, i1 true, i1 %78
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2, i64 0, i32 4
  %82 = load float, ptr %81, align 4, !tbaa !485
  %83 = fsub fast float %48, %37
  %84 = fmul fast float %82, %83
  %85 = sext i32 %1 to i64
  %86 = getelementptr inbounds float, ptr %0, i64 %85
  %87 = load float, ptr %86, align 4, !tbaa !6
  br label %117

88:                                               ; preds = %76
  %89 = add nsw i32 %1, 1
  %90 = sitofp i32 %89 to float
  %91 = fcmp fast ult float %36, %90
  %92 = fcmp fast ult float %47, %90
  %93 = select i1 %91, i1 true, i1 %92
  br i1 %93, label %94, label %122

94:                                               ; preds = %88
  %95 = fcmp fast ult float %36, %49
  %96 = fcmp fast ugt float %36, %90
  %97 = select i1 %95, i1 true, i1 %96
  %98 = fcmp fast ult float %47, %49
  %99 = select i1 %97, i1 true, i1 %98
  %100 = fcmp fast ugt float %47, %90
  %101 = select i1 %99, i1 true, i1 %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %94
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1FK@JPMIPNJF@?$AAx?$AA0?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA0?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA?$CL?$AA1?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAx?$AA1?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAx?$AA?5@", ptr noundef nonnull @"??_C@_1FM@HEFIFJJD@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 3065)
  br label %103

103:                                              ; preds = %94, %102
  %104 = getelementptr inbounds %struct.stbtt__active_edge, ptr %2, i64 0, i32 4
  %105 = load float, ptr %104, align 4, !tbaa !485
  %106 = fsub fast float %48, %37
  %107 = fmul fast float %49, -2.000000e+00
  %108 = fadd fast float %36, %107
  %109 = fadd fast float %108, %47
  %110 = fmul fast float %109, 5.000000e-01
  %111 = fsub fast float 1.000000e+00, %110
  %112 = fmul fast float %106, %111
  %113 = fmul fast float %112, %105
  %114 = sext i32 %1 to i64
  %115 = getelementptr inbounds float, ptr %0, i64 %114
  %116 = load float, ptr %115, align 4, !tbaa !6
  br label %117

117:                                              ; preds = %80, %103
  %118 = phi float [ %116, %103 ], [ %84, %80 ]
  %119 = phi float [ %113, %103 ], [ %87, %80 ]
  %120 = phi ptr [ %115, %103 ], [ %86, %80 ]
  %121 = fadd fast float %119, %118
  store float %121, ptr %120, align 4, !tbaa !6
  br label %122

122:                                              ; preds = %117, %88, %23, %20, %7
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal noundef i32 @"?rect_height_compare@@YAHPEBX0@Z"(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #30 {
  %3 = getelementptr inbounds %struct.stbrp_rect, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !432
  %5 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !432
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = icmp slt i32 %4, %6
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.stbrp_rect, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !430
  %13 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !430
  %15 = icmp sgt i32 %12, %14
  %16 = icmp slt i32 %12, %14
  %17 = zext i1 %16 to i32
  %18 = select i1 %15, i32 -1, i32 %17
  br label %19

19:                                               ; preds = %8, %2, %10
  %20 = phi i32 [ %18, %10 ], [ -1, %2 ], [ 1, %8 ]
  ret i32 %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal noundef i32 @"?rect_original_order@@YAHPEBX0@Z"(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #30 {
  %3 = getelementptr inbounds %struct.stbrp_rect, ptr %0, i64 0, i32 5
  %4 = load i32, ptr %3, align 4, !tbaa !450
  %5 = getelementptr inbounds %struct.stbrp_rect, ptr %1, i64 0, i32 5
  %6 = load i32, ptr %5, align 4, !tbaa !450
  %7 = icmp slt i32 %4, %6
  %8 = icmp sgt i32 %4, %6
  %9 = zext i1 %8 to i32
  %10 = select i1 %7, i32 -1, i32 %9
  ret i32 %10
}

; Function Attrs: nofree
declare dso_local void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #34

; Function Attrs: mustprogress uwtable
define internal fastcc noundef i32 @"?stbrp__skyline_find_min_y@@YAHPEAUstbrp_context@@PEAUstbrp_node@@HHPEAH@Z"(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef writeonly %3) unnamed_addr #7 {
  %5 = add nsw i32 %2, %1
  %6 = load i32, ptr %0, align 8, !tbaa !448
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BO@KBODBKOH@?$AAf?$AAi?$AAr?$AAs?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 299)
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.stbrp_node, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !435
  %12 = load i32, ptr %11, align 8, !tbaa !448
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1CG@BDIGDJGP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAn?$AAe?$AAx?$AAt?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DO?$AA?5?$AAx?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 306)
  br label %15

15:                                               ; preds = %9, %14
  %16 = load i32, ptr %0, align 8, !tbaa !448
  %17 = icmp sgt i32 %16, %1
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  tail call void @_wassert(ptr noundef nonnull @"??_C@_1BM@JHJLEEND@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAx?$AA0?$AA?$AA@", ptr noundef nonnull @"??_C@_1FM@KFBAHNPH@?$AAv?$AAe?$AAn?$AAd?$AAo?$AAr?$AA?1?$AAi?$AAm?$AAg?$AAu?$AAi?$AA?$EA?$AAv?$AA1?$AA?4?$AA8?$AA9?$AA?4?$AA5?$AA?1?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?1?$AAi?$AAm?$AAs@", i32 noundef 309)
  %19 = load i32, ptr %0, align 8, !tbaa !448
  br label %20

20:                                               ; preds = %18, %15
  %21 = phi i32 [ %19, %18 ], [ %16, %15 ]
  %22 = icmp slt i32 %21, %5
  br i1 %22, label %23, label %63

23:                                               ; preds = %20, %54
  %24 = phi i32 [ %55, %54 ], [ %21, %20 ]
  %25 = phi i32 [ %60, %54 ], [ 0, %20 ]
  %26 = phi i32 [ %61, %54 ], [ 0, %20 ]
  %27 = phi i32 [ %57, %54 ], [ 0, %20 ]
  %28 = phi ptr [ %56, %54 ], [ %0, %20 ]
  %29 = getelementptr inbounds %struct.stbrp_node, ptr %28, i64 0, i32 1
  %30 = load i32, ptr %29, align 4, !tbaa !449
  %31 = icmp sgt i32 %30, %27
  br i1 %31, label %32, label %43

32:                                               ; preds = %23
  %33 = sub nsw i32 %30, %27
  %34 = mul nsw i32 %33, %26
  %35 = icmp slt i32 %24, %1
  %36 = getelementptr inbounds %struct.stbrp_node, ptr %28, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !435
  %38 = load i32, ptr %37, align 8, !tbaa !448
  br i1 %35, label %39, label %41

39:                                               ; preds = %32
  %40 = sub nsw i32 %38, %1
  br label %54

41:                                               ; preds = %32
  %42 = sub nsw i32 %38, %24
  br label %54

43:                                               ; preds = %23
  %44 = getelementptr inbounds %struct.stbrp_node, ptr %28, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !435
  %46 = load i32, ptr %45, align 8, !tbaa !448
  %47 = sub nsw i32 %46, %24
  %48 = add nsw i32 %47, %26
  %49 = icmp sgt i32 %48, %2
  %50 = sub nsw i32 %2, %26
  %51 = select i1 %49, i32 %50, i32 %47
  %52 = sub nsw i32 %27, %30
  %53 = mul nsw i32 %51, %52
  br label %54

54:                                               ; preds = %39, %41, %43
  %55 = phi i32 [ %38, %39 ], [ %38, %41 ], [ %46, %43 ]
  %56 = phi ptr [ %37, %39 ], [ %37, %41 ], [ %45, %43 ]
  %57 = phi i32 [ %30, %39 ], [ %30, %41 ], [ %27, %43 ]
  %58 = phi i32 [ %40, %39 ], [ %42, %41 ], [ %51, %43 ]
  %59 = phi i32 [ %34, %39 ], [ %34, %41 ], [ %53, %43 ]
  %60 = add nsw i32 %59, %25
  %61 = add nsw i32 %58, %26
  %62 = icmp slt i32 %55, %5
  br i1 %62, label %23, label %63, !llvm.loop !1009

63:                                               ; preds = %54, %20
  %64 = phi i32 [ 0, %20 ], [ %57, %54 ]
  %65 = phi i32 [ 0, %20 ], [ %60, %54 ]
  store i32 %65, ptr %3, align 4, !tbaa !105
  ret i32 %64
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.minnum.f32(float, float) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sin.v2f32(<2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.cos.v2f32(<2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.maxnum.v2f32(<2 x float>, <2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.minnum.v2f32(<2 x float>, <2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.minnum.v4f32(<4 x float>, <4 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.maxnum.v4f32(<4 x float>, <4 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <16 x i32> @llvm.umin.v16i32(<16 x i32>, <16 x i32>) #35

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #37

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sqrt.v2f32(<2 x float>) #35

attributes #0 = { uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "approx-func-fp-math"="true" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nofree nosync nounwind memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { mustprogress uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { nofree nosync nounwind uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { inlinehint nounwind uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #19 = { mustprogress nofree nosync nounwind uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #20 = { mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #21 = { nofree nosync nounwind memory(write, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #22 = { nounwind uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #23 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #24 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #25 = { mustprogress nofree nosync nounwind memory(argmem: write) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #26 = { mustprogress nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #27 = { mustprogress nofree nosync nounwind memory(readwrite, argmem: write, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #28 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #29 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #30 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #31 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #32 = { mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #33 = { mustprogress nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #34 = { nofree "approx-func-fp-math"="true" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #35 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #36 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #37 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #38 = { nounwind willreturn memory(none) }
attributes #39 = { nounwind }
attributes #40 = { noreturn nounwind }

!llvm.linker.options = !{!0}
!llvm.module.flags = !{!1, !2, !3}
!llvm.ident = !{!4}

!0 = !{!"/FAILIFMISMATCH:\22_CRT_STDIO_ISO_WIDE_SPECIFIERS=0\22"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 16.0.1"}
!5 = !{i64 0, i64 4, !6, i64 4, i64 4, !6, i64 8, i64 4, !6, i64 12, i64 4, !6}
!6 = !{!7, !7, i64 0}
!7 = !{!"float", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!11, !7, i64 12}
!11 = !{!"?AUImVec4@@", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}
!12 = !{!13}
!13 = distinct !{!13, !14, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!14 = distinct !{!14, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!15 = !{i64 0, i64 4, !6}
!16 = !{!17}
!17 = distinct !{!17, !18, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!18 = distinct !{!18, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!19 = !{!11, !7, i64 0}
!20 = !{!21}
!21 = distinct !{!21, !22, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!22 = distinct !{!22, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!25 = distinct !{!25, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!28 = distinct !{!28, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!31 = distinct !{!31, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z: argument 0"}
!34 = distinct !{!34, !"?ImLerp@@YA?AUImVec4@@AEBU1@0M@Z"}
!35 = distinct !{!35, !36, !37, !38}
!36 = !{!"llvm.loop.mustprogress"}
!37 = !{!"llvm.loop.isvectorized", i32 1}
!38 = !{!"llvm.loop.unroll.runtime.disable"}
!39 = !{!40, !7, i64 448}
!40 = !{!"?AUImDrawListSharedData@@", !41, i64 0, !42, i64 8, !7, i64 16, !7, i64 20, !7, i64 24, !11, i64 28, !43, i64 44, !44, i64 48, !8, i64 64, !7, i64 448, !8, i64 452, !42, i64 520}
!41 = !{!"?AUImVec2@@", !7, i64 0, !7, i64 4}
!42 = !{!"any pointer", !8, i64 0}
!43 = !{!"int", !8, i64 0}
!44 = !{!"?AU?$ImVector@UImVec2@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!45 = !{!40, !7, i64 24}
!46 = !{!8, !8, i64 0}
!47 = distinct !{!47, !36, !48}
!48 = !{!"llvm.loop.peeled.count", i32 1}
!49 = !{!50, !43, i64 172}
!50 = !{!"?AUImDrawList@@", !51, i64 0, !52, i64 16, !53, i64 32, !43, i64 48, !43, i64 52, !42, i64 56, !42, i64 64, !42, i64 72, !42, i64 80, !54, i64 88, !55, i64 104, !44, i64 120, !56, i64 136, !57, i64 168, !7, i64 192}
!51 = !{!"?AU?$ImVector@UImDrawCmd@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!52 = !{!"?AU?$ImVector@G@@", !43, i64 0, !43, i64 4, !42, i64 8}
!53 = !{!"?AU?$ImVector@UImDrawVert@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!54 = !{!"?AU?$ImVector@UImVec4@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!55 = !{!"?AU?$ImVector@PEAX@@", !43, i64 0, !43, i64 4, !42, i64 8}
!56 = !{!"?AUImDrawCmdHeader@@", !11, i64 0, !42, i64 16, !43, i64 24}
!57 = !{!"?AUImDrawListSplitter@@", !43, i64 0, !43, i64 4, !58, i64 8}
!58 = !{!"?AU?$ImVector@UImDrawChannel@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!59 = !{!51, !43, i64 4}
!60 = !{!51, !42, i64 8}
!61 = !{!51, !43, i64 0}
!62 = !{!52, !43, i64 4}
!63 = !{!52, !42, i64 8}
!64 = !{!52, !43, i64 0}
!65 = !{!53, !43, i64 4}
!66 = !{!53, !42, i64 8}
!67 = !{!53, !43, i64 0}
!68 = !{!50, !42, i64 56}
!69 = !{!40, !43, i64 44}
!70 = !{!50, !43, i64 48}
!71 = !{!50, !43, i64 52}
!72 = !{!54, !43, i64 4}
!73 = !{!54, !42, i64 8}
!74 = !{!54, !43, i64 0}
!75 = !{!55, !43, i64 4}
!76 = !{!55, !42, i64 8}
!77 = !{!55, !43, i64 0}
!78 = !{!44, !43, i64 4}
!79 = !{!44, !42, i64 8}
!80 = !{!44, !43, i64 0}
!81 = !{!57, !43, i64 0}
!82 = !{!57, !43, i64 4}
!83 = !{!50, !7, i64 192}
!84 = !{!50, !43, i64 0}
!85 = !{!50, !42, i64 8}
!86 = !{!87, !43, i64 32}
!87 = !{!"?AUImDrawCmd@@", !11, i64 0, !42, i64 16, !43, i64 24, !43, i64 28, !43, i64 32, !42, i64 40, !42, i64 48}
!88 = !{!87, !42, i64 40}
!89 = !{!87, !43, i64 28}
!90 = !{!50, !43, i64 16}
!91 = !{!50, !42, i64 24}
!92 = !{!58, !42, i64 8}
!93 = !{!94, !43, i64 0}
!94 = !{!"?AUImDrawChannel@@", !51, i64 0, !52, i64 16}
!95 = !{!94, !43, i64 16}
!96 = !{!94, !42, i64 8}
!97 = distinct !{!97, !36}
!98 = distinct !{!98, !36}
!99 = !{!50, !42, i64 80}
!100 = !{!94, !42, i64 24}
!101 = distinct !{!101, !36}
!102 = !{!57, !43, i64 8}
!103 = !{!58, !43, i64 4}
!104 = !{!58, !43, i64 0}
!105 = !{!43, !43, i64 0}
!106 = distinct !{!106, !36}
!107 = !{!50, !42, i64 152}
!108 = !{!50, !43, i64 160}
!109 = !{!87, !42, i64 48}
!110 = !{!87, !42, i64 16}
!111 = !{!87, !43, i64 24}
!112 = !{!41, !7, i64 4}
!113 = !{!41, !7, i64 0}
!114 = !{i64 0, i64 4, !6, i64 4, i64 4, !6}
!115 = !{!50, !42, i64 96}
!116 = !{!50, !42, i64 112}
!117 = !{!42, !42, i64 0}
!118 = !{!50, !43, i64 32}
!119 = !{!50, !42, i64 40}
!120 = !{!50, !42, i64 72}
!121 = !{!122, !122, i64 0}
!122 = !{!"short", !8, i64 0}
!123 = !{!124, !43, i64 16}
!124 = !{!"?AUImDrawVert@@", !41, i64 0, !41, i64 8, !43, i64 16}
!125 = !{!40, !42, i64 56}
!126 = distinct !{!126, !36}
!127 = distinct !{!127, !36}
!128 = !{!40, !42, i64 520}
!129 = distinct !{!129, !36}
!130 = distinct !{!130, !36}
!131 = distinct !{!131, !36}
!132 = distinct !{!132, !36}
!133 = !{!124, !7, i64 0}
!134 = !{!124, !7, i64 4}
!135 = distinct !{!135, !36}
!136 = distinct !{!136, !36}
!137 = distinct !{!137, !36}
!138 = distinct !{!138, !36}
!139 = distinct !{!139, !36}
!140 = distinct !{!140, !141}
!141 = !{!"llvm.loop.unroll.disable"}
!142 = distinct !{!142, !36}
!143 = !{!50, !43, i64 120}
!144 = !{!50, !42, i64 128}
!145 = distinct !{!145, !36, !48}
!146 = distinct !{!146, !36, !48}
!147 = distinct !{!147, !36}
!148 = !{!40, !7, i64 20}
!149 = !{!150}
!150 = distinct !{!150, !151, !"?ImBezierCubicCalc@@YA?AUImVec2@@AEBU1@000M@Z: argument 0"}
!151 = distinct !{!151, !"?ImBezierCubicCalc@@YA?AUImVec2@@AEBU1@000M@Z"}
!152 = distinct !{!152, !36}
!153 = !{!154}
!154 = distinct !{!154, !155, !"?ImBezierQuadraticCalc@@YA?AUImVec2@@AEBU1@00M@Z: argument 0"}
!155 = distinct !{!155, !"?ImBezierQuadraticCalc@@YA?AUImVec2@@AEBU1@00M@Z"}
!156 = distinct !{!156, !36}
!157 = !{!158}
!158 = distinct !{!158, !159, !"??G@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!159 = distinct !{!159, !"??G@YA?AUImVec2@@AEBU0@0@Z"}
!160 = !{!161}
!161 = distinct !{!161, !162, !"??H@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!162 = distinct !{!162, !"??H@YA?AUImVec2@@AEBU0@0@Z"}
!163 = !{!164}
!164 = distinct !{!164, !165, !"??G@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!165 = distinct !{!165, !"??G@YA?AUImVec2@@AEBU0@0@Z"}
!166 = !{!167}
!167 = distinct !{!167, !168, !"??H@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!168 = distinct !{!168, !"??H@YA?AUImVec2@@AEBU0@0@Z"}
!169 = !{!40, !42, i64 8}
!170 = !{!40, !7, i64 16}
!171 = !{!172, !42, i64 64}
!172 = !{!"?AUImFont@@", !173, i64 0, !7, i64 16, !7, i64 20, !52, i64 24, !174, i64 40, !42, i64 56, !42, i64 64, !42, i64 72, !122, i64 80, !122, i64 82, !122, i64 84, !122, i64 86, !7, i64 88, !7, i64 92, !175, i64 96, !7, i64 100, !7, i64 104, !7, i64 108, !43, i64 112, !8, i64 116}
!173 = !{!"?AU?$ImVector@M@@", !43, i64 0, !43, i64 4, !42, i64 8}
!174 = !{!"?AU?$ImVector@UImFontGlyph@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!175 = !{!"bool", !8, i64 0}
!176 = !{!177, !42, i64 8}
!177 = !{!"?AUImFontAtlas@@", !43, i64 0, !42, i64 8, !43, i64 16, !43, i64 20, !175, i64 24, !42, i64 32, !175, i64 40, !175, i64 41, !42, i64 48, !42, i64 56, !43, i64 64, !43, i64 68, !41, i64 72, !41, i64 80, !178, i64 88, !179, i64 104, !180, i64 120, !8, i64 136, !42, i64 1160, !43, i64 1168, !43, i64 1172, !43, i64 1176}
!178 = !{!"?AU?$ImVector@PEAUImFont@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!179 = !{!"?AU?$ImVector@UImFontAtlasCustomRect@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!180 = !{!"?AU?$ImVector@UImFontConfig@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!181 = !{!172, !7, i64 20}
!182 = !{!11, !7, i64 4}
!183 = distinct !{!183, !36}
!184 = distinct !{!184, !36}
!185 = distinct !{!185, !36}
!186 = distinct !{!186, !36}
!187 = !{!172, !43, i64 24}
!188 = !{!172, !42, i64 56}
!189 = !{!172, !42, i64 32}
!190 = !{!191, !7, i64 4}
!191 = !{!"?AUImFontGlyph@@", !43, i64 0, !43, i64 0, !43, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36}
!192 = !{!191, !7, i64 8}
!193 = !{!191, !7, i64 16}
!194 = !{!191, !7, i64 12}
!195 = !{!191, !7, i64 20}
!196 = !{!11, !7, i64 8}
!197 = !{!191, !7, i64 24}
!198 = !{!191, !7, i64 28}
!199 = !{!191, !7, i64 32}
!200 = !{!191, !7, i64 36}
!201 = !{!124, !7, i64 8}
!202 = !{!124, !7, i64 12}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = !{!209}
!209 = distinct !{!209, !205}
!210 = !{!204, !207}
!211 = distinct !{!211, !36, !37, !38}
!212 = distinct !{!212, !36, !37}
!213 = !{!214}
!214 = distinct !{!214, !215}
!215 = distinct !{!215, !"LVerDomain"}
!216 = !{!217}
!217 = distinct !{!217, !215}
!218 = !{!219}
!219 = distinct !{!219, !215}
!220 = !{!214, !217}
!221 = distinct !{!221, !36, !37, !38}
!222 = distinct !{!222, !36, !37}
!223 = !{!224}
!224 = distinct !{!224, !225}
!225 = distinct !{!225, !"LVerDomain"}
!226 = !{!227}
!227 = distinct !{!227, !225}
!228 = !{!229}
!229 = distinct !{!229, !225}
!230 = !{!224, !227}
!231 = distinct !{!231, !36, !37, !38}
!232 = !{!233}
!233 = distinct !{!233, !234}
!234 = distinct !{!234, !"LVerDomain"}
!235 = !{!236}
!236 = distinct !{!236, !234}
!237 = !{!238}
!238 = distinct !{!238, !234}
!239 = !{!233, !236}
!240 = distinct !{!240, !36, !37, !38}
!241 = distinct !{!241, !36, !37}
!242 = distinct !{!242, !36, !37}
!243 = distinct !{!243, !36}
!244 = !{!57, !42, i64 16}
!245 = !{!246, !43, i64 8}
!246 = !{!"?AUImDrawData@@", !175, i64 0, !43, i64 4, !43, i64 8, !43, i64 12, !42, i64 16, !41, i64 24, !41, i64 32, !41, i64 40}
!247 = !{!246, !43, i64 12}
!248 = !{!246, !43, i64 4}
!249 = !{!246, !42, i64 16}
!250 = !{i64 0, i64 4, !6, i64 4, i64 4, !6, i64 8, i64 4, !6, i64 12, i64 4, !6, i64 16, i64 4, !105}
!251 = distinct !{!251, !36}
!252 = distinct !{!252, !36}
!253 = distinct !{!253, !36}
!254 = distinct !{!254, !36}
!255 = distinct !{!255, !36, !37, !38}
!256 = distinct !{!256, !36, !38, !37}
!257 = !{!258, !175, i64 12}
!258 = !{!"?AUImFontConfig@@", !42, i64 0, !43, i64 8, !175, i64 12, !43, i64 16, !7, i64 20, !43, i64 24, !43, i64 28, !175, i64 32, !41, i64 36, !41, i64 44, !42, i64 56, !7, i64 64, !7, i64 68, !175, i64 72, !43, i64 76, !7, i64 80, !122, i64 84, !8, i64 86, !42, i64 128}
!259 = !{!258, !43, i64 24}
!260 = !{!258, !43, i64 28}
!261 = !{!258, !7, i64 68}
!262 = !{!258, !7, i64 80}
!263 = !{!258, !122, i64 84}
!264 = !{!177, !43, i64 20}
!265 = !{!177, !43, i64 1176}
!266 = !{!177, !43, i64 1172}
!267 = !{!177, !175, i64 24}
!268 = !{i8 0, i8 2}
!269 = !{}
!270 = !{!180, !42, i64 8}
!271 = !{!179, !42, i64 8}
!272 = !{!178, !42, i64 8}
!273 = !{!177, !42, i64 48}
!274 = !{!177, !42, i64 56}
!275 = !{!177, !175, i64 41}
!276 = !{!178, !43, i64 0}
!277 = !{!178, !43, i64 4}
!278 = distinct !{!278, !36}
!279 = !{!177, !175, i64 40}
!280 = !{!177, !43, i64 120}
!281 = !{!177, !43, i64 88}
!282 = !{!258, !42, i64 0}
!283 = distinct !{!283, !36}
!284 = !{!180, !43, i64 4}
!285 = !{!180, !43, i64 0}
!286 = !{!179, !43, i64 4}
!287 = !{!179, !43, i64 0}
!288 = !{!172, !42, i64 72}
!289 = !{!177, !42, i64 128}
!290 = !{!172, !122, i64 80}
!291 = distinct !{!291, !36}
!292 = !{!177, !43, i64 64}
!293 = !{!177, !43, i64 68}
!294 = !{!258, !175, i64 32}
!295 = !{!258, !7, i64 20}
!296 = !{!258, !42, i64 56}
!297 = !{!258, !7, i64 48}
!298 = !{!177, !42, i64 1160}
!299 = !{!300, !42, i64 0}
!300 = !{!"?AUImFontBuilderIO@@", !42, i64 0}
!301 = !{!302}
!302 = distinct !{!302, !303}
!303 = distinct !{!303, !"LVerDomain"}
!304 = !{!305}
!305 = distinct !{!305, !303}
!306 = distinct !{!306, !36, !37, !38}
!307 = distinct !{!307, !36, !37}
!308 = !{!258, !43, i64 8}
!309 = !{!258, !175, i64 72}
!310 = !{!172, !122, i64 82}
!311 = !{!172, !122, i64 84}
!312 = !{!172, !7, i64 100}
!313 = !{!258, !42, i64 128}
!314 = !{i64 0, i64 8, !117, i64 8, i64 4, !105, i64 12, i64 1, !315, i64 16, i64 4, !105, i64 20, i64 4, !6, i64 24, i64 4, !105, i64 28, i64 4, !105, i64 32, i64 1, !315, i64 36, i64 4, !6, i64 40, i64 4, !6, i64 44, i64 4, !6, i64 48, i64 4, !6, i64 56, i64 8, !117, i64 64, i64 4, !6, i64 68, i64 4, !6, i64 72, i64 1, !315, i64 76, i64 4, !105, i64 80, i64 4, !6, i64 84, i64 2, !121, i64 86, i64 40, !46, i64 128, i64 8, !117}
!315 = !{!175, !175, i64 0}
!316 = distinct !{!316, !36}
!317 = !{!318, !318, i64 0}
!318 = !{!"long long", !8, i64 0}
!319 = distinct !{!319, !36}
!320 = distinct !{!320, !36, !37, !38}
!321 = distinct !{!321, !141}
!322 = distinct !{!322, !36, !37}
!323 = distinct !{!323, !36, !37, !38}
!324 = distinct !{!324, !141}
!325 = distinct !{!325, !36, !37}
!326 = distinct !{!326, !36, !37, !38}
!327 = distinct !{!327, !141}
!328 = distinct !{!328, !36, !37}
!329 = distinct !{!329, !36, !37, !38}
!330 = distinct !{!330, !141}
!331 = distinct !{!331, !36, !37}
!332 = distinct !{!332, !36, !37, !38}
!333 = distinct !{!333, !141}
!334 = distinct !{!334, !36, !37}
!335 = distinct !{!335, !36, !37, !38}
!336 = distinct !{!336, !141}
!337 = distinct !{!337, !36, !37}
!338 = distinct !{!338, !36}
!339 = !{i64 3, i64 4, !105, i64 7, i64 4, !6, i64 11, i64 4, !105, i64 15, i64 4, !105, i64 19, i64 1, !315, i64 23, i64 4, !6, i64 27, i64 4, !6, i64 31, i64 4, !6, i64 35, i64 4, !6, i64 43, i64 8, !117, i64 51, i64 4, !6, i64 55, i64 4, !6, i64 59, i64 1, !315, i64 63, i64 4, !105, i64 67, i64 4, !6, i64 71, i64 2, !121, i64 73, i64 40, !46, i64 115, i64 8, !117}
!340 = !{i64 0, i64 1, !315, i64 4, i64 4, !6, i64 8, i64 4, !6, i64 12, i64 4, !6, i64 16, i64 4, !6, i64 24, i64 8, !117, i64 32, i64 4, !6, i64 36, i64 4, !6, i64 40, i64 1, !315, i64 44, i64 4, !105, i64 48, i64 4, !6, i64 52, i64 2, !121, i64 54, i64 40, !46, i64 96, i64 8, !117}
!341 = !{i64 0, i64 4, !6, i64 4, i64 1, !315, i64 8, i64 4, !105, i64 12, i64 4, !6, i64 16, i64 2, !121, i64 18, i64 40, !46, i64 60, i64 8, !117}
!342 = !{i64 0, i64 4, !6, i64 4, i64 2, !121, i64 6, i64 40, !46, i64 48, i64 8, !117}
!343 = !{i64 0, i64 2, !121, i64 2, i64 40, !46, i64 44, i64 8, !117}
!344 = !{i64 0, i64 40, !46, i64 42, i64 8, !117}
!345 = !{i64 0, i64 1, !315, i64 4, i64 4, !105, i64 8, i64 4, !6, i64 12, i64 4, !105, i64 16, i64 4, !105, i64 20, i64 1, !315, i64 24, i64 4, !6, i64 28, i64 4, !6, i64 32, i64 4, !6, i64 36, i64 4, !6, i64 44, i64 8, !117, i64 52, i64 4, !6, i64 56, i64 4, !6, i64 60, i64 1, !315, i64 64, i64 4, !105, i64 68, i64 4, !6, i64 72, i64 2, !121, i64 74, i64 40, !46, i64 116, i64 8, !117}
!346 = !{!347, !122, i64 4}
!347 = !{!"?AUImFontAtlasCustomRect@@", !122, i64 0, !122, i64 2, !122, i64 4, !122, i64 6, !43, i64 8, !7, i64 12, !41, i64 16, !42, i64 24}
!348 = !{!347, !122, i64 6}
!349 = !{!177, !43, i64 0}
!350 = distinct !{!350, !36, !37, !38}
!351 = distinct !{!351, !141}
!352 = distinct !{!352, !36}
!353 = distinct !{!353, !36}
!354 = !{!355, !43, i64 224}
!355 = !{!"?AUImFontBuildSrcData@@", !356, i64 0, !358, i64 160, !42, i64 200, !42, i64 208, !42, i64 216, !43, i64 224, !43, i64 228, !43, i64 232, !359, i64 240, !361, i64 256}
!356 = !{!"?AUstbtt_fontinfo@@", !42, i64 0, !42, i64 8, !43, i64 16, !43, i64 20, !43, i64 24, !43, i64 28, !43, i64 32, !43, i64 36, !43, i64 40, !43, i64 44, !43, i64 48, !43, i64 52, !43, i64 56, !43, i64 60, !357, i64 64, !357, i64 80, !357, i64 96, !357, i64 112, !357, i64 128, !357, i64 144}
!357 = !{!"?AUstbtt__buf@@", !42, i64 0, !43, i64 8, !43, i64 12}
!358 = !{!"?AUstbtt_pack_range@@", !7, i64 0, !43, i64 4, !42, i64 8, !43, i64 16, !42, i64 24, !8, i64 32, !8, i64 33}
!359 = !{!"?AUImBitVector@@", !360, i64 0}
!360 = !{!"?AU?$ImVector@I@@", !43, i64 0, !43, i64 4, !42, i64 8}
!361 = !{!"?AU?$ImVector@H@@", !43, i64 0, !43, i64 4, !42, i64 8}
!362 = distinct !{!362, !36}
!363 = !{!258, !43, i64 16}
!364 = !{!356, !42, i64 8}
!365 = !{!356, !43, i64 16}
!366 = distinct !{!366, !36}
!367 = !{!356, !43, i64 24}
!368 = !{!356, !43, i64 28}
!369 = !{!356, !43, i64 32}
!370 = !{!356, !43, i64 36}
!371 = !{!356, !43, i64 40}
!372 = !{!356, !43, i64 44}
!373 = !{!356, !43, i64 48}
!374 = !{i64 0, i64 8, !117, i64 8, i64 4, !105, i64 12, i64 4, !105}
!375 = !{i64 0, i64 4, !105, i64 4, i64 4, !105}
!376 = !{i64 0, i64 4, !105}
!377 = !{!357, !43, i64 8}
!378 = !{!357, !43, i64 12}
!379 = !{!357, !42, i64 0}
!380 = !{!356, !43, i64 20}
!381 = !{!356, !43, i64 52}
!382 = !{!356, !43, i64 56}
!383 = distinct !{!383, !36}
!384 = !{!356, !43, i64 60}
!385 = !{!355, !42, i64 216}
!386 = !{!355, !43, i64 228}
!387 = distinct !{!387, !36}
!388 = !{!389, !43, i64 0}
!389 = !{!"?AUImFontBuildDstData@@", !43, i64 0, !43, i64 4, !43, i64 8, !359, i64 16}
!390 = !{!389, !43, i64 4}
!391 = distinct !{!391, !36}
!392 = !{!360, !43, i64 4}
!393 = !{!360, !42, i64 8}
!394 = !{!360, !43, i64 0}
!395 = !{!359, !42, i64 8}
!396 = distinct !{!396, !36}
!397 = distinct !{!397, !36}
!398 = !{!359, !43, i64 0}
!399 = !{!355, !43, i64 232}
!400 = !{!389, !43, i64 8}
!401 = distinct !{!401, !36}
!402 = !{!361, !43, i64 4}
!403 = !{!361, !42, i64 8}
!404 = !{!361, !43, i64 0}
!405 = distinct !{!405, !36}
!406 = distinct !{!406, !36}
!407 = !{!355, !43, i64 256}
!408 = distinct !{!408, !36}
!409 = distinct !{!409, !36}
!410 = !{!411, !43, i64 0}
!411 = !{!"?AU?$ImVector@Ustbrp_rect@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!412 = !{!411, !42, i64 8}
!413 = !{!411, !43, i64 4}
!414 = !{!415, !42, i64 8}
!415 = !{!"?AU?$ImVector@Ustbtt_packedchar@@@@", !43, i64 0, !43, i64 4, !42, i64 8}
!416 = !{!415, !43, i64 4}
!417 = !{!415, !43, i64 0}
!418 = !{!177, !43, i64 16}
!419 = !{!355, !42, i64 200}
!420 = !{!355, !42, i64 208}
!421 = !{!355, !7, i64 160}
!422 = !{!355, !43, i64 164}
!423 = !{!355, !42, i64 264}
!424 = !{!355, !42, i64 168}
!425 = !{!355, !43, i64 176}
!426 = !{!355, !42, i64 184}
!427 = !{!355, !8, i64 192}
!428 = !{!355, !8, i64 193}
!429 = !{!356, !43, i64 76}
!430 = !{!431, !43, i64 4}
!431 = !{!"?AUstbrp_rect@@", !43, i64 0, !43, i64 4, !43, i64 8, !43, i64 12, !43, i64 16, !43, i64 20}
!432 = !{!431, !43, i64 8}
!433 = distinct !{!433, !36}
!434 = distinct !{!434, !36}
!435 = !{!436, !42, i64 8}
!436 = !{!"?AUstbrp_node@@", !43, i64 0, !43, i64 4, !42, i64 8}
!437 = distinct !{!437, !36}
!438 = distinct !{!438, !141}
!439 = !{!440, !43, i64 12}
!440 = !{!"?AUstbrp_context@@", !43, i64 0, !43, i64 4, !43, i64 8, !43, i64 12, !43, i64 16, !43, i64 20, !42, i64 24, !42, i64 32, !8, i64 40}
!441 = !{!440, !43, i64 16}
!442 = !{!440, !42, i64 32}
!443 = !{!440, !42, i64 24}
!444 = !{!440, !43, i64 0}
!445 = !{!440, !43, i64 4}
!446 = !{!440, !43, i64 20}
!447 = !{!440, !43, i64 8}
!448 = !{!436, !43, i64 0}
!449 = !{!436, !43, i64 4}
!450 = !{!431, !43, i64 20}
!451 = !{!431, !43, i64 16}
!452 = distinct !{!452, !36}
!453 = distinct !{!453, !36}
!454 = !{!358, !7, i64 0}
!455 = !{!358, !43, i64 16}
!456 = !{!358, !42, i64 24}
!457 = !{!358, !42, i64 8}
!458 = !{!358, !43, i64 4}
!459 = !{!431, !43, i64 12}
!460 = !{!461, !8, i64 12}
!461 = !{!"?AUstbtt_vertex@@", !122, i64 0, !122, i64 2, !122, i64 4, !122, i64 6, !122, i64 8, !122, i64 10, !8, i64 12, !8, i64 13}
!462 = distinct !{!462, !36, !37, !38}
!463 = distinct !{!463, !36, !38, !37}
!464 = !{!461, !122, i64 10}
!465 = !{!461, !122, i64 8}
!466 = !{!461, !122, i64 6}
!467 = !{!461, !122, i64 4}
!468 = distinct !{!468, !36}
!469 = !{!461, !122, i64 2}
!470 = !{!461, !122, i64 0}
!471 = distinct !{!471, !36, !37, !38}
!472 = distinct !{!472, !36, !38, !37}
!473 = !{!474, !7, i64 4}
!474 = !{!"?AUstbtt__point@@", !7, i64 0, !7, i64 4}
!475 = !{!476, !43, i64 16}
!476 = !{!"?AUstbtt__edge@@", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !43, i64 16}
!477 = distinct !{!477, !36}
!478 = distinct !{!478, !36}
!479 = !{i64 0, i64 4, !6, i64 4, i64 4, !6, i64 8, i64 4, !105}
!480 = !{!476, !7, i64 4}
!481 = distinct !{!481, !36}
!482 = !{!483, !7, i64 28}
!483 = !{!"?AUstbtt__active_edge@@", !42, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28}
!484 = !{!483, !42, i64 0}
!485 = !{!483, !7, i64 20}
!486 = distinct !{!486, !36}
!487 = !{!476, !7, i64 12}
!488 = !{!489, !42, i64 0}
!489 = !{!"?AUstbtt__hheap_chunk@@", !42, i64 0}
!490 = !{!476, !7, i64 8}
!491 = !{!476, !7, i64 0}
!492 = !{!483, !7, i64 12}
!493 = !{!483, !7, i64 16}
!494 = !{!483, !7, i64 8}
!495 = !{!483, !7, i64 24}
!496 = distinct !{!496, !36}
!497 = distinct !{!497, !36, !37, !38}
!498 = distinct !{!498, !36, !38, !37}
!499 = distinct !{!499, !36}
!500 = distinct !{!500, !36}
!501 = distinct !{!501, !36}
!502 = distinct !{!502, !36}
!503 = distinct !{!503, !36}
!504 = distinct !{!504, !36}
!505 = distinct !{!505, !36}
!506 = distinct !{!506, !36}
!507 = distinct !{!507, !36}
!508 = distinct !{!508, !36}
!509 = distinct !{!509, !36}
!510 = distinct !{!510, !36}
!511 = distinct !{!511, !36}
!512 = distinct !{!512, !36}
!513 = distinct !{!513, !36}
!514 = distinct !{!514, !36}
!515 = distinct !{!515, !36}
!516 = distinct !{!516, !36}
!517 = distinct !{!517, !36}
!518 = distinct !{!518, !36}
!519 = !{!520, !122, i64 0}
!520 = !{!"?AUstbtt_packedchar@@", !122, i64 0, !122, i64 2, !122, i64 4, !122, i64 6, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24}
!521 = !{!520, !122, i64 2}
!522 = !{!520, !122, i64 4}
!523 = !{!520, !122, i64 6}
!524 = !{!520, !7, i64 24}
!525 = !{i64 0, i64 2, !121, i64 2, i64 2, !121, i64 4, i64 2, !121, i64 6, i64 2, !121, i64 8, i64 4, !6, i64 12, i64 4, !6, i64 16, i64 4, !6, i64 20, i64 4, !6, i64 24, i64 4, !6}
!526 = distinct !{!526, !36}
!527 = distinct !{!527, !36, !37, !38}
!528 = distinct !{!528, !141}
!529 = distinct !{!529, !36}
!530 = distinct !{!530, !36}
!531 = distinct !{!531, !36}
!532 = !{!172, !7, i64 104}
!533 = !{!174, !42, i64 8}
!534 = !{!174, !43, i64 4}
!535 = !{!174, !43, i64 0}
!536 = !{!173, !42, i64 8}
!537 = !{!173, !43, i64 4}
!538 = !{!173, !43, i64 0}
!539 = !{!172, !175, i64 96}
!540 = !{!172, !43, i64 112}
!541 = !{!258, !7, i64 44}
!542 = !{!520, !7, i64 8}
!543 = !{!520, !7, i64 12}
!544 = !{!520, !7, i64 20}
!545 = !{!520, !7, i64 16}
!546 = distinct !{!546, !36}
!547 = distinct !{!547, !36}
!548 = !{!172, !7, i64 108}
!549 = !{!347, !122, i64 0}
!550 = !{!347, !122, i64 2}
!551 = distinct !{!551, !36}
!552 = distinct !{!552, !36}
!553 = distinct !{!553, !36}
!554 = distinct !{!554, !141}
!555 = !{!556, !558}
!556 = distinct !{!556, !557, !"?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z: argument 0"}
!557 = distinct !{!557, !"?stbrp__skyline_find_best_pos@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z"}
!558 = distinct !{!558, !559, !"?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z: argument 0"}
!559 = distinct !{!559, !"?stbrp__skyline_pack_rectangle@@YA?AUstbrp__findresult@@PEAUstbrp_context@@HH@Z"}
!560 = distinct !{!560, !36}
!561 = distinct !{!561, !36}
!562 = distinct !{!562, !36}
!563 = distinct !{!563, !36}
!564 = !{!558}
!565 = distinct !{!565, !36}
!566 = distinct !{!566, !36}
!567 = distinct !{!567, !36}
!568 = distinct !{!568, !36, !37, !38}
!569 = distinct !{!569, !36, !37, !38}
!570 = distinct !{!570, !141}
!571 = distinct !{!571, !36, !37}
!572 = distinct !{!572, !36}
!573 = !{!574}
!574 = distinct !{!574, !575}
!575 = distinct !{!575, !"LVerDomain"}
!576 = !{!577}
!577 = distinct !{!577, !575}
!578 = distinct !{!578, !36, !37, !38}
!579 = distinct !{!579, !141}
!580 = distinct !{!580, !36, !37}
!581 = distinct !{!581, !36}
!582 = distinct !{!582, !141}
!583 = distinct !{!583, !36, !37}
!584 = distinct !{!584, !141}
!585 = distinct !{!585, !36, !37}
!586 = distinct !{!586, !141}
!587 = distinct !{!587, !36, !37}
!588 = distinct !{!588, !141}
!589 = distinct !{!589, !36, !37}
!590 = distinct !{!590, !141}
!591 = distinct !{!591, !36, !37}
!592 = distinct !{!592, !141}
!593 = distinct !{!593, !36, !37}
!594 = distinct !{!594, !141}
!595 = distinct !{!595, !36, !37}
!596 = distinct !{!596, !141}
!597 = distinct !{!597, !36, !37}
!598 = distinct !{!598, !141}
!599 = distinct !{!599, !36, !37}
!600 = distinct !{!600, !141}
!601 = distinct !{!601, !36, !37}
!602 = distinct !{!602, !141}
!603 = distinct !{!603, !36, !37}
!604 = distinct !{!604, !141}
!605 = distinct !{!605, !36, !37}
!606 = distinct !{!606, !141}
!607 = distinct !{!607, !36, !37}
!608 = distinct !{!608, !141}
!609 = distinct !{!609, !36, !37}
!610 = distinct !{!610, !141}
!611 = distinct !{!611, !36, !37}
!612 = distinct !{!612, !141}
!613 = distinct !{!613, !36, !37}
!614 = distinct !{!614, !141}
!615 = distinct !{!615, !36, !37}
!616 = distinct !{!616, !141}
!617 = distinct !{!617, !36, !37}
!618 = distinct !{!618, !141}
!619 = distinct !{!619, !36, !37}
!620 = distinct !{!620, !141}
!621 = distinct !{!621, !36, !37}
!622 = distinct !{!622, !141}
!623 = distinct !{!623, !36, !37}
!624 = distinct !{!624, !141}
!625 = distinct !{!625, !36, !37}
!626 = distinct !{!626, !141}
!627 = distinct !{!627, !36, !37}
!628 = distinct !{!628, !141}
!629 = distinct !{!629, !36, !37}
!630 = distinct !{!630, !141}
!631 = distinct !{!631, !36, !37}
!632 = distinct !{!632, !141}
!633 = distinct !{!633, !36, !37}
!634 = distinct !{!634, !141}
!635 = distinct !{!635, !36, !37}
!636 = distinct !{!636, !141}
!637 = distinct !{!637, !36, !37}
!638 = distinct !{!638, !141}
!639 = distinct !{!639, !36, !37}
!640 = distinct !{!640, !141}
!641 = distinct !{!641, !36, !37}
!642 = distinct !{!642, !141}
!643 = distinct !{!643, !36, !37}
!644 = distinct !{!644, !141}
!645 = distinct !{!645, !36, !37}
!646 = distinct !{!646, !141}
!647 = distinct !{!647, !36, !37}
!648 = distinct !{!648, !141}
!649 = distinct !{!649, !36, !37}
!650 = !{!651}
!651 = distinct !{!651, !652}
!652 = distinct !{!652, !"LVerDomain"}
!653 = !{!654}
!654 = distinct !{!654, !652}
!655 = distinct !{!655, !141}
!656 = distinct !{!656, !36, !37}
!657 = !{!658}
!658 = distinct !{!658, !659}
!659 = distinct !{!659, !"LVerDomain"}
!660 = !{!661}
!661 = distinct !{!661, !659}
!662 = distinct !{!662, !141}
!663 = distinct !{!663, !36, !37}
!664 = !{!665}
!665 = distinct !{!665, !666}
!666 = distinct !{!666, !"LVerDomain"}
!667 = !{!668}
!668 = distinct !{!668, !666}
!669 = distinct !{!669, !141}
!670 = distinct !{!670, !36, !37}
!671 = !{!672}
!672 = distinct !{!672, !673}
!673 = distinct !{!673, !"LVerDomain"}
!674 = !{!675}
!675 = distinct !{!675, !673}
!676 = distinct !{!676, !141}
!677 = distinct !{!677, !36, !37}
!678 = !{!679}
!679 = distinct !{!679, !680}
!680 = distinct !{!680, !"LVerDomain"}
!681 = !{!682}
!682 = distinct !{!682, !680}
!683 = distinct !{!683, !141}
!684 = distinct !{!684, !36, !37}
!685 = !{!686}
!686 = distinct !{!686, !687}
!687 = distinct !{!687, !"LVerDomain"}
!688 = !{!689}
!689 = distinct !{!689, !687}
!690 = distinct !{!690, !141}
!691 = distinct !{!691, !36, !37}
!692 = !{!693}
!693 = distinct !{!693, !694}
!694 = distinct !{!694, !"LVerDomain"}
!695 = !{!696}
!696 = distinct !{!696, !694}
!697 = distinct !{!697, !141}
!698 = distinct !{!698, !36, !37}
!699 = !{!700}
!700 = distinct !{!700, !701}
!701 = distinct !{!701, !"LVerDomain"}
!702 = !{!703}
!703 = distinct !{!703, !701}
!704 = distinct !{!704, !141}
!705 = distinct !{!705, !36, !37}
!706 = !{!707}
!707 = distinct !{!707, !708}
!708 = distinct !{!708, !"LVerDomain"}
!709 = !{!710}
!710 = distinct !{!710, !708}
!711 = distinct !{!711, !141}
!712 = distinct !{!712, !36, !37}
!713 = !{!714}
!714 = distinct !{!714, !715}
!715 = distinct !{!715, !"LVerDomain"}
!716 = !{!717}
!717 = distinct !{!717, !715}
!718 = distinct !{!718, !141}
!719 = distinct !{!719, !36, !37}
!720 = !{!721}
!721 = distinct !{!721, !722}
!722 = distinct !{!722, !"LVerDomain"}
!723 = !{!724}
!724 = distinct !{!724, !722}
!725 = distinct !{!725, !141}
!726 = distinct !{!726, !36, !37}
!727 = !{!728}
!728 = distinct !{!728, !729}
!729 = distinct !{!729, !"LVerDomain"}
!730 = !{!731}
!731 = distinct !{!731, !729}
!732 = distinct !{!732, !141}
!733 = distinct !{!733, !36, !37}
!734 = !{!735}
!735 = distinct !{!735, !736}
!736 = distinct !{!736, !"LVerDomain"}
!737 = !{!738}
!738 = distinct !{!738, !736}
!739 = distinct !{!739, !141}
!740 = distinct !{!740, !36, !37}
!741 = !{!742}
!742 = distinct !{!742, !743}
!743 = distinct !{!743, !"LVerDomain"}
!744 = !{!745}
!745 = distinct !{!745, !743}
!746 = distinct !{!746, !141}
!747 = distinct !{!747, !36, !37}
!748 = !{!749}
!749 = distinct !{!749, !750}
!750 = distinct !{!750, !"LVerDomain"}
!751 = !{!752}
!752 = distinct !{!752, !750}
!753 = distinct !{!753, !141}
!754 = distinct !{!754, !36, !37}
!755 = !{!756}
!756 = distinct !{!756, !757}
!757 = distinct !{!757, !"LVerDomain"}
!758 = !{!759}
!759 = distinct !{!759, !757}
!760 = distinct !{!760, !141}
!761 = distinct !{!761, !36, !37}
!762 = !{!763}
!763 = distinct !{!763, !764}
!764 = distinct !{!764, !"LVerDomain"}
!765 = !{!766}
!766 = distinct !{!766, !764}
!767 = distinct !{!767, !141}
!768 = distinct !{!768, !36, !37}
!769 = !{!770}
!770 = distinct !{!770, !771}
!771 = distinct !{!771, !"LVerDomain"}
!772 = !{!773}
!773 = distinct !{!773, !771}
!774 = distinct !{!774, !141}
!775 = distinct !{!775, !36, !37}
!776 = !{!777}
!777 = distinct !{!777, !778}
!778 = distinct !{!778, !"LVerDomain"}
!779 = !{!780}
!780 = distinct !{!780, !778}
!781 = distinct !{!781, !141}
!782 = distinct !{!782, !36, !37}
!783 = !{!784}
!784 = distinct !{!784, !785}
!785 = distinct !{!785, !"LVerDomain"}
!786 = !{!787}
!787 = distinct !{!787, !785}
!788 = distinct !{!788, !141}
!789 = distinct !{!789, !36, !37}
!790 = !{!791}
!791 = distinct !{!791, !792}
!792 = distinct !{!792, !"LVerDomain"}
!793 = !{!794}
!794 = distinct !{!794, !792}
!795 = distinct !{!795, !141}
!796 = distinct !{!796, !36, !37}
!797 = !{!798}
!798 = distinct !{!798, !799}
!799 = distinct !{!799, !"LVerDomain"}
!800 = !{!801}
!801 = distinct !{!801, !799}
!802 = distinct !{!802, !141}
!803 = distinct !{!803, !36, !37}
!804 = !{!805}
!805 = distinct !{!805, !806}
!806 = distinct !{!806, !"LVerDomain"}
!807 = !{!808}
!808 = distinct !{!808, !806}
!809 = distinct !{!809, !141}
!810 = distinct !{!810, !36, !37}
!811 = !{!812}
!812 = distinct !{!812, !813}
!813 = distinct !{!813, !"LVerDomain"}
!814 = !{!815}
!815 = distinct !{!815, !813}
!816 = distinct !{!816, !141}
!817 = distinct !{!817, !36, !37}
!818 = !{!819}
!819 = distinct !{!819, !820}
!820 = distinct !{!820, !"LVerDomain"}
!821 = !{!822}
!822 = distinct !{!822, !820}
!823 = distinct !{!823, !141}
!824 = distinct !{!824, !36, !37}
!825 = !{!826}
!826 = distinct !{!826, !827}
!827 = distinct !{!827, !"LVerDomain"}
!828 = !{!829}
!829 = distinct !{!829, !827}
!830 = distinct !{!830, !141}
!831 = distinct !{!831, !36, !37}
!832 = !{!833}
!833 = distinct !{!833, !834}
!834 = distinct !{!834, !"LVerDomain"}
!835 = !{!836}
!836 = distinct !{!836, !834}
!837 = distinct !{!837, !141}
!838 = distinct !{!838, !36, !37}
!839 = !{!840}
!840 = distinct !{!840, !841}
!841 = distinct !{!841, !"LVerDomain"}
!842 = !{!843}
!843 = distinct !{!843, !841}
!844 = distinct !{!844, !141}
!845 = distinct !{!845, !36, !37}
!846 = !{!847}
!847 = distinct !{!847, !848}
!848 = distinct !{!848, !"LVerDomain"}
!849 = !{!850}
!850 = distinct !{!850, !848}
!851 = distinct !{!851, !141}
!852 = distinct !{!852, !36, !37}
!853 = !{!854}
!854 = distinct !{!854, !855}
!855 = distinct !{!855, !"LVerDomain"}
!856 = !{!857}
!857 = distinct !{!857, !855}
!858 = distinct !{!858, !141}
!859 = distinct !{!859, !36, !37}
!860 = !{!861}
!861 = distinct !{!861, !862}
!862 = distinct !{!862, !"LVerDomain"}
!863 = !{!864}
!864 = distinct !{!864, !862}
!865 = distinct !{!865, !141}
!866 = distinct !{!866, !36, !37}
!867 = !{!868}
!868 = distinct !{!868, !869}
!869 = distinct !{!869, !"LVerDomain"}
!870 = !{!871}
!871 = distinct !{!871, !869}
!872 = distinct !{!872, !141}
!873 = distinct !{!873, !36, !37}
!874 = !{!875}
!875 = distinct !{!875, !876}
!876 = distinct !{!876, !"LVerDomain"}
!877 = !{!878}
!878 = distinct !{!878, !876}
!879 = distinct !{!879, !141}
!880 = distinct !{!880, !36, !37}
!881 = !{!882}
!882 = distinct !{!882, !883}
!883 = distinct !{!883, !"LVerDomain"}
!884 = !{!885}
!885 = distinct !{!885, !883}
!886 = distinct !{!886, !141}
!887 = distinct !{!887, !36, !37}
!888 = distinct !{!888, !36, !37, !38}
!889 = distinct !{!889, !36, !38, !37}
!890 = distinct !{!890, !36, !37, !38}
!891 = distinct !{!891, !36, !38, !37}
!892 = distinct !{!892, !36}
!893 = !{!177, !43, i64 104}
!894 = !{!347, !42, i64 24}
!895 = !{!347, !43, i64 8}
!896 = !{!177, !7, i64 76}
!897 = !{!177, !7, i64 72}
!898 = !{!347, !7, i64 12}
!899 = !{!347, !7, i64 20}
!900 = !{!347, !7, i64 16}
!901 = distinct !{!901, !36}
!902 = distinct !{!902, !36}
!903 = !{!258, !7, i64 64}
!904 = !{!258, !7, i64 36}
!905 = !{!172, !43, i64 40}
!906 = distinct !{!906, !36}
!907 = distinct !{!907, !36}
!908 = !{i64 0, i64 4, !105, i64 0, i64 4, !105, i64 0, i64 4, !105, i64 4, i64 4, !6, i64 8, i64 4, !6, i64 12, i64 4, !6, i64 16, i64 4, !6, i64 20, i64 4, !6, i64 24, i64 4, !6, i64 28, i64 4, !6, i64 32, i64 4, !6, i64 36, i64 4, !6}
!909 = !{!172, !122, i64 86}
!910 = !{!172, !7, i64 92}
!911 = !{!172, !7, i64 88}
!912 = !{!172, !7, i64 16}
!913 = distinct !{!913, !36}
!914 = distinct !{!914, !36}
!915 = distinct !{!915, !36}
!916 = distinct !{!916, !36}
!917 = distinct !{!917, !36}
!918 = distinct !{!918, !36}
!919 = !{!172, !43, i64 0}
!920 = distinct !{!920, !141}
!921 = distinct !{!921, !36}
!922 = distinct !{!922, !141}
!923 = distinct !{!923, !36}
!924 = distinct !{!924, !36}
!925 = !{!172, !42, i64 8}
!926 = distinct !{!926, !36}
!927 = distinct !{!927, !36}
!928 = !{!929}
!929 = distinct !{!929, !930, !"??H@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!930 = distinct !{!930, !"??H@YA?AUImVec2@@AEBU0@0@Z"}
!931 = !{!932}
!932 = distinct !{!932, !933, !"??H@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!933 = distinct !{!933, !"??H@YA?AUImVec2@@AEBU0@0@Z"}
!934 = !{!935}
!935 = distinct !{!935, !936, !"??H@YA?AUImVec2@@AEBU0@0@Z: argument 0"}
!936 = distinct !{!936, !"??H@YA?AUImVec2@@AEBU0@0@Z"}
!937 = !{!938, !7, i64 4}
!938 = !{!"?AUImRect@@", !41, i64 0, !41, i64 8}
!939 = !{!938, !7, i64 8}
!940 = !{!938, !7, i64 0}
!941 = !{!938, !7, i64 12}
!942 = distinct !{!942, !36}
!943 = distinct !{!943, !36}
!944 = distinct !{!944, !36}
!945 = distinct !{!945, !36}
!946 = distinct !{!946, !36}
!947 = !{!948}
!948 = distinct !{!948, !949, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z: argument 0"}
!949 = distinct !{!949, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z"}
!950 = !{!951}
!951 = distinct !{!951, !952, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z: argument 0"}
!952 = distinct !{!952, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z"}
!953 = !{!954}
!954 = distinct !{!954, !955, !"?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z: argument 0"}
!955 = distinct !{!955, !"?stbtt__dict_get@@YA?AUstbtt__buf@@PEAU1@H@Z"}
!956 = distinct !{!956, !36}
!957 = distinct !{!957, !36}
!958 = !{!959}
!959 = distinct !{!959, !960, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z: argument 0"}
!960 = distinct !{!960, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z"}
!961 = !{!959, !954}
!962 = distinct !{!962, !36}
!963 = !{!964}
!964 = distinct !{!964, !965, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z: argument 0"}
!965 = distinct !{!965, !"?stbtt__buf_range@@YA?AUstbtt__buf@@PEBU1@HH@Z"}
!966 = !{!967, !43, i64 0}
!967 = !{!"?AUstbtt__csctx@@", !43, i64 0, !43, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !43, i64 24, !43, i64 28, !43, i64 32, !43, i64 36, !42, i64 40, !43, i64 48}
!968 = !{!967, !43, i64 28}
!969 = !{!967, !43, i64 4}
!970 = !{!967, !43, i64 36}
!971 = !{!967, !43, i64 24}
!972 = !{!967, !43, i64 32}
!973 = !{!967, !43, i64 48}
!974 = !{!967, !42, i64 40}
!975 = distinct !{!975, !36}
!976 = !{!967, !7, i64 16}
!977 = !{!967, !7, i64 20}
!978 = distinct !{!978, !36}
!979 = distinct !{!979, !36}
!980 = distinct !{!980, !36}
!981 = distinct !{!981, !36}
!982 = distinct !{!982, !36}
!983 = distinct !{!983, !36, !48}
!984 = distinct !{!984, !36, !48}
!985 = !{!356, !43, i64 156}
!986 = !{!987}
!987 = distinct !{!987, !988, !"?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z: argument 0"}
!988 = distinct !{!988, !"?stbtt__cid_get_glyph_subrs@@YA?AUstbtt__buf@@PEBUstbtt_fontinfo@@H@Z"}
!989 = distinct !{!989, !36}
!990 = !{!991}
!991 = distinct !{!991, !992, !"?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z: argument 0"}
!992 = distinct !{!992, !"?stbtt__get_subr@@YA?AUstbtt__buf@@U1@H@Z"}
!993 = distinct !{!993, !36}
!994 = !{!967, !7, i64 8}
!995 = !{!967, !7, i64 12}
!996 = distinct !{!996, !36}
!997 = distinct !{!997, !36}
!998 = distinct !{!998, !36}
!999 = distinct !{!999, !36}
!1000 = distinct !{!1000, !36, !37, !38}
!1001 = distinct !{!1001, !36, !38, !37}
!1002 = distinct !{!1002, !36}
!1003 = distinct !{!1003, !48}
!1004 = !{!474, !7, i64 0}
!1005 = distinct !{!1005, !36}
!1006 = distinct !{!1006, !36}
!1007 = distinct !{!1007, !36}
!1008 = distinct !{!1008, !36}
!1009 = distinct !{!1009, !36}
